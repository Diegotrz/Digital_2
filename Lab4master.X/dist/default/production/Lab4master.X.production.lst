

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 06 23:28:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386     0151                     __pidataBANK0:
   387                           
   388                           ;initializer for RTC_display@Date
   389     0151  3444               	retlw	68
   390     0152  3441               	retlw	65
   391     0153  3454               	retlw	84
   392     0154  3445               	retlw	69
   393     0155  343A               	retlw	58
   394     0156  3420               	retlw	32
   395     0157  3430               	retlw	48
   396     0158  3430               	retlw	48
   397     0159  342F               	retlw	47
   398     015A  3430               	retlw	48
   399     015B  3430               	retlw	48
   400     015C  342F               	retlw	47
   401     015D  3432               	retlw	50
   402     015E  3430               	retlw	48
   403     015F  3430               	retlw	48
   404     0160  3430               	retlw	48
   405     0161  3400               	retlw	0
   406                           
   407                           ;initializer for RTC_display@Time
   408     0162  3454               	retlw	84
   409     0163  3449               	retlw	73
   410     0164  344D               	retlw	77
   411     0165  3445               	retlw	69
   412     0166  343A               	retlw	58
   413     0167  3420               	retlw	32
   414     0168  3430               	retlw	48
   415     0169  3430               	retlw	48
   416     016A  343A               	retlw	58
   417     016B  3430               	retlw	48
   418     016C  3430               	retlw	48
   419     016D  343A               	retlw	58
   420     016E  3430               	retlw	48
   421     016F  3430               	retlw	48
   422     0170  3400               	retlw	0
   423     0008                     _PORTD	set	8
   424     0006                     _PORTB	set	6
   425     0005                     _PORTA	set	5
   426     0007                     _PORTCbits	set	7
   427     0013                     _SSPBUF	set	19
   428     0014                     _SSPCON	set	20
   429     003F                     _RC7	set	63
   430     0047                     _RD7	set	71
   431     0046                     _RD6	set	70
   432     0045                     _RD5	set	69
   433     0044                     _RD4	set	68
   434     0063                     _SSPIF	set	99
   435     005E                     _PEIE	set	94
   436     005F                     _GIE	set	95
   437     008F                     _OSCCONbits	set	143
   438     0088                     _TRISD	set	136
   439     0086                     _TRISB	set	134
   440     0085                     _TRISA	set	133
   441     0091                     _SSPCON2bits	set	145
   442     0087                     _TRISCbits	set	135
   443     0094                     _SSPSTAT	set	148
   444     0093                     _SSPADD	set	147
   445     0091                     _SSPCON2	set	145
   446     043F                     _TRISC7	set	1087
   447     043E                     _TRISC6	set	1086
   448     043A                     _TRISC2	set	1082
   449     0439                     _TRISC1	set	1081
   450     0463                     _SSPIE	set	1123
   451     043C                     _TRISC4	set	1084
   452     043B                     _TRISC3	set	1083
   453     0189                     _ANSELH	set	393
   454     0188                     _ANSEL	set	392
   455                           
   456                           	psect	cinit
   457     07E7                     start_initialization:	
   458                           ; #config settings
   459                           
   460     07E7                     __initialization:
   461                           
   462                           ; Initialize objects allocated to BANK0
   463     07E7  1383               	bcf	3,7	;select IRP bank0
   464     07E8  3040               	movlw	low (__pdataBANK0+32)
   465     07E9  00FD               	movwf	btemp+-1
   466     07EA  3001               	movlw	high __pidataBANK0
   467     07EB  00FE               	movwf	btemp
   468     07EC  3051               	movlw	low __pidataBANK0
   469     07ED  00FF               	movwf	btemp+1
   470     07EE  3020               	movlw	low __pdataBANK0
   471     07EF  0084               	movwf	4
   472     07F0  120A  118A  20E3  120A  118A  	fcall	init_ram0
   473                           
   474                           ; Clear objects allocated to BANK0
   475     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   476     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   477     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   478     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   479     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   480     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   481     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   482     07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485     07FC                     __end_of__initialization:
   486     07FC  0183               	clrf	3
   487     07FD  120A  118A  2D92   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssBANK0
   490     004B                     __pbssBANK0:
   491     004B                     _year:
   492     004B                     	ds	1
   493     004C                     _month:
   494     004C                     	ds	1
   495     004D                     _m_day:
   496     004D                     	ds	1
   497     004E                     _hour:
   498     004E                     	ds	1
   499     004F                     _minute:
   500     004F                     	ds	1
   501     0050                     _second:
   502     0050                     	ds	1
   503     0051                     _i:
   504     0051                     	ds	1
   505                           
   506                           	psect	dataBANK0
   507     0020                     __pdataBANK0:
   508     0020                     RTC_display@Date:
   509     0020                     	ds	17
   510     0031                     RTC_display@Time:
   511     0031                     	ds	15
   512                           
   513                           	psect	inittext
   514     00DF                     init_fetch0:	
   515                           ;	Called with low address in FSR and high address in W
   516                           
   517     00DF  087E               	movf	btemp,w
   518     00E0  008A               	movwf	10
   519     00E1  087F               	movf	btemp+1,w
   520     00E2  0082               	movwf	2
   521     00E3                     init_ram0:	
   522                           ;Called with:
   523                           ;	high address of idata address in btemp 
   524                           ;	low address of idata address in btemp+1 
   525                           ;	low address of data in FSR
   526                           ;	high address + 1 of data in btemp-1
   527                           
   528     00E3  120A  118A  20DF  120A  118A  	fcall	init_fetch0
   529     00E8  0080               	movwf	0
   530     00E9  0A84               	incf	4,f
   531     00EA  0804               	movf	4,w
   532     00EB  067D               	xorwf	btemp+-1,w
   533     00EC  1903               	btfsc	3,2
   534     00ED  3400               	retlw	0
   535     00EE  0AFF               	incf	btemp+1,f
   536     00EF  1903               	btfsc	3,2
   537     00F0  0AFE               	incf	btemp,f
   538     00F1  28E3               	goto	init_ram0
   539                           
   540                           	psect	cstackCOMMON
   541     0070                     __pcstackCOMMON:
   542     0070                     ?_setup:
   543     0070                     ??_setup:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_I2C_Master_Wait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ??_I2C_Master_Wait:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_I2C_Master_Start:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ??_I2C_Master_Start:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_I2C_Master_RepeatedStart:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_I2C_Master_RepeatedStart:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_I2C_Master_Stop:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_I2C_Master_Stop:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_I2C_Master_Write:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Port:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ??_Lcd_Port:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_Lcd_Cmd:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_Lcd_Init:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_Lcd_Write_Char:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_Lcd_Write_String:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_bcd_to_decimal:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_decimal_to_bcd:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_RTC_display:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_main:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?___bmul:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_I2C_Master_Read:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?___awdiv:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0070                     ?___awmod:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0070                     ?___lldiv:	
   616                           ; 2 bytes @ 0x0
   617                           
   618     0070                     Lcd_Port@a:	
   619                           ; 4 bytes @ 0x0
   620                           
   621     0070                     ___bmul@multiplicand:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     I2C_Master_Write@d:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     I2C_Master_Read@a:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0070                     ___awdiv@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633     0070                     ___awmod@divisor:	
   634                           ; 2 bytes @ 0x0
   635                           
   636     0070                     ___lldiv@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641     0070                     	ds	1
   642     0071                     ??_Lcd_Cmd:
   643     0071                     ??_Lcd_Write_Char:	
   644                           ; 1 bytes @ 0x1
   645                           
   646     0071                     ??___bmul:	
   647                           ; 1 bytes @ 0x1
   648                           
   649                           
   650                           ; 1 bytes @ 0x1
   651     0071                     	ds	1
   652     0072                     ??_I2C_Master_Write:
   653     0072                     ??_I2C_Master_Read:	
   654                           ; 1 bytes @ 0x2
   655                           
   656     0072                     Lcd_Write_Char@temp:	
   657                           ; 1 bytes @ 0x2
   658                           
   659     0072                     ___bmul@product:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0072                     ___awdiv@dividend:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     ___awmod@dividend:	
   666                           ; 2 bytes @ 0x2
   667                           
   668                           
   669                           ; 2 bytes @ 0x2
   670     0072                     	ds	1
   671     0073                     Lcd_Cmd@a:
   672     0073                     Lcd_Write_Char@y:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ___bmul@multiplier:	
   676                           ; 1 bytes @ 0x3
   677                           
   678                           
   679                           ; 1 bytes @ 0x3
   680     0073                     	ds	1
   681     0074                     ?_Lcd_Set_Cursor:
   682     0074                     ??_Lcd_Init:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     ??_bcd_to_decimal:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     ??___awdiv:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     ??___awmod:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     Lcd_Set_Cursor@b:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     Lcd_Write_Char@a:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     I2C_Master_Read@temp:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     ___lldiv@dividend:	
   704                           ; 2 bytes @ 0x4
   705                           
   706                           
   707                           ; 4 bytes @ 0x4
   708     0074                     	ds	1
   709     0075                     ??_Lcd_Set_Cursor:
   710     0075                     ??_Lcd_Write_String:	
   711                           ; 1 bytes @ 0x5
   712                           
   713     0075                     ___awdiv@counter:	
   714                           ; 1 bytes @ 0x5
   715                           
   716     0075                     ___awmod@counter:	
   717                           ; 1 bytes @ 0x5
   718                           
   719                           
   720                           ; 1 bytes @ 0x5
   721     0075                     	ds	1
   722     0076                     Lcd_Set_Cursor@a:
   723     0076                     bcd_to_decimal@number:	
   724                           ; 1 bytes @ 0x6
   725                           
   726     0076                     ___awdiv@sign:	
   727                           ; 1 bytes @ 0x6
   728                           
   729     0076                     ___awmod@sign:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     Lcd_Write_String@i:	
   733                           ; 1 bytes @ 0x6
   734                           
   735                           
   736                           ; 2 bytes @ 0x6
   737     0076                     	ds	1
   738     0077                     Lcd_Set_Cursor@z:
   739     0077                     ___awdiv@quotient:	
   740                           ; 1 bytes @ 0x7
   741                           
   742                           
   743                           ; 2 bytes @ 0x7
   744     0077                     	ds	1
   745     0078                     ??___lldiv:
   746     0078                     Lcd_Set_Cursor@y:	
   747                           ; 1 bytes @ 0x8
   748                           
   749     0078                     Lcd_Write_String@a:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754     0078                     	ds	1
   755     0079                     ??_decimal_to_bcd:
   756     0079                     Lcd_Set_Cursor@temp:	
   757                           ; 1 bytes @ 0x9
   758                           
   759     0079                     ___lldiv@quotient:	
   760                           ; 1 bytes @ 0x9
   761                           
   762                           
   763                           ; 4 bytes @ 0x9
   764     0079                     	ds	1
   765     007A                     ??_RTC_display:
   766                           
   767                           ; 1 bytes @ 0xA
   768     007A                     	ds	3
   769     007D                     ___lldiv@counter:
   770                           
   771                           ; 1 bytes @ 0xD
   772     007D                     	ds	1
   773                           
   774                           	psect	cstackBANK0
   775     0040                     __pcstackBANK0:
   776     0040                     ?_I2C_Init:
   777     0040                     decimal_to_bcd@number:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0040                     I2C_Init@i2c_clk_freq:	
   781                           ; 1 bytes @ 0x0
   782                           
   783                           
   784                           ; 4 bytes @ 0x0
   785     0040                     	ds	4
   786     0044                     ??_I2C_Init:
   787                           
   788                           ; 1 bytes @ 0x4
   789     0044                     	ds	4
   790     0048                     ??_main:
   791                           
   792                           ; 1 bytes @ 0x8
   793     0048                     	ds	3
   794                           
   795                           	psect	maintext
   796     0592                     __pmaintext:	
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 98 in file "Postlab4master.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : B00/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       3       0       0       0
   819 ;;      Totals:         0       3       0       0       0
   820 ;;Total ram usage:        3 bytes
   821 ;; Hardware stack levels required when called: 4
   822 ;; This function calls:
   823 ;;		_I2C_Init
   824 ;;		_I2C_Master_Read
   825 ;;		_I2C_Master_RepeatedStart
   826 ;;		_I2C_Master_Start
   827 ;;		_I2C_Master_Stop
   828 ;;		_I2C_Master_Write
   829 ;;		_Lcd_Init
   830 ;;		_RTC_display
   831 ;;		_decimal_to_bcd
   832 ;;		_setup
   833 ;; This function is called by:
   834 ;;		Startup code after reset
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838     0592                     _main:	
   839                           ;psect for function _main
   840                           
   841     0592                     l1433:	
   842                           ;incstack = 0
   843                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   844                           
   845                           
   846                           ;Postlab4master.c: 99:     setup();
   847     0592  120A  118A  2137  120A  118A  	fcall	_setup
   848                           
   849                           ;Postlab4master.c: 100:     Lcd_Init();
   850     0597  120A  118A  2317  120A  118A  	fcall	_Lcd_Init
   851                           
   852                           ;Postlab4master.c: 101:     I2C_Init(100000);
   853     059C  3000               	movlw	0
   854     059D  1283               	bcf	3,5	;RP0=0, select bank0
   855     059E  1303               	bcf	3,6	;RP1=0, select bank0
   856     059F  00C3               	movwf	I2C_Init@i2c_clk_freq+3
   857     05A0  3001               	movlw	1
   858     05A1  00C2               	movwf	I2C_Init@i2c_clk_freq+2
   859     05A2  3086               	movlw	134
   860     05A3  00C1               	movwf	I2C_Init@i2c_clk_freq+1
   861     05A4  30A0               	movlw	160
   862     05A5  00C0               	movwf	I2C_Init@i2c_clk_freq
   863     05A6  120A  118A  2212  120A  118A  	fcall	_I2C_Init
   864                           
   865                           ;Postlab4master.c: 102:     minute = decimal_to_bcd(0);
   866     05AB  3000               	movlw	0
   867     05AC  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   868     05B1  1283               	bcf	3,5	;RP0=0, select bank0
   869     05B2  1303               	bcf	3,6	;RP1=0, select bank0
   870     05B3  00CF               	movwf	_minute
   871                           
   872                           ;Postlab4master.c: 103:     second = decimal_to_bcd(0);
   873     05B4  3000               	movlw	0
   874     05B5  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   875     05BA  1283               	bcf	3,5	;RP0=0, select bank0
   876     05BB  1303               	bcf	3,6	;RP1=0, select bank0
   877     05BC  00D0               	movwf	_second
   878                           
   879                           ;Postlab4master.c: 104:     hour = decimal_to_bcd(0);
   880     05BD  3000               	movlw	0
   881     05BE  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   882     05C3  1283               	bcf	3,5	;RP0=0, select bank0
   883     05C4  1303               	bcf	3,6	;RP1=0, select bank0
   884     05C5  00CE               	movwf	_hour
   885                           
   886                           ;Postlab4master.c: 105:     m_day = decimal_to_bcd(6);
   887     05C6  3006               	movlw	6
   888     05C7  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   889     05CC  1283               	bcf	3,5	;RP0=0, select bank0
   890     05CD  1303               	bcf	3,6	;RP1=0, select bank0
   891     05CE  00CD               	movwf	_m_day
   892                           
   893                           ;Postlab4master.c: 106:     month= decimal_to_bcd(8);
   894     05CF  3008               	movlw	8
   895     05D0  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   896     05D5  1283               	bcf	3,5	;RP0=0, select bank0
   897     05D6  1303               	bcf	3,6	;RP1=0, select bank0
   898     05D7  00CC               	movwf	_month
   899                           
   900                           ;Postlab4master.c: 107:     year= decimal_to_bcd(23);
   901     05D8  3017               	movlw	23
   902     05D9  120A  118A  21E2  120A  118A  	fcall	_decimal_to_bcd
   903     05DE  1283               	bcf	3,5	;RP0=0, select bank0
   904     05DF  1303               	bcf	3,6	;RP1=0, select bank0
   905     05E0  00CB               	movwf	_year
   906                           
   907                           ;Postlab4master.c: 109:     I2C_Master_Start();
   908     05E1  120A  118A  20B6  120A  118A  	fcall	_I2C_Master_Start
   909                           
   910                           ;Postlab4master.c: 110:         I2C_Master_Write(0xD0);
   911     05E6  30D0               	movlw	208
   912     05E7  00F0               	movwf	I2C_Master_Write@d
   913     05E8  3000               	movlw	0
   914     05E9  00F1               	movwf	I2C_Master_Write@d+1
   915     05EA  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   916                           
   917                           ;Postlab4master.c: 111:         I2C_Master_Write(0x01);
   918     05EF  3001               	movlw	1
   919     05F0  00F0               	movwf	I2C_Master_Write@d
   920     05F1  3000               	movlw	0
   921     05F2  00F1               	movwf	I2C_Master_Write@d+1
   922     05F3  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   923                           
   924                           ;Postlab4master.c: 112:         I2C_Master_Write(minute);
   925     05F8  1283               	bcf	3,5	;RP0=0, select bank0
   926     05F9  1303               	bcf	3,6	;RP1=0, select bank0
   927     05FA  084F               	movf	_minute,w
   928     05FB  00C8               	movwf	??_main
   929     05FC  01C9               	clrf	??_main+1
   930     05FD  0848               	movf	??_main,w
   931     05FE  00F0               	movwf	I2C_Master_Write@d
   932     05FF  0849               	movf	??_main+1,w
   933     0600  00F1               	movwf	I2C_Master_Write@d+1
   934     0601  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   935                           
   936                           ;Postlab4master.c: 114:         I2C_Master_Stop();
   937     0606  120A  118A  20BF  120A  118A  	fcall	_I2C_Master_Stop
   938     060B                     l1435:
   939                           
   940                           ;Postlab4master.c: 115:         _delay((unsigned long)((200)*(8000000/4000.0)));
   941     060B  3003               	movlw	3
   942     060C  1283               	bcf	3,5	;RP0=0, select bank0
   943     060D  1303               	bcf	3,6	;RP1=0, select bank0
   944     060E  00CA               	movwf	??_main+2
   945     060F  3008               	movlw	8
   946     0610  00C9               	movwf	??_main+1
   947     0611  3076               	movlw	118
   948     0612  00C8               	movwf	??_main
   949     0613                     u917:
   950     0613  0BC8               	decfsz	??_main,f
   951     0614  2E13               	goto	u917
   952     0615  0BC9               	decfsz	??_main+1,f
   953     0616  2E13               	goto	u917
   954     0617  0BCA               	decfsz	??_main+2,f
   955     0618  2E13               	goto	u917
   956     0619  0000               	nop
   957     061A                     l1437:
   958                           
   959                           ;Postlab4master.c: 116:         I2C_Master_Start();
   960     061A  120A  118A  20B6  120A  118A  	fcall	_I2C_Master_Start
   961     061F                     l1439:
   962                           
   963                           ;Postlab4master.c: 117:         I2C_Master_Write(0xD0);
   964     061F  30D0               	movlw	208
   965     0620  00F0               	movwf	I2C_Master_Write@d
   966     0621  3000               	movlw	0
   967     0622  00F1               	movwf	I2C_Master_Write@d+1
   968     0623  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   969     0628                     l1441:
   970                           
   971                           ;Postlab4master.c: 118:         I2C_Master_Write(0x00);
   972     0628  3000               	movlw	0
   973     0629  00F0               	movwf	I2C_Master_Write@d
   974     062A  00F1               	movwf	I2C_Master_Write@d+1
   975     062B  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   976     0630                     l1443:
   977                           
   978                           ;Postlab4master.c: 119:         I2C_Master_Write(second);
   979     0630  1283               	bcf	3,5	;RP0=0, select bank0
   980     0631  1303               	bcf	3,6	;RP1=0, select bank0
   981     0632  0850               	movf	_second,w
   982     0633  00C8               	movwf	??_main
   983     0634  01C9               	clrf	??_main+1
   984     0635  0848               	movf	??_main,w
   985     0636  00F0               	movwf	I2C_Master_Write@d
   986     0637  0849               	movf	??_main+1,w
   987     0638  00F1               	movwf	I2C_Master_Write@d+1
   988     0639  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
   989     063E                     l1445:
   990                           
   991                           ;Postlab4master.c: 121:         I2C_Master_Stop();
   992     063E  120A  118A  20BF  120A  118A  	fcall	_I2C_Master_Stop
   993                           
   994                           ;Postlab4master.c: 122:         _delay((unsigned long)((200)*(8000000/4000.0)));
   995     0643  3003               	movlw	3
   996     0644  1283               	bcf	3,5	;RP0=0, select bank0
   997     0645  1303               	bcf	3,6	;RP1=0, select bank0
   998     0646  00CA               	movwf	??_main+2
   999     0647  3008               	movlw	8
  1000     0648  00C9               	movwf	??_main+1
  1001     0649  3076               	movlw	118
  1002     064A  00C8               	movwf	??_main
  1003     064B                     u927:
  1004     064B  0BC8               	decfsz	??_main,f
  1005     064C  2E4B               	goto	u927
  1006     064D  0BC9               	decfsz	??_main+1,f
  1007     064E  2E4B               	goto	u927
  1008     064F  0BCA               	decfsz	??_main+2,f
  1009     0650  2E4B               	goto	u927
  1010     0651  0000               	nop
  1011     0652                     l1447:
  1012                           
  1013                           ;Postlab4master.c: 124:         I2C_Master_Start();
  1014     0652  120A  118A  20B6  120A  118A  	fcall	_I2C_Master_Start
  1015     0657                     l1449:
  1016                           
  1017                           ;Postlab4master.c: 125:         I2C_Master_Write(0xD0);
  1018     0657  30D0               	movlw	208
  1019     0658  00F0               	movwf	I2C_Master_Write@d
  1020     0659  3000               	movlw	0
  1021     065A  00F1               	movwf	I2C_Master_Write@d+1
  1022     065B  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1023     0660                     l1451:
  1024                           
  1025                           ;Postlab4master.c: 126:         I2C_Master_Write(0x02);
  1026     0660  3002               	movlw	2
  1027     0661  00F0               	movwf	I2C_Master_Write@d
  1028     0662  3000               	movlw	0
  1029     0663  00F1               	movwf	I2C_Master_Write@d+1
  1030     0664  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1031     0669                     l1453:
  1032                           
  1033                           ;Postlab4master.c: 127:         I2C_Master_Write(hour);
  1034     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1035     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1036     066B  084E               	movf	_hour,w
  1037     066C  00C8               	movwf	??_main
  1038     066D  01C9               	clrf	??_main+1
  1039     066E  0848               	movf	??_main,w
  1040     066F  00F0               	movwf	I2C_Master_Write@d
  1041     0670  0849               	movf	??_main+1,w
  1042     0671  00F1               	movwf	I2C_Master_Write@d+1
  1043     0672  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1044     0677                     l1455:
  1045                           
  1046                           ;Postlab4master.c: 128:         I2C_Master_Write(0x03);
  1047     0677  3003               	movlw	3
  1048     0678  00F0               	movwf	I2C_Master_Write@d
  1049     0679  3000               	movlw	0
  1050     067A  00F1               	movwf	I2C_Master_Write@d+1
  1051     067B  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1052     0680                     l1457:
  1053                           
  1054                           ;Postlab4master.c: 129:         I2C_Master_Write(m_day);
  1055     0680  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0681  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0682  084D               	movf	_m_day,w
  1058     0683  00C8               	movwf	??_main
  1059     0684  01C9               	clrf	??_main+1
  1060     0685  0848               	movf	??_main,w
  1061     0686  00F0               	movwf	I2C_Master_Write@d
  1062     0687  0849               	movf	??_main+1,w
  1063     0688  00F1               	movwf	I2C_Master_Write@d+1
  1064     0689  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1065     068E                     l1459:
  1066                           
  1067                           ;Postlab4master.c: 130:         I2C_Master_Write(0x04);
  1068     068E  3004               	movlw	4
  1069     068F  00F0               	movwf	I2C_Master_Write@d
  1070     0690  3000               	movlw	0
  1071     0691  00F1               	movwf	I2C_Master_Write@d+1
  1072     0692  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1073     0697                     l1461:
  1074                           
  1075                           ;Postlab4master.c: 131:         I2C_Master_Write(month);
  1076     0697  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0698  1303               	bcf	3,6	;RP1=0, select bank0
  1078     0699  084C               	movf	_month,w
  1079     069A  00C8               	movwf	??_main
  1080     069B  01C9               	clrf	??_main+1
  1081     069C  0848               	movf	??_main,w
  1082     069D  00F0               	movwf	I2C_Master_Write@d
  1083     069E  0849               	movf	??_main+1,w
  1084     069F  00F1               	movwf	I2C_Master_Write@d+1
  1085     06A0  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1086     06A5                     l1463:
  1087                           
  1088                           ;Postlab4master.c: 132:         I2C_Master_Write(0x05);
  1089     06A5  3005               	movlw	5
  1090     06A6  00F0               	movwf	I2C_Master_Write@d
  1091     06A7  3000               	movlw	0
  1092     06A8  00F1               	movwf	I2C_Master_Write@d+1
  1093     06A9  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1094     06AE                     l1465:
  1095                           
  1096                           ;Postlab4master.c: 133:         I2C_Master_Write(year);
  1097     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1098     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1099     06B0  084B               	movf	_year,w
  1100     06B1  00C8               	movwf	??_main
  1101     06B2  01C9               	clrf	??_main+1
  1102     06B3  0848               	movf	??_main,w
  1103     06B4  00F0               	movwf	I2C_Master_Write@d
  1104     06B5  0849               	movf	??_main+1,w
  1105     06B6  00F1               	movwf	I2C_Master_Write@d+1
  1106     06B7  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1107     06BC                     l1467:
  1108                           
  1109                           ;Postlab4master.c: 134:         I2C_Master_Stop();
  1110     06BC  120A  118A  20BF  120A  118A  	fcall	_I2C_Master_Stop
  1111     06C1                     l1469:
  1112                           
  1113                           ;Postlab4master.c: 135:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1114     06C1  3003               	movlw	3
  1115     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1116     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1117     06C4  00CA               	movwf	??_main+2
  1118     06C5  3008               	movlw	8
  1119     06C6  00C9               	movwf	??_main+1
  1120     06C7  3076               	movlw	118
  1121     06C8  00C8               	movwf	??_main
  1122     06C9                     u937:
  1123     06C9  0BC8               	decfsz	??_main,f
  1124     06CA  2EC9               	goto	u937
  1125     06CB  0BC9               	decfsz	??_main+1,f
  1126     06CC  2EC9               	goto	u937
  1127     06CD  0BCA               	decfsz	??_main+2,f
  1128     06CE  2EC9               	goto	u937
  1129     06CF  0000               	nop
  1130     06D0                     l199:	
  1131                           ;Postlab4master.c: 137:     while(1){
  1132                           
  1133                           
  1134                           ;Postlab4master.c: 139:         I2C_Master_Start();
  1135     06D0  120A  118A  20B6  120A  118A  	fcall	_I2C_Master_Start
  1136                           
  1137                           ;Postlab4master.c: 140:         I2C_Master_Write(0xD0);
  1138     06D5  30D0               	movlw	208
  1139     06D6  00F0               	movwf	I2C_Master_Write@d
  1140     06D7  3000               	movlw	0
  1141     06D8  00F1               	movwf	I2C_Master_Write@d+1
  1142     06D9  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1143                           
  1144                           ;Postlab4master.c: 141:         I2C_Master_Write(0x00);
  1145     06DE  3000               	movlw	0
  1146     06DF  00F0               	movwf	I2C_Master_Write@d
  1147     06E0  00F1               	movwf	I2C_Master_Write@d+1
  1148     06E1  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1149                           
  1150                           ;Postlab4master.c: 142:         I2C_Master_Stop();
  1151     06E6  120A  118A  20BF  120A  118A  	fcall	_I2C_Master_Stop
  1152                           
  1153                           ;Postlab4master.c: 144:         I2C_Master_Start();
  1154     06EB  120A  118A  20B6  120A  118A  	fcall	_I2C_Master_Start
  1155                           
  1156                           ;Postlab4master.c: 145:         I2C_Master_Write(0xD0);
  1157     06F0  30D0               	movlw	208
  1158     06F1  00F0               	movwf	I2C_Master_Write@d
  1159     06F2  3000               	movlw	0
  1160     06F3  00F1               	movwf	I2C_Master_Write@d+1
  1161     06F4  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1162                           
  1163                           ;Postlab4master.c: 146:         I2C_Master_Write(0x00);
  1164     06F9  3000               	movlw	0
  1165     06FA  00F0               	movwf	I2C_Master_Write@d
  1166     06FB  00F1               	movwf	I2C_Master_Write@d+1
  1167     06FC  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1168                           
  1169                           ;Postlab4master.c: 147:         I2C_Master_RepeatedStart();
  1170     0701  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1171                           
  1172                           ;Postlab4master.c: 148:         I2C_Master_Write(0xD1);
  1173     0706  30D1               	movlw	209
  1174     0707  00F0               	movwf	I2C_Master_Write@d
  1175     0708  3000               	movlw	0
  1176     0709  00F1               	movwf	I2C_Master_Write@d+1
  1177     070A  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1178                           
  1179                           ;Postlab4master.c: 149:         second = I2C_Master_Read(0);
  1180     070F  3000               	movlw	0
  1181     0710  00F0               	movwf	I2C_Master_Read@a
  1182     0711  00F1               	movwf	I2C_Master_Read@a+1
  1183     0712  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1184     0717  0870               	movf	?_I2C_Master_Read,w
  1185     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1187     071A  00D0               	movwf	_second
  1188                           
  1189                           ;Postlab4master.c: 150:         I2C_Master_Write(0x01);
  1190     071B  3001               	movlw	1
  1191     071C  00F0               	movwf	I2C_Master_Write@d
  1192     071D  3000               	movlw	0
  1193     071E  00F1               	movwf	I2C_Master_Write@d+1
  1194     071F  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1195                           
  1196                           ;Postlab4master.c: 151:         I2C_Master_RepeatedStart();
  1197     0724  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1198                           
  1199                           ;Postlab4master.c: 152:         I2C_Master_Write(0xD1);
  1200     0729  30D1               	movlw	209
  1201     072A  00F0               	movwf	I2C_Master_Write@d
  1202     072B  3000               	movlw	0
  1203     072C  00F1               	movwf	I2C_Master_Write@d+1
  1204     072D  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1205                           
  1206                           ;Postlab4master.c: 153:         minute = I2C_Master_Read(0);
  1207     0732  3000               	movlw	0
  1208     0733  00F0               	movwf	I2C_Master_Read@a
  1209     0734  00F1               	movwf	I2C_Master_Read@a+1
  1210     0735  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1211     073A  0870               	movf	?_I2C_Master_Read,w
  1212     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1213     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1214     073D  00CF               	movwf	_minute
  1215                           
  1216                           ;Postlab4master.c: 154:         I2C_Master_Write(0x02);
  1217     073E  3002               	movlw	2
  1218     073F  00F0               	movwf	I2C_Master_Write@d
  1219     0740  3000               	movlw	0
  1220     0741  00F1               	movwf	I2C_Master_Write@d+1
  1221     0742  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1222                           
  1223                           ;Postlab4master.c: 155:         I2C_Master_RepeatedStart();
  1224     0747  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1225                           
  1226                           ;Postlab4master.c: 156:         I2C_Master_Write(0xD1);
  1227     074C  30D1               	movlw	209
  1228     074D  00F0               	movwf	I2C_Master_Write@d
  1229     074E  3000               	movlw	0
  1230     074F  00F1               	movwf	I2C_Master_Write@d+1
  1231     0750  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1232                           
  1233                           ;Postlab4master.c: 157:         hour = I2C_Master_Read(0);
  1234     0755  3000               	movlw	0
  1235     0756  00F0               	movwf	I2C_Master_Read@a
  1236     0757  00F1               	movwf	I2C_Master_Read@a+1
  1237     0758  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1238     075D  0870               	movf	?_I2C_Master_Read,w
  1239     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1240     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1241     0760  00CE               	movwf	_hour
  1242                           
  1243                           ;Postlab4master.c: 158:         I2C_Master_Write(0x03);
  1244     0761  3003               	movlw	3
  1245     0762  00F0               	movwf	I2C_Master_Write@d
  1246     0763  3000               	movlw	0
  1247     0764  00F1               	movwf	I2C_Master_Write@d+1
  1248     0765  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1249                           
  1250                           ;Postlab4master.c: 159:         I2C_Master_RepeatedStart();
  1251     076A  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1252                           
  1253                           ;Postlab4master.c: 160:         I2C_Master_Write(0xD1);
  1254     076F  30D1               	movlw	209
  1255     0770  00F0               	movwf	I2C_Master_Write@d
  1256     0771  3000               	movlw	0
  1257     0772  00F1               	movwf	I2C_Master_Write@d+1
  1258     0773  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1259                           
  1260                           ;Postlab4master.c: 161:         m_day = I2C_Master_Read(0);
  1261     0778  3000               	movlw	0
  1262     0779  00F0               	movwf	I2C_Master_Read@a
  1263     077A  00F1               	movwf	I2C_Master_Read@a+1
  1264     077B  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1265     0780  0870               	movf	?_I2C_Master_Read,w
  1266     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0783  00CD               	movwf	_m_day
  1269                           
  1270                           ;Postlab4master.c: 162:         I2C_Master_Write(0x04);
  1271     0784  3004               	movlw	4
  1272     0785  00F0               	movwf	I2C_Master_Write@d
  1273     0786  3000               	movlw	0
  1274     0787  00F1               	movwf	I2C_Master_Write@d+1
  1275     0788  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1276                           
  1277                           ;Postlab4master.c: 163:         I2C_Master_RepeatedStart();
  1278     078D  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1279                           
  1280                           ;Postlab4master.c: 164:         I2C_Master_Write(0xD1);
  1281     0792  30D1               	movlw	209
  1282     0793  00F0               	movwf	I2C_Master_Write@d
  1283     0794  3000               	movlw	0
  1284     0795  00F1               	movwf	I2C_Master_Write@d+1
  1285     0796  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1286                           
  1287                           ;Postlab4master.c: 165:         month = I2C_Master_Read(0);
  1288     079B  3000               	movlw	0
  1289     079C  00F0               	movwf	I2C_Master_Read@a
  1290     079D  00F1               	movwf	I2C_Master_Read@a+1
  1291     079E  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1292     07A3  0870               	movf	?_I2C_Master_Read,w
  1293     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1294     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1295     07A6  00CC               	movwf	_month
  1296                           
  1297                           ;Postlab4master.c: 166:         I2C_Master_Write(0x05);
  1298     07A7  3005               	movlw	5
  1299     07A8  00F0               	movwf	I2C_Master_Write@d
  1300     07A9  3000               	movlw	0
  1301     07AA  00F1               	movwf	I2C_Master_Write@d+1
  1302     07AB  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1303                           
  1304                           ;Postlab4master.c: 167:         I2C_Master_RepeatedStart();
  1305     07B0  120A  118A  20AD  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1306                           
  1307                           ;Postlab4master.c: 168:         I2C_Master_Write(0xD1);
  1308     07B5  30D1               	movlw	209
  1309     07B6  00F0               	movwf	I2C_Master_Write@d
  1310     07B7  3000               	movlw	0
  1311     07B8  00F1               	movwf	I2C_Master_Write@d+1
  1312     07B9  120A  118A  20C8  120A  118A  	fcall	_I2C_Master_Write
  1313                           
  1314                           ;Postlab4master.c: 169:         year = I2C_Master_Read(0);
  1315     07BE  3000               	movlw	0
  1316     07BF  00F0               	movwf	I2C_Master_Read@a
  1317     07C0  00F1               	movwf	I2C_Master_Read@a+1
  1318     07C1  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_Read
  1319     07C6  0870               	movf	?_I2C_Master_Read,w
  1320     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1321     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1322     07C9  00CB               	movwf	_year
  1323                           
  1324                           ;Postlab4master.c: 170:         I2C_Master_Stop();
  1325     07CA  120A  118A  20BF  120A  118A  	fcall	_I2C_Master_Stop
  1326     07CF                     l1471:
  1327                           
  1328                           ;Postlab4master.c: 171:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1329     07CF  3003               	movlw	3
  1330     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1331     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1332     07D2  00CA               	movwf	??_main+2
  1333     07D3  3008               	movlw	8
  1334     07D4  00C9               	movwf	??_main+1
  1335     07D5  3076               	movlw	118
  1336     07D6  00C8               	movwf	??_main
  1337     07D7                     u947:
  1338     07D7  0BC8               	decfsz	??_main,f
  1339     07D8  2FD7               	goto	u947
  1340     07D9  0BC9               	decfsz	??_main+1,f
  1341     07DA  2FD7               	goto	u947
  1342     07DB  0BCA               	decfsz	??_main+2,f
  1343     07DC  2FD7               	goto	u947
  1344     07DD  0000               	nop
  1345     07DE                     l1473:
  1346                           
  1347                           ;Postlab4master.c: 175:         RTC_display();
  1348     07DE  120A  118A  2441  120A  118A  	fcall	_RTC_display
  1349     07E3  2ED0               	goto	l199
  1350     07E4  120A  118A  2800   	ljmp	start
  1351     07E7                     __end_of_main:
  1352                           
  1353                           	psect	text1
  1354     0137                     __ptext1:	
  1355 ;; *************** function _setup *****************
  1356 ;; Defined at:
  1357 ;;		line 184 in file "Postlab4master.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     0137                     _setup:	
  1385                           ;psect for function _setup
  1386                           
  1387     0137                     l1397:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _setup: [wreg+status,2+status,0]
  1390                           
  1391                           
  1392                           ;Postlab4master.c: 185:     ANSEL = 0;
  1393     0137  1683               	bsf	3,5	;RP0=1, select bank3
  1394     0138  1703               	bsf	3,6	;RP1=1, select bank3
  1395     0139  0188               	clrf	8	;volatile
  1396                           
  1397                           ;Postlab4master.c: 186:     ANSELH = 0;
  1398     013A  0189               	clrf	9	;volatile
  1399     013B                     l1399:
  1400                           
  1401                           ;Postlab4master.c: 187:     TRISC1 = 0;
  1402     013B  1683               	bsf	3,5	;RP0=1, select bank1
  1403     013C  1303               	bcf	3,6	;RP1=0, select bank1
  1404     013D  1087               	bcf	7,1	;volatile
  1405     013E                     l1401:
  1406                           
  1407                           ;Postlab4master.c: 188:     TRISC2 = 0;
  1408     013E  1107               	bcf	7,2	;volatile
  1409     013F                     l1403:
  1410                           
  1411                           ;Postlab4master.c: 189:     TRISC6 = 0;
  1412     013F  1307               	bcf	7,6	;volatile
  1413     0140                     l1405:
  1414                           
  1415                           ;Postlab4master.c: 190:     TRISC7 = 0;
  1416     0140  1387               	bcf	7,7	;volatile
  1417                           
  1418                           ;Postlab4master.c: 191:     TRISA =0;
  1419     0141  0185               	clrf	5	;volatile
  1420                           
  1421                           ;Postlab4master.c: 192:     TRISB = 0;
  1422     0142  0186               	clrf	6	;volatile
  1423                           
  1424                           ;Postlab4master.c: 193:     TRISD = 0;
  1425     0143  0188               	clrf	8	;volatile
  1426                           
  1427                           ;Postlab4master.c: 194:     PORTA = 0;
  1428     0144  1283               	bcf	3,5	;RP0=0, select bank0
  1429     0145  1303               	bcf	3,6	;RP1=0, select bank0
  1430     0146  0185               	clrf	5	;volatile
  1431                           
  1432                           ;Postlab4master.c: 195:     PORTB = 0;
  1433     0147  0186               	clrf	6	;volatile
  1434                           
  1435                           ;Postlab4master.c: 196:     PORTD = 0;
  1436     0148  0188               	clrf	8	;volatile
  1437     0149                     l1407:
  1438                           
  1439                           ;Postlab4master.c: 197:     PORTCbits.RC1 = 1;
  1440     0149  1487               	bsf	7,1	;volatile
  1441     014A                     l1409:
  1442                           
  1443                           ;Postlab4master.c: 198:     PORTCbits.RC2 = 1;
  1444     014A  1507               	bsf	7,2	;volatile
  1445     014B                     l1411:
  1446                           
  1447                           ;Postlab4master.c: 201:     OSCCONbits.IRCF = 0b0111;
  1448     014B  3070               	movlw	112
  1449     014C  1683               	bsf	3,5	;RP0=1, select bank1
  1450     014D  1303               	bcf	3,6	;RP1=0, select bank1
  1451     014E  048F               	iorwf	15,f	;volatile
  1452     014F                     l1413:
  1453                           
  1454                           ;Postlab4master.c: 202:     OSCCONbits.SCS = 1;
  1455     014F  140F               	bsf	15,0	;volatile
  1456     0150                     l205:
  1457     0150  0008               	return
  1458     0151                     __end_of_setup:
  1459                           
  1460                           	psect	text2
  1461     01E2                     __ptext2:	
  1462 ;; *************** function _decimal_to_bcd *****************
  1463 ;; Defined at:
  1464 ;;		line 57 in file "Postlab4master.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  number          1    wreg     unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  number          1    0[BANK0 ] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      unsigned char 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         0       0       0       0       0
  1479 ;;      Locals:         0       1       0       0       0
  1480 ;;      Temps:          5       0       0       0       0
  1481 ;;      Totals:         5       1       0       0       0
  1482 ;;Total ram usage:        6 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; Hardware stack levels required when called: 1
  1485 ;; This function calls:
  1486 ;;		___awdiv
  1487 ;;		___awmod
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493     01E2                     _decimal_to_bcd:	
  1494                           ;psect for function _decimal_to_bcd
  1495                           
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1499                           ;decimal_to_bcd@number stored from wreg
  1500     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1501     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1502     01E4  00C0               	movwf	decimal_to_bcd@number
  1503     01E5                     l1387:
  1504                           
  1505                           ;Postlab4master.c: 58:   return(((number / 10) << 4) + (number % 10));
  1506     01E5  300A               	movlw	10
  1507     01E6  00F0               	movwf	___awdiv@divisor
  1508     01E7  3000               	movlw	0
  1509     01E8  00F1               	movwf	___awdiv@divisor+1
  1510     01E9  0840               	movf	decimal_to_bcd@number,w
  1511     01EA  00F9               	movwf	??_decimal_to_bcd
  1512     01EB  01FA               	clrf	??_decimal_to_bcd+1
  1513     01EC  0879               	movf	??_decimal_to_bcd,w
  1514     01ED  00F2               	movwf	___awdiv@dividend
  1515     01EE  087A               	movf	??_decimal_to_bcd+1,w
  1516     01EF  00F3               	movwf	___awdiv@dividend+1
  1517     01F0  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1518     01F5  0870               	movf	?___awdiv,w
  1519     01F6  00FB               	movwf	??_decimal_to_bcd+2
  1520     01F7  3004               	movlw	4
  1521     01F8                     u895:
  1522     01F8  1003               	clrc
  1523     01F9  0DFB               	rlf	??_decimal_to_bcd+2,f
  1524     01FA  3EFF               	addlw	-1
  1525     01FB  1D03               	skipz
  1526     01FC  29F8               	goto	u895
  1527     01FD  300A               	movlw	10
  1528     01FE  00F0               	movwf	___awmod@divisor
  1529     01FF  3000               	movlw	0
  1530     0200  00F1               	movwf	___awmod@divisor+1
  1531     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1532     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1533     0203  0840               	movf	decimal_to_bcd@number,w
  1534     0204  00FC               	movwf	??_decimal_to_bcd+3
  1535     0205  01FD               	clrf	??_decimal_to_bcd+4
  1536     0206  087C               	movf	??_decimal_to_bcd+3,w
  1537     0207  00F2               	movwf	___awmod@dividend
  1538     0208  087D               	movf	??_decimal_to_bcd+4,w
  1539     0209  00F3               	movwf	___awmod@dividend+1
  1540     020A  120A  118A  22BE  120A  118A  	fcall	___awmod
  1541     020F  0870               	movf	?___awmod,w
  1542     0210  077B               	addwf	??_decimal_to_bcd+2,w
  1543     0211                     l187:
  1544     0211  0008               	return
  1545     0212                     __end_of_decimal_to_bcd:
  1546                           
  1547                           	psect	text3
  1548     0441                     __ptext3:	
  1549 ;; *************** function _RTC_display *****************
  1550 ;; Defined at:
  1551 ;;		line 60 in file "Postlab4master.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0
  1567 ;;      Temps:          2       0       0       0       0
  1568 ;;      Totals:         2       0       0       0       0
  1569 ;;Total ram usage:        2 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		_Lcd_Set_Cursor
  1574 ;;		_Lcd_Write_String
  1575 ;;		___awdiv
  1576 ;;		___awmod
  1577 ;;		_bcd_to_decimal
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583     0441                     _RTC_display:	
  1584                           ;psect for function _RTC_display
  1585                           
  1586     0441                     l1391:	
  1587                           ;incstack = 0
  1588                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1589                           
  1590                           
  1591                           ;Postlab4master.c: 62:   static char Time[] = "TIME: 00:00:00";;Postlab4master.c: 63:   
      +                          static char Date[] = "DATE: 00/00/2000";;Postlab4master.c: 66:   second = bcd_to_decimal
      +                          (second);
  1592     0441  1283               	bcf	3,5	;RP0=0, select bank0
  1593     0442  1303               	bcf	3,6	;RP1=0, select bank0
  1594     0443  0850               	movf	_second,w
  1595     0444  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1596     0449  1283               	bcf	3,5	;RP0=0, select bank0
  1597     044A  1303               	bcf	3,6	;RP1=0, select bank0
  1598     044B  00D0               	movwf	_second
  1599                           
  1600                           ;Postlab4master.c: 67:   minute = bcd_to_decimal(minute);
  1601     044C  084F               	movf	_minute,w
  1602     044D  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1603     0452  1283               	bcf	3,5	;RP0=0, select bank0
  1604     0453  1303               	bcf	3,6	;RP1=0, select bank0
  1605     0454  00CF               	movwf	_minute
  1606                           
  1607                           ;Postlab4master.c: 68:   hour = bcd_to_decimal(hour);
  1608     0455  084E               	movf	_hour,w
  1609     0456  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1610     045B  1283               	bcf	3,5	;RP0=0, select bank0
  1611     045C  1303               	bcf	3,6	;RP1=0, select bank0
  1612     045D  00CE               	movwf	_hour
  1613                           
  1614                           ;Postlab4master.c: 69:   m_day = bcd_to_decimal(m_day);
  1615     045E  084D               	movf	_m_day,w
  1616     045F  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1617     0464  1283               	bcf	3,5	;RP0=0, select bank0
  1618     0465  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0466  00CD               	movwf	_m_day
  1620                           
  1621                           ;Postlab4master.c: 70:   month = bcd_to_decimal(month);
  1622     0467  084C               	movf	_month,w
  1623     0468  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1624     046D  1283               	bcf	3,5	;RP0=0, select bank0
  1625     046E  1303               	bcf	3,6	;RP1=0, select bank0
  1626     046F  00CC               	movwf	_month
  1627                           
  1628                           ;Postlab4master.c: 71:   year = bcd_to_decimal(year);
  1629     0470  084B               	movf	_year,w
  1630     0471  120A  118A  2107  120A  118A  	fcall	_bcd_to_decimal
  1631     0476  1283               	bcf	3,5	;RP0=0, select bank0
  1632     0477  1303               	bcf	3,6	;RP1=0, select bank0
  1633     0478  00CB               	movwf	_year
  1634                           
  1635                           ;Postlab4master.c: 75:   Time[6] = hour / 10 + '0';
  1636     0479  300A               	movlw	10
  1637     047A  00F0               	movwf	___awdiv@divisor
  1638     047B  3000               	movlw	0
  1639     047C  00F1               	movwf	___awdiv@divisor+1
  1640     047D  084E               	movf	_hour,w
  1641     047E  00FA               	movwf	??_RTC_display
  1642     047F  01FB               	clrf	??_RTC_display+1
  1643     0480  087A               	movf	??_RTC_display,w
  1644     0481  00F2               	movwf	___awdiv@dividend
  1645     0482  087B               	movf	??_RTC_display+1,w
  1646     0483  00F3               	movwf	___awdiv@dividend+1
  1647     0484  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1648     0489  0870               	movf	?___awdiv,w
  1649     048A  3E30               	addlw	48
  1650     048B  1283               	bcf	3,5	;RP0=0, select bank0
  1651     048C  1303               	bcf	3,6	;RP1=0, select bank0
  1652     048D  00B7               	movwf	RTC_display@Time+6
  1653                           
  1654                           ;Postlab4master.c: 76:   Time[7] = hour % 10 + '0';
  1655     048E  300A               	movlw	10
  1656     048F  00F0               	movwf	___awmod@divisor
  1657     0490  3000               	movlw	0
  1658     0491  00F1               	movwf	___awmod@divisor+1
  1659     0492  084E               	movf	_hour,w
  1660     0493  00FA               	movwf	??_RTC_display
  1661     0494  01FB               	clrf	??_RTC_display+1
  1662     0495  087A               	movf	??_RTC_display,w
  1663     0496  00F2               	movwf	___awmod@dividend
  1664     0497  087B               	movf	??_RTC_display+1,w
  1665     0498  00F3               	movwf	___awmod@dividend+1
  1666     0499  120A  118A  22BE  120A  118A  	fcall	___awmod
  1667     049E  0870               	movf	?___awmod,w
  1668     049F  3E30               	addlw	48
  1669     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1670     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1671     04A2  00B8               	movwf	RTC_display@Time+7
  1672                           
  1673                           ;Postlab4master.c: 77:   Time[9] = minute / 10 + '0';
  1674     04A3  300A               	movlw	10
  1675     04A4  00F0               	movwf	___awdiv@divisor
  1676     04A5  3000               	movlw	0
  1677     04A6  00F1               	movwf	___awdiv@divisor+1
  1678     04A7  084F               	movf	_minute,w
  1679     04A8  00FA               	movwf	??_RTC_display
  1680     04A9  01FB               	clrf	??_RTC_display+1
  1681     04AA  087A               	movf	??_RTC_display,w
  1682     04AB  00F2               	movwf	___awdiv@dividend
  1683     04AC  087B               	movf	??_RTC_display+1,w
  1684     04AD  00F3               	movwf	___awdiv@dividend+1
  1685     04AE  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1686     04B3  0870               	movf	?___awdiv,w
  1687     04B4  3E30               	addlw	48
  1688     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  1689     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  1690     04B7  00BA               	movwf	RTC_display@Time+9
  1691                           
  1692                           ;Postlab4master.c: 78:   Time[10] = minute % 10 + '0';
  1693     04B8  300A               	movlw	10
  1694     04B9  00F0               	movwf	___awmod@divisor
  1695     04BA  3000               	movlw	0
  1696     04BB  00F1               	movwf	___awmod@divisor+1
  1697     04BC  084F               	movf	_minute,w
  1698     04BD  00FA               	movwf	??_RTC_display
  1699     04BE  01FB               	clrf	??_RTC_display+1
  1700     04BF  087A               	movf	??_RTC_display,w
  1701     04C0  00F2               	movwf	___awmod@dividend
  1702     04C1  087B               	movf	??_RTC_display+1,w
  1703     04C2  00F3               	movwf	___awmod@dividend+1
  1704     04C3  120A  118A  22BE  120A  118A  	fcall	___awmod
  1705     04C8  0870               	movf	?___awmod,w
  1706     04C9  3E30               	addlw	48
  1707     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1708     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1709     04CC  00BB               	movwf	RTC_display@Time+10
  1710                           
  1711                           ;Postlab4master.c: 79:   Time[12] = second / 10 + '0';
  1712     04CD  300A               	movlw	10
  1713     04CE  00F0               	movwf	___awdiv@divisor
  1714     04CF  3000               	movlw	0
  1715     04D0  00F1               	movwf	___awdiv@divisor+1
  1716     04D1  0850               	movf	_second,w
  1717     04D2  00FA               	movwf	??_RTC_display
  1718     04D3  01FB               	clrf	??_RTC_display+1
  1719     04D4  087A               	movf	??_RTC_display,w
  1720     04D5  00F2               	movwf	___awdiv@dividend
  1721     04D6  087B               	movf	??_RTC_display+1,w
  1722     04D7  00F3               	movwf	___awdiv@dividend+1
  1723     04D8  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1724     04DD  0870               	movf	?___awdiv,w
  1725     04DE  3E30               	addlw	48
  1726     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1727     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1728     04E1  00BD               	movwf	RTC_display@Time+12
  1729                           
  1730                           ;Postlab4master.c: 80:   Time[13] = second % 10 + '0';
  1731     04E2  300A               	movlw	10
  1732     04E3  00F0               	movwf	___awmod@divisor
  1733     04E4  3000               	movlw	0
  1734     04E5  00F1               	movwf	___awmod@divisor+1
  1735     04E6  0850               	movf	_second,w
  1736     04E7  00FA               	movwf	??_RTC_display
  1737     04E8  01FB               	clrf	??_RTC_display+1
  1738     04E9  087A               	movf	??_RTC_display,w
  1739     04EA  00F2               	movwf	___awmod@dividend
  1740     04EB  087B               	movf	??_RTC_display+1,w
  1741     04EC  00F3               	movwf	___awmod@dividend+1
  1742     04ED  120A  118A  22BE  120A  118A  	fcall	___awmod
  1743     04F2  0870               	movf	?___awmod,w
  1744     04F3  3E30               	addlw	48
  1745     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1746     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1747     04F6  00BE               	movwf	RTC_display@Time+13
  1748                           
  1749                           ;Postlab4master.c: 82:   Date[6] = m_day / 10 + '0';
  1750     04F7  300A               	movlw	10
  1751     04F8  00F0               	movwf	___awdiv@divisor
  1752     04F9  3000               	movlw	0
  1753     04FA  00F1               	movwf	___awdiv@divisor+1
  1754     04FB  084D               	movf	_m_day,w
  1755     04FC  00FA               	movwf	??_RTC_display
  1756     04FD  01FB               	clrf	??_RTC_display+1
  1757     04FE  087A               	movf	??_RTC_display,w
  1758     04FF  00F2               	movwf	___awdiv@dividend
  1759     0500  087B               	movf	??_RTC_display+1,w
  1760     0501  00F3               	movwf	___awdiv@dividend+1
  1761     0502  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1762     0507  0870               	movf	?___awdiv,w
  1763     0508  3E30               	addlw	48
  1764     0509  1283               	bcf	3,5	;RP0=0, select bank0
  1765     050A  1303               	bcf	3,6	;RP1=0, select bank0
  1766     050B  00A6               	movwf	RTC_display@Date+6
  1767                           
  1768                           ;Postlab4master.c: 83:   Date[7] = m_day % 10 + '0';
  1769     050C  300A               	movlw	10
  1770     050D  00F0               	movwf	___awmod@divisor
  1771     050E  3000               	movlw	0
  1772     050F  00F1               	movwf	___awmod@divisor+1
  1773     0510  084D               	movf	_m_day,w
  1774     0511  00FA               	movwf	??_RTC_display
  1775     0512  01FB               	clrf	??_RTC_display+1
  1776     0513  087A               	movf	??_RTC_display,w
  1777     0514  00F2               	movwf	___awmod@dividend
  1778     0515  087B               	movf	??_RTC_display+1,w
  1779     0516  00F3               	movwf	___awmod@dividend+1
  1780     0517  120A  118A  22BE  120A  118A  	fcall	___awmod
  1781     051C  0870               	movf	?___awmod,w
  1782     051D  3E30               	addlw	48
  1783     051E  1283               	bcf	3,5	;RP0=0, select bank0
  1784     051F  1303               	bcf	3,6	;RP1=0, select bank0
  1785     0520  00A7               	movwf	RTC_display@Date+7
  1786                           
  1787                           ;Postlab4master.c: 84:   Date[9] = month / 10 + '0';
  1788     0521  300A               	movlw	10
  1789     0522  00F0               	movwf	___awdiv@divisor
  1790     0523  3000               	movlw	0
  1791     0524  00F1               	movwf	___awdiv@divisor+1
  1792     0525  084C               	movf	_month,w
  1793     0526  00FA               	movwf	??_RTC_display
  1794     0527  01FB               	clrf	??_RTC_display+1
  1795     0528  087A               	movf	??_RTC_display,w
  1796     0529  00F2               	movwf	___awdiv@dividend
  1797     052A  087B               	movf	??_RTC_display+1,w
  1798     052B  00F3               	movwf	___awdiv@dividend+1
  1799     052C  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1800     0531  0870               	movf	?___awdiv,w
  1801     0532  3E30               	addlw	48
  1802     0533  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0534  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0535  00A9               	movwf	RTC_display@Date+9
  1805                           
  1806                           ;Postlab4master.c: 85:   Date[10] = month % 10 + '0';
  1807     0536  300A               	movlw	10
  1808     0537  00F0               	movwf	___awmod@divisor
  1809     0538  3000               	movlw	0
  1810     0539  00F1               	movwf	___awmod@divisor+1
  1811     053A  084C               	movf	_month,w
  1812     053B  00FA               	movwf	??_RTC_display
  1813     053C  01FB               	clrf	??_RTC_display+1
  1814     053D  087A               	movf	??_RTC_display,w
  1815     053E  00F2               	movwf	___awmod@dividend
  1816     053F  087B               	movf	??_RTC_display+1,w
  1817     0540  00F3               	movwf	___awmod@dividend+1
  1818     0541  120A  118A  22BE  120A  118A  	fcall	___awmod
  1819     0546  0870               	movf	?___awmod,w
  1820     0547  3E30               	addlw	48
  1821     0548  1283               	bcf	3,5	;RP0=0, select bank0
  1822     0549  1303               	bcf	3,6	;RP1=0, select bank0
  1823     054A  00AA               	movwf	RTC_display@Date+10
  1824                           
  1825                           ;Postlab4master.c: 86:   Date[14] = year / 10 + '0';
  1826     054B  300A               	movlw	10
  1827     054C  00F0               	movwf	___awdiv@divisor
  1828     054D  3000               	movlw	0
  1829     054E  00F1               	movwf	___awdiv@divisor+1
  1830     054F  084B               	movf	_year,w
  1831     0550  00FA               	movwf	??_RTC_display
  1832     0551  01FB               	clrf	??_RTC_display+1
  1833     0552  087A               	movf	??_RTC_display,w
  1834     0553  00F2               	movwf	___awdiv@dividend
  1835     0554  087B               	movf	??_RTC_display+1,w
  1836     0555  00F3               	movwf	___awdiv@dividend+1
  1837     0556  120A  118A  23DA  120A  118A  	fcall	___awdiv
  1838     055B  0870               	movf	?___awdiv,w
  1839     055C  3E30               	addlw	48
  1840     055D  1283               	bcf	3,5	;RP0=0, select bank0
  1841     055E  1303               	bcf	3,6	;RP1=0, select bank0
  1842     055F  00AE               	movwf	RTC_display@Date+14
  1843                           
  1844                           ;Postlab4master.c: 87:   Date[15] = year % 10 + '0';
  1845     0560  300A               	movlw	10
  1846     0561  00F0               	movwf	___awmod@divisor
  1847     0562  3000               	movlw	0
  1848     0563  00F1               	movwf	___awmod@divisor+1
  1849     0564  084B               	movf	_year,w
  1850     0565  00FA               	movwf	??_RTC_display
  1851     0566  01FB               	clrf	??_RTC_display+1
  1852     0567  087A               	movf	??_RTC_display,w
  1853     0568  00F2               	movwf	___awmod@dividend
  1854     0569  087B               	movf	??_RTC_display+1,w
  1855     056A  00F3               	movwf	___awmod@dividend+1
  1856     056B  120A  118A  22BE  120A  118A  	fcall	___awmod
  1857     0570  0870               	movf	?___awmod,w
  1858     0571  3E30               	addlw	48
  1859     0572  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0573  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0574  00AF               	movwf	RTC_display@Date+15
  1862                           
  1863                           ;Postlab4master.c: 89:  Lcd_Set_Cursor(1,1);
  1864     0575  01F4               	clrf	Lcd_Set_Cursor@b
  1865     0576  0AF4               	incf	Lcd_Set_Cursor@b,f
  1866     0577  3001               	movlw	1
  1867     0578  120A  118A  2278  120A  118A  	fcall	_Lcd_Set_Cursor
  1868     057D                     l1393:
  1869                           
  1870                           ;Postlab4master.c: 90:   Lcd_Write_String(Time);
  1871     057D  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1872     057E  120A  118A  2171  120A  118A  	fcall	_Lcd_Write_String
  1873     0583                     l1395:
  1874                           
  1875                           ;Postlab4master.c: 91:   Lcd_Set_Cursor(2,1);
  1876     0583  01F4               	clrf	Lcd_Set_Cursor@b
  1877     0584  0AF4               	incf	Lcd_Set_Cursor@b,f
  1878     0585  3002               	movlw	2
  1879     0586  120A  118A  2278  120A  118A  	fcall	_Lcd_Set_Cursor
  1880                           
  1881                           ;Postlab4master.c: 92:   Lcd_Write_String(Date);
  1882     058B  3020               	movlw	(low (RTC_display@Date| 0))& (0+255)
  1883     058C  120A  118A  2171  120A  118A  	fcall	_Lcd_Write_String
  1884     0591                     l194:
  1885     0591  0008               	return
  1886     0592                     __end_of_RTC_display:
  1887                           
  1888                           	psect	text4
  1889     0107                     __ptext4:	
  1890 ;; *************** function _bcd_to_decimal *****************
  1891 ;; Defined at:
  1892 ;;		line 52 in file "Postlab4master.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  number          1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  number          1    6[COMMON] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      unsigned char 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0
  1908 ;;      Temps:          2       0       0       0       0
  1909 ;;      Totals:         3       0       0       0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 1
  1913 ;; This function calls:
  1914 ;;		___bmul
  1915 ;; This function is called by:
  1916 ;;		_RTC_display
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     0107                     _bcd_to_decimal:	
  1921                           ;psect for function _bcd_to_decimal
  1922                           
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1926                           ;bcd_to_decimal@number stored from wreg
  1927     0107  00F6               	movwf	bcd_to_decimal@number
  1928     0108                     l1229:
  1929                           
  1930                           ;Postlab4master.c: 53:   return((number >> 4) * 10 + (number & 0x0F));
  1931     0108  300F               	movlw	15
  1932     0109  0576               	andwf	bcd_to_decimal@number,w
  1933     010A  00F4               	movwf	??_bcd_to_decimal
  1934     010B  300A               	movlw	10
  1935     010C  00F0               	movwf	___bmul@multiplicand
  1936     010D  0876               	movf	bcd_to_decimal@number,w
  1937     010E  00F5               	movwf	??_bcd_to_decimal+1
  1938     010F  3004               	movlw	4
  1939     0110                     u605:
  1940     0110  1003               	clrc
  1941     0111  0CF5               	rrf	??_bcd_to_decimal+1,f
  1942     0112  3EFF               	addlw	-1
  1943     0113  1D03               	skipz
  1944     0114  2910               	goto	u605
  1945     0115  0875               	movf	??_bcd_to_decimal+1,w
  1946     0116  120A  118A  20F2  120A  118A  	fcall	___bmul
  1947     011B  0774               	addwf	??_bcd_to_decimal,w
  1948     011C                     l184:
  1949     011C  0008               	return
  1950     011D                     __end_of_bcd_to_decimal:
  1951                           
  1952                           	psect	text5
  1953     00F2                     __ptext5:	
  1954 ;; *************** function ___bmul *****************
  1955 ;; Defined at:
  1956 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  multiplier      1    wreg     unsigned char 
  1959 ;;  multiplicand    1    0[COMMON] unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  multiplier      1    3[COMMON] unsigned char 
  1962 ;;  product         1    2[COMMON] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      unsigned char 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         1       0       0       0       0
  1973 ;;      Locals:         2       0       0       0       0
  1974 ;;      Temps:          1       0       0       0       0
  1975 ;;      Totals:         4       0       0       0       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_bcd_to_decimal
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985     00F2                     ___bmul:	
  1986                           ;psect for function ___bmul
  1987                           
  1988                           
  1989                           ;incstack = 0
  1990                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1991                           ;___bmul@multiplier stored from wreg
  1992     00F2  00F3               	movwf	___bmul@multiplier
  1993     00F3                     l1183:
  1994     00F3  01F2               	clrf	___bmul@product
  1995     00F4                     l1185:
  1996     00F4  1C73               	btfss	___bmul@multiplier,0
  1997     00F5  28F7               	goto	u511
  1998     00F6  28F8               	goto	u510
  1999     00F7                     u511:
  2000     00F7  28FC               	goto	l1189
  2001     00F8                     u510:
  2002     00F8                     l1187:
  2003     00F8  0870               	movf	___bmul@multiplicand,w
  2004     00F9  00F1               	movwf	??___bmul
  2005     00FA  0871               	movf	??___bmul,w
  2006     00FB  07F2               	addwf	___bmul@product,f
  2007     00FC                     l1189:
  2008     00FC  1003               	clrc
  2009     00FD  0DF0               	rlf	___bmul@multiplicand,f
  2010     00FE                     l1191:
  2011     00FE  1003               	clrc
  2012     00FF  0CF3               	rrf	___bmul@multiplier,f
  2013     0100  0873               	movf	___bmul@multiplier,w
  2014     0101  1D03               	btfss	3,2
  2015     0102  2904               	goto	u521
  2016     0103  2905               	goto	u520
  2017     0104                     u521:
  2018     0104  28F4               	goto	l1185
  2019     0105                     u520:
  2020     0105                     l1193:
  2021     0105  0872               	movf	___bmul@product,w
  2022     0106                     l317:
  2023     0106  0008               	return
  2024     0107                     __end_of___bmul:
  2025                           
  2026                           	psect	text6
  2027     02BE                     __ptext6:	
  2028 ;; *************** function ___awmod *****************
  2029 ;; Defined at:
  2030 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  divisor         2    0[COMMON] int 
  2033 ;;  dividend        2    2[COMMON] int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  sign            1    6[COMMON] unsigned char 
  2036 ;;  counter         1    5[COMMON] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    0[COMMON] int 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         4       0       0       0       0
  2047 ;;      Locals:         2       0       0       0       0
  2048 ;;      Temps:          1       0       0       0       0
  2049 ;;      Totals:         7       0       0       0       0
  2050 ;;Total ram usage:        7 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_decimal_to_bcd
  2056 ;;		_RTC_display
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060     02BE                     ___awmod:	
  2061                           ;psect for function ___awmod
  2062                           
  2063     02BE                     l1301:	
  2064                           ;incstack = 0
  2065                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2066                           
  2067     02BE  01F6               	clrf	___awmod@sign
  2068     02BF                     l1303:
  2069     02BF  1FF3               	btfss	___awmod@dividend+1,7
  2070     02C0  2AC2               	goto	u781
  2071     02C1  2AC3               	goto	u780
  2072     02C2                     u781:
  2073     02C2  2ACA               	goto	l1309
  2074     02C3                     u780:
  2075     02C3                     l1305:
  2076     02C3  09F2               	comf	___awmod@dividend,f
  2077     02C4  09F3               	comf	___awmod@dividend+1,f
  2078     02C5  0AF2               	incf	___awmod@dividend,f
  2079     02C6  1903               	skipnz
  2080     02C7  0AF3               	incf	___awmod@dividend+1,f
  2081     02C8                     l1307:
  2082     02C8  01F6               	clrf	___awmod@sign
  2083     02C9  0AF6               	incf	___awmod@sign,f
  2084     02CA                     l1309:
  2085     02CA  1FF1               	btfss	___awmod@divisor+1,7
  2086     02CB  2ACD               	goto	u791
  2087     02CC  2ACE               	goto	u790
  2088     02CD                     u791:
  2089     02CD  2AD3               	goto	l1313
  2090     02CE                     u790:
  2091     02CE                     l1311:
  2092     02CE  09F0               	comf	___awmod@divisor,f
  2093     02CF  09F1               	comf	___awmod@divisor+1,f
  2094     02D0  0AF0               	incf	___awmod@divisor,f
  2095     02D1  1903               	skipnz
  2096     02D2  0AF1               	incf	___awmod@divisor+1,f
  2097     02D3                     l1313:
  2098     02D3  0870               	movf	___awmod@divisor,w
  2099     02D4  0471               	iorwf	___awmod@divisor+1,w
  2100     02D5  1903               	btfsc	3,2
  2101     02D6  2AD8               	goto	u801
  2102     02D7  2AD9               	goto	u800
  2103     02D8                     u801:
  2104     02D8  2B08               	goto	l1331
  2105     02D9                     u800:
  2106     02D9                     l1315:
  2107     02D9  01F5               	clrf	___awmod@counter
  2108     02DA  0AF5               	incf	___awmod@counter,f
  2109     02DB  2AE7               	goto	l1321
  2110     02DC                     l1317:
  2111     02DC  3001               	movlw	1
  2112     02DD                     u815:
  2113     02DD  1003               	clrc
  2114     02DE  0DF0               	rlf	___awmod@divisor,f
  2115     02DF  0DF1               	rlf	___awmod@divisor+1,f
  2116     02E0  3EFF               	addlw	-1
  2117     02E1  1D03               	skipz
  2118     02E2  2ADD               	goto	u815
  2119     02E3                     l1319:
  2120     02E3  3001               	movlw	1
  2121     02E4  00F4               	movwf	??___awmod
  2122     02E5  0874               	movf	??___awmod,w
  2123     02E6  07F5               	addwf	___awmod@counter,f
  2124     02E7                     l1321:
  2125     02E7  1FF1               	btfss	___awmod@divisor+1,7
  2126     02E8  2AEA               	goto	u821
  2127     02E9  2AEB               	goto	u820
  2128     02EA                     u821:
  2129     02EA  2ADC               	goto	l1317
  2130     02EB                     u820:
  2131     02EB                     l1323:
  2132     02EB  0871               	movf	___awmod@divisor+1,w
  2133     02EC  0273               	subwf	___awmod@dividend+1,w
  2134     02ED  1D03               	skipz
  2135     02EE  2AF1               	goto	u835
  2136     02EF  0870               	movf	___awmod@divisor,w
  2137     02F0  0272               	subwf	___awmod@dividend,w
  2138     02F1                     u835:
  2139     02F1  1C03               	skipc
  2140     02F2  2AF4               	goto	u831
  2141     02F3  2AF5               	goto	u830
  2142     02F4                     u831:
  2143     02F4  2AFB               	goto	l1327
  2144     02F5                     u830:
  2145     02F5                     l1325:
  2146     02F5  0870               	movf	___awmod@divisor,w
  2147     02F6  02F2               	subwf	___awmod@dividend,f
  2148     02F7  0871               	movf	___awmod@divisor+1,w
  2149     02F8  1C03               	skipc
  2150     02F9  03F3               	decf	___awmod@dividend+1,f
  2151     02FA  02F3               	subwf	___awmod@dividend+1,f
  2152     02FB                     l1327:
  2153     02FB  3001               	movlw	1
  2154     02FC                     u845:
  2155     02FC  1003               	clrc
  2156     02FD  0CF1               	rrf	___awmod@divisor+1,f
  2157     02FE  0CF0               	rrf	___awmod@divisor,f
  2158     02FF  3EFF               	addlw	-1
  2159     0300  1D03               	skipz
  2160     0301  2AFC               	goto	u845
  2161     0302                     l1329:
  2162     0302  3001               	movlw	1
  2163     0303  02F5               	subwf	___awmod@counter,f
  2164     0304  1D03               	btfss	3,2
  2165     0305  2B07               	goto	u851
  2166     0306  2B08               	goto	u850
  2167     0307                     u851:
  2168     0307  2AEB               	goto	l1323
  2169     0308                     u850:
  2170     0308                     l1331:
  2171     0308  0876               	movf	___awmod@sign,w
  2172     0309  1903               	btfsc	3,2
  2173     030A  2B0C               	goto	u861
  2174     030B  2B0D               	goto	u860
  2175     030C                     u861:
  2176     030C  2B12               	goto	l1335
  2177     030D                     u860:
  2178     030D                     l1333:
  2179     030D  09F2               	comf	___awmod@dividend,f
  2180     030E  09F3               	comf	___awmod@dividend+1,f
  2181     030F  0AF2               	incf	___awmod@dividend,f
  2182     0310  1903               	skipnz
  2183     0311  0AF3               	incf	___awmod@dividend+1,f
  2184     0312                     l1335:
  2185     0312  0873               	movf	___awmod@dividend+1,w
  2186     0313  00F1               	movwf	?___awmod+1
  2187     0314  0872               	movf	___awmod@dividend,w
  2188     0315  00F0               	movwf	?___awmod
  2189     0316                     l457:
  2190     0316  0008               	return
  2191     0317                     __end_of___awmod:
  2192                           
  2193                           	psect	text7
  2194     03DA                     __ptext7:	
  2195 ;; *************** function ___awdiv *****************
  2196 ;; Defined at:
  2197 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  divisor         2    0[COMMON] int 
  2200 ;;  dividend        2    2[COMMON] int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  quotient        2    7[COMMON] int 
  2203 ;;  sign            1    6[COMMON] unsigned char 
  2204 ;;  counter         1    5[COMMON] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  2    0[COMMON] int 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         4       0       0       0       0
  2215 ;;      Locals:         4       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0
  2217 ;;      Totals:         9       0       0       0       0
  2218 ;;Total ram usage:        9 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_decimal_to_bcd
  2224 ;;		_RTC_display
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228     03DA                     ___awdiv:	
  2229                           ;psect for function ___awdiv
  2230                           
  2231     03DA                     l1257:	
  2232                           ;incstack = 0
  2233                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2234                           
  2235     03DA  01F6               	clrf	___awdiv@sign
  2236     03DB                     l1259:
  2237     03DB  1FF1               	btfss	___awdiv@divisor+1,7
  2238     03DC  2BDE               	goto	u681
  2239     03DD  2BDF               	goto	u680
  2240     03DE                     u681:
  2241     03DE  2BE6               	goto	l1265
  2242     03DF                     u680:
  2243     03DF                     l1261:
  2244     03DF  09F0               	comf	___awdiv@divisor,f
  2245     03E0  09F1               	comf	___awdiv@divisor+1,f
  2246     03E1  0AF0               	incf	___awdiv@divisor,f
  2247     03E2  1903               	skipnz
  2248     03E3  0AF1               	incf	___awdiv@divisor+1,f
  2249     03E4                     l1263:
  2250     03E4  01F6               	clrf	___awdiv@sign
  2251     03E5  0AF6               	incf	___awdiv@sign,f
  2252     03E6                     l1265:
  2253     03E6  1FF3               	btfss	___awdiv@dividend+1,7
  2254     03E7  2BE9               	goto	u691
  2255     03E8  2BEA               	goto	u690
  2256     03E9                     u691:
  2257     03E9  2BF3               	goto	l1271
  2258     03EA                     u690:
  2259     03EA                     l1267:
  2260     03EA  09F2               	comf	___awdiv@dividend,f
  2261     03EB  09F3               	comf	___awdiv@dividend+1,f
  2262     03EC  0AF2               	incf	___awdiv@dividend,f
  2263     03ED  1903               	skipnz
  2264     03EE  0AF3               	incf	___awdiv@dividend+1,f
  2265     03EF                     l1269:
  2266     03EF  3001               	movlw	1
  2267     03F0  00F4               	movwf	??___awdiv
  2268     03F1  0874               	movf	??___awdiv,w
  2269     03F2  06F6               	xorwf	___awdiv@sign,f
  2270     03F3                     l1271:
  2271     03F3  01F7               	clrf	___awdiv@quotient
  2272     03F4  01F8               	clrf	___awdiv@quotient+1
  2273     03F5                     l1273:
  2274     03F5  0870               	movf	___awdiv@divisor,w
  2275     03F6  0471               	iorwf	___awdiv@divisor+1,w
  2276     03F7  1903               	btfsc	3,2
  2277     03F8  2BFA               	goto	u701
  2278     03F9  2BFB               	goto	u700
  2279     03FA                     u701:
  2280     03FA  2C32               	goto	l1293
  2281     03FB                     u700:
  2282     03FB                     l1275:
  2283     03FB  01F5               	clrf	___awdiv@counter
  2284     03FC  0AF5               	incf	___awdiv@counter,f
  2285     03FD  2C09               	goto	l1281
  2286     03FE                     l1277:
  2287     03FE  3001               	movlw	1
  2288     03FF                     u715:
  2289     03FF  1003               	clrc
  2290     0400  0DF0               	rlf	___awdiv@divisor,f
  2291     0401  0DF1               	rlf	___awdiv@divisor+1,f
  2292     0402  3EFF               	addlw	-1
  2293     0403  1D03               	skipz
  2294     0404  2BFF               	goto	u715
  2295     0405                     l1279:
  2296     0405  3001               	movlw	1
  2297     0406  00F4               	movwf	??___awdiv
  2298     0407  0874               	movf	??___awdiv,w
  2299     0408  07F5               	addwf	___awdiv@counter,f
  2300     0409                     l1281:
  2301     0409  1FF1               	btfss	___awdiv@divisor+1,7
  2302     040A  2C0C               	goto	u721
  2303     040B  2C0D               	goto	u720
  2304     040C                     u721:
  2305     040C  2BFE               	goto	l1277
  2306     040D                     u720:
  2307     040D                     l1283:
  2308     040D  3001               	movlw	1
  2309     040E                     u735:
  2310     040E  1003               	clrc
  2311     040F  0DF7               	rlf	___awdiv@quotient,f
  2312     0410  0DF8               	rlf	___awdiv@quotient+1,f
  2313     0411  3EFF               	addlw	-1
  2314     0412  1D03               	skipz
  2315     0413  2C0E               	goto	u735
  2316     0414  0871               	movf	___awdiv@divisor+1,w
  2317     0415  0273               	subwf	___awdiv@dividend+1,w
  2318     0416  1D03               	skipz
  2319     0417  2C1A               	goto	u745
  2320     0418  0870               	movf	___awdiv@divisor,w
  2321     0419  0272               	subwf	___awdiv@dividend,w
  2322     041A                     u745:
  2323     041A  1C03               	skipc
  2324     041B  2C1D               	goto	u741
  2325     041C  2C1E               	goto	u740
  2326     041D                     u741:
  2327     041D  2C25               	goto	l1289
  2328     041E                     u740:
  2329     041E                     l1285:
  2330     041E  0870               	movf	___awdiv@divisor,w
  2331     041F  02F2               	subwf	___awdiv@dividend,f
  2332     0420  0871               	movf	___awdiv@divisor+1,w
  2333     0421  1C03               	skipc
  2334     0422  03F3               	decf	___awdiv@dividend+1,f
  2335     0423  02F3               	subwf	___awdiv@dividend+1,f
  2336     0424                     l1287:
  2337     0424  1477               	bsf	___awdiv@quotient,0
  2338     0425                     l1289:
  2339     0425  3001               	movlw	1
  2340     0426                     u755:
  2341     0426  1003               	clrc
  2342     0427  0CF1               	rrf	___awdiv@divisor+1,f
  2343     0428  0CF0               	rrf	___awdiv@divisor,f
  2344     0429  3EFF               	addlw	-1
  2345     042A  1D03               	skipz
  2346     042B  2C26               	goto	u755
  2347     042C                     l1291:
  2348     042C  3001               	movlw	1
  2349     042D  02F5               	subwf	___awdiv@counter,f
  2350     042E  1D03               	btfss	3,2
  2351     042F  2C31               	goto	u761
  2352     0430  2C32               	goto	u760
  2353     0431                     u761:
  2354     0431  2C0D               	goto	l1283
  2355     0432                     u760:
  2356     0432                     l1293:
  2357     0432  0876               	movf	___awdiv@sign,w
  2358     0433  1903               	btfsc	3,2
  2359     0434  2C36               	goto	u771
  2360     0435  2C37               	goto	u770
  2361     0436                     u771:
  2362     0436  2C3C               	goto	l1297
  2363     0437                     u770:
  2364     0437                     l1295:
  2365     0437  09F7               	comf	___awdiv@quotient,f
  2366     0438  09F8               	comf	___awdiv@quotient+1,f
  2367     0439  0AF7               	incf	___awdiv@quotient,f
  2368     043A  1903               	skipnz
  2369     043B  0AF8               	incf	___awdiv@quotient+1,f
  2370     043C                     l1297:
  2371     043C  0878               	movf	___awdiv@quotient+1,w
  2372     043D  00F1               	movwf	?___awdiv+1
  2373     043E  0877               	movf	___awdiv@quotient,w
  2374     043F  00F0               	movwf	?___awdiv
  2375     0440                     l444:
  2376     0440  0008               	return
  2377     0441                     __end_of___awdiv:
  2378                           
  2379                           	psect	text8
  2380     0171                     __ptext8:	
  2381 ;; *************** function _Lcd_Write_String *****************
  2382 ;; Defined at:
  2383 ;;		line 98 in file "LCD.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  a               1    wreg     PTR unsigned char 
  2386 ;;		 -> RTC_display@Date(17), RTC_display@Time(15), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  a               1    8[COMMON] PTR unsigned char 
  2389 ;;		 -> RTC_display@Date(17), RTC_display@Time(15), 
  2390 ;;  i               2    6[COMMON] int 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         3       0       0       0       0
  2402 ;;      Temps:          1       0       0       0       0
  2403 ;;      Totals:         4       0       0       0       0
  2404 ;;Total ram usage:        4 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 2
  2407 ;; This function calls:
  2408 ;;		_Lcd_Write_Char
  2409 ;; This function is called by:
  2410 ;;		_RTC_display
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414     0171                     _Lcd_Write_String:	
  2415                           ;psect for function _Lcd_Write_String
  2416                           
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2420                           ;Lcd_Write_String@a stored from wreg
  2421     0171  00F8               	movwf	Lcd_Write_String@a
  2422     0172                     l1221:
  2423                           
  2424                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2425     0172  01F6               	clrf	Lcd_Write_String@i
  2426     0173  01F7               	clrf	Lcd_Write_String@i+1
  2427     0174  2986               	goto	l1227
  2428     0175                     l1223:
  2429                           
  2430                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2431     0175  0876               	movf	Lcd_Write_String@i,w
  2432     0176  0778               	addwf	Lcd_Write_String@a,w
  2433     0177  00F5               	movwf	??_Lcd_Write_String
  2434     0178  0875               	movf	??_Lcd_Write_String,w
  2435     0179  0084               	movwf	4
  2436     017A  0800               	movf	0,w
  2437     017B  120A  118A  2243  120A  118A  	fcall	_Lcd_Write_Char
  2438     0180                     l1225:
  2439     0180  3001               	movlw	1
  2440     0181  07F6               	addwf	Lcd_Write_String@i,f
  2441     0182  1803               	skipnc
  2442     0183  0AF7               	incf	Lcd_Write_String@i+1,f
  2443     0184  3000               	movlw	0
  2444     0185  07F7               	addwf	Lcd_Write_String@i+1,f
  2445     0186                     l1227:
  2446     0186  0876               	movf	Lcd_Write_String@i,w
  2447     0187  0778               	addwf	Lcd_Write_String@a,w
  2448     0188  00F5               	movwf	??_Lcd_Write_String
  2449     0189  0875               	movf	??_Lcd_Write_String,w
  2450     018A  0084               	movwf	4
  2451     018B  1383               	bcf	3,7	;select IRP bank0
  2452     018C  0800               	movf	0,w
  2453     018D  1D03               	btfss	3,2
  2454     018E  2990               	goto	u591
  2455     018F  2991               	goto	u590
  2456     0190                     u591:
  2457     0190  2975               	goto	l1223
  2458     0191                     u590:
  2459     0191                     l104:
  2460     0191  0008               	return
  2461     0192                     __end_of_Lcd_Write_String:
  2462                           
  2463                           	psect	text9
  2464     0243                     __ptext9:	
  2465 ;; *************** function _Lcd_Write_Char *****************
  2466 ;; Defined at:
  2467 ;;		line 83 in file "LCD.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  a               1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  a               1    4[COMMON] unsigned char 
  2472 ;;  y               1    3[COMMON] unsigned char 
  2473 ;;  temp            1    2[COMMON] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0, pclath, cstack
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         0       0       0       0       0
  2484 ;;      Locals:         3       0       0       0       0
  2485 ;;      Temps:          1       0       0       0       0
  2486 ;;      Totals:         4       0       0       0       0
  2487 ;;Total ram usage:        4 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; Hardware stack levels required when called: 1
  2490 ;; This function calls:
  2491 ;;		_Lcd_Port
  2492 ;; This function is called by:
  2493 ;;		_Lcd_Write_String
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497     0243                     _Lcd_Write_Char:	
  2498                           ;psect for function _Lcd_Write_Char
  2499                           
  2500                           
  2501                           ;incstack = 0
  2502                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2503                           ;Lcd_Write_Char@a stored from wreg
  2504     0243  00F4               	movwf	Lcd_Write_Char@a
  2505     0244                     l1163:
  2506                           
  2507                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2508     0244  0874               	movf	Lcd_Write_Char@a,w
  2509     0245  390F               	andlw	15
  2510     0246  00F2               	movwf	Lcd_Write_Char@temp
  2511                           
  2512                           ;LCD.c: 86:     y = a & 0xF0;
  2513     0247  0874               	movf	Lcd_Write_Char@a,w
  2514     0248  39F0               	andlw	240
  2515     0249  00F3               	movwf	Lcd_Write_Char@y
  2516     024A                     l1165:
  2517                           
  2518                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2519     024A  1283               	bcf	3,5	;RP0=0, select bank0
  2520     024B  1303               	bcf	3,6	;RP1=0, select bank0
  2521     024C  1707               	bsf	7,6	;volatile
  2522     024D                     l1167:
  2523                           
  2524                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2525     024D  0873               	movf	Lcd_Write_Char@y,w
  2526     024E  00F1               	movwf	??_Lcd_Write_Char
  2527     024F  3004               	movlw	4
  2528     0250                     u505:
  2529     0250  1003               	clrc
  2530     0251  0CF1               	rrf	??_Lcd_Write_Char,f
  2531     0252  3EFF               	addlw	-1
  2532     0253  1D03               	skipz
  2533     0254  2A50               	goto	u505
  2534     0255  0871               	movf	??_Lcd_Write_Char,w
  2535     0256  120A  118A  2192  120A  118A  	fcall	_Lcd_Port
  2536     025B                     l1169:
  2537                           
  2538                           ;LCD.c: 89:     RC7 = 1;
  2539     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2540     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2541     025D  1787               	bsf	7,7	;volatile
  2542     025E                     l1171:
  2543                           
  2544                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2545     025E  301A               	movlw	26
  2546     025F  00F1               	movwf	??_Lcd_Write_Char
  2547     0260                     u957:
  2548     0260  0BF1               	decfsz	??_Lcd_Write_Char,f
  2549     0261  2A60               	goto	u957
  2550     0262  0000               	nop
  2551     0263                     l1173:
  2552                           
  2553                           ;LCD.c: 91:     RC7 = 0;
  2554     0263  1283               	bcf	3,5	;RP0=0, select bank0
  2555     0264  1303               	bcf	3,6	;RP1=0, select bank0
  2556     0265  1387               	bcf	7,7	;volatile
  2557     0266                     l1175:
  2558                           
  2559                           ;LCD.c: 92:     Lcd_Port(temp);
  2560     0266  0872               	movf	Lcd_Write_Char@temp,w
  2561     0267  120A  118A  2192  120A  118A  	fcall	_Lcd_Port
  2562     026C                     l1177:
  2563                           
  2564                           ;LCD.c: 93:     RC7 = 1;
  2565     026C  1283               	bcf	3,5	;RP0=0, select bank0
  2566     026D  1303               	bcf	3,6	;RP1=0, select bank0
  2567     026E  1787               	bsf	7,7	;volatile
  2568     026F                     l1179:
  2569                           
  2570                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2571     026F  301A               	movlw	26
  2572     0270  00F1               	movwf	??_Lcd_Write_Char
  2573     0271                     u967:
  2574     0271  0BF1               	decfsz	??_Lcd_Write_Char,f
  2575     0272  2A71               	goto	u967
  2576     0273  0000               	nop
  2577     0274                     l1181:
  2578                           
  2579                           ;LCD.c: 95:     RC7 = 0;
  2580     0274  1283               	bcf	3,5	;RP0=0, select bank0
  2581     0275  1303               	bcf	3,6	;RP1=0, select bank0
  2582     0276  1387               	bcf	7,7	;volatile
  2583     0277                     l98:
  2584     0277  0008               	return
  2585     0278                     __end_of_Lcd_Write_Char:
  2586                           
  2587                           	psect	text10
  2588     0278                     __ptext10:	
  2589 ;; *************** function _Lcd_Set_Cursor *****************
  2590 ;; Defined at:
  2591 ;;		line 48 in file "LCD.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  a               1    wreg     unsigned char 
  2594 ;;  b               1    4[COMMON] unsigned char 
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  a               1    6[COMMON] unsigned char 
  2597 ;;  temp            1    9[COMMON] unsigned char 
  2598 ;;  y               1    8[COMMON] unsigned char 
  2599 ;;  z               1    7[COMMON] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2609 ;;      Params:         1       0       0       0       0
  2610 ;;      Locals:         4       0       0       0       0
  2611 ;;      Temps:          1       0       0       0       0
  2612 ;;      Totals:         6       0       0       0       0
  2613 ;;Total ram usage:        6 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 2
  2616 ;; This function calls:
  2617 ;;		_Lcd_Cmd
  2618 ;; This function is called by:
  2619 ;;		_RTC_display
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     0278                     _Lcd_Set_Cursor:	
  2624                           ;psect for function _Lcd_Set_Cursor
  2625                           
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2629                           ;Lcd_Set_Cursor@a stored from wreg
  2630     0278  00F6               	movwf	Lcd_Set_Cursor@a
  2631     0279                     l1201:
  2632                           
  2633                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2634     0279  0376               	decf	Lcd_Set_Cursor@a,w
  2635     027A  1D03               	btfss	3,2
  2636     027B  2A7D               	goto	u551
  2637     027C  2A7E               	goto	u550
  2638     027D                     u551:
  2639     027D  2A9B               	goto	l1211
  2640     027E                     u550:
  2641     027E                     l1203:
  2642                           
  2643                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2644     027E  0874               	movf	Lcd_Set_Cursor@b,w
  2645     027F  3E7F               	addlw	127
  2646     0280  00F9               	movwf	Lcd_Set_Cursor@temp
  2647                           
  2648                           ;LCD.c: 52:         z = temp >> 4;
  2649     0281  0879               	movf	Lcd_Set_Cursor@temp,w
  2650     0282  00F5               	movwf	??_Lcd_Set_Cursor
  2651     0283  3004               	movlw	4
  2652     0284                     u565:
  2653     0284  1003               	clrc
  2654     0285  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2655     0286  3EFF               	addlw	-1
  2656     0287  1D03               	skipz
  2657     0288  2A84               	goto	u565
  2658     0289  0875               	movf	??_Lcd_Set_Cursor,w
  2659     028A  00F7               	movwf	Lcd_Set_Cursor@z
  2660     028B                     l1205:
  2661                           
  2662                           ;LCD.c: 53:         y = temp & 0x0F;
  2663     028B  0879               	movf	Lcd_Set_Cursor@temp,w
  2664     028C  390F               	andlw	15
  2665     028D  00F8               	movwf	Lcd_Set_Cursor@y
  2666     028E                     l1207:
  2667                           
  2668                           ;LCD.c: 54:         Lcd_Cmd(z);
  2669     028E  0877               	movf	Lcd_Set_Cursor@z,w
  2670     028F  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2671     0294                     l1209:
  2672                           
  2673                           ;LCD.c: 55:         Lcd_Cmd(y);
  2674     0294  0878               	movf	Lcd_Set_Cursor@y,w
  2675     0295  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2676                           
  2677                           ;LCD.c: 56:     } else if (a == 2) {
  2678     029A  2ABD               	goto	l92
  2679     029B                     l1211:
  2680     029B  3002               	movlw	2
  2681     029C  0676               	xorwf	Lcd_Set_Cursor@a,w
  2682     029D  1D03               	btfss	3,2
  2683     029E  2AA0               	goto	u571
  2684     029F  2AA1               	goto	u570
  2685     02A0                     u571:
  2686     02A0  2ABD               	goto	l92
  2687     02A1                     u570:
  2688     02A1                     l1213:
  2689                           
  2690                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2691     02A1  0874               	movf	Lcd_Set_Cursor@b,w
  2692     02A2  3EBF               	addlw	191
  2693     02A3  00F9               	movwf	Lcd_Set_Cursor@temp
  2694                           
  2695                           ;LCD.c: 58:         z = temp >> 4;
  2696     02A4  0879               	movf	Lcd_Set_Cursor@temp,w
  2697     02A5  00F5               	movwf	??_Lcd_Set_Cursor
  2698     02A6  3004               	movlw	4
  2699     02A7                     u585:
  2700     02A7  1003               	clrc
  2701     02A8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2702     02A9  3EFF               	addlw	-1
  2703     02AA  1D03               	skipz
  2704     02AB  2AA7               	goto	u585
  2705     02AC  0875               	movf	??_Lcd_Set_Cursor,w
  2706     02AD  00F7               	movwf	Lcd_Set_Cursor@z
  2707     02AE                     l1215:
  2708                           
  2709                           ;LCD.c: 59:         y = temp & 0x0F;
  2710     02AE  0879               	movf	Lcd_Set_Cursor@temp,w
  2711     02AF  390F               	andlw	15
  2712     02B0  00F8               	movwf	Lcd_Set_Cursor@y
  2713     02B1                     l1217:
  2714                           
  2715                           ;LCD.c: 60:         Lcd_Cmd(z);
  2716     02B1  0877               	movf	Lcd_Set_Cursor@z,w
  2717     02B2  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2718     02B7                     l1219:
  2719                           
  2720                           ;LCD.c: 61:         Lcd_Cmd(y);
  2721     02B7  0878               	movf	Lcd_Set_Cursor@y,w
  2722     02B8  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2723     02BD                     l92:
  2724     02BD  0008               	return
  2725     02BE                     __end_of_Lcd_Set_Cursor:
  2726                           
  2727                           	psect	text11
  2728     0317                     __ptext11:	
  2729 ;; *************** function _Lcd_Init *****************
  2730 ;; Defined at:
  2731 ;;		line 65 in file "LCD.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0
  2747 ;;      Temps:          2       0       0       0       0
  2748 ;;      Totals:         2       0       0       0       0
  2749 ;;Total ram usage:        2 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 2
  2752 ;; This function calls:
  2753 ;;		_Lcd_Cmd
  2754 ;;		_Lcd_Port
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     0317                     _Lcd_Init:	
  2761                           ;psect for function _Lcd_Init
  2762                           
  2763     0317                     l1371:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2766                           
  2767                           
  2768                           ;LCD.c: 66:     Lcd_Port(0x00);
  2769     0317  3000               	movlw	0
  2770     0318  120A  118A  2192  120A  118A  	fcall	_Lcd_Port
  2771     031D                     l1373:
  2772                           
  2773                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2774     031D  3034               	movlw	52
  2775     031E  00F5               	movwf	??_Lcd_Init+1
  2776     031F  30F1               	movlw	241
  2777     0320  00F4               	movwf	??_Lcd_Init
  2778     0321                     u977:
  2779     0321  0BF4               	decfsz	??_Lcd_Init,f
  2780     0322  2B21               	goto	u977
  2781     0323  0BF5               	decfsz	??_Lcd_Init+1,f
  2782     0324  2B21               	goto	u977
  2783     0325  2B26               	nop2
  2784     0326                     l1375:
  2785                           
  2786                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2787     0326  3003               	movlw	3
  2788     0327  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2789                           
  2790                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2791     032C  300D               	movlw	13
  2792     032D  00F5               	movwf	??_Lcd_Init+1
  2793     032E  30FB               	movlw	251
  2794     032F  00F4               	movwf	??_Lcd_Init
  2795     0330                     u987:
  2796     0330  0BF4               	decfsz	??_Lcd_Init,f
  2797     0331  2B30               	goto	u987
  2798     0332  0BF5               	decfsz	??_Lcd_Init+1,f
  2799     0333  2B30               	goto	u987
  2800     0334  2B35               	nop2
  2801     0335                     l1377:
  2802                           
  2803                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2804     0335  3003               	movlw	3
  2805     0336  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2806     033B                     l1379:
  2807                           
  2808                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2809     033B  301D               	movlw	29
  2810     033C  00F5               	movwf	??_Lcd_Init+1
  2811     033D  3091               	movlw	145
  2812     033E  00F4               	movwf	??_Lcd_Init
  2813     033F                     u997:
  2814     033F  0BF4               	decfsz	??_Lcd_Init,f
  2815     0340  2B3F               	goto	u997
  2816     0341  0BF5               	decfsz	??_Lcd_Init+1,f
  2817     0342  2B3F               	goto	u997
  2818                           
  2819                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2820     0343  3003               	movlw	3
  2821     0344  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2822                           
  2823                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2824     0349  3002               	movlw	2
  2825     034A  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2826                           
  2827                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2828     034F  3002               	movlw	2
  2829     0350  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2830                           
  2831                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2832     0355  3008               	movlw	8
  2833     0356  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2834                           
  2835                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2836     035B  3000               	movlw	0
  2837     035C  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2838                           
  2839                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2840     0361  300C               	movlw	12
  2841     0362  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2842                           
  2843                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2844     0367  3000               	movlw	0
  2845     0368  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2846                           
  2847                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2848     036D  3006               	movlw	6
  2849     036E  120A  118A  211D  120A  118A  	fcall	_Lcd_Cmd
  2850     0373                     l95:
  2851     0373  0008               	return
  2852     0374                     __end_of_Lcd_Init:
  2853                           
  2854                           	psect	text12
  2855     011D                     __ptext12:	
  2856 ;; *************** function _Lcd_Cmd *****************
  2857 ;; Defined at:
  2858 ;;		line 35 in file "LCD.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  a               1    wreg     unsigned char 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  a               1    3[COMMON] unsigned char 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  1    wreg      void 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0, pclath, cstack
  2867 ;; Tracked objects:
  2868 ;;		On entry : 0/0
  2869 ;;		On exit  : 0/0
  2870 ;;		Unchanged: 0/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         0       0       0       0       0
  2873 ;;      Locals:         1       0       0       0       0
  2874 ;;      Temps:          2       0       0       0       0
  2875 ;;      Totals:         3       0       0       0       0
  2876 ;;Total ram usage:        3 bytes
  2877 ;; Hardware stack levels used: 1
  2878 ;; Hardware stack levels required when called: 1
  2879 ;; This function calls:
  2880 ;;		_Lcd_Port
  2881 ;; This function is called by:
  2882 ;;		_Lcd_Set_Cursor
  2883 ;;		_Lcd_Init
  2884 ;;		_Lcd_Clear
  2885 ;;		_Lcd_Shift_Right
  2886 ;;		_Lcd_Shift_Left
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     011D                     _Lcd_Cmd:	
  2891                           ;psect for function _Lcd_Cmd
  2892                           
  2893                           
  2894                           ;incstack = 0
  2895                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2896                           ;Lcd_Cmd@a stored from wreg
  2897     011D  00F3               	movwf	Lcd_Cmd@a
  2898     011E                     l1153:
  2899                           
  2900                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2901     011E  1283               	bcf	3,5	;RP0=0, select bank0
  2902     011F  1303               	bcf	3,6	;RP1=0, select bank0
  2903     0120  1307               	bcf	7,6	;volatile
  2904     0121                     l1155:
  2905                           
  2906                           ;LCD.c: 37:     Lcd_Port(a);
  2907     0121  0873               	movf	Lcd_Cmd@a,w
  2908     0122  120A  118A  2192  120A  118A  	fcall	_Lcd_Port
  2909     0127                     l1157:
  2910                           
  2911                           ;LCD.c: 38:     RC7 = 1;
  2912     0127  1283               	bcf	3,5	;RP0=0, select bank0
  2913     0128  1303               	bcf	3,6	;RP1=0, select bank0
  2914     0129  1787               	bsf	7,7	;volatile
  2915     012A                     l1159:
  2916                           
  2917                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2918     012A  300B               	movlw	11
  2919     012B  00F2               	movwf	??_Lcd_Cmd+1
  2920     012C  3062               	movlw	98
  2921     012D  00F1               	movwf	??_Lcd_Cmd
  2922     012E                     u1007:
  2923     012E  0BF1               	decfsz	??_Lcd_Cmd,f
  2924     012F  292E               	goto	u1007
  2925     0130  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2926     0131  292E               	goto	u1007
  2927     0132  0000               	nop
  2928     0133                     l1161:
  2929                           
  2930                           ;LCD.c: 40:     RC7 = 0;
  2931     0133  1283               	bcf	3,5	;RP0=0, select bank0
  2932     0134  1303               	bcf	3,6	;RP1=0, select bank0
  2933     0135  1387               	bcf	7,7	;volatile
  2934     0136                     l83:
  2935     0136  0008               	return
  2936     0137                     __end_of_Lcd_Cmd:
  2937                           
  2938                           	psect	text13
  2939     0192                     __ptext13:	
  2940 ;; *************** function _Lcd_Port *****************
  2941 ;; Defined at:
  2942 ;;		line 13 in file "LCD.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  a               1    wreg     unsigned char 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  a               1    0[COMMON] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         1       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0
  2959 ;;      Totals:         1       0       0       0       0
  2960 ;;Total ram usage:        1 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_Lcd_Cmd
  2966 ;;		_Lcd_Init
  2967 ;;		_Lcd_Write_Char
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971     0192                     _Lcd_Port:	
  2972                           ;psect for function _Lcd_Port
  2973                           
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _Lcd_Port: [wreg]
  2977                           ;Lcd_Port@a stored from wreg
  2978     0192  00F0               	movwf	Lcd_Port@a
  2979     0193                     l1143:
  2980                           
  2981                           ;LCD.c: 14:     if (a & 1)
  2982     0193  1C70               	btfss	Lcd_Port@a,0
  2983     0194  2996               	goto	u461
  2984     0195  2997               	goto	u460
  2985     0196                     u461:
  2986     0196  299B               	goto	l72
  2987     0197                     u460:
  2988     0197                     l1145:
  2989                           
  2990                           ;LCD.c: 15:         RD4 = 1;
  2991     0197  1283               	bcf	3,5	;RP0=0, select bank0
  2992     0198  1303               	bcf	3,6	;RP1=0, select bank0
  2993     0199  1608               	bsf	8,4	;volatile
  2994     019A  299E               	goto	l73
  2995     019B                     l72:	
  2996                           ;LCD.c: 16:     else
  2997                           
  2998                           
  2999                           ;LCD.c: 17:         RD4 = 0;
  3000     019B  1283               	bcf	3,5	;RP0=0, select bank0
  3001     019C  1303               	bcf	3,6	;RP1=0, select bank0
  3002     019D  1208               	bcf	8,4	;volatile
  3003     019E                     l73:
  3004                           
  3005                           ;LCD.c: 19:     if (a & 2)
  3006     019E  1CF0               	btfss	Lcd_Port@a,1
  3007     019F  29A1               	goto	u471
  3008     01A0  29A2               	goto	u470
  3009     01A1                     u471:
  3010     01A1  29A4               	goto	l74
  3011     01A2                     u470:
  3012     01A2                     l1147:
  3013                           
  3014                           ;LCD.c: 20:         RD5 = 1;
  3015     01A2  1688               	bsf	8,5	;volatile
  3016     01A3  29A5               	goto	l75
  3017     01A4                     l74:	
  3018                           ;LCD.c: 21:     else
  3019                           
  3020                           
  3021                           ;LCD.c: 22:         RD5 = 0;
  3022     01A4  1288               	bcf	8,5	;volatile
  3023     01A5                     l75:
  3024                           
  3025                           ;LCD.c: 24:     if (a & 4)
  3026     01A5  1D70               	btfss	Lcd_Port@a,2
  3027     01A6  29A8               	goto	u481
  3028     01A7  29A9               	goto	u480
  3029     01A8                     u481:
  3030     01A8  29AB               	goto	l76
  3031     01A9                     u480:
  3032     01A9                     l1149:
  3033                           
  3034                           ;LCD.c: 25:         RD6 = 1;
  3035     01A9  1708               	bsf	8,6	;volatile
  3036     01AA  29AC               	goto	l77
  3037     01AB                     l76:	
  3038                           ;LCD.c: 26:     else
  3039                           
  3040                           
  3041                           ;LCD.c: 27:         RD6 = 0;
  3042     01AB  1308               	bcf	8,6	;volatile
  3043     01AC                     l77:
  3044                           
  3045                           ;LCD.c: 29:     if (a & 8)
  3046     01AC  1DF0               	btfss	Lcd_Port@a,3
  3047     01AD  29AF               	goto	u491
  3048     01AE  29B0               	goto	u490
  3049     01AF                     u491:
  3050     01AF  29B2               	goto	l78
  3051     01B0                     u490:
  3052     01B0                     l1151:
  3053                           
  3054                           ;LCD.c: 30:         RD7 = 1;
  3055     01B0  1788               	bsf	8,7	;volatile
  3056     01B1  29B3               	goto	l80
  3057     01B2                     l78:	
  3058                           ;LCD.c: 31:     else
  3059                           
  3060                           
  3061                           ;LCD.c: 32:         RD7 = 0;
  3062     01B2  1388               	bcf	8,7	;volatile
  3063     01B3                     l80:
  3064     01B3  0008               	return
  3065     01B4                     __end_of_Lcd_Port:
  3066                           
  3067                           	psect	text14
  3068     00C8                     __ptext14:	
  3069 ;; *************** function _I2C_Master_Write *****************
  3070 ;; Defined at:
  3071 ;;		line 65 in file "I2C.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  d               2    0[COMMON] unsigned int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         2       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         2       0       0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		_I2C_Master_Wait
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099     00C8                     _I2C_Master_Write:	
  3100                           ;psect for function _I2C_Master_Write
  3101                           
  3102     00C8                     l1351:	
  3103                           ;incstack = 0
  3104                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3105                           
  3106                           
  3107                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3108     00C8  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3109     00CD                     l1353:
  3110                           
  3111                           ;I2C.c: 68:     SSPBUF = d;
  3112     00CD  0870               	movf	I2C_Master_Write@d,w
  3113     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  3114     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  3115     00D0  0093               	movwf	19	;volatile
  3116     00D1                     l47:
  3117     00D1  0008               	return
  3118     00D2                     __end_of_I2C_Master_Write:
  3119                           
  3120                           	psect	text15
  3121     00BF                     __ptext15:	
  3122 ;; *************** function _I2C_Master_Stop *****************
  3123 ;; Defined at:
  3124 ;;		line 55 in file "I2C.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 1
  3145 ;; This function calls:
  3146 ;;		_I2C_Master_Wait
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152     00BF                     _I2C_Master_Stop:	
  3153                           ;psect for function _I2C_Master_Stop
  3154                           
  3155     00BF                     l1347:	
  3156                           ;incstack = 0
  3157                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3158                           
  3159                           
  3160                           ;I2C.c: 57:     I2C_Master_Wait();
  3161     00BF  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3162     00C4                     l1349:
  3163                           
  3164                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3165     00C4  1683               	bsf	3,5	;RP0=1, select bank1
  3166     00C5  1303               	bcf	3,6	;RP1=0, select bank1
  3167     00C6  1511               	bsf	17,2	;volatile
  3168     00C7                     l44:
  3169     00C7  0008               	return
  3170     00C8                     __end_of_I2C_Master_Stop:
  3171                           
  3172                           	psect	text16
  3173     00B6                     __ptext16:	
  3174 ;; *************** function _I2C_Master_Start *****************
  3175 ;; Defined at:
  3176 ;;		line 39 in file "I2C.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  1    wreg      void 
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0, pclath, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3190 ;;      Params:         0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 1
  3197 ;; This function calls:
  3198 ;;		_I2C_Master_Wait
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204     00B6                     _I2C_Master_Start:	
  3205                           ;psect for function _I2C_Master_Start
  3206                           
  3207     00B6                     l1339:	
  3208                           ;incstack = 0
  3209                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3210                           
  3211                           
  3212                           ;I2C.c: 41:     I2C_Master_Wait();
  3213     00B6  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3214     00BB                     l1341:
  3215                           
  3216                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3217     00BB  1683               	bsf	3,5	;RP0=1, select bank1
  3218     00BC  1303               	bcf	3,6	;RP1=0, select bank1
  3219     00BD  1411               	bsf	17,0	;volatile
  3220     00BE                     l38:
  3221     00BE  0008               	return
  3222     00BF                     __end_of_I2C_Master_Start:
  3223                           
  3224                           	psect	text17
  3225     00AD                     __ptext17:	
  3226 ;; *************** function _I2C_Master_RepeatedStart *****************
  3227 ;; Defined at:
  3228 ;;		line 47 in file "I2C.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, pclath, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 1
  3249 ;; This function calls:
  3250 ;;		_I2C_Master_Wait
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256     00AD                     _I2C_Master_RepeatedStart:	
  3257                           ;psect for function _I2C_Master_RepeatedStart
  3258                           
  3259     00AD                     l1343:	
  3260                           ;incstack = 0
  3261                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3262                           
  3263                           
  3264                           ;I2C.c: 49:     I2C_Master_Wait();
  3265     00AD  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3266     00B2                     l1345:
  3267                           
  3268                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3269     00B2  1683               	bsf	3,5	;RP0=1, select bank1
  3270     00B3  1303               	bcf	3,6	;RP1=0, select bank1
  3271     00B4  1491               	bsf	17,1	;volatile
  3272     00B5                     l41:
  3273     00B5  0008               	return
  3274     00B6                     __end_of_I2C_Master_RepeatedStart:
  3275                           
  3276                           	psect	text18
  3277     01B4                     __ptext18:	
  3278 ;; *************** function _I2C_Master_Read *****************
  3279 ;; Defined at:
  3280 ;;		line 74 in file "I2C.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  a               2    0[COMMON] unsigned short 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  temp            2    4[COMMON] unsigned short 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    0[COMMON] unsigned short 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         2       0       0       0       0
  3295 ;;      Locals:         2       0       0       0       0
  3296 ;;      Temps:          2       0       0       0       0
  3297 ;;      Totals:         6       0       0       0       0
  3298 ;;Total ram usage:        6 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 1
  3301 ;; This function calls:
  3302 ;;		_I2C_Master_Wait
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308     01B4                     _I2C_Master_Read:	
  3309                           ;psect for function _I2C_Master_Read
  3310                           
  3311     01B4                     l1355:	
  3312                           ;incstack = 0
  3313                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3314                           
  3315                           
  3316                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3317     01B4  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3318     01B9                     l1357:
  3319                           
  3320                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3321     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  3322     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  3323     01BB  1591               	bsf	17,3	;volatile
  3324                           
  3325                           ;I2C.c: 79:     I2C_Master_Wait();
  3326     01BC  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3327     01C1                     l1359:
  3328                           
  3329                           ;I2C.c: 80:     temp = SSPBUF;
  3330     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3331     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3332     01C3  0813               	movf	19,w	;volatile
  3333     01C4  00F2               	movwf	??_I2C_Master_Read
  3334     01C5  01F3               	clrf	??_I2C_Master_Read+1
  3335     01C6  0872               	movf	??_I2C_Master_Read,w
  3336     01C7  00F4               	movwf	I2C_Master_Read@temp
  3337     01C8  0873               	movf	??_I2C_Master_Read+1,w
  3338     01C9  00F5               	movwf	I2C_Master_Read@temp+1
  3339     01CA                     l1361:
  3340                           
  3341                           ;I2C.c: 81:     I2C_Master_Wait();
  3342     01CA  120A  118A  20D2  120A  118A  	fcall	_I2C_Master_Wait
  3343     01CF                     l1363:
  3344                           
  3345                           ;I2C.c: 82:     if(a == 1){
  3346     01CF  0370               	decf	I2C_Master_Read@a,w
  3347     01D0  0471               	iorwf	I2C_Master_Read@a+1,w
  3348     01D1  1D03               	btfss	3,2
  3349     01D2  29D4               	goto	u871
  3350     01D3  29D5               	goto	u870
  3351     01D4                     u871:
  3352     01D4  29D9               	goto	l50
  3353     01D5                     u870:
  3354     01D5                     l1365:
  3355                           
  3356                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3357     01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3358     01D6  1303               	bcf	3,6	;RP1=0, select bank1
  3359     01D7  1291               	bcf	17,5	;volatile
  3360                           
  3361                           ;I2C.c: 84:     }else{
  3362     01D8  29DC               	goto	l51
  3363     01D9                     l50:
  3364                           
  3365                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3366     01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3367     01DA  1303               	bcf	3,6	;RP1=0, select bank1
  3368     01DB  1691               	bsf	17,5	;volatile
  3369     01DC                     l51:	
  3370                           ;I2C.c: 86:     }
  3371                           
  3372                           
  3373                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3374     01DC  1611               	bsf	17,4	;volatile
  3375     01DD                     l1367:
  3376                           
  3377                           ;I2C.c: 88:     return temp;
  3378     01DD  0875               	movf	I2C_Master_Read@temp+1,w
  3379     01DE  00F1               	movwf	?_I2C_Master_Read+1
  3380     01DF  0874               	movf	I2C_Master_Read@temp,w
  3381     01E0  00F0               	movwf	?_I2C_Master_Read
  3382     01E1                     l52:
  3383     01E1  0008               	return
  3384     01E2                     __end_of_I2C_Master_Read:
  3385                           
  3386                           	psect	text19
  3387     00D2                     __ptext19:	
  3388 ;; *************** function _I2C_Master_Wait *****************
  3389 ;; Defined at:
  3390 ;;		line 32 in file "I2C.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3404 ;;      Params:         0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0
  3406 ;;      Temps:          0       0       0       0       0
  3407 ;;      Totals:         0       0       0       0       0
  3408 ;;Total ram usage:        0 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_I2C_Master_Start
  3414 ;;		_I2C_Master_RepeatedStart
  3415 ;;		_I2C_Master_Stop
  3416 ;;		_I2C_Master_Write
  3417 ;;		_I2C_Master_Read
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421     00D2                     _I2C_Master_Wait:	
  3422                           ;psect for function _I2C_Master_Wait
  3423                           
  3424     00D2                     l1197:	
  3425                           ;incstack = 0
  3426                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3427                           
  3428     00D2                     l32:	
  3429                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3430                           
  3431     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  3432     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  3433     00D4  1914               	btfsc	20,2	;volatile
  3434     00D5  28D7               	goto	u531
  3435     00D6  28D8               	goto	u530
  3436     00D7                     u531:
  3437     00D7  28D2               	goto	l32
  3438     00D8                     u530:
  3439     00D8                     l1199:
  3440     00D8  0811               	movf	17,w	;volatile
  3441     00D9  391F               	andlw	31
  3442     00DA  1D03               	btfss	3,2
  3443     00DB  28DD               	goto	u541
  3444     00DC  28DE               	goto	u540
  3445     00DD                     u541:
  3446     00DD  28D2               	goto	l32
  3447     00DE                     u540:
  3448     00DE                     l35:
  3449     00DE  0008               	return
  3450     00DF                     __end_of_I2C_Master_Wait:
  3451                           
  3452                           	psect	text20
  3453     0212                     __ptext20:	
  3454 ;; *************** function _I2C_Init *****************
  3455 ;; Defined at:
  3456 ;;		line 46 in file "Postlab4master.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  1    wreg      void 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, pclath, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3470 ;;      Params:         0       4       0       0       0
  3471 ;;      Locals:         0       0       0       0       0
  3472 ;;      Temps:          0       4       0       0       0
  3473 ;;      Totals:         0       8       0       0       0
  3474 ;;Total ram usage:        8 bytes
  3475 ;; Hardware stack levels used: 1
  3476 ;; Hardware stack levels required when called: 1
  3477 ;; This function calls:
  3478 ;;		___lldiv
  3479 ;; This function is called by:
  3480 ;;		_main
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484     0212                     _I2C_Init:	
  3485                           ;psect for function _I2C_Init
  3486                           
  3487     0212                     l1381:	
  3488                           ;incstack = 0
  3489                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3490                           
  3491                           
  3492                           ;Postlab4master.c: 46: void I2C_Init(uint32_t i2c_clk_freq);Postlab4master.c: 47: {;Post
      +                          lab4master.c: 48:   SSPCON = 0x28;
  3493     0212  3028               	movlw	40
  3494     0213  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0214  1303               	bcf	3,6	;RP1=0, select bank0
  3496     0215  0094               	movwf	20	;volatile
  3497     0216                     l1383:
  3498                           
  3499                           ;Postlab4master.c: 49:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3500     0216  0840               	movf	I2C_Init@i2c_clk_freq,w
  3501     0217  00C4               	movwf	??_I2C_Init
  3502     0218  0841               	movf	I2C_Init@i2c_clk_freq+1,w
  3503     0219  00C5               	movwf	??_I2C_Init+1
  3504     021A  0842               	movf	I2C_Init@i2c_clk_freq+2,w
  3505     021B  00C6               	movwf	??_I2C_Init+2
  3506     021C  0843               	movf	I2C_Init@i2c_clk_freq+3,w
  3507     021D  00C7               	movwf	??_I2C_Init+3
  3508     021E  3002               	movlw	2
  3509     021F                     u885:
  3510     021F  1003               	clrc
  3511     0220  0DC4               	rlf	??_I2C_Init,f
  3512     0221  0DC5               	rlf	??_I2C_Init+1,f
  3513     0222  0DC6               	rlf	??_I2C_Init+2,f
  3514     0223  0DC7               	rlf	??_I2C_Init+3,f
  3515     0224                     u880:
  3516     0224  3EFF               	addlw	-1
  3517     0225  1D03               	skipz
  3518     0226  2A1F               	goto	u885
  3519     0227  0847               	movf	??_I2C_Init+3,w
  3520     0228  00F3               	movwf	___lldiv@divisor+3
  3521     0229  0846               	movf	??_I2C_Init+2,w
  3522     022A  00F2               	movwf	___lldiv@divisor+2
  3523     022B  0845               	movf	??_I2C_Init+1,w
  3524     022C  00F1               	movwf	___lldiv@divisor+1
  3525     022D  0844               	movf	??_I2C_Init,w
  3526     022E  00F0               	movwf	___lldiv@divisor
  3527     022F  3000               	movlw	0
  3528     0230  00F7               	movwf	___lldiv@dividend+3
  3529     0231  307A               	movlw	122
  3530     0232  00F6               	movwf	___lldiv@dividend+2
  3531     0233  3012               	movlw	18
  3532     0234  00F5               	movwf	___lldiv@dividend+1
  3533     0235  3000               	movlw	0
  3534     0236  00F4               	movwf	___lldiv@dividend
  3535     0237  120A  118A  2374  120A  118A  	fcall	___lldiv
  3536     023C  0870               	movf	?___lldiv,w
  3537     023D  3EFF               	addlw	255
  3538     023E  1683               	bsf	3,5	;RP0=1, select bank1
  3539     023F  1303               	bcf	3,6	;RP1=0, select bank1
  3540     0240  0093               	movwf	19	;volatile
  3541     0241                     l1385:
  3542                           
  3543                           ;Postlab4master.c: 50:   SSPSTAT = 0;
  3544     0241  0194               	clrf	20	;volatile
  3545     0242                     l181:
  3546     0242  0008               	return
  3547     0243                     __end_of_I2C_Init:
  3548                           
  3549                           	psect	text21
  3550     0374                     __ptext21:	
  3551 ;; *************** function ___lldiv *****************
  3552 ;; Defined at:
  3553 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  divisor         4    0[COMMON] unsigned long 
  3556 ;;  dividend        4    4[COMMON] unsigned long 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  quotient        4    9[COMMON] unsigned long 
  3559 ;;  counter         1   13[COMMON] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  4    0[COMMON] unsigned long 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3569 ;;      Params:         8       0       0       0       0
  3570 ;;      Locals:         5       0       0       0       0
  3571 ;;      Temps:          1       0       0       0       0
  3572 ;;      Totals:        14       0       0       0       0
  3573 ;;Total ram usage:       14 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_I2C_Init
  3579 ;;		_I2C_Master_Init
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583     0374                     ___lldiv:	
  3584                           ;psect for function ___lldiv
  3585                           
  3586     0374                     l1233:	
  3587                           ;incstack = 0
  3588                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3589                           
  3590     0374  3000               	movlw	0
  3591     0375  00FC               	movwf	___lldiv@quotient+3
  3592     0376  3000               	movlw	0
  3593     0377  00FB               	movwf	___lldiv@quotient+2
  3594     0378  3000               	movlw	0
  3595     0379  00FA               	movwf	___lldiv@quotient+1
  3596     037A  3000               	movlw	0
  3597     037B  00F9               	movwf	___lldiv@quotient
  3598     037C  0873               	movf	___lldiv@divisor+3,w
  3599     037D  0472               	iorwf	___lldiv@divisor+2,w
  3600     037E  0471               	iorwf	___lldiv@divisor+1,w
  3601     037F  0470               	iorwf	___lldiv@divisor,w
  3602     0380  1903               	skipnz
  3603     0381  2B83               	goto	u611
  3604     0382  2B84               	goto	u610
  3605     0383                     u611:
  3606     0383  2BD1               	goto	l1253
  3607     0384                     u610:
  3608     0384                     l1235:
  3609     0384  01FD               	clrf	___lldiv@counter
  3610     0385  0AFD               	incf	___lldiv@counter,f
  3611     0386  2B94               	goto	l1239
  3612     0387                     l1237:
  3613     0387  3001               	movlw	1
  3614     0388  00F8               	movwf	??___lldiv
  3615     0389                     u625:
  3616     0389  1003               	clrc
  3617     038A  0DF0               	rlf	___lldiv@divisor,f
  3618     038B  0DF1               	rlf	___lldiv@divisor+1,f
  3619     038C  0DF2               	rlf	___lldiv@divisor+2,f
  3620     038D  0DF3               	rlf	___lldiv@divisor+3,f
  3621     038E  0BF8               	decfsz	??___lldiv,f
  3622     038F  2B89               	goto	u625
  3623     0390  3001               	movlw	1
  3624     0391  00F8               	movwf	??___lldiv
  3625     0392  0878               	movf	??___lldiv,w
  3626     0393  07FD               	addwf	___lldiv@counter,f
  3627     0394                     l1239:
  3628     0394  1FF3               	btfss	___lldiv@divisor+3,7
  3629     0395  2B97               	goto	u631
  3630     0396  2B98               	goto	u630
  3631     0397                     u631:
  3632     0397  2B87               	goto	l1237
  3633     0398                     u630:
  3634     0398                     l1241:
  3635     0398  3001               	movlw	1
  3636     0399  00F8               	movwf	??___lldiv
  3637     039A                     u645:
  3638     039A  1003               	clrc
  3639     039B  0DF9               	rlf	___lldiv@quotient,f
  3640     039C  0DFA               	rlf	___lldiv@quotient+1,f
  3641     039D  0DFB               	rlf	___lldiv@quotient+2,f
  3642     039E  0DFC               	rlf	___lldiv@quotient+3,f
  3643     039F  0BF8               	decfsz	??___lldiv,f
  3644     03A0  2B9A               	goto	u645
  3645     03A1                     l1243:
  3646     03A1  0873               	movf	___lldiv@divisor+3,w
  3647     03A2  0277               	subwf	___lldiv@dividend+3,w
  3648     03A3  1D03               	skipz
  3649     03A4  2BAF               	goto	u655
  3650     03A5  0872               	movf	___lldiv@divisor+2,w
  3651     03A6  0276               	subwf	___lldiv@dividend+2,w
  3652     03A7  1D03               	skipz
  3653     03A8  2BAF               	goto	u655
  3654     03A9  0871               	movf	___lldiv@divisor+1,w
  3655     03AA  0275               	subwf	___lldiv@dividend+1,w
  3656     03AB  1D03               	skipz
  3657     03AC  2BAF               	goto	u655
  3658     03AD  0870               	movf	___lldiv@divisor,w
  3659     03AE  0274               	subwf	___lldiv@dividend,w
  3660     03AF                     u655:
  3661     03AF  1C03               	skipc
  3662     03B0  2BB2               	goto	u651
  3663     03B1  2BB3               	goto	u650
  3664     03B2                     u651:
  3665     03B2  2BC2               	goto	l1249
  3666     03B3                     u650:
  3667     03B3                     l1245:
  3668     03B3  0870               	movf	___lldiv@divisor,w
  3669     03B4  02F4               	subwf	___lldiv@dividend,f
  3670     03B5  0871               	movf	___lldiv@divisor+1,w
  3671     03B6  1C03               	skipc
  3672     03B7  0F71               	incfsz	___lldiv@divisor+1,w
  3673     03B8  02F5               	subwf	___lldiv@dividend+1,f
  3674     03B9  0872               	movf	___lldiv@divisor+2,w
  3675     03BA  1C03               	skipc
  3676     03BB  0F72               	incfsz	___lldiv@divisor+2,w
  3677     03BC  02F6               	subwf	___lldiv@dividend+2,f
  3678     03BD  0873               	movf	___lldiv@divisor+3,w
  3679     03BE  1C03               	skipc
  3680     03BF  0F73               	incfsz	___lldiv@divisor+3,w
  3681     03C0  02F7               	subwf	___lldiv@dividend+3,f
  3682     03C1                     l1247:
  3683     03C1  1479               	bsf	___lldiv@quotient,0
  3684     03C2                     l1249:
  3685     03C2  3001               	movlw	1
  3686     03C3                     u665:
  3687     03C3  1003               	clrc
  3688     03C4  0CF3               	rrf	___lldiv@divisor+3,f
  3689     03C5  0CF2               	rrf	___lldiv@divisor+2,f
  3690     03C6  0CF1               	rrf	___lldiv@divisor+1,f
  3691     03C7  0CF0               	rrf	___lldiv@divisor,f
  3692     03C8  3EFF               	addlw	-1
  3693     03C9  1D03               	skipz
  3694     03CA  2BC3               	goto	u665
  3695     03CB                     l1251:
  3696     03CB  3001               	movlw	1
  3697     03CC  02FD               	subwf	___lldiv@counter,f
  3698     03CD  1D03               	btfss	3,2
  3699     03CE  2BD0               	goto	u671
  3700     03CF  2BD1               	goto	u670
  3701     03D0                     u671:
  3702     03D0  2B98               	goto	l1241
  3703     03D1                     u670:
  3704     03D1                     l1253:
  3705     03D1  087C               	movf	___lldiv@quotient+3,w
  3706     03D2  00F3               	movwf	?___lldiv+3
  3707     03D3  087B               	movf	___lldiv@quotient+2,w
  3708     03D4  00F2               	movwf	?___lldiv+2
  3709     03D5  087A               	movf	___lldiv@quotient+1,w
  3710     03D6  00F1               	movwf	?___lldiv+1
  3711     03D7  0879               	movf	___lldiv@quotient,w
  3712     03D8  00F0               	movwf	?___lldiv
  3713     03D9                     l327:
  3714     03D9  0008               	return
  3715     03DA                     __end_of___lldiv:
  3716     007E                     btemp	set	126	;btemp
  3717     007E                     wtemp0	set	126
  3718                           
  3719                           	psect	idloc
  3720                           
  3721                           ;Config register IDLOC0 @ 0x2000
  3722                           ;	unspecified, using default values
  3723     2000                     	org	8192
  3724     2000  3FFF               	dw	16383
  3725                           
  3726                           ;Config register IDLOC1 @ 0x2001
  3727                           ;	unspecified, using default values
  3728     2001                     	org	8193
  3729     2001  3FFF               	dw	16383
  3730                           
  3731                           ;Config register IDLOC2 @ 0x2002
  3732                           ;	unspecified, using default values
  3733     2002                     	org	8194
  3734     2002  3FFF               	dw	16383
  3735                           
  3736                           ;Config register IDLOC3 @ 0x2003
  3737                           ;	unspecified, using default values
  3738     2003                     	org	8195
  3739     2003  3FFF               	dw	16383
  3740                           
  3741                           	psect	config
  3742                           
  3743                           ;Config register CONFIG1 @ 0x2007
  3744                           ;	Oscillator Selection bits
  3745                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3746                           ;	Watchdog Timer Enable bit
  3747                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3748                           ;	Power-up Timer Enable bit
  3749                           ;	PWRTE = OFF, PWRT disabled
  3750                           ;	RE3/MCLR pin function select bit
  3751                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3752                           ;	Code Protection bit
  3753                           ;	CP = OFF, Program memory code protection is disabled
  3754                           ;	Data Code Protection bit
  3755                           ;	CPD = OFF, Data memory code protection is disabled
  3756                           ;	Brown Out Reset Selection bits
  3757                           ;	BOREN = OFF, BOR disabled
  3758                           ;	Internal External Switchover bit
  3759                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3760                           ;	Fail-Safe Clock Monitor Enabled bit
  3761                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3762                           ;	Low Voltage Programming Enable bit
  3763                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3764                           ;	In-Circuit Debugger Mode bit
  3765                           ;	DEBUG = 0x1, unprogrammed default
  3766     2007                     	org	8199
  3767     2007  20D5               	dw	8405
  3768                           
  3769                           ;Config register CONFIG2 @ 0x2008
  3770                           ;	Brown-out Reset Selection bit
  3771                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3772                           ;	Flash Program Memory Self Write Enable bits
  3773                           ;	WRT = OFF, Write protection off
  3774     2008                     	org	8200
  3775     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> RTC_display@Date(BANK0[17]), RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Set_Cursor
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10135
                                              8 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3802
                                             10 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    2302
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     564
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 06 23:28:57 2023

                               _i 0051                                 pc 0002                    ___bmul@product 0072  
                              l32 00D2                                l41 00B5                                l50 01D9  
                              l35 00DE                                l51 01DC                                l52 01E1  
                              l44 00C7                                l38 00BE                                l47 00D1  
                              l80 01B3                                l72 019B                                l73 019E  
                              l74 01A4                                l75 01A5                                l83 0136  
                              l76 01AB                                l92 02BD                                l77 01AC  
                              l78 01B2                                l95 0373                                l98 0277  
                    ___awdiv@sign 0076                                fsr 0004                    _decimal_to_bcd 01E2  
                     _RTC_display 0441                               l104 0191                               l205 0150  
                             l181 0242                               l317 0106                               l327 03D9  
                             l184 011C                               l194 0591                               l187 0211  
                             l444 0440                               l199 06D0                               l457 0316  
                             _GIE 005F                               _RD4 0044                               _RD5 0045  
                             _RC7 003F                               _RD6 0046                               _RD7 0047  
                             u510 00F8                               u511 00F7                               u520 0105  
                             u505 0250                               u521 0104                               u610 0384  
                             u530 00D8                               u611 0383                               u531 00D7  
                             u540 00DE                               u460 0197                               u700 03FB  
                             u541 00DD                               u461 0196                               u701 03FA  
                             u605 0110                               u630 0398                               u470 01A2  
                             u550 027E                               u631 0397                               u471 01A1  
                             u551 027D                               u480 01A9                               u720 040D  
                             u800 02D9                               u625 0389                               u481 01A8  
                             u721 040C                               u801 02D8                               u650 03B3  
                             u490 01B0                               u570 02A1                               u651 03B2  
                             u491 01AF                               u571 02A0                               u715 03FF  
                             u740 041E                               u820 02EB                               u645 039A  
                             u565 0284                               u741 041D                               u821 02EA  
                             u670 03D1                               u590 0191                               u830 02F5  
                             u671 03D0                               u655 03AF                               u591 0190  
                             u735 040E                               u831 02F4                               u815 02DD  
                             u760 0432                               u680 03DF                               u665 03C3  
                             u585 02A7                               u761 0431                               u745 041A  
                             u681 03DE                               u770 0437                               u690 03EA  
                             u850 0308                               u771 0436                               u755 0426  
                             u691 03E9                               u851 0307                               u835 02F1  
                             u860 030D                               u780 02C3                               u861 030C  
                             u845 02FC                               u781 02C2                               u917 0613  
                             u870 01D5                               u790 02CE                               u871 01D4  
                             u791 02CD                               u927 064B                               u880 0224  
                             u937 06C9                               u947 07D7                               u885 021F  
                             u957 0260                               u967 0271                               u895 01F8  
                             u977 0321                               u987 0330                               u997 033F  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                            l1201 0279                              l1203 027E                              l1211 029B  
                            l1213 02A1                              l1205 028B                              l1221 0172  
                            l1301 02BE                              l1151 01B0                              l1143 0193  
                            l1215 02AE                              l1207 028E                              l1223 0175  
                            l1311 02CE                              l1303 02BF                              l1241 0398  
                            l1233 0374                              l1145 0197                              l1161 0133  
                            l1153 011E                              l1217 02B1                              l1209 0294  
                            l1225 0180                              l1321 02E7                              l1313 02D3  
                            l1305 02C3                              l1401 013E                              l1251 03CB  
                            l1243 03A1                              l1235 0384                              l1147 01A2  
                            l1155 0121                              l1219 02B7                              l1171 025E  
                            l1163 0244                              l1227 0186                              l1323 02EB  
                            l1315 02D9                              l1331 0308                              l1307 02C8  
                            l1411 014B                              l1403 013F                              l1245 03B3  
                            l1237 0387                              l1253 03D1                              l1341 00BB  
                            l1149 01A9                              l1157 0127                              l1181 0274  
                            l1173 0263                              l1165 024A                              l1261 03DF  
                            l1333 030D                              l1325 02F5                              l1317 02DC  
                            l1309 02CA                              l1229 0108                              l1413 014F  
                            l1405 0140                              l1247 03C1                              l1239 0394  
                            l1343 00AD                              l1351 00C8                              l1159 012A  
                            l1175 0266                              l1167 024D                              l1271 03F3  
                            l1263 03E4                              l1335 0312                              l1327 02FB  
                            l1319 02E3                              l1191 00FE                              l1183 00F3  
                            l1407 0149                              l1249 03C2                              l1361 01CA  
                            l1345 00B2                              l1353 00CD                              l1177 026C  
                            l1169 025B                              l1281 0409                              l1273 03F5  
                            l1265 03E6                              l1257 03DA                              l1329 0302  
                            l1193 0105                              l1185 00F4                              l1409 014A  
                            l1441 0628                              l1433 0592                              l1363 01CF  
                            l1355 01B4                              l1339 00B6                              l1347 00BF  
                            l1371 0317                              l1179 026F                              l1291 042C  
                            l1283 040D                              l1275 03FB                              l1267 03EA  
                            l1259 03DB                              l1187 00F8                              l1451 0660  
                            l1443 0630                              l1435 060B                              l1381 0212  
                            l1197 00D2                              l1365 01D5                              l1357 01B9  
                            l1349 00C4                              l1373 031D                              l1285 041E  
                            l1277 03FE                              l1293 0432                              l1269 03EF  
                            l1189 00FC                              l1461 0697                              l1453 0669  
                            l1445 063E                              l1437 061A                              l1383 0216  
                            l1199 00D8                              l1367 01DD                              l1359 01C1  
                            l1375 0326                              l1295 0437                              l1287 0424  
                            l1279 0405                              l1391 0441                              l1471 07CF  
                            l1463 06A5                              l1455 0677                              l1447 0652  
                            l1439 061F                              l1385 0241                              l1377 0335  
                            l1297 043C                              l1289 0425                              l1393 057D  
                            l1473 07DE                              l1465 06AE                              l1457 0680  
                            l1449 0657                              l1379 033B                              l1395 0583  
                            l1387 01E5                              l1467 06BC                              l1459 068E  
                            l1397 0137                              l1469 06C1                              l1399 013B  
                            u1007 012E                              _PEIE 005E                 ?_Lcd_Write_String 0070  
__end_of_I2C_Master_RepeatedStart 00B6                              _main 0592                              _hour 004E  
                __end_of_I2C_Init 0243                              _year 004B                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 0137  
               ___bmul@multiplier 0073            __end_of_decimal_to_bcd 0212                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 0441                   __end_of___awmod 0317                             _ANSEL 0188  
                 __end_of___lldiv 03DA                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                             _m_day 004D  
                           _month 004C                             _setup 0137                             pclath 000A  
                           status 0003                             wtemp0 007E              I2C_Init@i2c_clk_freq 0040  
                __end_of_Lcd_Init 0374                  __end_of_Lcd_Port 01B4                   __initialization 07E7  
                    __end_of_main 07E7                   ?_decimal_to_bcd 0070                            ??_main 0048  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC1 0439                            _TRISC2 043A                            _TRISC3 043B  
                          _TRISC4 043C                            _TRISC6 043E                            _TRISC7 043F  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 00AD  
                          ___bmul 00F2                         ??___awdiv 0074                         ??___awmod 0074  
                       ??___lldiv 0078                  ___awdiv@quotient 0077                            _minute 004F  
                          _second 0050                   ___awmod@divisor 0070                   ___awmod@counter 0075  
                       ?_I2C_Init 0040                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070                      __pidataBANK0 0151  
                   __end_of_setup 0151                      ?_RTC_display 0070                    _Lcd_Set_Cursor 0278  
                      ??_I2C_Init 0044                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 0070                        __pbssBANK0 004B                        __pmaintext 0592  
                         ?___bmul 0070            __end_of_Lcd_Set_Cursor 02BE                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                  _Lcd_Write_Char 0243                           _Lcd_Cmd 011D                  ??_decimal_to_bcd 0079  
                         ___awdiv 03DA                           ___awmod 02BE                           ___lldiv 0374  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 0137                           __ptext2 01E2  
                         __ptext3 0441                           __ptext4 0107                           __ptext5 00F2  
                         __ptext6 02BE                           __ptext7 03DA                           __ptext8 0171  
                         __ptext9 0243                  ___awmod@dividend 0072            __end_of_Lcd_Write_Char 0278  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Read@a 0070                         Lcd_Port@a 0070  
                       _PORTCbits 0007                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0078                 Lcd_Write_String@i 0076                    __end_of___bmul 0107  
                _Lcd_Write_String 0171               start_initialization 07E7                    _bcd_to_decimal 0107  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
                        ??___bmul 0071                        init_fetch0 00DF                       __pdataBANK0 0020  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073            __end_of_bcd_to_decimal 011D  
                       ___latbits 0002                     __pcstackBANK0 0040                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 00B6                  _I2C_Master_Write 00C8                  ??_Lcd_Set_Cursor 0075  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___lldiv 0070  
                 ?_bcd_to_decimal 0070                          _I2C_Init 0212              bcd_to_decimal@number 0076  
                 RTC_display@Date 0020                   RTC_display@Time 0031                          Lcd_Cmd@a 0073  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 0317                          _Lcd_Port 0192  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 0192         ?_I2C_Master_RepeatedStart 0070  
                   ??_RTC_display 007A                   _I2C_Master_Read 01B4                   _I2C_Master_Wait 00D2  
                 _I2C_Master_Stop 00BF                          __ptext10 0278                          __ptext11 0317  
                        __ptext20 0212                          __ptext12 011D                          __ptext21 0374  
                        __ptext13 0192                          __ptext14 00C8                          __ptext15 00BF  
                        __ptext16 00B6                          __ptext17 00AD                          __ptext18 01B4  
                        __ptext19 00D2              decimal_to_bcd@number 0040          __end_of_I2C_Master_Start 00BF  
        __end_of_I2C_Master_Write 00D2                          init_ram0 00E3               __end_of_RTC_display 0592  
              Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074                        _OSCCONbits 008F  
                ??_bcd_to_decimal 0074           __end_of_I2C_Master_Read 01E2           __end_of_I2C_Master_Wait 00DF  
         __end_of_I2C_Master_Stop 00C8                Lcd_Set_Cursor@temp 0079                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                       _SSPCON2bits 0091  
