

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 06 22:35:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     0258                     __pidataBANK0:
   388                           
   389                           ;initializer for RTC_display@Date
   390     0258  3444               	retlw	68
   391     0259  3441               	retlw	65
   392     025A  3454               	retlw	84
   393     025B  3445               	retlw	69
   394     025C  343A               	retlw	58
   395     025D  3420               	retlw	32
   396     025E  3430               	retlw	48
   397     025F  3430               	retlw	48
   398     0260  342F               	retlw	47
   399     0261  3430               	retlw	48
   400     0262  3430               	retlw	48
   401     0263  342F               	retlw	47
   402     0264  3432               	retlw	50
   403     0265  3430               	retlw	48
   404     0266  3430               	retlw	48
   405     0267  3430               	retlw	48
   406     0268  3400               	retlw	0
   407                           
   408                           ;initializer for RTC_display@Time
   409     0269  3454               	retlw	84
   410     026A  3449               	retlw	73
   411     026B  344D               	retlw	77
   412     026C  3445               	retlw	69
   413     026D  343A               	retlw	58
   414     026E  3420               	retlw	32
   415     026F  3430               	retlw	48
   416     0270  3430               	retlw	48
   417     0271  343A               	retlw	58
   418     0272  3430               	retlw	48
   419     0273  3430               	retlw	48
   420     0274  343A               	retlw	58
   421     0275  3430               	retlw	48
   422     0276  3430               	retlw	48
   423     0277  3400               	retlw	0
   424     0007                     _PORTCbits	set	7
   425     0008                     _PORTD	set	8
   426     0006                     _PORTB	set	6
   427     0005                     _PORTA	set	5
   428     0013                     _SSPBUF	set	19
   429     0014                     _SSPCON	set	20
   430     003F                     _RC7	set	63
   431     0047                     _RD7	set	71
   432     0046                     _RD6	set	70
   433     0045                     _RD5	set	69
   434     0044                     _RD4	set	68
   435     0063                     _SSPIF	set	99
   436     005E                     _PEIE	set	94
   437     005F                     _GIE	set	95
   438     008F                     _OSCCONbits	set	143
   439     0088                     _TRISD	set	136
   440     0086                     _TRISB	set	134
   441     0085                     _TRISA	set	133
   442     0091                     _SSPCON2bits	set	145
   443     0087                     _TRISCbits	set	135
   444     0094                     _SSPSTAT	set	148
   445     0093                     _SSPADD	set	147
   446     0091                     _SSPCON2	set	145
   447     043F                     _TRISC7	set	1087
   448     043E                     _TRISC6	set	1086
   449     043A                     _TRISC2	set	1082
   450     0439                     _TRISC1	set	1081
   451     0463                     _SSPIE	set	1123
   452     043C                     _TRISC4	set	1084
   453     043B                     _TRISC3	set	1083
   454     0189                     _ANSELH	set	393
   455     0188                     _ANSEL	set	392
   456                           
   457                           	psect	strings
   458     0003                     __pstrings:
   459     0003                     stringtab:
   460     0003                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     0003  1BFF               	btfsc	btemp+1,7
   464     0004  280D               	ljmp	stringcode
   465     0005  1383               	bcf	3,7
   466     0006  187F               	btfsc	btemp+1,0
   467     0007  1783               	bsf	3,7
   468     0008  0800               	movf	0,w
   469     0009  0A84               	incf	4,f
   470     000A  1903               	skipnz
   471     000B  0AFF               	incf	btemp+1,f
   472     000C  0008               	return
   473     000D                     stringcode:
   474     000D                     stringdir:
   475     000D  3000               	movlw	high stringdir
   476     000E  008A               	movwf	10
   477     000F  0804               	movf	4,w
   478     0010  0A84               	incf	4,f
   479     0011  0782               	addwf	2,f
   480     0012                     __stringbase:
   481     0012  3400               	retlw	0
   482     0013                     __end_of__stringtab:
   483     0013                     STR_1:
   484     0013  3470               	retlw	112	;'p'
   485     0014  3472               	retlw	114	;'r'
   486     0015  3475               	retlw	117	;'u'
   487     0016  3465               	retlw	101	;'e'
   488     0017  3462               	retlw	98	;'b'
   489     0018  3461               	retlw	97	;'a'
   490     0019  3400               	retlw	0
   491                           
   492                           	psect	cinit
   493     07E7                     start_initialization:	
   494                           ; #config settings
   495                           
   496     07E7                     __initialization:
   497                           
   498                           ; Initialize objects allocated to BANK0
   499     07E7  1383               	bcf	3,7	;select IRP bank0
   500     07E8  3040               	movlw	low (__pdataBANK0+32)
   501     07E9  00FD               	movwf	btemp+-1
   502     07EA  3002               	movlw	high __pidataBANK0
   503     07EB  00FE               	movwf	btemp
   504     07EC  3058               	movlw	low __pidataBANK0
   505     07ED  00FF               	movwf	btemp+1
   506     07EE  3020               	movlw	low __pdataBANK0
   507     07EF  0084               	movwf	4
   508     07F0  120A  118A  21EA  120A  118A  	fcall	init_ram0
   509                           
   510                           ; Clear objects allocated to BANK0
   511     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   512     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   513     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   514     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   515     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   516     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   517     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   518     07FC                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521     07FC                     __end_of__initialization:
   522     07FC  0183               	clrf	3
   523     07FD  120A  118A  2D69   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	bssBANK0
   526     004B                     __pbssBANK0:
   527     004B                     _year:
   528     004B                     	ds	1
   529     004C                     _month:
   530     004C                     	ds	1
   531     004D                     _m_day:
   532     004D                     	ds	1
   533     004E                     _hour:
   534     004E                     	ds	1
   535     004F                     _minute:
   536     004F                     	ds	1
   537     0050                     _second:
   538     0050                     	ds	1
   539     0051                     _i:
   540     0051                     	ds	1
   541                           
   542                           	psect	dataBANK0
   543     0020                     __pdataBANK0:
   544     0020                     RTC_display@Date:
   545     0020                     	ds	17
   546     0031                     RTC_display@Time:
   547     0031                     	ds	15
   548                           
   549                           	psect	inittext
   550     01E6                     init_fetch0:	
   551                           ;	Called with low address in FSR and high address in W
   552                           
   553     01E6  087E               	movf	btemp,w
   554     01E7  008A               	movwf	10
   555     01E8  087F               	movf	btemp+1,w
   556     01E9  0082               	movwf	2
   557     01EA                     init_ram0:	
   558                           ;Called with:
   559                           ;	high address of idata address in btemp 
   560                           ;	low address of idata address in btemp+1 
   561                           ;	low address of data in FSR
   562                           ;	high address + 1 of data in btemp-1
   563                           
   564     01EA  120A  118A  21E6  120A  118A  	fcall	init_fetch0
   565     01EF  0080               	movwf	0
   566     01F0  0A84               	incf	4,f
   567     01F1  0804               	movf	4,w
   568     01F2  067D               	xorwf	btemp+-1,w
   569     01F3  1903               	btfsc	3,2
   570     01F4  3400               	retlw	0
   571     01F5  0AFF               	incf	btemp+1,f
   572     01F6  1903               	btfsc	3,2
   573     01F7  0AFE               	incf	btemp,f
   574     01F8  29EA               	goto	init_ram0
   575                           
   576                           	psect	cstackCOMMON
   577     0070                     __pcstackCOMMON:
   578     0070                     ?_setup:
   579     0070                     ??_setup:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_Lcd_Init:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_I2C_Master_Wait:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ??_I2C_Master_Wait:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_I2C_Master_Start:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ??_I2C_Master_Start:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_I2C_Master_RepeatedStart:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ??_I2C_Master_RepeatedStart:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_I2C_Master_Stop:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ??_I2C_Master_Stop:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_I2C_Master_Write:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_bcd_to_decimal:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_decimal_to_bcd:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_RTC_display:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?_main:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     ?_Lcd_Port:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     ??_Lcd_Port:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_Lcd_Cmd:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_Lcd_Write_Char:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?___bmul:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_I2C_Master_Read:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?___awdiv:	
   643                           ; 2 bytes @ 0x0
   644                           
   645     0070                     ?___awmod:	
   646                           ; 2 bytes @ 0x0
   647                           
   648     0070                     ?___lldiv:	
   649                           ; 2 bytes @ 0x0
   650                           
   651     0070                     Lcd_Port@a:	
   652                           ; 4 bytes @ 0x0
   653                           
   654     0070                     ___bmul@multiplicand:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     I2C_Master_Write@d:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     I2C_Master_Read@a:	
   661                           ; 2 bytes @ 0x0
   662                           
   663     0070                     ___awdiv@divisor:	
   664                           ; 2 bytes @ 0x0
   665                           
   666     0070                     ___awmod@divisor:	
   667                           ; 2 bytes @ 0x0
   668                           
   669     0070                     ___lldiv@divisor:	
   670                           ; 2 bytes @ 0x0
   671                           
   672                           
   673                           ; 4 bytes @ 0x0
   674     0070                     	ds	1
   675     0071                     ??_Lcd_Cmd:
   676     0071                     ??_Lcd_Write_Char:	
   677                           ; 1 bytes @ 0x1
   678                           
   679     0071                     ??___bmul:	
   680                           ; 1 bytes @ 0x1
   681                           
   682                           
   683                           ; 1 bytes @ 0x1
   684     0071                     	ds	1
   685     0072                     ??_I2C_Master_Write:
   686     0072                     ??_I2C_Master_Read:	
   687                           ; 1 bytes @ 0x2
   688                           
   689     0072                     Lcd_Write_Char@temp:	
   690                           ; 1 bytes @ 0x2
   691                           
   692     0072                     ___bmul@product:	
   693                           ; 1 bytes @ 0x2
   694                           
   695     0072                     ___awdiv@dividend:	
   696                           ; 1 bytes @ 0x2
   697                           
   698     0072                     ___awmod@dividend:	
   699                           ; 2 bytes @ 0x2
   700                           
   701                           
   702                           ; 2 bytes @ 0x2
   703     0072                     	ds	1
   704     0073                     Lcd_Cmd@a:
   705     0073                     Lcd_Write_Char@y:	
   706                           ; 1 bytes @ 0x3
   707                           
   708     0073                     ___bmul@multiplier:	
   709                           ; 1 bytes @ 0x3
   710                           
   711                           
   712                           ; 1 bytes @ 0x3
   713     0073                     	ds	1
   714     0074                     ?_Lcd_Set_Cursor:
   715     0074                     ??_Lcd_Init:	
   716                           ; 1 bytes @ 0x4
   717                           
   718     0074                     ??_bcd_to_decimal:	
   719                           ; 1 bytes @ 0x4
   720                           
   721     0074                     ??___awdiv:	
   722                           ; 1 bytes @ 0x4
   723                           
   724     0074                     ??___awmod:	
   725                           ; 1 bytes @ 0x4
   726                           
   727     0074                     Lcd_Set_Cursor@b:	
   728                           ; 1 bytes @ 0x4
   729                           
   730     0074                     Lcd_Write_Char@a:	
   731                           ; 1 bytes @ 0x4
   732                           
   733     0074                     I2C_Master_Read@temp:	
   734                           ; 1 bytes @ 0x4
   735                           
   736     0074                     ___lldiv@dividend:	
   737                           ; 2 bytes @ 0x4
   738                           
   739                           
   740                           ; 4 bytes @ 0x4
   741     0074                     	ds	1
   742     0075                     ??_Lcd_Set_Cursor:
   743     0075                     ?_Lcd_Write_String:	
   744                           ; 1 bytes @ 0x5
   745                           
   746     0075                     ___awdiv@counter:	
   747                           ; 1 bytes @ 0x5
   748                           
   749     0075                     ___awmod@counter:	
   750                           ; 1 bytes @ 0x5
   751                           
   752     0075                     Lcd_Write_String@a:	
   753                           ; 1 bytes @ 0x5
   754                           
   755                           
   756                           ; 2 bytes @ 0x5
   757     0075                     	ds	1
   758     0076                     bcd_to_decimal@number:
   759     0076                     Lcd_Set_Cursor@a:	
   760                           ; 1 bytes @ 0x6
   761                           
   762     0076                     ___awdiv@sign:	
   763                           ; 1 bytes @ 0x6
   764                           
   765     0076                     ___awmod@sign:	
   766                           ; 1 bytes @ 0x6
   767                           
   768                           
   769                           ; 1 bytes @ 0x6
   770     0076                     	ds	1
   771     0077                     ??_Lcd_Write_String:
   772     0077                     Lcd_Set_Cursor@z:	
   773                           ; 1 bytes @ 0x7
   774                           
   775     0077                     ___awdiv@quotient:	
   776                           ; 1 bytes @ 0x7
   777                           
   778                           
   779                           ; 2 bytes @ 0x7
   780     0077                     	ds	1
   781     0078                     ??___lldiv:
   782     0078                     Lcd_Set_Cursor@y:	
   783                           ; 1 bytes @ 0x8
   784                           
   785                           
   786                           ; 1 bytes @ 0x8
   787     0078                     	ds	1
   788     0079                     ??_decimal_to_bcd:
   789     0079                     Lcd_Set_Cursor@temp:	
   790                           ; 1 bytes @ 0x9
   791                           
   792     0079                     ___lldiv@quotient:	
   793                           ; 1 bytes @ 0x9
   794                           
   795                           
   796                           ; 4 bytes @ 0x9
   797     0079                     	ds	1
   798     007A                     Lcd_Write_String@i:
   799                           
   800                           ; 2 bytes @ 0xA
   801     007A                     	ds	2
   802     007C                     ??_RTC_display:
   803                           
   804                           ; 1 bytes @ 0xC
   805     007C                     	ds	1
   806     007D                     ___lldiv@counter:
   807                           
   808                           ; 1 bytes @ 0xD
   809     007D                     	ds	1
   810                           
   811                           	psect	cstackBANK0
   812     0040                     __pcstackBANK0:
   813     0040                     ?_I2C_Init:
   814     0040                     decimal_to_bcd@number:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0040                     I2C_Init@i2c_clk_freq:	
   818                           ; 1 bytes @ 0x0
   819                           
   820                           
   821                           ; 4 bytes @ 0x0
   822     0040                     	ds	4
   823     0044                     ??_I2C_Init:
   824                           
   825                           ; 1 bytes @ 0x4
   826     0044                     	ds	4
   827     0048                     ??_main:
   828                           
   829                           ; 1 bytes @ 0x8
   830     0048                     	ds	3
   831                           
   832                           	psect	maintext
   833     0569                     __pmaintext:	
   834 ;;
   835 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   836 ;;
   837 ;; *************** function _main *****************
   838 ;; Defined at:
   839 ;;		line 96 in file "Lab4master.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : B00/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       3       0       0       0
   856 ;;      Totals:         0       3       0       0       0
   857 ;;Total ram usage:        3 bytes
   858 ;; Hardware stack levels required when called: 4
   859 ;; This function calls:
   860 ;;		_I2C_Init
   861 ;;		_I2C_Master_Read
   862 ;;		_I2C_Master_RepeatedStart
   863 ;;		_I2C_Master_Start
   864 ;;		_I2C_Master_Stop
   865 ;;		_I2C_Master_Write
   866 ;;		_Lcd_Init
   867 ;;		_Lcd_Set_Cursor
   868 ;;		_Lcd_Write_String
   869 ;;		_RTC_display
   870 ;;		_decimal_to_bcd
   871 ;;		_setup
   872 ;; This function is called by:
   873 ;;		Startup code after reset
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877     0569                     _main:	
   878                           ;psect for function _main
   879                           
   880     0569                     l1435:	
   881                           ;incstack = 0
   882                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   883                           
   884                           
   885                           ;Lab4master.c: 97:     setup();
   886     0569  120A  118A  223E  120A  118A  	fcall	_setup
   887                           
   888                           ;Lab4master.c: 98:     Lcd_Init();
   889     056E  120A  118A  243F  120A  118A  	fcall	_Lcd_Init
   890                           
   891                           ;Lab4master.c: 99:     I2C_Init(100000);
   892     0573  3000               	movlw	0
   893     0574  1283               	bcf	3,5	;RP0=0, select bank0
   894     0575  1303               	bcf	3,6	;RP1=0, select bank0
   895     0576  00C3               	movwf	I2C_Init@i2c_clk_freq+3
   896     0577  3001               	movlw	1
   897     0578  00C2               	movwf	I2C_Init@i2c_clk_freq+2
   898     0579  3086               	movlw	134
   899     057A  00C1               	movwf	I2C_Init@i2c_clk_freq+1
   900     057B  30A0               	movlw	160
   901     057C  00C0               	movwf	I2C_Init@i2c_clk_freq
   902     057D  120A  118A  22F8  120A  118A  	fcall	_I2C_Init
   903                           
   904                           ;Lab4master.c: 100:     minute = decimal_to_bcd(0);
   905     0582  3000               	movlw	0
   906     0583  120A  118A  22C8  120A  118A  	fcall	_decimal_to_bcd
   907     0588  1283               	bcf	3,5	;RP0=0, select bank0
   908     0589  1303               	bcf	3,6	;RP1=0, select bank0
   909     058A  00CF               	movwf	_minute
   910                           
   911                           ;Lab4master.c: 101:     second = decimal_to_bcd(0);
   912     058B  3000               	movlw	0
   913     058C  120A  118A  22C8  120A  118A  	fcall	_decimal_to_bcd
   914     0591  1283               	bcf	3,5	;RP0=0, select bank0
   915     0592  1303               	bcf	3,6	;RP1=0, select bank0
   916     0593  00D0               	movwf	_second
   917                           
   918                           ;Lab4master.c: 102:     I2C_Master_Start();
   919     0594  120A  118A  21BD  120A  118A  	fcall	_I2C_Master_Start
   920                           
   921                           ;Lab4master.c: 103:         I2C_Master_Write(0xD0);
   922     0599  30D0               	movlw	208
   923     059A  00F0               	movwf	I2C_Master_Write@d
   924     059B  3000               	movlw	0
   925     059C  00F1               	movwf	I2C_Master_Write@d+1
   926     059D  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
   927                           
   928                           ;Lab4master.c: 104:         I2C_Master_Write(0x01);
   929     05A2  3001               	movlw	1
   930     05A3  00F0               	movwf	I2C_Master_Write@d
   931     05A4  3000               	movlw	0
   932     05A5  00F1               	movwf	I2C_Master_Write@d+1
   933     05A6  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
   934                           
   935                           ;Lab4master.c: 105:         I2C_Master_Write(minute);
   936     05AB  1283               	bcf	3,5	;RP0=0, select bank0
   937     05AC  1303               	bcf	3,6	;RP1=0, select bank0
   938     05AD  084F               	movf	_minute,w
   939     05AE  00C8               	movwf	??_main
   940     05AF  01C9               	clrf	??_main+1
   941     05B0  0848               	movf	??_main,w
   942     05B1  00F0               	movwf	I2C_Master_Write@d
   943     05B2  0849               	movf	??_main+1,w
   944     05B3  00F1               	movwf	I2C_Master_Write@d+1
   945     05B4  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
   946                           
   947                           ;Lab4master.c: 107:         I2C_Master_Stop();
   948     05B9  120A  118A  21C6  120A  118A  	fcall	_I2C_Master_Stop
   949     05BE                     l1437:
   950                           
   951                           ;Lab4master.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
   952     05BE  3003               	movlw	3
   953     05BF  1283               	bcf	3,5	;RP0=0, select bank0
   954     05C0  1303               	bcf	3,6	;RP1=0, select bank0
   955     05C1  00CA               	movwf	??_main+2
   956     05C2  3008               	movlw	8
   957     05C3  00C9               	movwf	??_main+1
   958     05C4  3076               	movlw	118
   959     05C5  00C8               	movwf	??_main
   960     05C6                     u957:
   961     05C6  0BC8               	decfsz	??_main,f
   962     05C7  2DC6               	goto	u957
   963     05C8  0BC9               	decfsz	??_main+1,f
   964     05C9  2DC6               	goto	u957
   965     05CA  0BCA               	decfsz	??_main+2,f
   966     05CB  2DC6               	goto	u957
   967     05CC  0000               	nop
   968     05CD                     l1439:
   969                           
   970                           ;Lab4master.c: 109:         I2C_Master_Start();
   971     05CD  120A  118A  21BD  120A  118A  	fcall	_I2C_Master_Start
   972     05D2                     l1441:
   973                           
   974                           ;Lab4master.c: 110:         I2C_Master_Write(0xD0);
   975     05D2  30D0               	movlw	208
   976     05D3  00F0               	movwf	I2C_Master_Write@d
   977     05D4  3000               	movlw	0
   978     05D5  00F1               	movwf	I2C_Master_Write@d+1
   979     05D6  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
   980     05DB                     l1443:
   981                           
   982                           ;Lab4master.c: 111:         I2C_Master_Write(0x00);
   983     05DB  3000               	movlw	0
   984     05DC  00F0               	movwf	I2C_Master_Write@d
   985     05DD  00F1               	movwf	I2C_Master_Write@d+1
   986     05DE  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
   987     05E3                     l1445:
   988                           
   989                           ;Lab4master.c: 112:         I2C_Master_Write(second);
   990     05E3  1283               	bcf	3,5	;RP0=0, select bank0
   991     05E4  1303               	bcf	3,6	;RP1=0, select bank0
   992     05E5  0850               	movf	_second,w
   993     05E6  00C8               	movwf	??_main
   994     05E7  01C9               	clrf	??_main+1
   995     05E8  0848               	movf	??_main,w
   996     05E9  00F0               	movwf	I2C_Master_Write@d
   997     05EA  0849               	movf	??_main+1,w
   998     05EB  00F1               	movwf	I2C_Master_Write@d+1
   999     05EC  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1000     05F1                     l1447:
  1001                           
  1002                           ;Lab4master.c: 114:         I2C_Master_Stop();
  1003     05F1  120A  118A  21C6  120A  118A  	fcall	_I2C_Master_Stop
  1004     05F6                     l1449:
  1005                           
  1006                           ;Lab4master.c: 117:         I2C_Master_Start();
  1007     05F6  120A  118A  21BD  120A  118A  	fcall	_I2C_Master_Start
  1008     05FB                     l1451:
  1009                           
  1010                           ;Lab4master.c: 118:         I2C_Master_Write(0xD0);
  1011     05FB  30D0               	movlw	208
  1012     05FC  00F0               	movwf	I2C_Master_Write@d
  1013     05FD  3000               	movlw	0
  1014     05FE  00F1               	movwf	I2C_Master_Write@d+1
  1015     05FF  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1016     0604                     l1453:
  1017                           
  1018                           ;Lab4master.c: 119:         I2C_Master_Write(0x00);
  1019     0604  3000               	movlw	0
  1020     0605  00F0               	movwf	I2C_Master_Write@d
  1021     0606  00F1               	movwf	I2C_Master_Write@d+1
  1022     0607  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1023     060C                     l1455:
  1024                           
  1025                           ;Lab4master.c: 120:         I2C_Master_Stop();
  1026     060C  120A  118A  21C6  120A  118A  	fcall	_I2C_Master_Stop
  1027     0611                     l1457:
  1028                           
  1029                           ;Lab4master.c: 122:         I2C_Master_Start();
  1030     0611  120A  118A  21BD  120A  118A  	fcall	_I2C_Master_Start
  1031     0616                     l1459:
  1032                           
  1033                           ;Lab4master.c: 123:         I2C_Master_Write(0xD0);
  1034     0616  30D0               	movlw	208
  1035     0617  00F0               	movwf	I2C_Master_Write@d
  1036     0618  3000               	movlw	0
  1037     0619  00F1               	movwf	I2C_Master_Write@d+1
  1038     061A  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1039     061F                     l1461:
  1040                           
  1041                           ;Lab4master.c: 124:         I2C_Master_Write(0x00);
  1042     061F  3000               	movlw	0
  1043     0620  00F0               	movwf	I2C_Master_Write@d
  1044     0621  00F1               	movwf	I2C_Master_Write@d+1
  1045     0622  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1046     0627                     l1463:
  1047                           
  1048                           ;Lab4master.c: 125:         I2C_Master_RepeatedStart();
  1049     0627  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1050     062C                     l1465:
  1051                           
  1052                           ;Lab4master.c: 126:         I2C_Master_Write(0xD1);
  1053     062C  30D1               	movlw	209
  1054     062D  00F0               	movwf	I2C_Master_Write@d
  1055     062E  3000               	movlw	0
  1056     062F  00F1               	movwf	I2C_Master_Write@d+1
  1057     0630  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1058     0635                     l1467:
  1059                           
  1060                           ;Lab4master.c: 127:         second = I2C_Master_Read(0);
  1061     0635  3000               	movlw	0
  1062     0636  00F0               	movwf	I2C_Master_Read@a
  1063     0637  00F1               	movwf	I2C_Master_Read@a+1
  1064     0638  120A  118A  229A  120A  118A  	fcall	_I2C_Master_Read
  1065     063D  0870               	movf	?_I2C_Master_Read,w
  1066     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1067     063F  1303               	bcf	3,6	;RP1=0, select bank0
  1068     0640  00D0               	movwf	_second
  1069     0641                     l1469:
  1070                           
  1071                           ;Lab4master.c: 128:         I2C_Master_Write(0x01);
  1072     0641  3001               	movlw	1
  1073     0642  00F0               	movwf	I2C_Master_Write@d
  1074     0643  3000               	movlw	0
  1075     0644  00F1               	movwf	I2C_Master_Write@d+1
  1076     0645  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1077     064A                     l1471:
  1078                           
  1079                           ;Lab4master.c: 129:         I2C_Master_RepeatedStart();
  1080     064A  120A  118A  21B4  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1081     064F                     l1473:
  1082                           
  1083                           ;Lab4master.c: 130:         I2C_Master_Write(0xD1);
  1084     064F  30D1               	movlw	209
  1085     0650  00F0               	movwf	I2C_Master_Write@d
  1086     0651  3000               	movlw	0
  1087     0652  00F1               	movwf	I2C_Master_Write@d+1
  1088     0653  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Write
  1089     0658                     l1475:
  1090                           
  1091                           ;Lab4master.c: 131:         minute = I2C_Master_Read(0);
  1092     0658  3000               	movlw	0
  1093     0659  00F0               	movwf	I2C_Master_Read@a
  1094     065A  00F1               	movwf	I2C_Master_Read@a+1
  1095     065B  120A  118A  229A  120A  118A  	fcall	_I2C_Master_Read
  1096     0660  0870               	movf	?_I2C_Master_Read,w
  1097     0661  1283               	bcf	3,5	;RP0=0, select bank0
  1098     0662  1303               	bcf	3,6	;RP1=0, select bank0
  1099     0663  00CF               	movwf	_minute
  1100     0664                     l1477:
  1101                           
  1102                           ;Lab4master.c: 132:         I2C_Master_Stop();
  1103     0664  120A  118A  21C6  120A  118A  	fcall	_I2C_Master_Stop
  1104     0669                     l1479:
  1105                           
  1106                           ;Lab4master.c: 133:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1107     0669  3003               	movlw	3
  1108     066A  1283               	bcf	3,5	;RP0=0, select bank0
  1109     066B  1303               	bcf	3,6	;RP1=0, select bank0
  1110     066C  00CA               	movwf	??_main+2
  1111     066D  3008               	movlw	8
  1112     066E  00C9               	movwf	??_main+1
  1113     066F  3076               	movlw	118
  1114     0670  00C8               	movwf	??_main
  1115     0671                     u967:
  1116     0671  0BC8               	decfsz	??_main,f
  1117     0672  2E71               	goto	u967
  1118     0673  0BC9               	decfsz	??_main+1,f
  1119     0674  2E71               	goto	u967
  1120     0675  0BCA               	decfsz	??_main+2,f
  1121     0676  2E71               	goto	u967
  1122     0677  0000               	nop
  1123     0678                     l1481:
  1124                           
  1125                           ;Lab4master.c: 135:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1126     0678  3003               	movlw	3
  1127     0679  1283               	bcf	3,5	;RP0=0, select bank0
  1128     067A  1303               	bcf	3,6	;RP1=0, select bank0
  1129     067B  00CA               	movwf	??_main+2
  1130     067C  3008               	movlw	8
  1131     067D  00C9               	movwf	??_main+1
  1132     067E  3076               	movlw	118
  1133     067F  00C8               	movwf	??_main
  1134     0680                     u977:
  1135     0680  0BC8               	decfsz	??_main,f
  1136     0681  2E80               	goto	u977
  1137     0682  0BC9               	decfsz	??_main+1,f
  1138     0683  2E80               	goto	u977
  1139     0684  0BCA               	decfsz	??_main+2,f
  1140     0685  2E80               	goto	u977
  1141     0686  0000               	nop
  1142     0687                     l1483:
  1143                           
  1144                           ;Lab4master.c: 137:         RTC_display();
  1145     0687  120A  118A  26A1  120A  118A  	fcall	_RTC_display
  1146     068C                     l1485:
  1147                           
  1148                           ;Lab4master.c: 139:        Lcd_Set_Cursor(2,8);
  1149     068C  3008               	movlw	8
  1150     068D  00F4               	movwf	Lcd_Set_Cursor@b
  1151     068E  3002               	movlw	2
  1152     068F  120A  118A  23A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1153     0694                     l1487:
  1154                           
  1155                           ;Lab4master.c: 141:   Lcd_Write_String("prueba");
  1156     0694  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1157     0695  00F5               	movwf	Lcd_Write_String@a
  1158     0696  3080               	movlw	128
  1159     0697  00F6               	movwf	Lcd_Write_String@a+1
  1160     0698  120A  118A  235E  120A  118A  	fcall	_Lcd_Write_String
  1161     069D  2DF6               	goto	l1449
  1162     069E  120A  118A  2800   	ljmp	start
  1163     06A1                     __end_of_main:
  1164                           
  1165                           	psect	text1
  1166     023E                     __ptext1:	
  1167 ;; *************** function _setup *****************
  1168 ;; Defined at:
  1169 ;;		line 148 in file "Lab4master.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196     023E                     _setup:	
  1197                           ;psect for function _setup
  1198                           
  1199     023E                     l1395:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _setup: [wreg+status,2+status,0]
  1202                           
  1203                           
  1204                           ;Lab4master.c: 149:     ANSEL = 0;
  1205     023E  1683               	bsf	3,5	;RP0=1, select bank3
  1206     023F  1703               	bsf	3,6	;RP1=1, select bank3
  1207     0240  0188               	clrf	8	;volatile
  1208                           
  1209                           ;Lab4master.c: 150:     ANSELH = 0;
  1210     0241  0189               	clrf	9	;volatile
  1211     0242                     l1397:
  1212                           
  1213                           ;Lab4master.c: 151:     TRISC1 = 0;
  1214     0242  1683               	bsf	3,5	;RP0=1, select bank1
  1215     0243  1303               	bcf	3,6	;RP1=0, select bank1
  1216     0244  1087               	bcf	7,1	;volatile
  1217     0245                     l1399:
  1218                           
  1219                           ;Lab4master.c: 152:     TRISC2 = 0;
  1220     0245  1107               	bcf	7,2	;volatile
  1221     0246                     l1401:
  1222                           
  1223                           ;Lab4master.c: 153:     TRISC6 = 0;
  1224     0246  1307               	bcf	7,6	;volatile
  1225     0247                     l1403:
  1226                           
  1227                           ;Lab4master.c: 154:     TRISC7 = 0;
  1228     0247  1387               	bcf	7,7	;volatile
  1229                           
  1230                           ;Lab4master.c: 155:     TRISA =0;
  1231     0248  0185               	clrf	5	;volatile
  1232                           
  1233                           ;Lab4master.c: 156:     TRISB = 0;
  1234     0249  0186               	clrf	6	;volatile
  1235                           
  1236                           ;Lab4master.c: 157:     TRISD = 0;
  1237     024A  0188               	clrf	8	;volatile
  1238                           
  1239                           ;Lab4master.c: 158:     PORTA = 0;
  1240     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1241     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1242     024D  0185               	clrf	5	;volatile
  1243                           
  1244                           ;Lab4master.c: 159:     PORTB = 0;
  1245     024E  0186               	clrf	6	;volatile
  1246                           
  1247                           ;Lab4master.c: 160:     PORTD = 0;
  1248     024F  0188               	clrf	8	;volatile
  1249     0250                     l1405:
  1250                           
  1251                           ;Lab4master.c: 161:     PORTCbits.RC1 = 1;
  1252     0250  1487               	bsf	7,1	;volatile
  1253     0251                     l1407:
  1254                           
  1255                           ;Lab4master.c: 162:     PORTCbits.RC2 = 1;
  1256     0251  1507               	bsf	7,2	;volatile
  1257     0252                     l1409:
  1258                           
  1259                           ;Lab4master.c: 165:     OSCCONbits.IRCF = 0b0111;
  1260     0252  3070               	movlw	112
  1261     0253  1683               	bsf	3,5	;RP0=1, select bank1
  1262     0254  1303               	bcf	3,6	;RP1=0, select bank1
  1263     0255  048F               	iorwf	15,f	;volatile
  1264     0256                     l1411:
  1265                           
  1266                           ;Lab4master.c: 166:     OSCCONbits.SCS = 1;
  1267     0256  140F               	bsf	15,0	;volatile
  1268     0257                     l150:
  1269     0257  0008               	return
  1270     0258                     __end_of_setup:
  1271                           
  1272                           	psect	text2
  1273     02C8                     __ptext2:	
  1274 ;; *************** function _decimal_to_bcd *****************
  1275 ;; Defined at:
  1276 ;;		line 56 in file "Lab4master.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  number          1    wreg     unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  number          1    0[BANK0 ] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       1       0       0       0
  1292 ;;      Temps:          5       0       0       0       0
  1293 ;;      Totals:         5       1       0       0       0
  1294 ;;Total ram usage:        6 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 1
  1297 ;; This function calls:
  1298 ;;		___awdiv
  1299 ;;		___awmod
  1300 ;; This function is called by:
  1301 ;;		_main
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305     02C8                     _decimal_to_bcd:	
  1306                           ;psect for function _decimal_to_bcd
  1307                           
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1311                           ;decimal_to_bcd@number stored from wreg
  1312     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1313     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1314     02CA  00C0               	movwf	decimal_to_bcd@number
  1315     02CB                     l1387:
  1316                           
  1317                           ;Lab4master.c: 57:   return(((number / 10) << 4) + (number % 10));
  1318     02CB  300A               	movlw	10
  1319     02CC  00F0               	movwf	___awdiv@divisor
  1320     02CD  3000               	movlw	0
  1321     02CE  00F1               	movwf	___awdiv@divisor+1
  1322     02CF  0840               	movf	decimal_to_bcd@number,w
  1323     02D0  00F9               	movwf	??_decimal_to_bcd
  1324     02D1  01FA               	clrf	??_decimal_to_bcd+1
  1325     02D2  0879               	movf	??_decimal_to_bcd,w
  1326     02D3  00F2               	movwf	___awdiv@dividend
  1327     02D4  087A               	movf	??_decimal_to_bcd+1,w
  1328     02D5  00F3               	movwf	___awdiv@dividend+1
  1329     02D6  120A  118A  2502  120A  118A  	fcall	___awdiv
  1330     02DB  0870               	movf	?___awdiv,w
  1331     02DC  00FB               	movwf	??_decimal_to_bcd+2
  1332     02DD  3004               	movlw	4
  1333     02DE                     u935:
  1334     02DE  1003               	clrc
  1335     02DF  0DFB               	rlf	??_decimal_to_bcd+2,f
  1336     02E0  3EFF               	addlw	-1
  1337     02E1  1D03               	skipz
  1338     02E2  2ADE               	goto	u935
  1339     02E3  300A               	movlw	10
  1340     02E4  00F0               	movwf	___awmod@divisor
  1341     02E5  3000               	movlw	0
  1342     02E6  00F1               	movwf	___awmod@divisor+1
  1343     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1344     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1345     02E9  0840               	movf	decimal_to_bcd@number,w
  1346     02EA  00FC               	movwf	??_decimal_to_bcd+3
  1347     02EB  01FD               	clrf	??_decimal_to_bcd+4
  1348     02EC  087C               	movf	??_decimal_to_bcd+3,w
  1349     02ED  00F2               	movwf	___awmod@dividend
  1350     02EE  087D               	movf	??_decimal_to_bcd+4,w
  1351     02EF  00F3               	movwf	___awmod@dividend+1
  1352     02F0  120A  118A  23E6  120A  118A  	fcall	___awmod
  1353     02F5  0870               	movf	?___awmod,w
  1354     02F6  077B               	addwf	??_decimal_to_bcd+2,w
  1355     02F7                     l132:
  1356     02F7  0008               	return
  1357     02F8                     __end_of_decimal_to_bcd:
  1358                           
  1359                           	psect	text3
  1360     06A1                     __ptext3:	
  1361 ;; *************** function _RTC_display *****************
  1362 ;; Defined at:
  1363 ;;		line 59 in file "Lab4master.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          2       0       0       0       0
  1380 ;;      Totals:         2       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 3
  1384 ;; This function calls:
  1385 ;;		_Lcd_Set_Cursor
  1386 ;;		_Lcd_Write_String
  1387 ;;		___awdiv
  1388 ;;		___awmod
  1389 ;;		_bcd_to_decimal
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     06A1                     _RTC_display:	
  1396                           ;psect for function _RTC_display
  1397                           
  1398     06A1                     l1391:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1401                           
  1402                           
  1403                           ;Lab4master.c: 61:   static char Time[] = "TIME: 00:00:00";;Lab4master.c: 62:   static c
      +                          har Date[] = "DATE: 00/00/2000";;Lab4master.c: 65:   second = bcd_to_decimal(second);
  1404     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1405     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1406     06A3  0850               	movf	_second,w
  1407     06A4  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1408     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1409     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1410     06AB  00D0               	movwf	_second
  1411                           
  1412                           ;Lab4master.c: 66:   minute = bcd_to_decimal(minute);
  1413     06AC  084F               	movf	_minute,w
  1414     06AD  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1415     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1416     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1417     06B4  00CF               	movwf	_minute
  1418                           
  1419                           ;Lab4master.c: 67:   hour = bcd_to_decimal(hour);
  1420     06B5  084E               	movf	_hour,w
  1421     06B6  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1422     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1423     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1424     06BD  00CE               	movwf	_hour
  1425                           
  1426                           ;Lab4master.c: 68:   m_day = bcd_to_decimal(m_day);
  1427     06BE  084D               	movf	_m_day,w
  1428     06BF  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1429     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1430     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1431     06C6  00CD               	movwf	_m_day
  1432                           
  1433                           ;Lab4master.c: 69:   month = bcd_to_decimal(month);
  1434     06C7  084C               	movf	_month,w
  1435     06C8  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1436     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1437     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1438     06CF  00CC               	movwf	_month
  1439                           
  1440                           ;Lab4master.c: 70:   year = bcd_to_decimal(year);
  1441     06D0  084B               	movf	_year,w
  1442     06D1  120A  118A  220E  120A  118A  	fcall	_bcd_to_decimal
  1443     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1444     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1445     06D8  00CB               	movwf	_year
  1446                           
  1447                           ;Lab4master.c: 74:   Time[6] = hour / 10 + '0';
  1448     06D9  300A               	movlw	10
  1449     06DA  00F0               	movwf	___awdiv@divisor
  1450     06DB  3000               	movlw	0
  1451     06DC  00F1               	movwf	___awdiv@divisor+1
  1452     06DD  084E               	movf	_hour,w
  1453     06DE  00FC               	movwf	??_RTC_display
  1454     06DF  01FD               	clrf	??_RTC_display+1
  1455     06E0  087C               	movf	??_RTC_display,w
  1456     06E1  00F2               	movwf	___awdiv@dividend
  1457     06E2  087D               	movf	??_RTC_display+1,w
  1458     06E3  00F3               	movwf	___awdiv@dividend+1
  1459     06E4  120A  118A  2502  120A  118A  	fcall	___awdiv
  1460     06E9  0870               	movf	?___awdiv,w
  1461     06EA  3E30               	addlw	48
  1462     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1463     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1464     06ED  00B7               	movwf	RTC_display@Time+6
  1465                           
  1466                           ;Lab4master.c: 75:   Time[7] = hour % 10 + '0';
  1467     06EE  300A               	movlw	10
  1468     06EF  00F0               	movwf	___awmod@divisor
  1469     06F0  3000               	movlw	0
  1470     06F1  00F1               	movwf	___awmod@divisor+1
  1471     06F2  084E               	movf	_hour,w
  1472     06F3  00FC               	movwf	??_RTC_display
  1473     06F4  01FD               	clrf	??_RTC_display+1
  1474     06F5  087C               	movf	??_RTC_display,w
  1475     06F6  00F2               	movwf	___awmod@dividend
  1476     06F7  087D               	movf	??_RTC_display+1,w
  1477     06F8  00F3               	movwf	___awmod@dividend+1
  1478     06F9  120A  118A  23E6  120A  118A  	fcall	___awmod
  1479     06FE  0870               	movf	?___awmod,w
  1480     06FF  3E30               	addlw	48
  1481     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1482     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1483     0702  00B8               	movwf	RTC_display@Time+7
  1484                           
  1485                           ;Lab4master.c: 76:   Time[9] = minute / 10 + '0';
  1486     0703  300A               	movlw	10
  1487     0704  00F0               	movwf	___awdiv@divisor
  1488     0705  3000               	movlw	0
  1489     0706  00F1               	movwf	___awdiv@divisor+1
  1490     0707  084F               	movf	_minute,w
  1491     0708  00FC               	movwf	??_RTC_display
  1492     0709  01FD               	clrf	??_RTC_display+1
  1493     070A  087C               	movf	??_RTC_display,w
  1494     070B  00F2               	movwf	___awdiv@dividend
  1495     070C  087D               	movf	??_RTC_display+1,w
  1496     070D  00F3               	movwf	___awdiv@dividend+1
  1497     070E  120A  118A  2502  120A  118A  	fcall	___awdiv
  1498     0713  0870               	movf	?___awdiv,w
  1499     0714  3E30               	addlw	48
  1500     0715  1283               	bcf	3,5	;RP0=0, select bank0
  1501     0716  1303               	bcf	3,6	;RP1=0, select bank0
  1502     0717  00BA               	movwf	RTC_display@Time+9
  1503                           
  1504                           ;Lab4master.c: 77:   Time[10] = minute % 10 + '0';
  1505     0718  300A               	movlw	10
  1506     0719  00F0               	movwf	___awmod@divisor
  1507     071A  3000               	movlw	0
  1508     071B  00F1               	movwf	___awmod@divisor+1
  1509     071C  084F               	movf	_minute,w
  1510     071D  00FC               	movwf	??_RTC_display
  1511     071E  01FD               	clrf	??_RTC_display+1
  1512     071F  087C               	movf	??_RTC_display,w
  1513     0720  00F2               	movwf	___awmod@dividend
  1514     0721  087D               	movf	??_RTC_display+1,w
  1515     0722  00F3               	movwf	___awmod@dividend+1
  1516     0723  120A  118A  23E6  120A  118A  	fcall	___awmod
  1517     0728  0870               	movf	?___awmod,w
  1518     0729  3E30               	addlw	48
  1519     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1520     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1521     072C  00BB               	movwf	RTC_display@Time+10
  1522                           
  1523                           ;Lab4master.c: 78:   Time[12] = second / 10 + '0';
  1524     072D  300A               	movlw	10
  1525     072E  00F0               	movwf	___awdiv@divisor
  1526     072F  3000               	movlw	0
  1527     0730  00F1               	movwf	___awdiv@divisor+1
  1528     0731  0850               	movf	_second,w
  1529     0732  00FC               	movwf	??_RTC_display
  1530     0733  01FD               	clrf	??_RTC_display+1
  1531     0734  087C               	movf	??_RTC_display,w
  1532     0735  00F2               	movwf	___awdiv@dividend
  1533     0736  087D               	movf	??_RTC_display+1,w
  1534     0737  00F3               	movwf	___awdiv@dividend+1
  1535     0738  120A  118A  2502  120A  118A  	fcall	___awdiv
  1536     073D  0870               	movf	?___awdiv,w
  1537     073E  3E30               	addlw	48
  1538     073F  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0740  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0741  00BD               	movwf	RTC_display@Time+12
  1541                           
  1542                           ;Lab4master.c: 79:   Time[13] = second % 10 + '0';
  1543     0742  300A               	movlw	10
  1544     0743  00F0               	movwf	___awmod@divisor
  1545     0744  3000               	movlw	0
  1546     0745  00F1               	movwf	___awmod@divisor+1
  1547     0746  0850               	movf	_second,w
  1548     0747  00FC               	movwf	??_RTC_display
  1549     0748  01FD               	clrf	??_RTC_display+1
  1550     0749  087C               	movf	??_RTC_display,w
  1551     074A  00F2               	movwf	___awmod@dividend
  1552     074B  087D               	movf	??_RTC_display+1,w
  1553     074C  00F3               	movwf	___awmod@dividend+1
  1554     074D  120A  118A  23E6  120A  118A  	fcall	___awmod
  1555     0752  0870               	movf	?___awmod,w
  1556     0753  3E30               	addlw	48
  1557     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1559     0756  00BE               	movwf	RTC_display@Time+13
  1560                           
  1561                           ;Lab4master.c: 81:   Date[6] = m_day / 10 + '0';
  1562     0757  300A               	movlw	10
  1563     0758  00F0               	movwf	___awdiv@divisor
  1564     0759  3000               	movlw	0
  1565     075A  00F1               	movwf	___awdiv@divisor+1
  1566     075B  084D               	movf	_m_day,w
  1567     075C  00FC               	movwf	??_RTC_display
  1568     075D  01FD               	clrf	??_RTC_display+1
  1569     075E  087C               	movf	??_RTC_display,w
  1570     075F  00F2               	movwf	___awdiv@dividend
  1571     0760  087D               	movf	??_RTC_display+1,w
  1572     0761  00F3               	movwf	___awdiv@dividend+1
  1573     0762  120A  118A  2502  120A  118A  	fcall	___awdiv
  1574     0767  0870               	movf	?___awdiv,w
  1575     0768  3E30               	addlw	48
  1576     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1577     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1578     076B  00A6               	movwf	RTC_display@Date+6
  1579                           
  1580                           ;Lab4master.c: 82:   Date[7] = m_day % 10 + '0';
  1581     076C  300A               	movlw	10
  1582     076D  00F0               	movwf	___awmod@divisor
  1583     076E  3000               	movlw	0
  1584     076F  00F1               	movwf	___awmod@divisor+1
  1585     0770  084D               	movf	_m_day,w
  1586     0771  00FC               	movwf	??_RTC_display
  1587     0772  01FD               	clrf	??_RTC_display+1
  1588     0773  087C               	movf	??_RTC_display,w
  1589     0774  00F2               	movwf	___awmod@dividend
  1590     0775  087D               	movf	??_RTC_display+1,w
  1591     0776  00F3               	movwf	___awmod@dividend+1
  1592     0777  120A  118A  23E6  120A  118A  	fcall	___awmod
  1593     077C  0870               	movf	?___awmod,w
  1594     077D  3E30               	addlw	48
  1595     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1596     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0780  00A7               	movwf	RTC_display@Date+7
  1598                           
  1599                           ;Lab4master.c: 83:   Date[9] = month / 10 + '0';
  1600     0781  300A               	movlw	10
  1601     0782  00F0               	movwf	___awdiv@divisor
  1602     0783  3000               	movlw	0
  1603     0784  00F1               	movwf	___awdiv@divisor+1
  1604     0785  084C               	movf	_month,w
  1605     0786  00FC               	movwf	??_RTC_display
  1606     0787  01FD               	clrf	??_RTC_display+1
  1607     0788  087C               	movf	??_RTC_display,w
  1608     0789  00F2               	movwf	___awdiv@dividend
  1609     078A  087D               	movf	??_RTC_display+1,w
  1610     078B  00F3               	movwf	___awdiv@dividend+1
  1611     078C  120A  118A  2502  120A  118A  	fcall	___awdiv
  1612     0791  0870               	movf	?___awdiv,w
  1613     0792  3E30               	addlw	48
  1614     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1615     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1616     0795  00A9               	movwf	RTC_display@Date+9
  1617                           
  1618                           ;Lab4master.c: 84:   Date[10] = month % 10 + '0';
  1619     0796  300A               	movlw	10
  1620     0797  00F0               	movwf	___awmod@divisor
  1621     0798  3000               	movlw	0
  1622     0799  00F1               	movwf	___awmod@divisor+1
  1623     079A  084C               	movf	_month,w
  1624     079B  00FC               	movwf	??_RTC_display
  1625     079C  01FD               	clrf	??_RTC_display+1
  1626     079D  087C               	movf	??_RTC_display,w
  1627     079E  00F2               	movwf	___awmod@dividend
  1628     079F  087D               	movf	??_RTC_display+1,w
  1629     07A0  00F3               	movwf	___awmod@dividend+1
  1630     07A1  120A  118A  23E6  120A  118A  	fcall	___awmod
  1631     07A6  0870               	movf	?___awmod,w
  1632     07A7  3E30               	addlw	48
  1633     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1634     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1635     07AA  00AA               	movwf	RTC_display@Date+10
  1636                           
  1637                           ;Lab4master.c: 85:   Date[14] = year / 10 + '0';
  1638     07AB  300A               	movlw	10
  1639     07AC  00F0               	movwf	___awdiv@divisor
  1640     07AD  3000               	movlw	0
  1641     07AE  00F1               	movwf	___awdiv@divisor+1
  1642     07AF  084B               	movf	_year,w
  1643     07B0  00FC               	movwf	??_RTC_display
  1644     07B1  01FD               	clrf	??_RTC_display+1
  1645     07B2  087C               	movf	??_RTC_display,w
  1646     07B3  00F2               	movwf	___awdiv@dividend
  1647     07B4  087D               	movf	??_RTC_display+1,w
  1648     07B5  00F3               	movwf	___awdiv@dividend+1
  1649     07B6  120A  118A  2502  120A  118A  	fcall	___awdiv
  1650     07BB  0870               	movf	?___awdiv,w
  1651     07BC  3E30               	addlw	48
  1652     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1653     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1654     07BF  00AE               	movwf	RTC_display@Date+14
  1655                           
  1656                           ;Lab4master.c: 86:   Date[15] = year % 10 + '0';
  1657     07C0  300A               	movlw	10
  1658     07C1  00F0               	movwf	___awmod@divisor
  1659     07C2  3000               	movlw	0
  1660     07C3  00F1               	movwf	___awmod@divisor+1
  1661     07C4  084B               	movf	_year,w
  1662     07C5  00FC               	movwf	??_RTC_display
  1663     07C6  01FD               	clrf	??_RTC_display+1
  1664     07C7  087C               	movf	??_RTC_display,w
  1665     07C8  00F2               	movwf	___awmod@dividend
  1666     07C9  087D               	movf	??_RTC_display+1,w
  1667     07CA  00F3               	movwf	___awmod@dividend+1
  1668     07CB  120A  118A  23E6  120A  118A  	fcall	___awmod
  1669     07D0  0870               	movf	?___awmod,w
  1670     07D1  3E30               	addlw	48
  1671     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1672     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1673     07D4  00AF               	movwf	RTC_display@Date+15
  1674                           
  1675                           ;Lab4master.c: 88:  Lcd_Set_Cursor(1,1);
  1676     07D5  01F4               	clrf	Lcd_Set_Cursor@b
  1677     07D6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1678     07D7  3001               	movlw	1
  1679     07D8  120A  118A  23A0  120A  118A  	fcall	_Lcd_Set_Cursor
  1680     07DD                     l1393:
  1681                           
  1682                           ;Lab4master.c: 90:   Lcd_Write_String(Time);
  1683     07DD  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1684     07DE  00F5               	movwf	Lcd_Write_String@a
  1685     07DF  3000               	movlw	0
  1686     07E0  00F6               	movwf	Lcd_Write_String@a+1
  1687     07E1  120A  118A  235E  120A  118A  	fcall	_Lcd_Write_String
  1688     07E6                     l139:
  1689     07E6  0008               	return
  1690     07E7                     __end_of_RTC_display:
  1691                           
  1692                           	psect	text4
  1693     020E                     __ptext4:	
  1694 ;; *************** function _bcd_to_decimal *****************
  1695 ;; Defined at:
  1696 ;;		line 51 in file "Lab4master.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  number          1    wreg     unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  number          1    6[COMMON] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      unsigned char 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, pclath, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1710 ;;      Params:         0       0       0       0       0
  1711 ;;      Locals:         1       0       0       0       0
  1712 ;;      Temps:          2       0       0       0       0
  1713 ;;      Totals:         3       0       0       0       0
  1714 ;;Total ram usage:        3 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 1
  1717 ;; This function calls:
  1718 ;;		___bmul
  1719 ;; This function is called by:
  1720 ;;		_RTC_display
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724     020E                     _bcd_to_decimal:	
  1725                           ;psect for function _bcd_to_decimal
  1726                           
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1730                           ;bcd_to_decimal@number stored from wreg
  1731     020E  00F6               	movwf	bcd_to_decimal@number
  1732     020F                     l1211:
  1733                           
  1734                           ;Lab4master.c: 52:   return((number >> 4) * 10 + (number & 0x0F));
  1735     020F  300F               	movlw	15
  1736     0210  0576               	andwf	bcd_to_decimal@number,w
  1737     0211  00F4               	movwf	??_bcd_to_decimal
  1738     0212  300A               	movlw	10
  1739     0213  00F0               	movwf	___bmul@multiplicand
  1740     0214  0876               	movf	bcd_to_decimal@number,w
  1741     0215  00F5               	movwf	??_bcd_to_decimal+1
  1742     0216  3004               	movlw	4
  1743     0217                     u575:
  1744     0217  1003               	clrc
  1745     0218  0CF5               	rrf	??_bcd_to_decimal+1,f
  1746     0219  3EFF               	addlw	-1
  1747     021A  1D03               	skipz
  1748     021B  2A17               	goto	u575
  1749     021C  0875               	movf	??_bcd_to_decimal+1,w
  1750     021D  120A  118A  21F9  120A  118A  	fcall	___bmul
  1751     0222  0774               	addwf	??_bcd_to_decimal,w
  1752     0223                     l129:
  1753     0223  0008               	return
  1754     0224                     __end_of_bcd_to_decimal:
  1755                           
  1756                           	psect	text5
  1757     01F9                     __ptext5:	
  1758 ;; *************** function ___bmul *****************
  1759 ;; Defined at:
  1760 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  multiplier      1    wreg     unsigned char 
  1763 ;;  multiplicand    1    0[COMMON] unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  multiplier      1    3[COMMON] unsigned char 
  1766 ;;  product         1    2[COMMON] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         1       0       0       0       0
  1777 ;;      Locals:         2       0       0       0       0
  1778 ;;      Temps:          1       0       0       0       0
  1779 ;;      Totals:         4       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_bcd_to_decimal
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789     01F9                     ___bmul:	
  1790                           ;psect for function ___bmul
  1791                           
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1795                           ;___bmul@multiplier stored from wreg
  1796     01F9  00F3               	movwf	___bmul@multiplier
  1797     01FA                     l1193:
  1798     01FA  01F2               	clrf	___bmul@product
  1799     01FB                     l1195:
  1800     01FB  1C73               	btfss	___bmul@multiplier,0
  1801     01FC  29FE               	goto	u531
  1802     01FD  29FF               	goto	u530
  1803     01FE                     u531:
  1804     01FE  2A03               	goto	l1199
  1805     01FF                     u530:
  1806     01FF                     l1197:
  1807     01FF  0870               	movf	___bmul@multiplicand,w
  1808     0200  00F1               	movwf	??___bmul
  1809     0201  0871               	movf	??___bmul,w
  1810     0202  07F2               	addwf	___bmul@product,f
  1811     0203                     l1199:
  1812     0203  1003               	clrc
  1813     0204  0DF0               	rlf	___bmul@multiplicand,f
  1814     0205                     l1201:
  1815     0205  1003               	clrc
  1816     0206  0CF3               	rrf	___bmul@multiplier,f
  1817     0207  0873               	movf	___bmul@multiplier,w
  1818     0208  1D03               	btfss	3,2
  1819     0209  2A0B               	goto	u541
  1820     020A  2A0C               	goto	u540
  1821     020B                     u541:
  1822     020B  29FB               	goto	l1195
  1823     020C                     u540:
  1824     020C                     l1203:
  1825     020C  0872               	movf	___bmul@product,w
  1826     020D                     l317:
  1827     020D  0008               	return
  1828     020E                     __end_of___bmul:
  1829                           
  1830                           	psect	text6
  1831     03E6                     __ptext6:	
  1832 ;; *************** function ___awmod *****************
  1833 ;; Defined at:
  1834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  divisor         2    0[COMMON] int 
  1837 ;;  dividend        2    2[COMMON] int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  sign            1    6[COMMON] unsigned char 
  1840 ;;  counter         1    5[COMMON] unsigned char 
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  2    0[COMMON] int 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         4       0       0       0       0
  1851 ;;      Locals:         2       0       0       0       0
  1852 ;;      Temps:          1       0       0       0       0
  1853 ;;      Totals:         7       0       0       0       0
  1854 ;;Total ram usage:        7 bytes
  1855 ;; Hardware stack levels used: 1
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_decimal_to_bcd
  1860 ;;		_RTC_display
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864     03E6                     ___awmod:	
  1865                           ;psect for function ___awmod
  1866                           
  1867     03E6                     l1311:	
  1868                           ;incstack = 0
  1869                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1870                           
  1871     03E6  01F6               	clrf	___awmod@sign
  1872     03E7                     l1313:
  1873     03E7  1FF3               	btfss	___awmod@dividend+1,7
  1874     03E8  2BEA               	goto	u821
  1875     03E9  2BEB               	goto	u820
  1876     03EA                     u821:
  1877     03EA  2BF2               	goto	l1319
  1878     03EB                     u820:
  1879     03EB                     l1315:
  1880     03EB  09F2               	comf	___awmod@dividend,f
  1881     03EC  09F3               	comf	___awmod@dividend+1,f
  1882     03ED  0AF2               	incf	___awmod@dividend,f
  1883     03EE  1903               	skipnz
  1884     03EF  0AF3               	incf	___awmod@dividend+1,f
  1885     03F0                     l1317:
  1886     03F0  01F6               	clrf	___awmod@sign
  1887     03F1  0AF6               	incf	___awmod@sign,f
  1888     03F2                     l1319:
  1889     03F2  1FF1               	btfss	___awmod@divisor+1,7
  1890     03F3  2BF5               	goto	u831
  1891     03F4  2BF6               	goto	u830
  1892     03F5                     u831:
  1893     03F5  2BFB               	goto	l1323
  1894     03F6                     u830:
  1895     03F6                     l1321:
  1896     03F6  09F0               	comf	___awmod@divisor,f
  1897     03F7  09F1               	comf	___awmod@divisor+1,f
  1898     03F8  0AF0               	incf	___awmod@divisor,f
  1899     03F9  1903               	skipnz
  1900     03FA  0AF1               	incf	___awmod@divisor+1,f
  1901     03FB                     l1323:
  1902     03FB  0870               	movf	___awmod@divisor,w
  1903     03FC  0471               	iorwf	___awmod@divisor+1,w
  1904     03FD  1903               	btfsc	3,2
  1905     03FE  2C00               	goto	u841
  1906     03FF  2C01               	goto	u840
  1907     0400                     u841:
  1908     0400  2C30               	goto	l1341
  1909     0401                     u840:
  1910     0401                     l1325:
  1911     0401  01F5               	clrf	___awmod@counter
  1912     0402  0AF5               	incf	___awmod@counter,f
  1913     0403  2C0F               	goto	l1331
  1914     0404                     l1327:
  1915     0404  3001               	movlw	1
  1916     0405                     u855:
  1917     0405  1003               	clrc
  1918     0406  0DF0               	rlf	___awmod@divisor,f
  1919     0407  0DF1               	rlf	___awmod@divisor+1,f
  1920     0408  3EFF               	addlw	-1
  1921     0409  1D03               	skipz
  1922     040A  2C05               	goto	u855
  1923     040B                     l1329:
  1924     040B  3001               	movlw	1
  1925     040C  00F4               	movwf	??___awmod
  1926     040D  0874               	movf	??___awmod,w
  1927     040E  07F5               	addwf	___awmod@counter,f
  1928     040F                     l1331:
  1929     040F  1FF1               	btfss	___awmod@divisor+1,7
  1930     0410  2C12               	goto	u861
  1931     0411  2C13               	goto	u860
  1932     0412                     u861:
  1933     0412  2C04               	goto	l1327
  1934     0413                     u860:
  1935     0413                     l1333:
  1936     0413  0871               	movf	___awmod@divisor+1,w
  1937     0414  0273               	subwf	___awmod@dividend+1,w
  1938     0415  1D03               	skipz
  1939     0416  2C19               	goto	u875
  1940     0417  0870               	movf	___awmod@divisor,w
  1941     0418  0272               	subwf	___awmod@dividend,w
  1942     0419                     u875:
  1943     0419  1C03               	skipc
  1944     041A  2C1C               	goto	u871
  1945     041B  2C1D               	goto	u870
  1946     041C                     u871:
  1947     041C  2C23               	goto	l1337
  1948     041D                     u870:
  1949     041D                     l1335:
  1950     041D  0870               	movf	___awmod@divisor,w
  1951     041E  02F2               	subwf	___awmod@dividend,f
  1952     041F  0871               	movf	___awmod@divisor+1,w
  1953     0420  1C03               	skipc
  1954     0421  03F3               	decf	___awmod@dividend+1,f
  1955     0422  02F3               	subwf	___awmod@dividend+1,f
  1956     0423                     l1337:
  1957     0423  3001               	movlw	1
  1958     0424                     u885:
  1959     0424  1003               	clrc
  1960     0425  0CF1               	rrf	___awmod@divisor+1,f
  1961     0426  0CF0               	rrf	___awmod@divisor,f
  1962     0427  3EFF               	addlw	-1
  1963     0428  1D03               	skipz
  1964     0429  2C24               	goto	u885
  1965     042A                     l1339:
  1966     042A  3001               	movlw	1
  1967     042B  02F5               	subwf	___awmod@counter,f
  1968     042C  1D03               	btfss	3,2
  1969     042D  2C2F               	goto	u891
  1970     042E  2C30               	goto	u890
  1971     042F                     u891:
  1972     042F  2C13               	goto	l1333
  1973     0430                     u890:
  1974     0430                     l1341:
  1975     0430  0876               	movf	___awmod@sign,w
  1976     0431  1903               	btfsc	3,2
  1977     0432  2C34               	goto	u901
  1978     0433  2C35               	goto	u900
  1979     0434                     u901:
  1980     0434  2C3A               	goto	l1345
  1981     0435                     u900:
  1982     0435                     l1343:
  1983     0435  09F2               	comf	___awmod@dividend,f
  1984     0436  09F3               	comf	___awmod@dividend+1,f
  1985     0437  0AF2               	incf	___awmod@dividend,f
  1986     0438  1903               	skipnz
  1987     0439  0AF3               	incf	___awmod@dividend+1,f
  1988     043A                     l1345:
  1989     043A  0873               	movf	___awmod@dividend+1,w
  1990     043B  00F1               	movwf	?___awmod+1
  1991     043C  0872               	movf	___awmod@dividend,w
  1992     043D  00F0               	movwf	?___awmod
  1993     043E                     l457:
  1994     043E  0008               	return
  1995     043F                     __end_of___awmod:
  1996                           
  1997                           	psect	text7
  1998     0502                     __ptext7:	
  1999 ;; *************** function ___awdiv *****************
  2000 ;; Defined at:
  2001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  divisor         2    0[COMMON] int 
  2004 ;;  dividend        2    2[COMMON] int 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  quotient        2    7[COMMON] int 
  2007 ;;  sign            1    6[COMMON] unsigned char 
  2008 ;;  counter         1    5[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2    0[COMMON] int 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         4       0       0       0       0
  2019 ;;      Locals:         4       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0
  2021 ;;      Totals:         9       0       0       0       0
  2022 ;;Total ram usage:        9 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_decimal_to_bcd
  2028 ;;		_RTC_display
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032     0502                     ___awdiv:	
  2033                           ;psect for function ___awdiv
  2034                           
  2035     0502                     l1267:	
  2036                           ;incstack = 0
  2037                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2038                           
  2039     0502  01F6               	clrf	___awdiv@sign
  2040     0503                     l1269:
  2041     0503  1FF1               	btfss	___awdiv@divisor+1,7
  2042     0504  2D06               	goto	u721
  2043     0505  2D07               	goto	u720
  2044     0506                     u721:
  2045     0506  2D0E               	goto	l1275
  2046     0507                     u720:
  2047     0507                     l1271:
  2048     0507  09F0               	comf	___awdiv@divisor,f
  2049     0508  09F1               	comf	___awdiv@divisor+1,f
  2050     0509  0AF0               	incf	___awdiv@divisor,f
  2051     050A  1903               	skipnz
  2052     050B  0AF1               	incf	___awdiv@divisor+1,f
  2053     050C                     l1273:
  2054     050C  01F6               	clrf	___awdiv@sign
  2055     050D  0AF6               	incf	___awdiv@sign,f
  2056     050E                     l1275:
  2057     050E  1FF3               	btfss	___awdiv@dividend+1,7
  2058     050F  2D11               	goto	u731
  2059     0510  2D12               	goto	u730
  2060     0511                     u731:
  2061     0511  2D1B               	goto	l1281
  2062     0512                     u730:
  2063     0512                     l1277:
  2064     0512  09F2               	comf	___awdiv@dividend,f
  2065     0513  09F3               	comf	___awdiv@dividend+1,f
  2066     0514  0AF2               	incf	___awdiv@dividend,f
  2067     0515  1903               	skipnz
  2068     0516  0AF3               	incf	___awdiv@dividend+1,f
  2069     0517                     l1279:
  2070     0517  3001               	movlw	1
  2071     0518  00F4               	movwf	??___awdiv
  2072     0519  0874               	movf	??___awdiv,w
  2073     051A  06F6               	xorwf	___awdiv@sign,f
  2074     051B                     l1281:
  2075     051B  01F7               	clrf	___awdiv@quotient
  2076     051C  01F8               	clrf	___awdiv@quotient+1
  2077     051D                     l1283:
  2078     051D  0870               	movf	___awdiv@divisor,w
  2079     051E  0471               	iorwf	___awdiv@divisor+1,w
  2080     051F  1903               	btfsc	3,2
  2081     0520  2D22               	goto	u741
  2082     0521  2D23               	goto	u740
  2083     0522                     u741:
  2084     0522  2D5A               	goto	l1303
  2085     0523                     u740:
  2086     0523                     l1285:
  2087     0523  01F5               	clrf	___awdiv@counter
  2088     0524  0AF5               	incf	___awdiv@counter,f
  2089     0525  2D31               	goto	l1291
  2090     0526                     l1287:
  2091     0526  3001               	movlw	1
  2092     0527                     u755:
  2093     0527  1003               	clrc
  2094     0528  0DF0               	rlf	___awdiv@divisor,f
  2095     0529  0DF1               	rlf	___awdiv@divisor+1,f
  2096     052A  3EFF               	addlw	-1
  2097     052B  1D03               	skipz
  2098     052C  2D27               	goto	u755
  2099     052D                     l1289:
  2100     052D  3001               	movlw	1
  2101     052E  00F4               	movwf	??___awdiv
  2102     052F  0874               	movf	??___awdiv,w
  2103     0530  07F5               	addwf	___awdiv@counter,f
  2104     0531                     l1291:
  2105     0531  1FF1               	btfss	___awdiv@divisor+1,7
  2106     0532  2D34               	goto	u761
  2107     0533  2D35               	goto	u760
  2108     0534                     u761:
  2109     0534  2D26               	goto	l1287
  2110     0535                     u760:
  2111     0535                     l1293:
  2112     0535  3001               	movlw	1
  2113     0536                     u775:
  2114     0536  1003               	clrc
  2115     0537  0DF7               	rlf	___awdiv@quotient,f
  2116     0538  0DF8               	rlf	___awdiv@quotient+1,f
  2117     0539  3EFF               	addlw	-1
  2118     053A  1D03               	skipz
  2119     053B  2D36               	goto	u775
  2120     053C  0871               	movf	___awdiv@divisor+1,w
  2121     053D  0273               	subwf	___awdiv@dividend+1,w
  2122     053E  1D03               	skipz
  2123     053F  2D42               	goto	u785
  2124     0540  0870               	movf	___awdiv@divisor,w
  2125     0541  0272               	subwf	___awdiv@dividend,w
  2126     0542                     u785:
  2127     0542  1C03               	skipc
  2128     0543  2D45               	goto	u781
  2129     0544  2D46               	goto	u780
  2130     0545                     u781:
  2131     0545  2D4D               	goto	l1299
  2132     0546                     u780:
  2133     0546                     l1295:
  2134     0546  0870               	movf	___awdiv@divisor,w
  2135     0547  02F2               	subwf	___awdiv@dividend,f
  2136     0548  0871               	movf	___awdiv@divisor+1,w
  2137     0549  1C03               	skipc
  2138     054A  03F3               	decf	___awdiv@dividend+1,f
  2139     054B  02F3               	subwf	___awdiv@dividend+1,f
  2140     054C                     l1297:
  2141     054C  1477               	bsf	___awdiv@quotient,0
  2142     054D                     l1299:
  2143     054D  3001               	movlw	1
  2144     054E                     u795:
  2145     054E  1003               	clrc
  2146     054F  0CF1               	rrf	___awdiv@divisor+1,f
  2147     0550  0CF0               	rrf	___awdiv@divisor,f
  2148     0551  3EFF               	addlw	-1
  2149     0552  1D03               	skipz
  2150     0553  2D4E               	goto	u795
  2151     0554                     l1301:
  2152     0554  3001               	movlw	1
  2153     0555  02F5               	subwf	___awdiv@counter,f
  2154     0556  1D03               	btfss	3,2
  2155     0557  2D59               	goto	u801
  2156     0558  2D5A               	goto	u800
  2157     0559                     u801:
  2158     0559  2D35               	goto	l1293
  2159     055A                     u800:
  2160     055A                     l1303:
  2161     055A  0876               	movf	___awdiv@sign,w
  2162     055B  1903               	btfsc	3,2
  2163     055C  2D5E               	goto	u811
  2164     055D  2D5F               	goto	u810
  2165     055E                     u811:
  2166     055E  2D64               	goto	l1307
  2167     055F                     u810:
  2168     055F                     l1305:
  2169     055F  09F7               	comf	___awdiv@quotient,f
  2170     0560  09F8               	comf	___awdiv@quotient+1,f
  2171     0561  0AF7               	incf	___awdiv@quotient,f
  2172     0562  1903               	skipnz
  2173     0563  0AF8               	incf	___awdiv@quotient+1,f
  2174     0564                     l1307:
  2175     0564  0878               	movf	___awdiv@quotient+1,w
  2176     0565  00F1               	movwf	?___awdiv+1
  2177     0566  0877               	movf	___awdiv@quotient,w
  2178     0567  00F0               	movwf	?___awdiv
  2179     0568                     l444:
  2180     0568  0008               	return
  2181     0569                     __end_of___awdiv:
  2182                           
  2183                           	psect	text8
  2184     035E                     __ptext8:	
  2185 ;; *************** function _Lcd_Write_String *****************
  2186 ;; Defined at:
  2187 ;;		line 98 in file "LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  a               2    5[COMMON] PTR unsigned char 
  2190 ;;		 -> STR_1(7), RTC_display@Time(15), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  i               2   10[COMMON] int 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         2       0       0       0       0
  2203 ;;      Locals:         2       0       0       0       0
  2204 ;;      Temps:          3       0       0       0       0
  2205 ;;      Totals:         7       0       0       0       0
  2206 ;;Total ram usage:        7 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 2
  2209 ;; This function calls:
  2210 ;;		_Lcd_Write_Char
  2211 ;; This function is called by:
  2212 ;;		_RTC_display
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217     035E                     _Lcd_Write_String:	
  2218                           ;psect for function _Lcd_Write_String
  2219                           
  2220     035E                     l1235:	
  2221                           ;incstack = 0
  2222                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2223                           
  2224                           
  2225                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2226     035E  01FA               	clrf	Lcd_Write_String@i
  2227     035F  01FB               	clrf	Lcd_Write_String@i+1
  2228     0360  2B83               	goto	l1241
  2229     0361                     l1237:
  2230                           
  2231                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2232     0361  087A               	movf	Lcd_Write_String@i,w
  2233     0362  0775               	addwf	Lcd_Write_String@a,w
  2234     0363  00F8               	movwf	??_Lcd_Write_String+1
  2235     0364  0876               	movf	Lcd_Write_String@a+1,w
  2236     0365  00F7               	movwf	??_Lcd_Write_String
  2237     0366  1803               	skipnc
  2238     0367  0AF7               	incf	??_Lcd_Write_String,f
  2239     0368  1FFA               	btfss	Lcd_Write_String@i,7
  2240     0369  2B6B               	goto	u620
  2241     036A  03F7               	decf	??_Lcd_Write_String,f
  2242     036B                     u620:
  2243     036B  0877               	movf	??_Lcd_Write_String,w
  2244     036C  00F9               	movwf	??_Lcd_Write_String+2
  2245     036D  0879               	movf	??_Lcd_Write_String+2,w
  2246     036E  1283               	bcf	3,5	;RP0=0, select bank0
  2247     036F  1303               	bcf	3,6	;RP1=0, select bank0
  2248     0370  00FF               	movwf	btemp+1
  2249     0371  0878               	movf	??_Lcd_Write_String+1,w
  2250     0372  0084               	movwf	4
  2251     0373  120A  118A  2003  120A  118A  	fcall	stringtab
  2252     0378  120A  118A  2329  120A  118A  	fcall	_Lcd_Write_Char
  2253     037D                     l1239:
  2254     037D  3001               	movlw	1
  2255     037E  07FA               	addwf	Lcd_Write_String@i,f
  2256     037F  1803               	skipnc
  2257     0380  0AFB               	incf	Lcd_Write_String@i+1,f
  2258     0381  3000               	movlw	0
  2259     0382  07FB               	addwf	Lcd_Write_String@i+1,f
  2260     0383                     l1241:
  2261     0383  087A               	movf	Lcd_Write_String@i,w
  2262     0384  0775               	addwf	Lcd_Write_String@a,w
  2263     0385  00F8               	movwf	??_Lcd_Write_String+1
  2264     0386  0876               	movf	Lcd_Write_String@a+1,w
  2265     0387  00F7               	movwf	??_Lcd_Write_String
  2266     0388  1803               	skipnc
  2267     0389  0AF7               	incf	??_Lcd_Write_String,f
  2268     038A  1FFA               	btfss	Lcd_Write_String@i,7
  2269     038B  2B8D               	goto	u630
  2270     038C  03F7               	decf	??_Lcd_Write_String,f
  2271     038D                     u630:
  2272     038D  0877               	movf	??_Lcd_Write_String,w
  2273     038E  00F9               	movwf	??_Lcd_Write_String+2
  2274     038F  0879               	movf	??_Lcd_Write_String+2,w
  2275     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2276     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2277     0392  00FF               	movwf	btemp+1
  2278     0393  0878               	movf	??_Lcd_Write_String+1,w
  2279     0394  0084               	movwf	4
  2280     0395  120A  118A  2003  120A  118A  	fcall	stringtab
  2281     039A  3A00               	xorlw	0
  2282     039B  1D03               	skipz
  2283     039C  2B9E               	goto	u641
  2284     039D  2B9F               	goto	u640
  2285     039E                     u641:
  2286     039E  2B61               	goto	l1237
  2287     039F                     u640:
  2288     039F                     l199:
  2289     039F  0008               	return
  2290     03A0                     __end_of_Lcd_Write_String:
  2291                           
  2292                           	psect	text9
  2293     0329                     __ptext9:	
  2294 ;; *************** function _Lcd_Write_Char *****************
  2295 ;; Defined at:
  2296 ;;		line 83 in file "LCD.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  a               1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  a               1    4[COMMON] unsigned char 
  2301 ;;  y               1    3[COMMON] unsigned char 
  2302 ;;  temp            1    2[COMMON] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         3       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0
  2315 ;;      Totals:         4       0       0       0       0
  2316 ;;Total ram usage:        4 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 1
  2319 ;; This function calls:
  2320 ;;		_Lcd_Port
  2321 ;; This function is called by:
  2322 ;;		_Lcd_Write_String
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0329                     _Lcd_Write_Char:	
  2327                           ;psect for function _Lcd_Write_Char
  2328                           
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2332                           ;Lcd_Write_Char@a stored from wreg
  2333     0329  00F4               	movwf	Lcd_Write_Char@a
  2334     032A                     l1173:
  2335                           
  2336                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2337     032A  0874               	movf	Lcd_Write_Char@a,w
  2338     032B  390F               	andlw	15
  2339     032C  00F2               	movwf	Lcd_Write_Char@temp
  2340                           
  2341                           ;LCD.c: 86:     y = a & 0xF0;
  2342     032D  0874               	movf	Lcd_Write_Char@a,w
  2343     032E  39F0               	andlw	240
  2344     032F  00F3               	movwf	Lcd_Write_Char@y
  2345     0330                     l1175:
  2346                           
  2347                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2348     0330  1283               	bcf	3,5	;RP0=0, select bank0
  2349     0331  1303               	bcf	3,6	;RP1=0, select bank0
  2350     0332  1707               	bsf	7,6	;volatile
  2351     0333                     l1177:
  2352                           
  2353                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2354     0333  0873               	movf	Lcd_Write_Char@y,w
  2355     0334  00F1               	movwf	??_Lcd_Write_Char
  2356     0335  3004               	movlw	4
  2357     0336                     u525:
  2358     0336  1003               	clrc
  2359     0337  0CF1               	rrf	??_Lcd_Write_Char,f
  2360     0338  3EFF               	addlw	-1
  2361     0339  1D03               	skipz
  2362     033A  2B36               	goto	u525
  2363     033B  0871               	movf	??_Lcd_Write_Char,w
  2364     033C  120A  118A  2278  120A  118A  	fcall	_Lcd_Port
  2365     0341                     l1179:
  2366                           
  2367                           ;LCD.c: 89:     RC7 = 1;
  2368     0341  1283               	bcf	3,5	;RP0=0, select bank0
  2369     0342  1303               	bcf	3,6	;RP1=0, select bank0
  2370     0343  1787               	bsf	7,7	;volatile
  2371     0344                     l1181:
  2372                           
  2373                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2374     0344  301A               	movlw	26
  2375     0345  00F1               	movwf	??_Lcd_Write_Char
  2376     0346                     u987:
  2377     0346  0BF1               	decfsz	??_Lcd_Write_Char,f
  2378     0347  2B46               	goto	u987
  2379     0348  0000               	nop
  2380     0349                     l1183:
  2381                           
  2382                           ;LCD.c: 91:     RC7 = 0;
  2383     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2384     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2385     034B  1387               	bcf	7,7	;volatile
  2386     034C                     l1185:
  2387                           
  2388                           ;LCD.c: 92:     Lcd_Port(temp);
  2389     034C  0872               	movf	Lcd_Write_Char@temp,w
  2390     034D  120A  118A  2278  120A  118A  	fcall	_Lcd_Port
  2391     0352                     l1187:
  2392                           
  2393                           ;LCD.c: 93:     RC7 = 1;
  2394     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2395     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2396     0354  1787               	bsf	7,7	;volatile
  2397     0355                     l1189:
  2398                           
  2399                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2400     0355  301A               	movlw	26
  2401     0356  00F1               	movwf	??_Lcd_Write_Char
  2402     0357                     u997:
  2403     0357  0BF1               	decfsz	??_Lcd_Write_Char,f
  2404     0358  2B57               	goto	u997
  2405     0359  0000               	nop
  2406     035A                     l1191:
  2407                           
  2408                           ;LCD.c: 95:     RC7 = 0;
  2409     035A  1283               	bcf	3,5	;RP0=0, select bank0
  2410     035B  1303               	bcf	3,6	;RP1=0, select bank0
  2411     035C  1387               	bcf	7,7	;volatile
  2412     035D                     l193:
  2413     035D  0008               	return
  2414     035E                     __end_of_Lcd_Write_Char:
  2415                           
  2416                           	psect	text10
  2417     03A0                     __ptext10:	
  2418 ;; *************** function _Lcd_Set_Cursor *****************
  2419 ;; Defined at:
  2420 ;;		line 48 in file "LCD.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  a               1    wreg     unsigned char 
  2423 ;;  b               1    4[COMMON] unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  a               1    6[COMMON] unsigned char 
  2426 ;;  temp            1    9[COMMON] unsigned char 
  2427 ;;  y               1    8[COMMON] unsigned char 
  2428 ;;  z               1    7[COMMON] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         1       0       0       0       0
  2439 ;;      Locals:         4       0       0       0       0
  2440 ;;      Temps:          1       0       0       0       0
  2441 ;;      Totals:         6       0       0       0       0
  2442 ;;Total ram usage:        6 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 2
  2445 ;; This function calls:
  2446 ;;		_Lcd_Cmd
  2447 ;; This function is called by:
  2448 ;;		_RTC_display
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453     03A0                     _Lcd_Set_Cursor:	
  2454                           ;psect for function _Lcd_Set_Cursor
  2455                           
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2459                           ;Lcd_Set_Cursor@a stored from wreg
  2460     03A0  00F6               	movwf	Lcd_Set_Cursor@a
  2461     03A1                     l1215:
  2462                           
  2463                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2464     03A1  0376               	decf	Lcd_Set_Cursor@a,w
  2465     03A2  1D03               	btfss	3,2
  2466     03A3  2BA5               	goto	u581
  2467     03A4  2BA6               	goto	u580
  2468     03A5                     u581:
  2469     03A5  2BC3               	goto	l1225
  2470     03A6                     u580:
  2471     03A6                     l1217:
  2472                           
  2473                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2474     03A6  0874               	movf	Lcd_Set_Cursor@b,w
  2475     03A7  3E7F               	addlw	127
  2476     03A8  00F9               	movwf	Lcd_Set_Cursor@temp
  2477                           
  2478                           ;LCD.c: 52:         z = temp >> 4;
  2479     03A9  0879               	movf	Lcd_Set_Cursor@temp,w
  2480     03AA  00F5               	movwf	??_Lcd_Set_Cursor
  2481     03AB  3004               	movlw	4
  2482     03AC                     u595:
  2483     03AC  1003               	clrc
  2484     03AD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2485     03AE  3EFF               	addlw	-1
  2486     03AF  1D03               	skipz
  2487     03B0  2BAC               	goto	u595
  2488     03B1  0875               	movf	??_Lcd_Set_Cursor,w
  2489     03B2  00F7               	movwf	Lcd_Set_Cursor@z
  2490     03B3                     l1219:
  2491                           
  2492                           ;LCD.c: 53:         y = temp & 0x0F;
  2493     03B3  0879               	movf	Lcd_Set_Cursor@temp,w
  2494     03B4  390F               	andlw	15
  2495     03B5  00F8               	movwf	Lcd_Set_Cursor@y
  2496     03B6                     l1221:
  2497                           
  2498                           ;LCD.c: 54:         Lcd_Cmd(z);
  2499     03B6  0877               	movf	Lcd_Set_Cursor@z,w
  2500     03B7  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2501     03BC                     l1223:
  2502                           
  2503                           ;LCD.c: 55:         Lcd_Cmd(y);
  2504     03BC  0878               	movf	Lcd_Set_Cursor@y,w
  2505     03BD  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2506                           
  2507                           ;LCD.c: 56:     } else if (a == 2) {
  2508     03C2  2BE5               	goto	l187
  2509     03C3                     l1225:
  2510     03C3  3002               	movlw	2
  2511     03C4  0676               	xorwf	Lcd_Set_Cursor@a,w
  2512     03C5  1D03               	btfss	3,2
  2513     03C6  2BC8               	goto	u601
  2514     03C7  2BC9               	goto	u600
  2515     03C8                     u601:
  2516     03C8  2BE5               	goto	l187
  2517     03C9                     u600:
  2518     03C9                     l1227:
  2519                           
  2520                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2521     03C9  0874               	movf	Lcd_Set_Cursor@b,w
  2522     03CA  3EBF               	addlw	191
  2523     03CB  00F9               	movwf	Lcd_Set_Cursor@temp
  2524                           
  2525                           ;LCD.c: 58:         z = temp >> 4;
  2526     03CC  0879               	movf	Lcd_Set_Cursor@temp,w
  2527     03CD  00F5               	movwf	??_Lcd_Set_Cursor
  2528     03CE  3004               	movlw	4
  2529     03CF                     u615:
  2530     03CF  1003               	clrc
  2531     03D0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2532     03D1  3EFF               	addlw	-1
  2533     03D2  1D03               	skipz
  2534     03D3  2BCF               	goto	u615
  2535     03D4  0875               	movf	??_Lcd_Set_Cursor,w
  2536     03D5  00F7               	movwf	Lcd_Set_Cursor@z
  2537     03D6                     l1229:
  2538                           
  2539                           ;LCD.c: 59:         y = temp & 0x0F;
  2540     03D6  0879               	movf	Lcd_Set_Cursor@temp,w
  2541     03D7  390F               	andlw	15
  2542     03D8  00F8               	movwf	Lcd_Set_Cursor@y
  2543     03D9                     l1231:
  2544                           
  2545                           ;LCD.c: 60:         Lcd_Cmd(z);
  2546     03D9  0877               	movf	Lcd_Set_Cursor@z,w
  2547     03DA  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2548     03DF                     l1233:
  2549                           
  2550                           ;LCD.c: 61:         Lcd_Cmd(y);
  2551     03DF  0878               	movf	Lcd_Set_Cursor@y,w
  2552     03E0  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2553     03E5                     l187:
  2554     03E5  0008               	return
  2555     03E6                     __end_of_Lcd_Set_Cursor:
  2556                           
  2557                           	psect	text11
  2558     043F                     __ptext11:	
  2559 ;; *************** function _Lcd_Init *****************
  2560 ;; Defined at:
  2561 ;;		line 65 in file "LCD.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, pclath, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          2       0       0       0       0
  2578 ;;      Totals:         2       0       0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 2
  2582 ;; This function calls:
  2583 ;;		_Lcd_Cmd
  2584 ;;		_Lcd_Port
  2585 ;; This function is called by:
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590     043F                     _Lcd_Init:	
  2591                           ;psect for function _Lcd_Init
  2592                           
  2593     043F                     l1413:	
  2594                           ;incstack = 0
  2595                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2596                           
  2597                           
  2598                           ;LCD.c: 66:     Lcd_Port(0x00);
  2599     043F  3000               	movlw	0
  2600     0440  120A  118A  2278  120A  118A  	fcall	_Lcd_Port
  2601     0445                     l1415:
  2602                           
  2603                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2604     0445  3034               	movlw	52
  2605     0446  00F5               	movwf	??_Lcd_Init+1
  2606     0447  30F1               	movlw	241
  2607     0448  00F4               	movwf	??_Lcd_Init
  2608     0449                     u1007:
  2609     0449  0BF4               	decfsz	??_Lcd_Init,f
  2610     044A  2C49               	goto	u1007
  2611     044B  0BF5               	decfsz	??_Lcd_Init+1,f
  2612     044C  2C49               	goto	u1007
  2613     044D  2C4E               	nop2
  2614     044E                     l1417:
  2615                           
  2616                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2617     044E  3003               	movlw	3
  2618     044F  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2619                           
  2620                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2621     0454  300D               	movlw	13
  2622     0455  00F5               	movwf	??_Lcd_Init+1
  2623     0456  30FB               	movlw	251
  2624     0457  00F4               	movwf	??_Lcd_Init
  2625     0458                     u1017:
  2626     0458  0BF4               	decfsz	??_Lcd_Init,f
  2627     0459  2C58               	goto	u1017
  2628     045A  0BF5               	decfsz	??_Lcd_Init+1,f
  2629     045B  2C58               	goto	u1017
  2630     045C  2C5D               	nop2
  2631     045D                     l1419:
  2632                           
  2633                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2634     045D  3003               	movlw	3
  2635     045E  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2636     0463                     l1421:
  2637                           
  2638                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2639     0463  301D               	movlw	29
  2640     0464  00F5               	movwf	??_Lcd_Init+1
  2641     0465  3091               	movlw	145
  2642     0466  00F4               	movwf	??_Lcd_Init
  2643     0467                     u1027:
  2644     0467  0BF4               	decfsz	??_Lcd_Init,f
  2645     0468  2C67               	goto	u1027
  2646     0469  0BF5               	decfsz	??_Lcd_Init+1,f
  2647     046A  2C67               	goto	u1027
  2648                           
  2649                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2650     046B  3003               	movlw	3
  2651     046C  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2652                           
  2653                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2654     0471  3002               	movlw	2
  2655     0472  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2656                           
  2657                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2658     0477  3002               	movlw	2
  2659     0478  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2660                           
  2661                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2662     047D  3008               	movlw	8
  2663     047E  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2664                           
  2665                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2666     0483  3000               	movlw	0
  2667     0484  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2668                           
  2669                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2670     0489  300C               	movlw	12
  2671     048A  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2672                           
  2673                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2674     048F  3000               	movlw	0
  2675     0490  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2676                           
  2677                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2678     0495  3006               	movlw	6
  2679     0496  120A  118A  2224  120A  118A  	fcall	_Lcd_Cmd
  2680     049B                     l190:
  2681     049B  0008               	return
  2682     049C                     __end_of_Lcd_Init:
  2683                           
  2684                           	psect	text12
  2685     0224                     __ptext12:	
  2686 ;; *************** function _Lcd_Cmd *****************
  2687 ;; Defined at:
  2688 ;;		line 35 in file "LCD.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  a               1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  a               1    3[COMMON] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       0       0       0       0
  2703 ;;      Locals:         1       0       0       0       0
  2704 ;;      Temps:          2       0       0       0       0
  2705 ;;      Totals:         3       0       0       0       0
  2706 ;;Total ram usage:        3 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 1
  2709 ;; This function calls:
  2710 ;;		_Lcd_Port
  2711 ;; This function is called by:
  2712 ;;		_Lcd_Set_Cursor
  2713 ;;		_Lcd_Init
  2714 ;;		_Lcd_Clear
  2715 ;;		_Lcd_Shift_Right
  2716 ;;		_Lcd_Shift_Left
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720     0224                     _Lcd_Cmd:	
  2721                           ;psect for function _Lcd_Cmd
  2722                           
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2726                           ;Lcd_Cmd@a stored from wreg
  2727     0224  00F3               	movwf	Lcd_Cmd@a
  2728     0225                     l1163:
  2729                           
  2730                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2731     0225  1283               	bcf	3,5	;RP0=0, select bank0
  2732     0226  1303               	bcf	3,6	;RP1=0, select bank0
  2733     0227  1307               	bcf	7,6	;volatile
  2734     0228                     l1165:
  2735                           
  2736                           ;LCD.c: 37:     Lcd_Port(a);
  2737     0228  0873               	movf	Lcd_Cmd@a,w
  2738     0229  120A  118A  2278  120A  118A  	fcall	_Lcd_Port
  2739     022E                     l1167:
  2740                           
  2741                           ;LCD.c: 38:     RC7 = 1;
  2742     022E  1283               	bcf	3,5	;RP0=0, select bank0
  2743     022F  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0230  1787               	bsf	7,7	;volatile
  2745     0231                     l1169:
  2746                           
  2747                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2748     0231  300B               	movlw	11
  2749     0232  00F2               	movwf	??_Lcd_Cmd+1
  2750     0233  3062               	movlw	98
  2751     0234  00F1               	movwf	??_Lcd_Cmd
  2752     0235                     u1037:
  2753     0235  0BF1               	decfsz	??_Lcd_Cmd,f
  2754     0236  2A35               	goto	u1037
  2755     0237  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2756     0238  2A35               	goto	u1037
  2757     0239  0000               	nop
  2758     023A                     l1171:
  2759                           
  2760                           ;LCD.c: 40:     RC7 = 0;
  2761     023A  1283               	bcf	3,5	;RP0=0, select bank0
  2762     023B  1303               	bcf	3,6	;RP1=0, select bank0
  2763     023C  1387               	bcf	7,7	;volatile
  2764     023D                     l178:
  2765     023D  0008               	return
  2766     023E                     __end_of_Lcd_Cmd:
  2767                           
  2768                           	psect	text13
  2769     0278                     __ptext13:	
  2770 ;; *************** function _Lcd_Port *****************
  2771 ;; Defined at:
  2772 ;;		line 13 in file "LCD.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  a               1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  a               1    0[COMMON] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2786 ;;      Params:         0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0
  2789 ;;      Totals:         1       0       0       0       0
  2790 ;;Total ram usage:        1 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_Lcd_Cmd
  2796 ;;		_Lcd_Init
  2797 ;;		_Lcd_Write_Char
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801     0278                     _Lcd_Port:	
  2802                           ;psect for function _Lcd_Port
  2803                           
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _Lcd_Port: [wreg]
  2807                           ;Lcd_Port@a stored from wreg
  2808     0278  00F0               	movwf	Lcd_Port@a
  2809     0279                     l1153:
  2810                           
  2811                           ;LCD.c: 14:     if (a & 1)
  2812     0279  1C70               	btfss	Lcd_Port@a,0
  2813     027A  2A7C               	goto	u481
  2814     027B  2A7D               	goto	u480
  2815     027C                     u481:
  2816     027C  2A81               	goto	l167
  2817     027D                     u480:
  2818     027D                     l1155:
  2819                           
  2820                           ;LCD.c: 15:         RD4 = 1;
  2821     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2822     027E  1303               	bcf	3,6	;RP1=0, select bank0
  2823     027F  1608               	bsf	8,4	;volatile
  2824     0280  2A84               	goto	l168
  2825     0281                     l167:	
  2826                           ;LCD.c: 16:     else
  2827                           
  2828                           
  2829                           ;LCD.c: 17:         RD4 = 0;
  2830     0281  1283               	bcf	3,5	;RP0=0, select bank0
  2831     0282  1303               	bcf	3,6	;RP1=0, select bank0
  2832     0283  1208               	bcf	8,4	;volatile
  2833     0284                     l168:
  2834                           
  2835                           ;LCD.c: 19:     if (a & 2)
  2836     0284  1CF0               	btfss	Lcd_Port@a,1
  2837     0285  2A87               	goto	u491
  2838     0286  2A88               	goto	u490
  2839     0287                     u491:
  2840     0287  2A8A               	goto	l169
  2841     0288                     u490:
  2842     0288                     l1157:
  2843                           
  2844                           ;LCD.c: 20:         RD5 = 1;
  2845     0288  1688               	bsf	8,5	;volatile
  2846     0289  2A8B               	goto	l170
  2847     028A                     l169:	
  2848                           ;LCD.c: 21:     else
  2849                           
  2850                           
  2851                           ;LCD.c: 22:         RD5 = 0;
  2852     028A  1288               	bcf	8,5	;volatile
  2853     028B                     l170:
  2854                           
  2855                           ;LCD.c: 24:     if (a & 4)
  2856     028B  1D70               	btfss	Lcd_Port@a,2
  2857     028C  2A8E               	goto	u501
  2858     028D  2A8F               	goto	u500
  2859     028E                     u501:
  2860     028E  2A91               	goto	l171
  2861     028F                     u500:
  2862     028F                     l1159:
  2863                           
  2864                           ;LCD.c: 25:         RD6 = 1;
  2865     028F  1708               	bsf	8,6	;volatile
  2866     0290  2A92               	goto	l172
  2867     0291                     l171:	
  2868                           ;LCD.c: 26:     else
  2869                           
  2870                           
  2871                           ;LCD.c: 27:         RD6 = 0;
  2872     0291  1308               	bcf	8,6	;volatile
  2873     0292                     l172:
  2874                           
  2875                           ;LCD.c: 29:     if (a & 8)
  2876     0292  1DF0               	btfss	Lcd_Port@a,3
  2877     0293  2A95               	goto	u511
  2878     0294  2A96               	goto	u510
  2879     0295                     u511:
  2880     0295  2A98               	goto	l173
  2881     0296                     u510:
  2882     0296                     l1161:
  2883                           
  2884                           ;LCD.c: 30:         RD7 = 1;
  2885     0296  1788               	bsf	8,7	;volatile
  2886     0297  2A99               	goto	l175
  2887     0298                     l173:	
  2888                           ;LCD.c: 31:     else
  2889                           
  2890                           
  2891                           ;LCD.c: 32:         RD7 = 0;
  2892     0298  1388               	bcf	8,7	;volatile
  2893     0299                     l175:
  2894     0299  0008               	return
  2895     029A                     __end_of_Lcd_Port:
  2896                           
  2897                           	psect	text14
  2898     01CF                     __ptext14:	
  2899 ;; *************** function _I2C_Master_Write *****************
  2900 ;; Defined at:
  2901 ;;		line 65 in file "I2C.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;  d               2    0[COMMON] unsigned int 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         2       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         2       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 1
  2922 ;; This function calls:
  2923 ;;		_I2C_Master_Wait
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     01CF                     _I2C_Master_Write:	
  2930                           ;psect for function _I2C_Master_Write
  2931                           
  2932     01CF                     l1361:	
  2933                           ;incstack = 0
  2934                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2935                           
  2936                           
  2937                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2938     01CF  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  2939     01D4                     l1363:
  2940                           
  2941                           ;I2C.c: 68:     SSPBUF = d;
  2942     01D4  0870               	movf	I2C_Master_Write@d,w
  2943     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2944     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2945     01D7  0093               	movwf	19	;volatile
  2946     01D8                     l47:
  2947     01D8  0008               	return
  2948     01D9                     __end_of_I2C_Master_Write:
  2949                           
  2950                           	psect	text15
  2951     01C6                     __ptext15:	
  2952 ;; *************** function _I2C_Master_Stop *****************
  2953 ;; Defined at:
  2954 ;;		line 55 in file "I2C.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 1
  2975 ;; This function calls:
  2976 ;;		_I2C_Master_Wait
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982     01C6                     _I2C_Master_Stop:	
  2983                           ;psect for function _I2C_Master_Stop
  2984                           
  2985     01C6                     l1357:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2988                           
  2989                           
  2990                           ;I2C.c: 57:     I2C_Master_Wait();
  2991     01C6  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  2992     01CB                     l1359:
  2993                           
  2994                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2995     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2996     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2997     01CD  1511               	bsf	17,2	;volatile
  2998     01CE                     l44:
  2999     01CE  0008               	return
  3000     01CF                     __end_of_I2C_Master_Stop:
  3001                           
  3002                           	psect	text16
  3003     01BD                     __ptext16:	
  3004 ;; *************** function _I2C_Master_Start *****************
  3005 ;; Defined at:
  3006 ;;		line 39 in file "I2C.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; Hardware stack levels required when called: 1
  3027 ;; This function calls:
  3028 ;;		_I2C_Master_Wait
  3029 ;; This function is called by:
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034     01BD                     _I2C_Master_Start:	
  3035                           ;psect for function _I2C_Master_Start
  3036                           
  3037     01BD                     l1349:	
  3038                           ;incstack = 0
  3039                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3040                           
  3041                           
  3042                           ;I2C.c: 41:     I2C_Master_Wait();
  3043     01BD  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  3044     01C2                     l1351:
  3045                           
  3046                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3047     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3048     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3049     01C4  1411               	bsf	17,0	;volatile
  3050     01C5                     l38:
  3051     01C5  0008               	return
  3052     01C6                     __end_of_I2C_Master_Start:
  3053                           
  3054                           	psect	text17
  3055     01B4                     __ptext17:	
  3056 ;; *************** function _I2C_Master_RepeatedStart *****************
  3057 ;; Defined at:
  3058 ;;		line 47 in file "I2C.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0, pclath, cstack
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3072 ;;      Params:         0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0
  3075 ;;      Totals:         0       0       0       0       0
  3076 ;;Total ram usage:        0 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 1
  3079 ;; This function calls:
  3080 ;;		_I2C_Master_Wait
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086     01B4                     _I2C_Master_RepeatedStart:	
  3087                           ;psect for function _I2C_Master_RepeatedStart
  3088                           
  3089     01B4                     l1353:	
  3090                           ;incstack = 0
  3091                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3092                           
  3093                           
  3094                           ;I2C.c: 49:     I2C_Master_Wait();
  3095     01B4  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  3096     01B9                     l1355:
  3097                           
  3098                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3099     01B9  1683               	bsf	3,5	;RP0=1, select bank1
  3100     01BA  1303               	bcf	3,6	;RP1=0, select bank1
  3101     01BB  1491               	bsf	17,1	;volatile
  3102     01BC                     l41:
  3103     01BC  0008               	return
  3104     01BD                     __end_of_I2C_Master_RepeatedStart:
  3105                           
  3106                           	psect	text18
  3107     029A                     __ptext18:	
  3108 ;; *************** function _I2C_Master_Read *****************
  3109 ;; Defined at:
  3110 ;;		line 74 in file "I2C.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  a               2    0[COMMON] unsigned short 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  temp            2    4[COMMON] unsigned short 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2    0[COMMON] unsigned short 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, pclath, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3124 ;;      Params:         2       0       0       0       0
  3125 ;;      Locals:         2       0       0       0       0
  3126 ;;      Temps:          2       0       0       0       0
  3127 ;;      Totals:         6       0       0       0       0
  3128 ;;Total ram usage:        6 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 1
  3131 ;; This function calls:
  3132 ;;		_I2C_Master_Wait
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138     029A                     _I2C_Master_Read:	
  3139                           ;psect for function _I2C_Master_Read
  3140                           
  3141     029A                     l1365:	
  3142                           ;incstack = 0
  3143                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3144                           
  3145                           
  3146                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3147     029A  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  3148     029F                     l1367:
  3149                           
  3150                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3151     029F  1683               	bsf	3,5	;RP0=1, select bank1
  3152     02A0  1303               	bcf	3,6	;RP1=0, select bank1
  3153     02A1  1591               	bsf	17,3	;volatile
  3154                           
  3155                           ;I2C.c: 79:     I2C_Master_Wait();
  3156     02A2  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  3157     02A7                     l1369:
  3158                           
  3159                           ;I2C.c: 80:     temp = SSPBUF;
  3160     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3161     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3162     02A9  0813               	movf	19,w	;volatile
  3163     02AA  00F2               	movwf	??_I2C_Master_Read
  3164     02AB  01F3               	clrf	??_I2C_Master_Read+1
  3165     02AC  0872               	movf	??_I2C_Master_Read,w
  3166     02AD  00F4               	movwf	I2C_Master_Read@temp
  3167     02AE  0873               	movf	??_I2C_Master_Read+1,w
  3168     02AF  00F5               	movwf	I2C_Master_Read@temp+1
  3169     02B0                     l1371:
  3170                           
  3171                           ;I2C.c: 81:     I2C_Master_Wait();
  3172     02B0  120A  118A  21D9  120A  118A  	fcall	_I2C_Master_Wait
  3173     02B5                     l1373:
  3174                           
  3175                           ;I2C.c: 82:     if(a == 1){
  3176     02B5  0370               	decf	I2C_Master_Read@a,w
  3177     02B6  0471               	iorwf	I2C_Master_Read@a+1,w
  3178     02B7  1D03               	btfss	3,2
  3179     02B8  2ABA               	goto	u911
  3180     02B9  2ABB               	goto	u910
  3181     02BA                     u911:
  3182     02BA  2ABF               	goto	l50
  3183     02BB                     u910:
  3184     02BB                     l1375:
  3185                           
  3186                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3187     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  3188     02BC  1303               	bcf	3,6	;RP1=0, select bank1
  3189     02BD  1291               	bcf	17,5	;volatile
  3190                           
  3191                           ;I2C.c: 84:     }else{
  3192     02BE  2AC2               	goto	l51
  3193     02BF                     l50:
  3194                           
  3195                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3196     02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3197     02C0  1303               	bcf	3,6	;RP1=0, select bank1
  3198     02C1  1691               	bsf	17,5	;volatile
  3199     02C2                     l51:	
  3200                           ;I2C.c: 86:     }
  3201                           
  3202                           
  3203                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3204     02C2  1611               	bsf	17,4	;volatile
  3205     02C3                     l1377:
  3206                           
  3207                           ;I2C.c: 88:     return temp;
  3208     02C3  0875               	movf	I2C_Master_Read@temp+1,w
  3209     02C4  00F1               	movwf	?_I2C_Master_Read+1
  3210     02C5  0874               	movf	I2C_Master_Read@temp,w
  3211     02C6  00F0               	movwf	?_I2C_Master_Read
  3212     02C7                     l52:
  3213     02C7  0008               	return
  3214     02C8                     __end_of_I2C_Master_Read:
  3215                           
  3216                           	psect	text19
  3217     01D9                     __ptext19:	
  3218 ;; *************** function _I2C_Master_Wait *****************
  3219 ;; Defined at:
  3220 ;;		line 32 in file "I2C.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_I2C_Master_Start
  3244 ;;		_I2C_Master_RepeatedStart
  3245 ;;		_I2C_Master_Stop
  3246 ;;		_I2C_Master_Write
  3247 ;;		_I2C_Master_Read
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251     01D9                     _I2C_Master_Wait:	
  3252                           ;psect for function _I2C_Master_Wait
  3253                           
  3254     01D9                     l1207:	
  3255                           ;incstack = 0
  3256                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3257                           
  3258     01D9                     l32:	
  3259                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3260                           
  3261     01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3262     01DA  1303               	bcf	3,6	;RP1=0, select bank1
  3263     01DB  1914               	btfsc	20,2	;volatile
  3264     01DC  29DE               	goto	u551
  3265     01DD  29DF               	goto	u550
  3266     01DE                     u551:
  3267     01DE  29D9               	goto	l32
  3268     01DF                     u550:
  3269     01DF                     l1209:
  3270     01DF  0811               	movf	17,w	;volatile
  3271     01E0  391F               	andlw	31
  3272     01E1  1D03               	btfss	3,2
  3273     01E2  29E4               	goto	u561
  3274     01E3  29E5               	goto	u560
  3275     01E4                     u561:
  3276     01E4  29D9               	goto	l32
  3277     01E5                     u560:
  3278     01E5                     l35:
  3279     01E5  0008               	return
  3280     01E6                     __end_of_I2C_Master_Wait:
  3281                           
  3282                           	psect	text20
  3283     02F8                     __ptext20:	
  3284 ;; *************** function _I2C_Init *****************
  3285 ;; Defined at:
  3286 ;;		line 45 in file "Lab4master.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       4       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          0       4       0       0       0
  3303 ;;      Totals:         0       8       0       0       0
  3304 ;;Total ram usage:        8 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 1
  3307 ;; This function calls:
  3308 ;;		___lldiv
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314     02F8                     _I2C_Init:	
  3315                           ;psect for function _I2C_Init
  3316                           
  3317     02F8                     l1381:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3320                           
  3321                           
  3322                           ;Lab4master.c: 45: void I2C_Init(uint32_t i2c_clk_freq);Lab4master.c: 46: {;Lab4master.c
      +                          : 47:   SSPCON = 0x28;
  3323     02F8  3028               	movlw	40
  3324     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3325     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3326     02FB  0094               	movwf	20	;volatile
  3327     02FC                     l1383:
  3328                           
  3329                           ;Lab4master.c: 48:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3330     02FC  0840               	movf	I2C_Init@i2c_clk_freq,w
  3331     02FD  00C4               	movwf	??_I2C_Init
  3332     02FE  0841               	movf	I2C_Init@i2c_clk_freq+1,w
  3333     02FF  00C5               	movwf	??_I2C_Init+1
  3334     0300  0842               	movf	I2C_Init@i2c_clk_freq+2,w
  3335     0301  00C6               	movwf	??_I2C_Init+2
  3336     0302  0843               	movf	I2C_Init@i2c_clk_freq+3,w
  3337     0303  00C7               	movwf	??_I2C_Init+3
  3338     0304  3002               	movlw	2
  3339     0305                     u925:
  3340     0305  1003               	clrc
  3341     0306  0DC4               	rlf	??_I2C_Init,f
  3342     0307  0DC5               	rlf	??_I2C_Init+1,f
  3343     0308  0DC6               	rlf	??_I2C_Init+2,f
  3344     0309  0DC7               	rlf	??_I2C_Init+3,f
  3345     030A                     u920:
  3346     030A  3EFF               	addlw	-1
  3347     030B  1D03               	skipz
  3348     030C  2B05               	goto	u925
  3349     030D  0847               	movf	??_I2C_Init+3,w
  3350     030E  00F3               	movwf	___lldiv@divisor+3
  3351     030F  0846               	movf	??_I2C_Init+2,w
  3352     0310  00F2               	movwf	___lldiv@divisor+2
  3353     0311  0845               	movf	??_I2C_Init+1,w
  3354     0312  00F1               	movwf	___lldiv@divisor+1
  3355     0313  0844               	movf	??_I2C_Init,w
  3356     0314  00F0               	movwf	___lldiv@divisor
  3357     0315  3000               	movlw	0
  3358     0316  00F7               	movwf	___lldiv@dividend+3
  3359     0317  307A               	movlw	122
  3360     0318  00F6               	movwf	___lldiv@dividend+2
  3361     0319  3012               	movlw	18
  3362     031A  00F5               	movwf	___lldiv@dividend+1
  3363     031B  3000               	movlw	0
  3364     031C  00F4               	movwf	___lldiv@dividend
  3365     031D  120A  118A  249C  120A  118A  	fcall	___lldiv
  3366     0322  0870               	movf	?___lldiv,w
  3367     0323  3EFF               	addlw	255
  3368     0324  1683               	bsf	3,5	;RP0=1, select bank1
  3369     0325  1303               	bcf	3,6	;RP1=0, select bank1
  3370     0326  0093               	movwf	19	;volatile
  3371     0327                     l1385:
  3372                           
  3373                           ;Lab4master.c: 49:   SSPSTAT = 0;
  3374     0327  0194               	clrf	20	;volatile
  3375     0328                     l126:
  3376     0328  0008               	return
  3377     0329                     __end_of_I2C_Init:
  3378                           
  3379                           	psect	text21
  3380     049C                     __ptext21:	
  3381 ;; *************** function ___lldiv *****************
  3382 ;; Defined at:
  3383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  divisor         4    0[COMMON] unsigned long 
  3386 ;;  dividend        4    4[COMMON] unsigned long 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  quotient        4    9[COMMON] unsigned long 
  3389 ;;  counter         1   13[COMMON] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  4    0[COMMON] unsigned long 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3399 ;;      Params:         8       0       0       0       0
  3400 ;;      Locals:         5       0       0       0       0
  3401 ;;      Temps:          1       0       0       0       0
  3402 ;;      Totals:        14       0       0       0       0
  3403 ;;Total ram usage:       14 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_I2C_Init
  3409 ;;		_I2C_Master_Init
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413     049C                     ___lldiv:	
  3414                           ;psect for function ___lldiv
  3415                           
  3416     049C                     l1243:	
  3417                           ;incstack = 0
  3418                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3419                           
  3420     049C  3000               	movlw	0
  3421     049D  00FC               	movwf	___lldiv@quotient+3
  3422     049E  3000               	movlw	0
  3423     049F  00FB               	movwf	___lldiv@quotient+2
  3424     04A0  3000               	movlw	0
  3425     04A1  00FA               	movwf	___lldiv@quotient+1
  3426     04A2  3000               	movlw	0
  3427     04A3  00F9               	movwf	___lldiv@quotient
  3428     04A4  0873               	movf	___lldiv@divisor+3,w
  3429     04A5  0472               	iorwf	___lldiv@divisor+2,w
  3430     04A6  0471               	iorwf	___lldiv@divisor+1,w
  3431     04A7  0470               	iorwf	___lldiv@divisor,w
  3432     04A8  1903               	skipnz
  3433     04A9  2CAB               	goto	u651
  3434     04AA  2CAC               	goto	u650
  3435     04AB                     u651:
  3436     04AB  2CF9               	goto	l1263
  3437     04AC                     u650:
  3438     04AC                     l1245:
  3439     04AC  01FD               	clrf	___lldiv@counter
  3440     04AD  0AFD               	incf	___lldiv@counter,f
  3441     04AE  2CBC               	goto	l1249
  3442     04AF                     l1247:
  3443     04AF  3001               	movlw	1
  3444     04B0  00F8               	movwf	??___lldiv
  3445     04B1                     u665:
  3446     04B1  1003               	clrc
  3447     04B2  0DF0               	rlf	___lldiv@divisor,f
  3448     04B3  0DF1               	rlf	___lldiv@divisor+1,f
  3449     04B4  0DF2               	rlf	___lldiv@divisor+2,f
  3450     04B5  0DF3               	rlf	___lldiv@divisor+3,f
  3451     04B6  0BF8               	decfsz	??___lldiv,f
  3452     04B7  2CB1               	goto	u665
  3453     04B8  3001               	movlw	1
  3454     04B9  00F8               	movwf	??___lldiv
  3455     04BA  0878               	movf	??___lldiv,w
  3456     04BB  07FD               	addwf	___lldiv@counter,f
  3457     04BC                     l1249:
  3458     04BC  1FF3               	btfss	___lldiv@divisor+3,7
  3459     04BD  2CBF               	goto	u671
  3460     04BE  2CC0               	goto	u670
  3461     04BF                     u671:
  3462     04BF  2CAF               	goto	l1247
  3463     04C0                     u670:
  3464     04C0                     l1251:
  3465     04C0  3001               	movlw	1
  3466     04C1  00F8               	movwf	??___lldiv
  3467     04C2                     u685:
  3468     04C2  1003               	clrc
  3469     04C3  0DF9               	rlf	___lldiv@quotient,f
  3470     04C4  0DFA               	rlf	___lldiv@quotient+1,f
  3471     04C5  0DFB               	rlf	___lldiv@quotient+2,f
  3472     04C6  0DFC               	rlf	___lldiv@quotient+3,f
  3473     04C7  0BF8               	decfsz	??___lldiv,f
  3474     04C8  2CC2               	goto	u685
  3475     04C9                     l1253:
  3476     04C9  0873               	movf	___lldiv@divisor+3,w
  3477     04CA  0277               	subwf	___lldiv@dividend+3,w
  3478     04CB  1D03               	skipz
  3479     04CC  2CD7               	goto	u695
  3480     04CD  0872               	movf	___lldiv@divisor+2,w
  3481     04CE  0276               	subwf	___lldiv@dividend+2,w
  3482     04CF  1D03               	skipz
  3483     04D0  2CD7               	goto	u695
  3484     04D1  0871               	movf	___lldiv@divisor+1,w
  3485     04D2  0275               	subwf	___lldiv@dividend+1,w
  3486     04D3  1D03               	skipz
  3487     04D4  2CD7               	goto	u695
  3488     04D5  0870               	movf	___lldiv@divisor,w
  3489     04D6  0274               	subwf	___lldiv@dividend,w
  3490     04D7                     u695:
  3491     04D7  1C03               	skipc
  3492     04D8  2CDA               	goto	u691
  3493     04D9  2CDB               	goto	u690
  3494     04DA                     u691:
  3495     04DA  2CEA               	goto	l1259
  3496     04DB                     u690:
  3497     04DB                     l1255:
  3498     04DB  0870               	movf	___lldiv@divisor,w
  3499     04DC  02F4               	subwf	___lldiv@dividend,f
  3500     04DD  0871               	movf	___lldiv@divisor+1,w
  3501     04DE  1C03               	skipc
  3502     04DF  0F71               	incfsz	___lldiv@divisor+1,w
  3503     04E0  02F5               	subwf	___lldiv@dividend+1,f
  3504     04E1  0872               	movf	___lldiv@divisor+2,w
  3505     04E2  1C03               	skipc
  3506     04E3  0F72               	incfsz	___lldiv@divisor+2,w
  3507     04E4  02F6               	subwf	___lldiv@dividend+2,f
  3508     04E5  0873               	movf	___lldiv@divisor+3,w
  3509     04E6  1C03               	skipc
  3510     04E7  0F73               	incfsz	___lldiv@divisor+3,w
  3511     04E8  02F7               	subwf	___lldiv@dividend+3,f
  3512     04E9                     l1257:
  3513     04E9  1479               	bsf	___lldiv@quotient,0
  3514     04EA                     l1259:
  3515     04EA  3001               	movlw	1
  3516     04EB                     u705:
  3517     04EB  1003               	clrc
  3518     04EC  0CF3               	rrf	___lldiv@divisor+3,f
  3519     04ED  0CF2               	rrf	___lldiv@divisor+2,f
  3520     04EE  0CF1               	rrf	___lldiv@divisor+1,f
  3521     04EF  0CF0               	rrf	___lldiv@divisor,f
  3522     04F0  3EFF               	addlw	-1
  3523     04F1  1D03               	skipz
  3524     04F2  2CEB               	goto	u705
  3525     04F3                     l1261:
  3526     04F3  3001               	movlw	1
  3527     04F4  02FD               	subwf	___lldiv@counter,f
  3528     04F5  1D03               	btfss	3,2
  3529     04F6  2CF8               	goto	u711
  3530     04F7  2CF9               	goto	u710
  3531     04F8                     u711:
  3532     04F8  2CC0               	goto	l1251
  3533     04F9                     u710:
  3534     04F9                     l1263:
  3535     04F9  087C               	movf	___lldiv@quotient+3,w
  3536     04FA  00F3               	movwf	?___lldiv+3
  3537     04FB  087B               	movf	___lldiv@quotient+2,w
  3538     04FC  00F2               	movwf	?___lldiv+2
  3539     04FD  087A               	movf	___lldiv@quotient+1,w
  3540     04FE  00F1               	movwf	?___lldiv+1
  3541     04FF  0879               	movf	___lldiv@quotient,w
  3542     0500  00F0               	movwf	?___lldiv
  3543     0501                     l327:
  3544     0501  0008               	return
  3545     0502                     __end_of___lldiv:
  3546     007E                     btemp	set	126	;btemp
  3547     007E                     wtemp0	set	126
  3548                           
  3549                           	psect	idloc
  3550                           
  3551                           ;Config register IDLOC0 @ 0x2000
  3552                           ;	unspecified, using default values
  3553     2000                     	org	8192
  3554     2000  3FFF               	dw	16383
  3555                           
  3556                           ;Config register IDLOC1 @ 0x2001
  3557                           ;	unspecified, using default values
  3558     2001                     	org	8193
  3559     2001  3FFF               	dw	16383
  3560                           
  3561                           ;Config register IDLOC2 @ 0x2002
  3562                           ;	unspecified, using default values
  3563     2002                     	org	8194
  3564     2002  3FFF               	dw	16383
  3565                           
  3566                           ;Config register IDLOC3 @ 0x2003
  3567                           ;	unspecified, using default values
  3568     2003                     	org	8195
  3569     2003  3FFF               	dw	16383
  3570                           
  3571                           	psect	config
  3572                           
  3573                           ;Config register CONFIG1 @ 0x2007
  3574                           ;	Oscillator Selection bits
  3575                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3576                           ;	Watchdog Timer Enable bit
  3577                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3578                           ;	Power-up Timer Enable bit
  3579                           ;	PWRTE = OFF, PWRT disabled
  3580                           ;	RE3/MCLR pin function select bit
  3581                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3582                           ;	Code Protection bit
  3583                           ;	CP = OFF, Program memory code protection is disabled
  3584                           ;	Data Code Protection bit
  3585                           ;	CPD = OFF, Data memory code protection is disabled
  3586                           ;	Brown Out Reset Selection bits
  3587                           ;	BOREN = OFF, BOR disabled
  3588                           ;	Internal External Switchover bit
  3589                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3590                           ;	Fail-Safe Clock Monitor Enabled bit
  3591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3592                           ;	Low Voltage Programming Enable bit
  3593                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3594                           ;	In-Circuit Debugger Mode bit
  3595                           ;	DEBUG = 0x1, unprogrammed default
  3596     2007                     	org	8199
  3597     2007  20D5               	dw	8405
  3598                           
  3599                           ;Config register CONFIG2 @ 0x2008
  3600                           ;	Brown-out Reset Selection bit
  3601                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3602                           ;	Flash Program Memory Self Write Enable bits
  3603                           ;	WRT = OFF, Write protection off
  3604     2008                     	org	8200
  3605     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[7]), RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_RTC_display
    _main->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Write_String
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9577
                                              8 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3888
                                             12 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     564
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
     _Lcd_Write_String
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 06 22:35:52 2023

                               _i 0051                                 pc 0002                    ___bmul@product 0072  
                              l32 01D9                                l41 01BC                                l50 02BF  
                              l35 01E5                                l51 02C2                                l52 02C7  
                              l44 01CE                                l38 01C5                                l47 01D8  
                    ___awdiv@sign 0076                                fsr 0004                    _decimal_to_bcd 02C8  
                     _RTC_display 06A1                               l132 02F7                               l126 0328  
                             l150 0257                               l129 0223                               l170 028B  
                             l171 0291                               l139 07E6                               l172 0292  
                             l173 0298                               l317 020D                               l190 049B  
                             l327 0501                               l175 0299                               l167 0281  
                             l168 0284                               l169 028A                               l193 035D  
                             l178 023D                               l187 03E5                               l444 0568  
                             l199 039F                               l457 043E                               _GIE 005F  
                             _RD4 0044                               _RD5 0045                               _RC7 003F  
                             _RD6 0046                               _RD7 0047                               u500 028F  
                             u501 028E                               u510 0296                               u511 0295  
                             u600 03C9                               u601 03C8                               u530 01FF  
                             u531 01FE                               u620 036B                               u540 020C  
                             u525 0336                               u541 020B                               u710 04F9  
                             u550 01DF                               u630 038D                               u711 04F8  
                             u551 01DE                               u615 03CF                               u560 01E5  
                             u480 027D                               u640 039F                               u800 055A  
                             u720 0507                               u705 04EB                               u561 01E4  
                             u481 027C                               u641 039E                               u801 0559  
                             u721 0506                               u650 04AC                               u490 0288  
                             u810 055F                               u730 0512                               u651 04AB  
                             u491 0287                               u811 055E                               u731 0511  
                             u580 03A6                               u740 0523                               u900 0435  
                             u820 03EB                               u581 03A5                               u741 0522  
                             u901 0434                               u821 03EA                               u670 04C0  
                             u910 02BB                               u830 03F6                               u671 04BF  
                             u911 02BA                               u831 03F5                               u575 0217  
                             u920 030A                               u760 0535                               u840 0401  
                             u665 04B1                               u761 0534                               u841 0400  
                             u690 04DB                               u691 04DA                               u595 03AC  
                             u755 0527                               u780 0546                               u860 0413  
                             u685 04C2                               u925 0305                               u781 0545  
                             u861 0412                               u870 041D                               u695 04D7  
                             u775 0536                               u871 041C                               u855 0405  
                             u935 02DE                               u785 0542                               u890 0430  
                             u795 054E                               u891 042F                               u875 0419  
                             u885 0424                               u957 05C6                               u967 0671  
                             u977 0680                               u987 0346                               u997 0357  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                            l1201 0205                              l1203 020C                              l1211 020F  
                            l1221 03B6                              l1301 0554                              l1207 01D9  
                            l1231 03D9                              l1223 03BC                              l1215 03A1  
                            l1303 055A                              l1311 03E6                              l1209 01DF  
                            l1161 0296                              l1153 0279                              l1233 03DF  
                            l1217 03A6                              l1225 03C3                              l1241 0383  
                            l1305 055F                              l1321 03F6                              l1313 03E7  
                            l1401 0246                              l1251 04C0                              l1243 049C  
                            l1155 027D                              l1171 023A                              l1163 0225  
                            l1227 03C9                              l1219 03B3                              l1235 035E  
                            l1307 0564                              l1331 040F                              l1323 03FB  
                            l1315 03EB                              l1411 0256                              l1403 0247  
                            l1261 04F3                              l1253 04C9                              l1245 04AC  
                            l1157 0288                              l1165 0228                              l1421 0463  
                            l1413 043F                              l1229 03D6                              l1181 0344  
                            l1173 032A                              l1237 0361                              l1333 0413  
                            l1325 0401                              l1341 0430                              l1317 03F0  
                            l1405 0250                              l1255 04DB                              l1247 04AF  
                            l1263 04F9                              l1351 01C2                              l1159 028F  
                            l1167 022E                              l1415 0445                              l1191 035A  
                            l1183 0349                              l1175 0330                              l1239 037D  
                            l1271 0507                              l1343 0435                              l1335 041D  
                            l1327 0404                              l1319 03F2                              l1407 0251  
                            l1257 04E9                              l1249 04BC                              l1353 01B4  
                            l1361 01CF                              l1169 0231                              l1417 044E  
                            l1185 034C                              l1177 0333                              l1281 051B  
                            l1273 050C                              l1345 043A                              l1337 0423  
                            l1329 040B                              l1193 01FA                              l1409 0252  
                            l1441 05D2                              l1259 04EA                              l1371 02B0  
                            l1355 01B9                              l1363 01D4                              l1419 045D  
                            l1187 0352                              l1179 0341                              l1291 0531  
                            l1283 051D                              l1275 050E                              l1267 0502  
                            l1339 042A                              l1195 01FB                              l1451 05FB  
                            l1443 05DB                              l1435 0569                              l1381 02F8  
                            l1373 02B5                              l1365 029A                              l1349 01BD  
                            l1357 01C6                              l1189 0355                              l1293 0535  
                            l1285 0523                              l1277 0512                              l1269 0503  
                            l1197 01FF                              l1461 061F                              l1453 0604  
                            l1445 05E3                              l1437 05BE                              l1383 02FC  
                            l1375 02BB                              l1367 029F                              l1359 01CB  
                            l1295 0546                              l1287 0526                              l1279 0517  
                            l1199 0203                              l1391 06A1                              l1471 064A  
                            l1463 0627                              l1455 060C                              l1447 05F1  
                            l1439 05CD                              l1385 0327                              l1377 02C3  
                            l1369 02A7                              l1297 054C                              l1289 052D  
                            l1393 07DD                              l1481 0678                              l1473 064F  
                            l1465 062C                              l1457 0611                              l1449 05F6  
                            l1299 054D                              l1387 02CB                              l1395 023E  
                            l1483 0687                              l1475 0658                              l1467 0635  
                            l1459 0616                              l1397 0242                              l1485 068C  
                            l1477 0664                              l1469 0641                              l1399 0245  
                            l1487 0694                              l1479 0669                              STR_1 0013  
                            u1007 0449                              u1017 0458                              u1027 0467  
                            u1037 0235                              _PEIE 005E                 ?_Lcd_Write_String 0075  
__end_of_I2C_Master_RepeatedStart 01BD                              _main 0569                              _hour 004E  
                __end_of_I2C_Init 0329                              _year 004B                              btemp 007E  
                            start 0000                ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 023E  
               ___bmul@multiplier 0073            __end_of_decimal_to_bcd 02F8                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 0569                   __end_of___awmod 043F                             _ANSEL 0188  
                 __end_of___lldiv 0502                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                             _m_day 004D  
                           _month 004C                             _setup 023E                             pclath 000A  
                           status 0003                             wtemp0 007E              I2C_Init@i2c_clk_freq 0040  
                __end_of_Lcd_Init 049C                  __end_of_Lcd_Port 029A                   __initialization 07E7  
                    __end_of_main 06A1                   ?_decimal_to_bcd 0070                            ??_main 0048  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC1 0439                            _TRISC2 043A                            _TRISC3 043B  
                          _TRISC4 043C                            _TRISC6 043E                            _TRISC7 043F  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 01B4  
                          ___bmul 01F9                         ??___awdiv 0074                         ??___awmod 0074  
                       ??___lldiv 0078                  ___awdiv@quotient 0077                            _minute 004F  
                          _second 0050                   ___awmod@divisor 0070                   ___awmod@counter 0075  
                       ?_I2C_Init 0040                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070                      __pidataBANK0 0258  
                   __end_of_setup 0258                      ?_RTC_display 0070                    _Lcd_Set_Cursor 03A0  
                      ??_I2C_Init 0044                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 0070                        __pbssBANK0 004B                        __pmaintext 0569  
                         ?___bmul 0070            __end_of_Lcd_Set_Cursor 03E6                        ??_Lcd_Init 0074  
                      ??_Lcd_Port 0070                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003                    _Lcd_Write_Char 0329                           _Lcd_Cmd 0224  
                ??_decimal_to_bcd 0079                           ___awdiv 0502                           ___awmod 03E6  
                         ___lldiv 049C                   ?_Lcd_Set_Cursor 0074                           __ptext1 023E  
                         __ptext2 02C8                           __ptext3 06A1                           __ptext4 020E  
                         __ptext5 01F9                           __ptext6 03E6                           __ptext7 0502  
                         __ptext8 035E                           __ptext9 0329                  ___awmod@dividend 0072  
          __end_of_Lcd_Write_Char 035E              end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Read@a 0070  
                       Lcd_Port@a 0070                         _PORTCbits 0007                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A  
                  __end_of___bmul 020E                  _Lcd_Write_String 035E               start_initialization 07E7  
                  _bcd_to_decimal 020E                 ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070  
               ??_I2C_Master_Stop 0070                          ??___bmul 0071                        init_fetch0 01E6  
                     __pdataBANK0 0020                   Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073  
          __end_of_bcd_to_decimal 0224                         ___latbits 0002                     __pcstackBANK0 0040  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 01BD                  _I2C_Master_Write 01CF  
                ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070                          ?___awmod 0070  
                        ?___lldiv 0070                         __pstrings 0003                   ?_bcd_to_decimal 0070  
                        _I2C_Init 02F8              bcd_to_decimal@number 0076                   RTC_display@Date 0020  
                 RTC_display@Time 0031                          Lcd_Cmd@a 0073                       __stringbase 0012  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 043F                          _Lcd_Port 0278  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 03A0         ?_I2C_Master_RepeatedStart 0070  
                   ??_RTC_display 007C                __end_of__stringtab 0013                   _I2C_Master_Read 029A  
                 _I2C_Master_Wait 01D9                   _I2C_Master_Stop 01C6                          __ptext10 03A0  
                        __ptext11 043F                          __ptext20 02F8                          __ptext12 0224  
                        __ptext21 049C                          __ptext13 0278                          __ptext14 01CF  
                        __ptext15 01C6                          __ptext16 01BD                          __ptext17 01B4  
                        __ptext18 029A                          __ptext19 01D9              decimal_to_bcd@number 0040  
        __end_of_I2C_Master_Start 01C6          __end_of_I2C_Master_Write 01D9                          init_ram0 01EA  
             __end_of_RTC_display 07E7                Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074  
                       stringcode 000D                        _OSCCONbits 008F                  ??_bcd_to_decimal 0074  
         __end_of_I2C_Master_Read 02C8           __end_of_I2C_Master_Wait 01E6           __end_of_I2C_Master_Stop 01CF  
              Lcd_Set_Cursor@temp 0079                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                        stringdir 000D                          stringtab 0003                       _SSPCON2bits 0091  
