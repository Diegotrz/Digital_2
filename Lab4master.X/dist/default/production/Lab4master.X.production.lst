

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 24 01:24:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386     029C                     __pidataBANK0:
   387                           
   388                           ;initializer for RTC_display@Date
   389     029C  3444               	retlw	68
   390     029D  3441               	retlw	65
   391     029E  3454               	retlw	84
   392     029F  3445               	retlw	69
   393     02A0  343A               	retlw	58
   394     02A1  3420               	retlw	32
   395     02A2  3430               	retlw	48
   396     02A3  3430               	retlw	48
   397     02A4  342F               	retlw	47
   398     02A5  3430               	retlw	48
   399     02A6  3430               	retlw	48
   400     02A7  342F               	retlw	47
   401     02A8  3432               	retlw	50
   402     02A9  3430               	retlw	48
   403     02AA  3430               	retlw	48
   404     02AB  3430               	retlw	48
   405     02AC  3400               	retlw	0
   406                           
   407                           ;initializer for RTC_display@Time
   408     02AD  3454               	retlw	84
   409     02AE  3449               	retlw	73
   410     02AF  344D               	retlw	77
   411     02B0  3445               	retlw	69
   412     02B1  343A               	retlw	58
   413     02B2  3420               	retlw	32
   414     02B3  3430               	retlw	48
   415     02B4  3430               	retlw	48
   416     02B5  343A               	retlw	58
   417     02B6  3430               	retlw	48
   418     02B7  3430               	retlw	48
   419     02B8  343A               	retlw	58
   420     02B9  3430               	retlw	48
   421     02BA  3430               	retlw	48
   422     02BB  3400               	retlw	0
   423     0008                     _PORTDbits	set	8
   424     0007                     _PORTCbits	set	7
   425     0008                     _PORTD	set	8
   426     0006                     _PORTB	set	6
   427     0005                     _PORTA	set	5
   428     0013                     _SSPBUF	set	19
   429     0014                     _SSPCON	set	20
   430     0043                     _RD3	set	67
   431     0047                     _RD7	set	71
   432     0046                     _RD6	set	70
   433     0045                     _RD5	set	69
   434     0044                     _RD4	set	68
   435     0063                     _SSPIF	set	99
   436     005E                     _PEIE	set	94
   437     005F                     _GIE	set	95
   438     008F                     _OSCCONbits	set	143
   439     0088                     _TRISD	set	136
   440     0086                     _TRISB	set	134
   441     0085                     _TRISA	set	133
   442     0091                     _SSPCON2bits	set	145
   443     0087                     _TRISCbits	set	135
   444     0094                     _SSPSTAT	set	148
   445     0093                     _SSPADD	set	147
   446     0091                     _SSPCON2	set	145
   447     043F                     _TRISC7	set	1087
   448     043E                     _TRISC6	set	1086
   449     043A                     _TRISC2	set	1082
   450     0439                     _TRISC1	set	1081
   451     0463                     _SSPIE	set	1123
   452     043C                     _TRISC4	set	1084
   453     043B                     _TRISC3	set	1083
   454     0189                     _ANSELH	set	393
   455     0188                     _ANSEL	set	392
   456                           
   457                           	psect	cinit
   458     07E7                     start_initialization:	
   459                           ; #config settings
   460                           
   461     07E7                     __initialization:
   462                           
   463                           ; Initialize objects allocated to BANK0
   464     07E7  1383               	bcf	3,7	;select IRP bank0
   465     07E8  3040               	movlw	low (__pdataBANK0+32)
   466     07E9  00FD               	movwf	btemp+-1
   467     07EA  3002               	movlw	high __pidataBANK0
   468     07EB  00FE               	movwf	btemp
   469     07EC  309C               	movlw	low __pidataBANK0
   470     07ED  00FF               	movwf	btemp+1
   471     07EE  3020               	movlw	low __pdataBANK0
   472     07EF  0084               	movwf	4
   473     07F0  120A  118A  222E  120A  118A  	fcall	init_ram0
   474                           
   475                           ; Clear objects allocated to BANK0
   476     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   477     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   478     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   479     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   480     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   481     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   482     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   483     07FC                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486     07FC                     __end_of__initialization:
   487     07FC  0183               	clrf	3
   488     07FD  120A  118A  2D8C   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssBANK0
   491     004B                     __pbssBANK0:
   492     004B                     _year:
   493     004B                     	ds	1
   494     004C                     _month:
   495     004C                     	ds	1
   496     004D                     _m_day:
   497     004D                     	ds	1
   498     004E                     _hour:
   499     004E                     	ds	1
   500     004F                     _minute:
   501     004F                     	ds	1
   502     0050                     _second:
   503     0050                     	ds	1
   504     0051                     _i:
   505     0051                     	ds	1
   506                           
   507                           	psect	dataBANK0
   508     0020                     __pdataBANK0:
   509     0020                     RTC_display@Date:
   510     0020                     	ds	17
   511     0031                     RTC_display@Time:
   512     0031                     	ds	15
   513                           
   514                           	psect	inittext
   515     022A                     init_fetch0:	
   516                           ;	Called with low address in FSR and high address in W
   517                           
   518     022A  087E               	movf	btemp,w
   519     022B  008A               	movwf	10
   520     022C  087F               	movf	btemp+1,w
   521     022D  0082               	movwf	2
   522     022E                     init_ram0:	
   523                           ;Called with:
   524                           ;	high address of idata address in btemp 
   525                           ;	low address of idata address in btemp+1 
   526                           ;	low address of data in FSR
   527                           ;	high address + 1 of data in btemp-1
   528                           
   529     022E  120A  118A  222A  120A  118A  	fcall	init_fetch0
   530     0233  0080               	movwf	0
   531     0234  0A84               	incf	4,f
   532     0235  0804               	movf	4,w
   533     0236  067D               	xorwf	btemp+-1,w
   534     0237  1903               	btfsc	3,2
   535     0238  3400               	retlw	0
   536     0239  0AFF               	incf	btemp+1,f
   537     023A  1903               	btfsc	3,2
   538     023B  0AFE               	incf	btemp,f
   539     023C  2A2E               	goto	init_ram0
   540                           
   541                           	psect	cstackCOMMON
   542     0070                     __pcstackCOMMON:
   543     0070                     ?_Lcd_Write_String:
   544     0070                     ?_setup:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ??_setup:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_Lcd_Init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_I2C_Master_Wait:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ??_I2C_Master_Wait:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_I2C_Master_Start:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ??_I2C_Master_Start:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_I2C_Master_RepeatedStart:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ??_I2C_Master_RepeatedStart:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_I2C_Master_Stop:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ??_I2C_Master_Stop:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_I2C_Master_Write:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_bcd_to_decimal:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_decimal_to_bcd:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_RTC_display:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_main:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_Lcd_Port:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ??_Lcd_Port:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_Lcd_Cmd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ?_Lcd_Write_Char:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?___bmul:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_I2C_Master_Read:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?___awdiv:	
   611                           ; 2 bytes @ 0x0
   612                           
   613     0070                     ?___awmod:	
   614                           ; 2 bytes @ 0x0
   615                           
   616     0070                     ?___lldiv:	
   617                           ; 2 bytes @ 0x0
   618                           
   619     0070                     Lcd_Port@a:	
   620                           ; 4 bytes @ 0x0
   621                           
   622     0070                     ___bmul@multiplicand:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     I2C_Master_Write@d:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     I2C_Master_Read@a:	
   629                           ; 2 bytes @ 0x0
   630                           
   631     0070                     ___awdiv@divisor:	
   632                           ; 2 bytes @ 0x0
   633                           
   634     0070                     ___awmod@divisor:	
   635                           ; 2 bytes @ 0x0
   636                           
   637     0070                     ___lldiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642     0070                     	ds	1
   643     0071                     ??_Lcd_Cmd:
   644     0071                     ??_Lcd_Write_Char:	
   645                           ; 1 bytes @ 0x1
   646                           
   647     0071                     ??___bmul:	
   648                           ; 1 bytes @ 0x1
   649                           
   650                           
   651                           ; 1 bytes @ 0x1
   652     0071                     	ds	1
   653     0072                     ??_I2C_Master_Write:
   654     0072                     ??_I2C_Master_Read:	
   655                           ; 1 bytes @ 0x2
   656                           
   657     0072                     Lcd_Write_Char@temp:	
   658                           ; 1 bytes @ 0x2
   659                           
   660     0072                     ___bmul@product:	
   661                           ; 1 bytes @ 0x2
   662                           
   663     0072                     ___awdiv@dividend:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0072                     ___awmod@dividend:	
   667                           ; 2 bytes @ 0x2
   668                           
   669                           
   670                           ; 2 bytes @ 0x2
   671     0072                     	ds	1
   672     0073                     Lcd_Cmd@a:
   673     0073                     Lcd_Write_Char@y:	
   674                           ; 1 bytes @ 0x3
   675                           
   676     0073                     ___bmul@multiplier:	
   677                           ; 1 bytes @ 0x3
   678                           
   679                           
   680                           ; 1 bytes @ 0x3
   681     0073                     	ds	1
   682     0074                     ?_Lcd_Set_Cursor:
   683     0074                     ??_Lcd_Init:	
   684                           ; 1 bytes @ 0x4
   685                           
   686     0074                     ??_bcd_to_decimal:	
   687                           ; 1 bytes @ 0x4
   688                           
   689     0074                     ??___awdiv:	
   690                           ; 1 bytes @ 0x4
   691                           
   692     0074                     ??___awmod:	
   693                           ; 1 bytes @ 0x4
   694                           
   695     0074                     Lcd_Set_Cursor@b:	
   696                           ; 1 bytes @ 0x4
   697                           
   698     0074                     Lcd_Write_Char@a:	
   699                           ; 1 bytes @ 0x4
   700                           
   701     0074                     I2C_Master_Read@temp:	
   702                           ; 1 bytes @ 0x4
   703                           
   704     0074                     ___lldiv@dividend:	
   705                           ; 2 bytes @ 0x4
   706                           
   707                           
   708                           ; 4 bytes @ 0x4
   709     0074                     	ds	1
   710     0075                     ??_Lcd_Set_Cursor:
   711     0075                     ??_Lcd_Write_String:	
   712                           ; 1 bytes @ 0x5
   713                           
   714     0075                     ___awdiv@counter:	
   715                           ; 1 bytes @ 0x5
   716                           
   717     0075                     ___awmod@counter:	
   718                           ; 1 bytes @ 0x5
   719                           
   720                           
   721                           ; 1 bytes @ 0x5
   722     0075                     	ds	1
   723     0076                     bcd_to_decimal@number:
   724     0076                     Lcd_Set_Cursor@a:	
   725                           ; 1 bytes @ 0x6
   726                           
   727     0076                     ___awdiv@sign:	
   728                           ; 1 bytes @ 0x6
   729                           
   730     0076                     ___awmod@sign:	
   731                           ; 1 bytes @ 0x6
   732                           
   733     0076                     Lcd_Write_String@i:	
   734                           ; 1 bytes @ 0x6
   735                           
   736                           
   737                           ; 2 bytes @ 0x6
   738     0076                     	ds	1
   739     0077                     Lcd_Set_Cursor@z:
   740     0077                     ___awdiv@quotient:	
   741                           ; 1 bytes @ 0x7
   742                           
   743                           
   744                           ; 2 bytes @ 0x7
   745     0077                     	ds	1
   746     0078                     ??___lldiv:
   747     0078                     Lcd_Set_Cursor@y:	
   748                           ; 1 bytes @ 0x8
   749                           
   750     0078                     Lcd_Write_String@a:	
   751                           ; 1 bytes @ 0x8
   752                           
   753                           
   754                           ; 1 bytes @ 0x8
   755     0078                     	ds	1
   756     0079                     ??_decimal_to_bcd:
   757     0079                     Lcd_Set_Cursor@temp:	
   758                           ; 1 bytes @ 0x9
   759                           
   760     0079                     ___lldiv@quotient:	
   761                           ; 1 bytes @ 0x9
   762                           
   763                           
   764                           ; 4 bytes @ 0x9
   765     0079                     	ds	1
   766     007A                     ??_RTC_display:
   767                           
   768                           ; 1 bytes @ 0xA
   769     007A                     	ds	3
   770     007D                     ___lldiv@counter:
   771                           
   772                           ; 1 bytes @ 0xD
   773     007D                     	ds	1
   774                           
   775                           	psect	cstackBANK0
   776     0040                     __pcstackBANK0:
   777     0040                     ?_I2C_Init:
   778     0040                     decimal_to_bcd@number:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0040                     I2C_Init@i2c_clk_freq:	
   782                           ; 1 bytes @ 0x0
   783                           
   784                           
   785                           ; 4 bytes @ 0x0
   786     0040                     	ds	4
   787     0044                     ??_I2C_Init:
   788                           
   789                           ; 1 bytes @ 0x4
   790     0044                     	ds	4
   791     0048                     ??_main:
   792                           
   793                           ; 1 bytes @ 0x8
   794     0048                     	ds	3
   795                           
   796                           	psect	maintext
   797     058C                     __pmaintext:	
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 96 in file "Lab4master.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : B00/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0       0       0       0       0
   819 ;;      Temps:          0       3       0       0       0
   820 ;;      Totals:         0       3       0       0       0
   821 ;;Total ram usage:        3 bytes
   822 ;; Hardware stack levels required when called: 4
   823 ;; This function calls:
   824 ;;		_I2C_Init
   825 ;;		_I2C_Master_Read
   826 ;;		_I2C_Master_RepeatedStart
   827 ;;		_I2C_Master_Start
   828 ;;		_I2C_Master_Stop
   829 ;;		_I2C_Master_Write
   830 ;;		_Lcd_Init
   831 ;;		_RTC_display
   832 ;;		_decimal_to_bcd
   833 ;;		_setup
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839     058C                     _main:	
   840                           ;psect for function _main
   841                           
   842     058C                     l1429:	
   843                           ;incstack = 0
   844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   845                           
   846                           
   847                           ;Lab4master.c: 97:     setup();
   848     058C  120A  118A  2282  120A  118A  	fcall	_setup
   849                           
   850                           ;Lab4master.c: 98:     Lcd_Init();
   851     0591  120A  118A  2462  120A  118A  	fcall	_Lcd_Init
   852                           
   853                           ;Lab4master.c: 99:     I2C_Init(100000);
   854     0596  3000               	movlw	0
   855     0597  1283               	bcf	3,5	;RP0=0, select bank0
   856     0598  1303               	bcf	3,6	;RP1=0, select bank0
   857     0599  00C3               	movwf	I2C_Init@i2c_clk_freq+3
   858     059A  3001               	movlw	1
   859     059B  00C2               	movwf	I2C_Init@i2c_clk_freq+2
   860     059C  3086               	movlw	134
   861     059D  00C1               	movwf	I2C_Init@i2c_clk_freq+1
   862     059E  30A0               	movlw	160
   863     059F  00C0               	movwf	I2C_Init@i2c_clk_freq
   864     05A0  120A  118A  235D  120A  118A  	fcall	_I2C_Init
   865                           
   866                           ;Lab4master.c: 100:     minute = decimal_to_bcd(0);
   867     05A5  3000               	movlw	0
   868     05A6  120A  118A  232D  120A  118A  	fcall	_decimal_to_bcd
   869     05AB  1283               	bcf	3,5	;RP0=0, select bank0
   870     05AC  1303               	bcf	3,6	;RP1=0, select bank0
   871     05AD  00CF               	movwf	_minute
   872                           
   873                           ;Lab4master.c: 101:     second = decimal_to_bcd(0);
   874     05AE  3000               	movlw	0
   875     05AF  120A  118A  232D  120A  118A  	fcall	_decimal_to_bcd
   876     05B4  1283               	bcf	3,5	;RP0=0, select bank0
   877     05B5  1303               	bcf	3,6	;RP1=0, select bank0
   878     05B6  00D0               	movwf	_second
   879                           
   880                           ;Lab4master.c: 102:     I2C_Master_Start();
   881     05B7  120A  118A  2201  120A  118A  	fcall	_I2C_Master_Start
   882                           
   883                           ;Lab4master.c: 103:         I2C_Master_Write(0xD0);
   884     05BC  30D0               	movlw	208
   885     05BD  00F0               	movwf	I2C_Master_Write@d
   886     05BE  3000               	movlw	0
   887     05BF  00F1               	movwf	I2C_Master_Write@d+1
   888     05C0  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   889                           
   890                           ;Lab4master.c: 104:         I2C_Master_Write(0x01);
   891     05C5  3001               	movlw	1
   892     05C6  00F0               	movwf	I2C_Master_Write@d
   893     05C7  3000               	movlw	0
   894     05C8  00F1               	movwf	I2C_Master_Write@d+1
   895     05C9  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   896                           
   897                           ;Lab4master.c: 105:         I2C_Master_Write(minute);
   898     05CE  1283               	bcf	3,5	;RP0=0, select bank0
   899     05CF  1303               	bcf	3,6	;RP1=0, select bank0
   900     05D0  084F               	movf	_minute,w
   901     05D1  00C8               	movwf	??_main
   902     05D2  01C9               	clrf	??_main+1
   903     05D3  0848               	movf	??_main,w
   904     05D4  00F0               	movwf	I2C_Master_Write@d
   905     05D5  0849               	movf	??_main+1,w
   906     05D6  00F1               	movwf	I2C_Master_Write@d+1
   907     05D7  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   908                           
   909                           ;Lab4master.c: 107:         I2C_Master_Stop();
   910     05DC  120A  118A  220A  120A  118A  	fcall	_I2C_Master_Stop
   911     05E1                     l1431:
   912                           
   913                           ;Lab4master.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
   914     05E1  3003               	movlw	3
   915     05E2  1283               	bcf	3,5	;RP0=0, select bank0
   916     05E3  1303               	bcf	3,6	;RP1=0, select bank0
   917     05E4  00CA               	movwf	??_main+2
   918     05E5  3008               	movlw	8
   919     05E6  00C9               	movwf	??_main+1
   920     05E7  3076               	movlw	118
   921     05E8  00C8               	movwf	??_main
   922     05E9                     u917:
   923     05E9  0BC8               	decfsz	??_main,f
   924     05EA  2DE9               	goto	u917
   925     05EB  0BC9               	decfsz	??_main+1,f
   926     05EC  2DE9               	goto	u917
   927     05ED  0BCA               	decfsz	??_main+2,f
   928     05EE  2DE9               	goto	u917
   929     05EF  0000               	nop
   930     05F0                     l1433:
   931                           
   932                           ;Lab4master.c: 109:         I2C_Master_Start();
   933     05F0  120A  118A  2201  120A  118A  	fcall	_I2C_Master_Start
   934     05F5                     l1435:
   935                           
   936                           ;Lab4master.c: 110:         I2C_Master_Write(0xD0);
   937     05F5  30D0               	movlw	208
   938     05F6  00F0               	movwf	I2C_Master_Write@d
   939     05F7  3000               	movlw	0
   940     05F8  00F1               	movwf	I2C_Master_Write@d+1
   941     05F9  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   942     05FE                     l1437:
   943                           
   944                           ;Lab4master.c: 111:         I2C_Master_Write(0x00);
   945     05FE  3000               	movlw	0
   946     05FF  00F0               	movwf	I2C_Master_Write@d
   947     0600  00F1               	movwf	I2C_Master_Write@d+1
   948     0601  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   949     0606                     l1439:
   950                           
   951                           ;Lab4master.c: 112:         I2C_Master_Write(second);
   952     0606  1283               	bcf	3,5	;RP0=0, select bank0
   953     0607  1303               	bcf	3,6	;RP1=0, select bank0
   954     0608  0850               	movf	_second,w
   955     0609  00C8               	movwf	??_main
   956     060A  01C9               	clrf	??_main+1
   957     060B  0848               	movf	??_main,w
   958     060C  00F0               	movwf	I2C_Master_Write@d
   959     060D  0849               	movf	??_main+1,w
   960     060E  00F1               	movwf	I2C_Master_Write@d+1
   961     060F  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   962     0614                     l1441:
   963                           
   964                           ;Lab4master.c: 114:         I2C_Master_Stop();
   965     0614  120A  118A  220A  120A  118A  	fcall	_I2C_Master_Stop
   966     0619                     l1443:
   967                           
   968                           ;Lab4master.c: 117:         I2C_Master_Start();
   969     0619  120A  118A  2201  120A  118A  	fcall	_I2C_Master_Start
   970     061E                     l1445:
   971                           
   972                           ;Lab4master.c: 118:         I2C_Master_Write(0xD0);
   973     061E  30D0               	movlw	208
   974     061F  00F0               	movwf	I2C_Master_Write@d
   975     0620  3000               	movlw	0
   976     0621  00F1               	movwf	I2C_Master_Write@d+1
   977     0622  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   978     0627                     l1447:
   979                           
   980                           ;Lab4master.c: 119:         I2C_Master_Write(0x00);
   981     0627  3000               	movlw	0
   982     0628  00F0               	movwf	I2C_Master_Write@d
   983     0629  00F1               	movwf	I2C_Master_Write@d+1
   984     062A  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
   985     062F                     l1449:
   986                           
   987                           ;Lab4master.c: 120:         I2C_Master_Stop();
   988     062F  120A  118A  220A  120A  118A  	fcall	_I2C_Master_Stop
   989     0634                     l1451:
   990                           
   991                           ;Lab4master.c: 122:         I2C_Master_Start();
   992     0634  120A  118A  2201  120A  118A  	fcall	_I2C_Master_Start
   993     0639                     l1453:
   994                           
   995                           ;Lab4master.c: 123:         I2C_Master_Write(0xD0);
   996     0639  30D0               	movlw	208
   997     063A  00F0               	movwf	I2C_Master_Write@d
   998     063B  3000               	movlw	0
   999     063C  00F1               	movwf	I2C_Master_Write@d+1
  1000     063D  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1001     0642                     l1455:
  1002                           
  1003                           ;Lab4master.c: 124:         I2C_Master_Write(0x00);
  1004     0642  3000               	movlw	0
  1005     0643  00F0               	movwf	I2C_Master_Write@d
  1006     0644  00F1               	movwf	I2C_Master_Write@d+1
  1007     0645  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1008     064A                     l1457:
  1009                           
  1010                           ;Lab4master.c: 125:         I2C_Master_RepeatedStart();
  1011     064A  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1012     064F                     l1459:
  1013                           
  1014                           ;Lab4master.c: 126:         I2C_Master_Write(0xD1);
  1015     064F  30D1               	movlw	209
  1016     0650  00F0               	movwf	I2C_Master_Write@d
  1017     0651  3000               	movlw	0
  1018     0652  00F1               	movwf	I2C_Master_Write@d+1
  1019     0653  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1020     0658                     l1461:
  1021                           
  1022                           ;Lab4master.c: 127:         second = I2C_Master_Read(0);
  1023     0658  3000               	movlw	0
  1024     0659  00F0               	movwf	I2C_Master_Read@a
  1025     065A  00F1               	movwf	I2C_Master_Read@a+1
  1026     065B  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Read
  1027     0660  0870               	movf	?_I2C_Master_Read,w
  1028     0661  1283               	bcf	3,5	;RP0=0, select bank0
  1029     0662  1303               	bcf	3,6	;RP1=0, select bank0
  1030     0663  00D0               	movwf	_second
  1031     0664                     l1463:
  1032                           
  1033                           ;Lab4master.c: 128:         I2C_Master_Write(0x01);
  1034     0664  3001               	movlw	1
  1035     0665  00F0               	movwf	I2C_Master_Write@d
  1036     0666  3000               	movlw	0
  1037     0667  00F1               	movwf	I2C_Master_Write@d+1
  1038     0668  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1039     066D                     l1465:
  1040                           
  1041                           ;Lab4master.c: 129:         I2C_Master_RepeatedStart();
  1042     066D  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1043     0672                     l1467:
  1044                           
  1045                           ;Lab4master.c: 130:         I2C_Master_Write(0xD1);
  1046     0672  30D1               	movlw	209
  1047     0673  00F0               	movwf	I2C_Master_Write@d
  1048     0674  3000               	movlw	0
  1049     0675  00F1               	movwf	I2C_Master_Write@d+1
  1050     0676  120A  118A  2213  120A  118A  	fcall	_I2C_Master_Write
  1051     067B                     l1469:
  1052                           
  1053                           ;Lab4master.c: 131:         minute = I2C_Master_Read(0);
  1054     067B  3000               	movlw	0
  1055     067C  00F0               	movwf	I2C_Master_Read@a
  1056     067D  00F1               	movwf	I2C_Master_Read@a+1
  1057     067E  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Read
  1058     0683  0870               	movf	?_I2C_Master_Read,w
  1059     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1060     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1061     0686  00CF               	movwf	_minute
  1062     0687                     l1471:
  1063                           
  1064                           ;Lab4master.c: 132:         I2C_Master_Stop();
  1065     0687  120A  118A  220A  120A  118A  	fcall	_I2C_Master_Stop
  1066     068C                     l1473:
  1067                           
  1068                           ;Lab4master.c: 133:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1069     068C  3003               	movlw	3
  1070     068D  1283               	bcf	3,5	;RP0=0, select bank0
  1071     068E  1303               	bcf	3,6	;RP1=0, select bank0
  1072     068F  00CA               	movwf	??_main+2
  1073     0690  3008               	movlw	8
  1074     0691  00C9               	movwf	??_main+1
  1075     0692  3076               	movlw	118
  1076     0693  00C8               	movwf	??_main
  1077     0694                     u927:
  1078     0694  0BC8               	decfsz	??_main,f
  1079     0695  2E94               	goto	u927
  1080     0696  0BC9               	decfsz	??_main+1,f
  1081     0697  2E94               	goto	u927
  1082     0698  0BCA               	decfsz	??_main+2,f
  1083     0699  2E94               	goto	u927
  1084     069A  0000               	nop
  1085     069B                     l1475:
  1086                           
  1087                           ;Lab4master.c: 136:         RTC_display();
  1088     069B  120A  118A  26A4  120A  118A  	fcall	_RTC_display
  1089     06A0  2E19               	goto	l1443
  1090     06A1  120A  118A  2800   	ljmp	start
  1091     06A4                     __end_of_main:
  1092                           
  1093                           	psect	text1
  1094     0282                     __ptext1:	
  1095 ;; *************** function _setup *****************
  1096 ;; Defined at:
  1097 ;;		line 146 in file "Lab4master.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124     0282                     _setup:	
  1125                           ;psect for function _setup
  1126                           
  1127     0282                     l1389:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _setup: [wreg+status,2+status,0]
  1130                           
  1131                           
  1132                           ;Lab4master.c: 147:     ANSEL = 0;
  1133     0282  1683               	bsf	3,5	;RP0=1, select bank3
  1134     0283  1703               	bsf	3,6	;RP1=1, select bank3
  1135     0284  0188               	clrf	8	;volatile
  1136                           
  1137                           ;Lab4master.c: 148:     ANSELH = 0;
  1138     0285  0189               	clrf	9	;volatile
  1139     0286                     l1391:
  1140                           
  1141                           ;Lab4master.c: 149:     TRISC1 = 0;
  1142     0286  1683               	bsf	3,5	;RP0=1, select bank1
  1143     0287  1303               	bcf	3,6	;RP1=0, select bank1
  1144     0288  1087               	bcf	7,1	;volatile
  1145     0289                     l1393:
  1146                           
  1147                           ;Lab4master.c: 150:     TRISC2 = 0;
  1148     0289  1107               	bcf	7,2	;volatile
  1149     028A                     l1395:
  1150                           
  1151                           ;Lab4master.c: 151:     TRISC6 = 0;
  1152     028A  1307               	bcf	7,6	;volatile
  1153     028B                     l1397:
  1154                           
  1155                           ;Lab4master.c: 152:     TRISC7 = 0;
  1156     028B  1387               	bcf	7,7	;volatile
  1157                           
  1158                           ;Lab4master.c: 153:     TRISA =0;
  1159     028C  0185               	clrf	5	;volatile
  1160                           
  1161                           ;Lab4master.c: 154:     TRISB = 0;
  1162     028D  0186               	clrf	6	;volatile
  1163                           
  1164                           ;Lab4master.c: 155:     TRISD = 0;
  1165     028E  0188               	clrf	8	;volatile
  1166                           
  1167                           ;Lab4master.c: 156:     PORTA = 0;
  1168     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0291  0185               	clrf	5	;volatile
  1171                           
  1172                           ;Lab4master.c: 157:     PORTB = 0;
  1173     0292  0186               	clrf	6	;volatile
  1174                           
  1175                           ;Lab4master.c: 158:     PORTD = 0;
  1176     0293  0188               	clrf	8	;volatile
  1177     0294                     l1399:
  1178                           
  1179                           ;Lab4master.c: 159:     PORTCbits.RC1 = 1;
  1180     0294  1487               	bsf	7,1	;volatile
  1181     0295                     l1401:
  1182                           
  1183                           ;Lab4master.c: 160:     PORTCbits.RC2 = 1;
  1184     0295  1507               	bsf	7,2	;volatile
  1185     0296                     l1403:
  1186                           
  1187                           ;Lab4master.c: 163:     OSCCONbits.IRCF = 0b0111;
  1188     0296  3070               	movlw	112
  1189     0297  1683               	bsf	3,5	;RP0=1, select bank1
  1190     0298  1303               	bcf	3,6	;RP1=0, select bank1
  1191     0299  048F               	iorwf	15,f	;volatile
  1192     029A                     l1405:
  1193                           
  1194                           ;Lab4master.c: 164:     OSCCONbits.SCS = 1;
  1195     029A  140F               	bsf	15,0	;volatile
  1196     029B                     l150:
  1197     029B  0008               	return
  1198     029C                     __end_of_setup:
  1199                           
  1200                           	psect	text2
  1201     032D                     __ptext2:	
  1202 ;; *************** function _decimal_to_bcd *****************
  1203 ;; Defined at:
  1204 ;;		line 56 in file "Lab4master.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  number          1    wreg     unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  number          1    0[BANK0 ] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      unsigned char 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       1       0       0       0
  1220 ;;      Temps:          5       0       0       0       0
  1221 ;;      Totals:         5       1       0       0       0
  1222 ;;Total ram usage:        6 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 1
  1225 ;; This function calls:
  1226 ;;		___awdiv
  1227 ;;		___awmod
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233     032D                     _decimal_to_bcd:	
  1234                           ;psect for function _decimal_to_bcd
  1235                           
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1239                           ;decimal_to_bcd@number stored from wreg
  1240     032D  1283               	bcf	3,5	;RP0=0, select bank0
  1241     032E  1303               	bcf	3,6	;RP1=0, select bank0
  1242     032F  00C0               	movwf	decimal_to_bcd@number
  1243     0330                     l1381:
  1244                           
  1245                           ;Lab4master.c: 57:   return(((number / 10) << 4) + (number % 10));
  1246     0330  300A               	movlw	10
  1247     0331  00F0               	movwf	___awdiv@divisor
  1248     0332  3000               	movlw	0
  1249     0333  00F1               	movwf	___awdiv@divisor+1
  1250     0334  0840               	movf	decimal_to_bcd@number,w
  1251     0335  00F9               	movwf	??_decimal_to_bcd
  1252     0336  01FA               	clrf	??_decimal_to_bcd+1
  1253     0337  0879               	movf	??_decimal_to_bcd,w
  1254     0338  00F2               	movwf	___awdiv@dividend
  1255     0339  087A               	movf	??_decimal_to_bcd+1,w
  1256     033A  00F3               	movwf	___awdiv@dividend+1
  1257     033B  120A  118A  2525  120A  118A  	fcall	___awdiv
  1258     0340  0870               	movf	?___awdiv,w
  1259     0341  00FB               	movwf	??_decimal_to_bcd+2
  1260     0342  3004               	movlw	4
  1261     0343                     u895:
  1262     0343  1003               	clrc
  1263     0344  0DFB               	rlf	??_decimal_to_bcd+2,f
  1264     0345  3EFF               	addlw	-1
  1265     0346  1D03               	skipz
  1266     0347  2B43               	goto	u895
  1267     0348  300A               	movlw	10
  1268     0349  00F0               	movwf	___awmod@divisor
  1269     034A  3000               	movlw	0
  1270     034B  00F1               	movwf	___awmod@divisor+1
  1271     034C  1283               	bcf	3,5	;RP0=0, select bank0
  1272     034D  1303               	bcf	3,6	;RP1=0, select bank0
  1273     034E  0840               	movf	decimal_to_bcd@number,w
  1274     034F  00FC               	movwf	??_decimal_to_bcd+3
  1275     0350  01FD               	clrf	??_decimal_to_bcd+4
  1276     0351  087C               	movf	??_decimal_to_bcd+3,w
  1277     0352  00F2               	movwf	___awmod@dividend
  1278     0353  087D               	movf	??_decimal_to_bcd+4,w
  1279     0354  00F3               	movwf	___awmod@dividend+1
  1280     0355  120A  118A  2409  120A  118A  	fcall	___awmod
  1281     035A  0870               	movf	?___awmod,w
  1282     035B  077B               	addwf	??_decimal_to_bcd+2,w
  1283     035C                     l132:
  1284     035C  0008               	return
  1285     035D                     __end_of_decimal_to_bcd:
  1286                           
  1287                           	psect	text3
  1288     06A4                     __ptext3:	
  1289 ;; *************** function _RTC_display *****************
  1290 ;; Defined at:
  1291 ;;		line 59 in file "Lab4master.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1305 ;;      Params:         0       0       0       0       0
  1306 ;;      Locals:         0       0       0       0       0
  1307 ;;      Temps:          2       0       0       0       0
  1308 ;;      Totals:         2       0       0       0       0
  1309 ;;Total ram usage:        2 bytes
  1310 ;; Hardware stack levels used: 1
  1311 ;; Hardware stack levels required when called: 3
  1312 ;; This function calls:
  1313 ;;		_Lcd_Set_Cursor
  1314 ;;		_Lcd_Write_String
  1315 ;;		___awdiv
  1316 ;;		___awmod
  1317 ;;		_bcd_to_decimal
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     06A4                     _RTC_display:	
  1324                           ;psect for function _RTC_display
  1325                           
  1326     06A4                     l1385:	
  1327                           ;incstack = 0
  1328                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1329                           
  1330                           
  1331                           ;Lab4master.c: 61:   static char Time[] = "TIME: 00:00:00";;Lab4master.c: 62:   static c
      +                          har Date[] = "DATE: 00/00/2000";;Lab4master.c: 65:   second = bcd_to_decimal(second);
  1332     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1333     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1334     06A6  0850               	movf	_second,w
  1335     06A7  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1336     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1337     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1338     06AE  00D0               	movwf	_second
  1339                           
  1340                           ;Lab4master.c: 66:   minute = bcd_to_decimal(minute);
  1341     06AF  084F               	movf	_minute,w
  1342     06B0  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1343     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1344     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1345     06B7  00CF               	movwf	_minute
  1346                           
  1347                           ;Lab4master.c: 67:   hour = bcd_to_decimal(hour);
  1348     06B8  084E               	movf	_hour,w
  1349     06B9  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1350     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1351     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1352     06C0  00CE               	movwf	_hour
  1353                           
  1354                           ;Lab4master.c: 68:   m_day = bcd_to_decimal(m_day);
  1355     06C1  084D               	movf	_m_day,w
  1356     06C2  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1357     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1358     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1359     06C9  00CD               	movwf	_m_day
  1360                           
  1361                           ;Lab4master.c: 69:   month = bcd_to_decimal(month);
  1362     06CA  084C               	movf	_month,w
  1363     06CB  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1364     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1365     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1366     06D2  00CC               	movwf	_month
  1367                           
  1368                           ;Lab4master.c: 70:   year = bcd_to_decimal(year);
  1369     06D3  084B               	movf	_year,w
  1370     06D4  120A  118A  2252  120A  118A  	fcall	_bcd_to_decimal
  1371     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1372     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1373     06DB  00CB               	movwf	_year
  1374                           
  1375                           ;Lab4master.c: 74:   Time[6] = hour / 10 + '0';
  1376     06DC  300A               	movlw	10
  1377     06DD  00F0               	movwf	___awdiv@divisor
  1378     06DE  3000               	movlw	0
  1379     06DF  00F1               	movwf	___awdiv@divisor+1
  1380     06E0  084E               	movf	_hour,w
  1381     06E1  00FA               	movwf	??_RTC_display
  1382     06E2  01FB               	clrf	??_RTC_display+1
  1383     06E3  087A               	movf	??_RTC_display,w
  1384     06E4  00F2               	movwf	___awdiv@dividend
  1385     06E5  087B               	movf	??_RTC_display+1,w
  1386     06E6  00F3               	movwf	___awdiv@dividend+1
  1387     06E7  120A  118A  2525  120A  118A  	fcall	___awdiv
  1388     06EC  0870               	movf	?___awdiv,w
  1389     06ED  3E30               	addlw	48
  1390     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1391     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1392     06F0  00B7               	movwf	RTC_display@Time+6
  1393                           
  1394                           ;Lab4master.c: 75:   Time[7] = hour % 10 + '0';
  1395     06F1  300A               	movlw	10
  1396     06F2  00F0               	movwf	___awmod@divisor
  1397     06F3  3000               	movlw	0
  1398     06F4  00F1               	movwf	___awmod@divisor+1
  1399     06F5  084E               	movf	_hour,w
  1400     06F6  00FA               	movwf	??_RTC_display
  1401     06F7  01FB               	clrf	??_RTC_display+1
  1402     06F8  087A               	movf	??_RTC_display,w
  1403     06F9  00F2               	movwf	___awmod@dividend
  1404     06FA  087B               	movf	??_RTC_display+1,w
  1405     06FB  00F3               	movwf	___awmod@dividend+1
  1406     06FC  120A  118A  2409  120A  118A  	fcall	___awmod
  1407     0701  0870               	movf	?___awmod,w
  1408     0702  3E30               	addlw	48
  1409     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1410     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1411     0705  00B8               	movwf	RTC_display@Time+7
  1412                           
  1413                           ;Lab4master.c: 76:   Time[9] = minute / 10 + '0';
  1414     0706  300A               	movlw	10
  1415     0707  00F0               	movwf	___awdiv@divisor
  1416     0708  3000               	movlw	0
  1417     0709  00F1               	movwf	___awdiv@divisor+1
  1418     070A  084F               	movf	_minute,w
  1419     070B  00FA               	movwf	??_RTC_display
  1420     070C  01FB               	clrf	??_RTC_display+1
  1421     070D  087A               	movf	??_RTC_display,w
  1422     070E  00F2               	movwf	___awdiv@dividend
  1423     070F  087B               	movf	??_RTC_display+1,w
  1424     0710  00F3               	movwf	___awdiv@dividend+1
  1425     0711  120A  118A  2525  120A  118A  	fcall	___awdiv
  1426     0716  0870               	movf	?___awdiv,w
  1427     0717  3E30               	addlw	48
  1428     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1429     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1430     071A  00BA               	movwf	RTC_display@Time+9
  1431                           
  1432                           ;Lab4master.c: 77:   Time[10] = minute % 10 + '0';
  1433     071B  300A               	movlw	10
  1434     071C  00F0               	movwf	___awmod@divisor
  1435     071D  3000               	movlw	0
  1436     071E  00F1               	movwf	___awmod@divisor+1
  1437     071F  084F               	movf	_minute,w
  1438     0720  00FA               	movwf	??_RTC_display
  1439     0721  01FB               	clrf	??_RTC_display+1
  1440     0722  087A               	movf	??_RTC_display,w
  1441     0723  00F2               	movwf	___awmod@dividend
  1442     0724  087B               	movf	??_RTC_display+1,w
  1443     0725  00F3               	movwf	___awmod@dividend+1
  1444     0726  120A  118A  2409  120A  118A  	fcall	___awmod
  1445     072B  0870               	movf	?___awmod,w
  1446     072C  3E30               	addlw	48
  1447     072D  1283               	bcf	3,5	;RP0=0, select bank0
  1448     072E  1303               	bcf	3,6	;RP1=0, select bank0
  1449     072F  00BB               	movwf	RTC_display@Time+10
  1450                           
  1451                           ;Lab4master.c: 78:   Time[12] = second / 10 + '0';
  1452     0730  300A               	movlw	10
  1453     0731  00F0               	movwf	___awdiv@divisor
  1454     0732  3000               	movlw	0
  1455     0733  00F1               	movwf	___awdiv@divisor+1
  1456     0734  0850               	movf	_second,w
  1457     0735  00FA               	movwf	??_RTC_display
  1458     0736  01FB               	clrf	??_RTC_display+1
  1459     0737  087A               	movf	??_RTC_display,w
  1460     0738  00F2               	movwf	___awdiv@dividend
  1461     0739  087B               	movf	??_RTC_display+1,w
  1462     073A  00F3               	movwf	___awdiv@dividend+1
  1463     073B  120A  118A  2525  120A  118A  	fcall	___awdiv
  1464     0740  0870               	movf	?___awdiv,w
  1465     0741  3E30               	addlw	48
  1466     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1467     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1468     0744  00BD               	movwf	RTC_display@Time+12
  1469                           
  1470                           ;Lab4master.c: 79:   Time[13] = second % 10 + '0';
  1471     0745  300A               	movlw	10
  1472     0746  00F0               	movwf	___awmod@divisor
  1473     0747  3000               	movlw	0
  1474     0748  00F1               	movwf	___awmod@divisor+1
  1475     0749  0850               	movf	_second,w
  1476     074A  00FA               	movwf	??_RTC_display
  1477     074B  01FB               	clrf	??_RTC_display+1
  1478     074C  087A               	movf	??_RTC_display,w
  1479     074D  00F2               	movwf	___awmod@dividend
  1480     074E  087B               	movf	??_RTC_display+1,w
  1481     074F  00F3               	movwf	___awmod@dividend+1
  1482     0750  120A  118A  2409  120A  118A  	fcall	___awmod
  1483     0755  0870               	movf	?___awmod,w
  1484     0756  3E30               	addlw	48
  1485     0757  1283               	bcf	3,5	;RP0=0, select bank0
  1486     0758  1303               	bcf	3,6	;RP1=0, select bank0
  1487     0759  00BE               	movwf	RTC_display@Time+13
  1488                           
  1489                           ;Lab4master.c: 81:   Date[6] = m_day / 10 + '0';
  1490     075A  300A               	movlw	10
  1491     075B  00F0               	movwf	___awdiv@divisor
  1492     075C  3000               	movlw	0
  1493     075D  00F1               	movwf	___awdiv@divisor+1
  1494     075E  084D               	movf	_m_day,w
  1495     075F  00FA               	movwf	??_RTC_display
  1496     0760  01FB               	clrf	??_RTC_display+1
  1497     0761  087A               	movf	??_RTC_display,w
  1498     0762  00F2               	movwf	___awdiv@dividend
  1499     0763  087B               	movf	??_RTC_display+1,w
  1500     0764  00F3               	movwf	___awdiv@dividend+1
  1501     0765  120A  118A  2525  120A  118A  	fcall	___awdiv
  1502     076A  0870               	movf	?___awdiv,w
  1503     076B  3E30               	addlw	48
  1504     076C  1283               	bcf	3,5	;RP0=0, select bank0
  1505     076D  1303               	bcf	3,6	;RP1=0, select bank0
  1506     076E  00A6               	movwf	RTC_display@Date+6
  1507                           
  1508                           ;Lab4master.c: 82:   Date[7] = m_day % 10 + '0';
  1509     076F  300A               	movlw	10
  1510     0770  00F0               	movwf	___awmod@divisor
  1511     0771  3000               	movlw	0
  1512     0772  00F1               	movwf	___awmod@divisor+1
  1513     0773  084D               	movf	_m_day,w
  1514     0774  00FA               	movwf	??_RTC_display
  1515     0775  01FB               	clrf	??_RTC_display+1
  1516     0776  087A               	movf	??_RTC_display,w
  1517     0777  00F2               	movwf	___awmod@dividend
  1518     0778  087B               	movf	??_RTC_display+1,w
  1519     0779  00F3               	movwf	___awmod@dividend+1
  1520     077A  120A  118A  2409  120A  118A  	fcall	___awmod
  1521     077F  0870               	movf	?___awmod,w
  1522     0780  3E30               	addlw	48
  1523     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1524     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1525     0783  00A7               	movwf	RTC_display@Date+7
  1526                           
  1527                           ;Lab4master.c: 83:   Date[9] = month / 10 + '0';
  1528     0784  300A               	movlw	10
  1529     0785  00F0               	movwf	___awdiv@divisor
  1530     0786  3000               	movlw	0
  1531     0787  00F1               	movwf	___awdiv@divisor+1
  1532     0788  084C               	movf	_month,w
  1533     0789  00FA               	movwf	??_RTC_display
  1534     078A  01FB               	clrf	??_RTC_display+1
  1535     078B  087A               	movf	??_RTC_display,w
  1536     078C  00F2               	movwf	___awdiv@dividend
  1537     078D  087B               	movf	??_RTC_display+1,w
  1538     078E  00F3               	movwf	___awdiv@dividend+1
  1539     078F  120A  118A  2525  120A  118A  	fcall	___awdiv
  1540     0794  0870               	movf	?___awdiv,w
  1541     0795  3E30               	addlw	48
  1542     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1543     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1544     0798  00A9               	movwf	RTC_display@Date+9
  1545                           
  1546                           ;Lab4master.c: 84:   Date[10] = month % 10 + '0';
  1547     0799  300A               	movlw	10
  1548     079A  00F0               	movwf	___awmod@divisor
  1549     079B  3000               	movlw	0
  1550     079C  00F1               	movwf	___awmod@divisor+1
  1551     079D  084C               	movf	_month,w
  1552     079E  00FA               	movwf	??_RTC_display
  1553     079F  01FB               	clrf	??_RTC_display+1
  1554     07A0  087A               	movf	??_RTC_display,w
  1555     07A1  00F2               	movwf	___awmod@dividend
  1556     07A2  087B               	movf	??_RTC_display+1,w
  1557     07A3  00F3               	movwf	___awmod@dividend+1
  1558     07A4  120A  118A  2409  120A  118A  	fcall	___awmod
  1559     07A9  0870               	movf	?___awmod,w
  1560     07AA  3E30               	addlw	48
  1561     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1562     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1563     07AD  00AA               	movwf	RTC_display@Date+10
  1564                           
  1565                           ;Lab4master.c: 85:   Date[14] = year / 10 + '0';
  1566     07AE  300A               	movlw	10
  1567     07AF  00F0               	movwf	___awdiv@divisor
  1568     07B0  3000               	movlw	0
  1569     07B1  00F1               	movwf	___awdiv@divisor+1
  1570     07B2  084B               	movf	_year,w
  1571     07B3  00FA               	movwf	??_RTC_display
  1572     07B4  01FB               	clrf	??_RTC_display+1
  1573     07B5  087A               	movf	??_RTC_display,w
  1574     07B6  00F2               	movwf	___awdiv@dividend
  1575     07B7  087B               	movf	??_RTC_display+1,w
  1576     07B8  00F3               	movwf	___awdiv@dividend+1
  1577     07B9  120A  118A  2525  120A  118A  	fcall	___awdiv
  1578     07BE  0870               	movf	?___awdiv,w
  1579     07BF  3E30               	addlw	48
  1580     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1581     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1582     07C2  00AE               	movwf	RTC_display@Date+14
  1583                           
  1584                           ;Lab4master.c: 86:   Date[15] = year % 10 + '0';
  1585     07C3  300A               	movlw	10
  1586     07C4  00F0               	movwf	___awmod@divisor
  1587     07C5  3000               	movlw	0
  1588     07C6  00F1               	movwf	___awmod@divisor+1
  1589     07C7  084B               	movf	_year,w
  1590     07C8  00FA               	movwf	??_RTC_display
  1591     07C9  01FB               	clrf	??_RTC_display+1
  1592     07CA  087A               	movf	??_RTC_display,w
  1593     07CB  00F2               	movwf	___awmod@dividend
  1594     07CC  087B               	movf	??_RTC_display+1,w
  1595     07CD  00F3               	movwf	___awmod@dividend+1
  1596     07CE  120A  118A  2409  120A  118A  	fcall	___awmod
  1597     07D3  0870               	movf	?___awmod,w
  1598     07D4  3E30               	addlw	48
  1599     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1600     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1601     07D7  00AF               	movwf	RTC_display@Date+15
  1602                           
  1603                           ;Lab4master.c: 88:  Lcd_Set_Cursor(1,1);
  1604     07D8  01F4               	clrf	Lcd_Set_Cursor@b
  1605     07D9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1606     07DA  3001               	movlw	1
  1607     07DB  120A  118A  23C3  120A  118A  	fcall	_Lcd_Set_Cursor
  1608     07E0                     l1387:
  1609                           
  1610                           ;Lab4master.c: 90:   Lcd_Write_String(Time);
  1611     07E0  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1612     07E1  120A  118A  22BC  120A  118A  	fcall	_Lcd_Write_String
  1613     07E6                     l139:
  1614     07E6  0008               	return
  1615     07E7                     __end_of_RTC_display:
  1616                           
  1617                           	psect	text4
  1618     0252                     __ptext4:	
  1619 ;; *************** function _bcd_to_decimal *****************
  1620 ;; Defined at:
  1621 ;;		line 51 in file "Lab4master.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  number          1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  number          1    6[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0
  1638 ;;      Totals:         3       0       0       0       0
  1639 ;;Total ram usage:        3 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 1
  1642 ;; This function calls:
  1643 ;;		___bmul
  1644 ;; This function is called by:
  1645 ;;		_RTC_display
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649     0252                     _bcd_to_decimal:	
  1650                           ;psect for function _bcd_to_decimal
  1651                           
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1655                           ;bcd_to_decimal@number stored from wreg
  1656     0252  00F6               	movwf	bcd_to_decimal@number
  1657     0253                     l1205:
  1658                           
  1659                           ;Lab4master.c: 52:   return((number >> 4) * 10 + (number & 0x0F));
  1660     0253  300F               	movlw	15
  1661     0254  0576               	andwf	bcd_to_decimal@number,w
  1662     0255  00F4               	movwf	??_bcd_to_decimal
  1663     0256  300A               	movlw	10
  1664     0257  00F0               	movwf	___bmul@multiplicand
  1665     0258  0876               	movf	bcd_to_decimal@number,w
  1666     0259  00F5               	movwf	??_bcd_to_decimal+1
  1667     025A  3004               	movlw	4
  1668     025B                     u555:
  1669     025B  1003               	clrc
  1670     025C  0CF5               	rrf	??_bcd_to_decimal+1,f
  1671     025D  3EFF               	addlw	-1
  1672     025E  1D03               	skipz
  1673     025F  2A5B               	goto	u555
  1674     0260  0875               	movf	??_bcd_to_decimal+1,w
  1675     0261  120A  118A  223D  120A  118A  	fcall	___bmul
  1676     0266  0774               	addwf	??_bcd_to_decimal,w
  1677     0267                     l129:
  1678     0267  0008               	return
  1679     0268                     __end_of_bcd_to_decimal:
  1680                           
  1681                           	psect	text5
  1682     023D                     __ptext5:	
  1683 ;; *************** function ___bmul *****************
  1684 ;; Defined at:
  1685 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  multiplier      1    wreg     unsigned char 
  1688 ;;  multiplicand    1    0[COMMON] unsigned char 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  multiplier      1    3[COMMON] unsigned char 
  1691 ;;  product         1    2[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      unsigned char 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         1       0       0       0       0
  1702 ;;      Locals:         2       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0
  1704 ;;      Totals:         4       0       0       0       0
  1705 ;;Total ram usage:        4 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_bcd_to_decimal
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     023D                     ___bmul:	
  1715                           ;psect for function ___bmul
  1716                           
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1720                           ;___bmul@multiplier stored from wreg
  1721     023D  00F3               	movwf	___bmul@multiplier
  1722     023E                     l1187:
  1723     023E  01F2               	clrf	___bmul@product
  1724     023F                     l1189:
  1725     023F  1C73               	btfss	___bmul@multiplier,0
  1726     0240  2A42               	goto	u511
  1727     0241  2A43               	goto	u510
  1728     0242                     u511:
  1729     0242  2A47               	goto	l1193
  1730     0243                     u510:
  1731     0243                     l1191:
  1732     0243  0870               	movf	___bmul@multiplicand,w
  1733     0244  00F1               	movwf	??___bmul
  1734     0245  0871               	movf	??___bmul,w
  1735     0246  07F2               	addwf	___bmul@product,f
  1736     0247                     l1193:
  1737     0247  1003               	clrc
  1738     0248  0DF0               	rlf	___bmul@multiplicand,f
  1739     0249                     l1195:
  1740     0249  1003               	clrc
  1741     024A  0CF3               	rrf	___bmul@multiplier,f
  1742     024B  0873               	movf	___bmul@multiplier,w
  1743     024C  1D03               	btfss	3,2
  1744     024D  2A4F               	goto	u521
  1745     024E  2A50               	goto	u520
  1746     024F                     u521:
  1747     024F  2A3F               	goto	l1189
  1748     0250                     u520:
  1749     0250                     l1197:
  1750     0250  0872               	movf	___bmul@product,w
  1751     0251                     l317:
  1752     0251  0008               	return
  1753     0252                     __end_of___bmul:
  1754                           
  1755                           	psect	text6
  1756     0409                     __ptext6:	
  1757 ;; *************** function ___awmod *****************
  1758 ;; Defined at:
  1759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  divisor         2    0[COMMON] int 
  1762 ;;  dividend        2    2[COMMON] int 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  sign            1    6[COMMON] unsigned char 
  1765 ;;  counter         1    5[COMMON] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    0[COMMON] int 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         4       0       0       0       0
  1776 ;;      Locals:         2       0       0       0       0
  1777 ;;      Temps:          1       0       0       0       0
  1778 ;;      Totals:         7       0       0       0       0
  1779 ;;Total ram usage:        7 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_decimal_to_bcd
  1785 ;;		_RTC_display
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789     0409                     ___awmod:	
  1790                           ;psect for function ___awmod
  1791                           
  1792     0409                     l1305:	
  1793                           ;incstack = 0
  1794                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1795                           
  1796     0409  01F6               	clrf	___awmod@sign
  1797     040A                     l1307:
  1798     040A  1FF3               	btfss	___awmod@dividend+1,7
  1799     040B  2C0D               	goto	u781
  1800     040C  2C0E               	goto	u780
  1801     040D                     u781:
  1802     040D  2C15               	goto	l1313
  1803     040E                     u780:
  1804     040E                     l1309:
  1805     040E  09F2               	comf	___awmod@dividend,f
  1806     040F  09F3               	comf	___awmod@dividend+1,f
  1807     0410  0AF2               	incf	___awmod@dividend,f
  1808     0411  1903               	skipnz
  1809     0412  0AF3               	incf	___awmod@dividend+1,f
  1810     0413                     l1311:
  1811     0413  01F6               	clrf	___awmod@sign
  1812     0414  0AF6               	incf	___awmod@sign,f
  1813     0415                     l1313:
  1814     0415  1FF1               	btfss	___awmod@divisor+1,7
  1815     0416  2C18               	goto	u791
  1816     0417  2C19               	goto	u790
  1817     0418                     u791:
  1818     0418  2C1E               	goto	l1317
  1819     0419                     u790:
  1820     0419                     l1315:
  1821     0419  09F0               	comf	___awmod@divisor,f
  1822     041A  09F1               	comf	___awmod@divisor+1,f
  1823     041B  0AF0               	incf	___awmod@divisor,f
  1824     041C  1903               	skipnz
  1825     041D  0AF1               	incf	___awmod@divisor+1,f
  1826     041E                     l1317:
  1827     041E  0870               	movf	___awmod@divisor,w
  1828     041F  0471               	iorwf	___awmod@divisor+1,w
  1829     0420  1903               	btfsc	3,2
  1830     0421  2C23               	goto	u801
  1831     0422  2C24               	goto	u800
  1832     0423                     u801:
  1833     0423  2C53               	goto	l1335
  1834     0424                     u800:
  1835     0424                     l1319:
  1836     0424  01F5               	clrf	___awmod@counter
  1837     0425  0AF5               	incf	___awmod@counter,f
  1838     0426  2C32               	goto	l1325
  1839     0427                     l1321:
  1840     0427  3001               	movlw	1
  1841     0428                     u815:
  1842     0428  1003               	clrc
  1843     0429  0DF0               	rlf	___awmod@divisor,f
  1844     042A  0DF1               	rlf	___awmod@divisor+1,f
  1845     042B  3EFF               	addlw	-1
  1846     042C  1D03               	skipz
  1847     042D  2C28               	goto	u815
  1848     042E                     l1323:
  1849     042E  3001               	movlw	1
  1850     042F  00F4               	movwf	??___awmod
  1851     0430  0874               	movf	??___awmod,w
  1852     0431  07F5               	addwf	___awmod@counter,f
  1853     0432                     l1325:
  1854     0432  1FF1               	btfss	___awmod@divisor+1,7
  1855     0433  2C35               	goto	u821
  1856     0434  2C36               	goto	u820
  1857     0435                     u821:
  1858     0435  2C27               	goto	l1321
  1859     0436                     u820:
  1860     0436                     l1327:
  1861     0436  0871               	movf	___awmod@divisor+1,w
  1862     0437  0273               	subwf	___awmod@dividend+1,w
  1863     0438  1D03               	skipz
  1864     0439  2C3C               	goto	u835
  1865     043A  0870               	movf	___awmod@divisor,w
  1866     043B  0272               	subwf	___awmod@dividend,w
  1867     043C                     u835:
  1868     043C  1C03               	skipc
  1869     043D  2C3F               	goto	u831
  1870     043E  2C40               	goto	u830
  1871     043F                     u831:
  1872     043F  2C46               	goto	l1331
  1873     0440                     u830:
  1874     0440                     l1329:
  1875     0440  0870               	movf	___awmod@divisor,w
  1876     0441  02F2               	subwf	___awmod@dividend,f
  1877     0442  0871               	movf	___awmod@divisor+1,w
  1878     0443  1C03               	skipc
  1879     0444  03F3               	decf	___awmod@dividend+1,f
  1880     0445  02F3               	subwf	___awmod@dividend+1,f
  1881     0446                     l1331:
  1882     0446  3001               	movlw	1
  1883     0447                     u845:
  1884     0447  1003               	clrc
  1885     0448  0CF1               	rrf	___awmod@divisor+1,f
  1886     0449  0CF0               	rrf	___awmod@divisor,f
  1887     044A  3EFF               	addlw	-1
  1888     044B  1D03               	skipz
  1889     044C  2C47               	goto	u845
  1890     044D                     l1333:
  1891     044D  3001               	movlw	1
  1892     044E  02F5               	subwf	___awmod@counter,f
  1893     044F  1D03               	btfss	3,2
  1894     0450  2C52               	goto	u851
  1895     0451  2C53               	goto	u850
  1896     0452                     u851:
  1897     0452  2C36               	goto	l1327
  1898     0453                     u850:
  1899     0453                     l1335:
  1900     0453  0876               	movf	___awmod@sign,w
  1901     0454  1903               	btfsc	3,2
  1902     0455  2C57               	goto	u861
  1903     0456  2C58               	goto	u860
  1904     0457                     u861:
  1905     0457  2C5D               	goto	l1339
  1906     0458                     u860:
  1907     0458                     l1337:
  1908     0458  09F2               	comf	___awmod@dividend,f
  1909     0459  09F3               	comf	___awmod@dividend+1,f
  1910     045A  0AF2               	incf	___awmod@dividend,f
  1911     045B  1903               	skipnz
  1912     045C  0AF3               	incf	___awmod@dividend+1,f
  1913     045D                     l1339:
  1914     045D  0873               	movf	___awmod@dividend+1,w
  1915     045E  00F1               	movwf	?___awmod+1
  1916     045F  0872               	movf	___awmod@dividend,w
  1917     0460  00F0               	movwf	?___awmod
  1918     0461                     l457:
  1919     0461  0008               	return
  1920     0462                     __end_of___awmod:
  1921                           
  1922                           	psect	text7
  1923     0525                     __ptext7:	
  1924 ;; *************** function ___awdiv *****************
  1925 ;; Defined at:
  1926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  divisor         2    0[COMMON] int 
  1929 ;;  dividend        2    2[COMMON] int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  quotient        2    7[COMMON] int 
  1932 ;;  sign            1    6[COMMON] unsigned char 
  1933 ;;  counter         1    5[COMMON] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    0[COMMON] int 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         4       0       0       0       0
  1944 ;;      Locals:         4       0       0       0       0
  1945 ;;      Temps:          1       0       0       0       0
  1946 ;;      Totals:         9       0       0       0       0
  1947 ;;Total ram usage:        9 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_decimal_to_bcd
  1953 ;;		_RTC_display
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957     0525                     ___awdiv:	
  1958                           ;psect for function ___awdiv
  1959                           
  1960     0525                     l1261:	
  1961                           ;incstack = 0
  1962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1963                           
  1964     0525  01F6               	clrf	___awdiv@sign
  1965     0526                     l1263:
  1966     0526  1FF1               	btfss	___awdiv@divisor+1,7
  1967     0527  2D29               	goto	u681
  1968     0528  2D2A               	goto	u680
  1969     0529                     u681:
  1970     0529  2D31               	goto	l1269
  1971     052A                     u680:
  1972     052A                     l1265:
  1973     052A  09F0               	comf	___awdiv@divisor,f
  1974     052B  09F1               	comf	___awdiv@divisor+1,f
  1975     052C  0AF0               	incf	___awdiv@divisor,f
  1976     052D  1903               	skipnz
  1977     052E  0AF1               	incf	___awdiv@divisor+1,f
  1978     052F                     l1267:
  1979     052F  01F6               	clrf	___awdiv@sign
  1980     0530  0AF6               	incf	___awdiv@sign,f
  1981     0531                     l1269:
  1982     0531  1FF3               	btfss	___awdiv@dividend+1,7
  1983     0532  2D34               	goto	u691
  1984     0533  2D35               	goto	u690
  1985     0534                     u691:
  1986     0534  2D3E               	goto	l1275
  1987     0535                     u690:
  1988     0535                     l1271:
  1989     0535  09F2               	comf	___awdiv@dividend,f
  1990     0536  09F3               	comf	___awdiv@dividend+1,f
  1991     0537  0AF2               	incf	___awdiv@dividend,f
  1992     0538  1903               	skipnz
  1993     0539  0AF3               	incf	___awdiv@dividend+1,f
  1994     053A                     l1273:
  1995     053A  3001               	movlw	1
  1996     053B  00F4               	movwf	??___awdiv
  1997     053C  0874               	movf	??___awdiv,w
  1998     053D  06F6               	xorwf	___awdiv@sign,f
  1999     053E                     l1275:
  2000     053E  01F7               	clrf	___awdiv@quotient
  2001     053F  01F8               	clrf	___awdiv@quotient+1
  2002     0540                     l1277:
  2003     0540  0870               	movf	___awdiv@divisor,w
  2004     0541  0471               	iorwf	___awdiv@divisor+1,w
  2005     0542  1903               	btfsc	3,2
  2006     0543  2D45               	goto	u701
  2007     0544  2D46               	goto	u700
  2008     0545                     u701:
  2009     0545  2D7D               	goto	l1297
  2010     0546                     u700:
  2011     0546                     l1279:
  2012     0546  01F5               	clrf	___awdiv@counter
  2013     0547  0AF5               	incf	___awdiv@counter,f
  2014     0548  2D54               	goto	l1285
  2015     0549                     l1281:
  2016     0549  3001               	movlw	1
  2017     054A                     u715:
  2018     054A  1003               	clrc
  2019     054B  0DF0               	rlf	___awdiv@divisor,f
  2020     054C  0DF1               	rlf	___awdiv@divisor+1,f
  2021     054D  3EFF               	addlw	-1
  2022     054E  1D03               	skipz
  2023     054F  2D4A               	goto	u715
  2024     0550                     l1283:
  2025     0550  3001               	movlw	1
  2026     0551  00F4               	movwf	??___awdiv
  2027     0552  0874               	movf	??___awdiv,w
  2028     0553  07F5               	addwf	___awdiv@counter,f
  2029     0554                     l1285:
  2030     0554  1FF1               	btfss	___awdiv@divisor+1,7
  2031     0555  2D57               	goto	u721
  2032     0556  2D58               	goto	u720
  2033     0557                     u721:
  2034     0557  2D49               	goto	l1281
  2035     0558                     u720:
  2036     0558                     l1287:
  2037     0558  3001               	movlw	1
  2038     0559                     u735:
  2039     0559  1003               	clrc
  2040     055A  0DF7               	rlf	___awdiv@quotient,f
  2041     055B  0DF8               	rlf	___awdiv@quotient+1,f
  2042     055C  3EFF               	addlw	-1
  2043     055D  1D03               	skipz
  2044     055E  2D59               	goto	u735
  2045     055F  0871               	movf	___awdiv@divisor+1,w
  2046     0560  0273               	subwf	___awdiv@dividend+1,w
  2047     0561  1D03               	skipz
  2048     0562  2D65               	goto	u745
  2049     0563  0870               	movf	___awdiv@divisor,w
  2050     0564  0272               	subwf	___awdiv@dividend,w
  2051     0565                     u745:
  2052     0565  1C03               	skipc
  2053     0566  2D68               	goto	u741
  2054     0567  2D69               	goto	u740
  2055     0568                     u741:
  2056     0568  2D70               	goto	l1293
  2057     0569                     u740:
  2058     0569                     l1289:
  2059     0569  0870               	movf	___awdiv@divisor,w
  2060     056A  02F2               	subwf	___awdiv@dividend,f
  2061     056B  0871               	movf	___awdiv@divisor+1,w
  2062     056C  1C03               	skipc
  2063     056D  03F3               	decf	___awdiv@dividend+1,f
  2064     056E  02F3               	subwf	___awdiv@dividend+1,f
  2065     056F                     l1291:
  2066     056F  1477               	bsf	___awdiv@quotient,0
  2067     0570                     l1293:
  2068     0570  3001               	movlw	1
  2069     0571                     u755:
  2070     0571  1003               	clrc
  2071     0572  0CF1               	rrf	___awdiv@divisor+1,f
  2072     0573  0CF0               	rrf	___awdiv@divisor,f
  2073     0574  3EFF               	addlw	-1
  2074     0575  1D03               	skipz
  2075     0576  2D71               	goto	u755
  2076     0577                     l1295:
  2077     0577  3001               	movlw	1
  2078     0578  02F5               	subwf	___awdiv@counter,f
  2079     0579  1D03               	btfss	3,2
  2080     057A  2D7C               	goto	u761
  2081     057B  2D7D               	goto	u760
  2082     057C                     u761:
  2083     057C  2D58               	goto	l1287
  2084     057D                     u760:
  2085     057D                     l1297:
  2086     057D  0876               	movf	___awdiv@sign,w
  2087     057E  1903               	btfsc	3,2
  2088     057F  2D81               	goto	u771
  2089     0580  2D82               	goto	u770
  2090     0581                     u771:
  2091     0581  2D87               	goto	l1301
  2092     0582                     u770:
  2093     0582                     l1299:
  2094     0582  09F7               	comf	___awdiv@quotient,f
  2095     0583  09F8               	comf	___awdiv@quotient+1,f
  2096     0584  0AF7               	incf	___awdiv@quotient,f
  2097     0585  1903               	skipnz
  2098     0586  0AF8               	incf	___awdiv@quotient+1,f
  2099     0587                     l1301:
  2100     0587  0878               	movf	___awdiv@quotient+1,w
  2101     0588  00F1               	movwf	?___awdiv+1
  2102     0589  0877               	movf	___awdiv@quotient,w
  2103     058A  00F0               	movwf	?___awdiv
  2104     058B                     l444:
  2105     058B  0008               	return
  2106     058C                     __end_of___awdiv:
  2107                           
  2108                           	psect	text8
  2109     02BC                     __ptext8:	
  2110 ;; *************** function _Lcd_Write_String *****************
  2111 ;; Defined at:
  2112 ;;		line 98 in file "LCD.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  a               1    wreg     PTR unsigned char 
  2115 ;;		 -> RTC_display@Time(15), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  a               1    8[COMMON] PTR unsigned char 
  2118 ;;		 -> RTC_display@Time(15), 
  2119 ;;  i               2    6[COMMON] int 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         3       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0
  2132 ;;      Totals:         4       0       0       0       0
  2133 ;;Total ram usage:        4 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 2
  2136 ;; This function calls:
  2137 ;;		_Lcd_Write_Char
  2138 ;; This function is called by:
  2139 ;;		_RTC_display
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143     02BC                     _Lcd_Write_String:	
  2144                           ;psect for function _Lcd_Write_String
  2145                           
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2149                           ;Lcd_Write_String@a stored from wreg
  2150     02BC  00F8               	movwf	Lcd_Write_String@a
  2151     02BD                     l1229:
  2152                           
  2153                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2154     02BD  01F6               	clrf	Lcd_Write_String@i
  2155     02BE  01F7               	clrf	Lcd_Write_String@i+1
  2156     02BF  2AD1               	goto	l1235
  2157     02C0                     l1231:
  2158                           
  2159                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2160     02C0  0876               	movf	Lcd_Write_String@i,w
  2161     02C1  0778               	addwf	Lcd_Write_String@a,w
  2162     02C2  00F5               	movwf	??_Lcd_Write_String
  2163     02C3  0875               	movf	??_Lcd_Write_String,w
  2164     02C4  0084               	movwf	4
  2165     02C5  0800               	movf	0,w
  2166     02C6  120A  118A  238E  120A  118A  	fcall	_Lcd_Write_Char
  2167     02CB                     l1233:
  2168     02CB  3001               	movlw	1
  2169     02CC  07F6               	addwf	Lcd_Write_String@i,f
  2170     02CD  1803               	skipnc
  2171     02CE  0AF7               	incf	Lcd_Write_String@i+1,f
  2172     02CF  3000               	movlw	0
  2173     02D0  07F7               	addwf	Lcd_Write_String@i+1,f
  2174     02D1                     l1235:
  2175     02D1  0876               	movf	Lcd_Write_String@i,w
  2176     02D2  0778               	addwf	Lcd_Write_String@a,w
  2177     02D3  00F5               	movwf	??_Lcd_Write_String
  2178     02D4  0875               	movf	??_Lcd_Write_String,w
  2179     02D5  0084               	movwf	4
  2180     02D6  1383               	bcf	3,7	;select IRP bank0
  2181     02D7  0800               	movf	0,w
  2182     02D8  1D03               	btfss	3,2
  2183     02D9  2ADB               	goto	u601
  2184     02DA  2ADC               	goto	u600
  2185     02DB                     u601:
  2186     02DB  2AC0               	goto	l1231
  2187     02DC                     u600:
  2188     02DC                     l199:
  2189     02DC  0008               	return
  2190     02DD                     __end_of_Lcd_Write_String:
  2191                           
  2192                           	psect	text9
  2193     038E                     __ptext9:	
  2194 ;; *************** function _Lcd_Write_Char *****************
  2195 ;; Defined at:
  2196 ;;		line 83 in file "LCD.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  a               1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  a               1    4[COMMON] unsigned char 
  2201 ;;  y               1    3[COMMON] unsigned char 
  2202 ;;  temp            1    2[COMMON] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         3       0       0       0       0
  2214 ;;      Temps:          1       0       0       0       0
  2215 ;;      Totals:         4       0       0       0       0
  2216 ;;Total ram usage:        4 bytes
  2217 ;; Hardware stack levels used: 1
  2218 ;; Hardware stack levels required when called: 1
  2219 ;; This function calls:
  2220 ;;		_Lcd_Port
  2221 ;; This function is called by:
  2222 ;;		_Lcd_Write_String
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226     038E                     _Lcd_Write_Char:	
  2227                           ;psect for function _Lcd_Write_Char
  2228                           
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2232                           ;Lcd_Write_Char@a stored from wreg
  2233     038E  00F4               	movwf	Lcd_Write_Char@a
  2234     038F                     l1167:
  2235                           
  2236                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2237     038F  0874               	movf	Lcd_Write_Char@a,w
  2238     0390  390F               	andlw	15
  2239     0391  00F2               	movwf	Lcd_Write_Char@temp
  2240                           
  2241                           ;LCD.c: 86:     y = a & 0xF0;
  2242     0392  0874               	movf	Lcd_Write_Char@a,w
  2243     0393  39F0               	andlw	240
  2244     0394  00F3               	movwf	Lcd_Write_Char@y
  2245     0395                     l1169:
  2246                           
  2247                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2248     0395  1283               	bcf	3,5	;RP0=0, select bank0
  2249     0396  1303               	bcf	3,6	;RP1=0, select bank0
  2250     0397  1508               	bsf	8,2	;volatile
  2251     0398                     l1171:
  2252                           
  2253                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2254     0398  0873               	movf	Lcd_Write_Char@y,w
  2255     0399  00F1               	movwf	??_Lcd_Write_Char
  2256     039A  3004               	movlw	4
  2257     039B                     u505:
  2258     039B  1003               	clrc
  2259     039C  0CF1               	rrf	??_Lcd_Write_Char,f
  2260     039D  3EFF               	addlw	-1
  2261     039E  1D03               	skipz
  2262     039F  2B9B               	goto	u505
  2263     03A0  0871               	movf	??_Lcd_Write_Char,w
  2264     03A1  120A  118A  22DD  120A  118A  	fcall	_Lcd_Port
  2265     03A6                     l1173:
  2266                           
  2267                           ;LCD.c: 89:     RD3 = 1;
  2268     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2269     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2270     03A8  1588               	bsf	8,3	;volatile
  2271     03A9                     l1175:
  2272                           
  2273                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2274     03A9  301A               	movlw	26
  2275     03AA  00F1               	movwf	??_Lcd_Write_Char
  2276     03AB                     u937:
  2277     03AB  0BF1               	decfsz	??_Lcd_Write_Char,f
  2278     03AC  2BAB               	goto	u937
  2279     03AD  0000               	nop
  2280     03AE                     l1177:
  2281                           
  2282                           ;LCD.c: 91:     RD3 = 0;
  2283     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2284     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2285     03B0  1188               	bcf	8,3	;volatile
  2286     03B1                     l1179:
  2287                           
  2288                           ;LCD.c: 92:     Lcd_Port(temp);
  2289     03B1  0872               	movf	Lcd_Write_Char@temp,w
  2290     03B2  120A  118A  22DD  120A  118A  	fcall	_Lcd_Port
  2291     03B7                     l1181:
  2292                           
  2293                           ;LCD.c: 93:     RD3 = 1;
  2294     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2295     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2296     03B9  1588               	bsf	8,3	;volatile
  2297     03BA                     l1183:
  2298                           
  2299                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2300     03BA  301A               	movlw	26
  2301     03BB  00F1               	movwf	??_Lcd_Write_Char
  2302     03BC                     u947:
  2303     03BC  0BF1               	decfsz	??_Lcd_Write_Char,f
  2304     03BD  2BBC               	goto	u947
  2305     03BE  0000               	nop
  2306     03BF                     l1185:
  2307                           
  2308                           ;LCD.c: 95:     RD3 = 0;
  2309     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2310     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2311     03C1  1188               	bcf	8,3	;volatile
  2312     03C2                     l193:
  2313     03C2  0008               	return
  2314     03C3                     __end_of_Lcd_Write_Char:
  2315                           
  2316                           	psect	text10
  2317     03C3                     __ptext10:	
  2318 ;; *************** function _Lcd_Set_Cursor *****************
  2319 ;; Defined at:
  2320 ;;		line 48 in file "LCD.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  a               1    wreg     unsigned char 
  2323 ;;  b               1    4[COMMON] unsigned char 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  a               1    6[COMMON] unsigned char 
  2326 ;;  temp            1    9[COMMON] unsigned char 
  2327 ;;  y               1    8[COMMON] unsigned char 
  2328 ;;  z               1    7[COMMON] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         1       0       0       0       0
  2339 ;;      Locals:         4       0       0       0       0
  2340 ;;      Temps:          1       0       0       0       0
  2341 ;;      Totals:         6       0       0       0       0
  2342 ;;Total ram usage:        6 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 2
  2345 ;; This function calls:
  2346 ;;		_Lcd_Cmd
  2347 ;; This function is called by:
  2348 ;;		_RTC_display
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352     03C3                     _Lcd_Set_Cursor:	
  2353                           ;psect for function _Lcd_Set_Cursor
  2354                           
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2358                           ;Lcd_Set_Cursor@a stored from wreg
  2359     03C3  00F6               	movwf	Lcd_Set_Cursor@a
  2360     03C4                     l1209:
  2361                           
  2362                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2363     03C4  0376               	decf	Lcd_Set_Cursor@a,w
  2364     03C5  1D03               	btfss	3,2
  2365     03C6  2BC8               	goto	u561
  2366     03C7  2BC9               	goto	u560
  2367     03C8                     u561:
  2368     03C8  2BE6               	goto	l1219
  2369     03C9                     u560:
  2370     03C9                     l1211:
  2371                           
  2372                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2373     03C9  0874               	movf	Lcd_Set_Cursor@b,w
  2374     03CA  3E7F               	addlw	127
  2375     03CB  00F9               	movwf	Lcd_Set_Cursor@temp
  2376                           
  2377                           ;LCD.c: 52:         z = temp >> 4;
  2378     03CC  0879               	movf	Lcd_Set_Cursor@temp,w
  2379     03CD  00F5               	movwf	??_Lcd_Set_Cursor
  2380     03CE  3004               	movlw	4
  2381     03CF                     u575:
  2382     03CF  1003               	clrc
  2383     03D0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2384     03D1  3EFF               	addlw	-1
  2385     03D2  1D03               	skipz
  2386     03D3  2BCF               	goto	u575
  2387     03D4  0875               	movf	??_Lcd_Set_Cursor,w
  2388     03D5  00F7               	movwf	Lcd_Set_Cursor@z
  2389     03D6                     l1213:
  2390                           
  2391                           ;LCD.c: 53:         y = temp & 0x0F;
  2392     03D6  0879               	movf	Lcd_Set_Cursor@temp,w
  2393     03D7  390F               	andlw	15
  2394     03D8  00F8               	movwf	Lcd_Set_Cursor@y
  2395     03D9                     l1215:
  2396                           
  2397                           ;LCD.c: 54:         Lcd_Cmd(z);
  2398     03D9  0877               	movf	Lcd_Set_Cursor@z,w
  2399     03DA  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2400     03DF                     l1217:
  2401                           
  2402                           ;LCD.c: 55:         Lcd_Cmd(y);
  2403     03DF  0878               	movf	Lcd_Set_Cursor@y,w
  2404     03E0  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2405                           
  2406                           ;LCD.c: 56:     } else if (a == 2) {
  2407     03E5  2C08               	goto	l187
  2408     03E6                     l1219:
  2409     03E6  3002               	movlw	2
  2410     03E7  0676               	xorwf	Lcd_Set_Cursor@a,w
  2411     03E8  1D03               	btfss	3,2
  2412     03E9  2BEB               	goto	u581
  2413     03EA  2BEC               	goto	u580
  2414     03EB                     u581:
  2415     03EB  2C08               	goto	l187
  2416     03EC                     u580:
  2417     03EC                     l1221:
  2418                           
  2419                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2420     03EC  0874               	movf	Lcd_Set_Cursor@b,w
  2421     03ED  3EBF               	addlw	191
  2422     03EE  00F9               	movwf	Lcd_Set_Cursor@temp
  2423                           
  2424                           ;LCD.c: 58:         z = temp >> 4;
  2425     03EF  0879               	movf	Lcd_Set_Cursor@temp,w
  2426     03F0  00F5               	movwf	??_Lcd_Set_Cursor
  2427     03F1  3004               	movlw	4
  2428     03F2                     u595:
  2429     03F2  1003               	clrc
  2430     03F3  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2431     03F4  3EFF               	addlw	-1
  2432     03F5  1D03               	skipz
  2433     03F6  2BF2               	goto	u595
  2434     03F7  0875               	movf	??_Lcd_Set_Cursor,w
  2435     03F8  00F7               	movwf	Lcd_Set_Cursor@z
  2436     03F9                     l1223:
  2437                           
  2438                           ;LCD.c: 59:         y = temp & 0x0F;
  2439     03F9  0879               	movf	Lcd_Set_Cursor@temp,w
  2440     03FA  390F               	andlw	15
  2441     03FB  00F8               	movwf	Lcd_Set_Cursor@y
  2442     03FC                     l1225:
  2443                           
  2444                           ;LCD.c: 60:         Lcd_Cmd(z);
  2445     03FC  0877               	movf	Lcd_Set_Cursor@z,w
  2446     03FD  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2447     0402                     l1227:
  2448                           
  2449                           ;LCD.c: 61:         Lcd_Cmd(y);
  2450     0402  0878               	movf	Lcd_Set_Cursor@y,w
  2451     0403  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2452     0408                     l187:
  2453     0408  0008               	return
  2454     0409                     __end_of_Lcd_Set_Cursor:
  2455                           
  2456                           	psect	text11
  2457     0462                     __ptext11:	
  2458 ;; *************** function _Lcd_Init *****************
  2459 ;; Defined at:
  2460 ;;		line 65 in file "LCD.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          2       0       0       0       0
  2477 ;;      Totals:         2       0       0       0       0
  2478 ;;Total ram usage:        2 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		_Lcd_Cmd
  2483 ;;		_Lcd_Port
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     0462                     _Lcd_Init:	
  2490                           ;psect for function _Lcd_Init
  2491                           
  2492     0462                     l1407:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2495                           
  2496                           
  2497                           ;LCD.c: 66:     Lcd_Port(0x00);
  2498     0462  3000               	movlw	0
  2499     0463  120A  118A  22DD  120A  118A  	fcall	_Lcd_Port
  2500     0468                     l1409:
  2501                           
  2502                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2503     0468  3034               	movlw	52
  2504     0469  00F5               	movwf	??_Lcd_Init+1
  2505     046A  30F1               	movlw	241
  2506     046B  00F4               	movwf	??_Lcd_Init
  2507     046C                     u957:
  2508     046C  0BF4               	decfsz	??_Lcd_Init,f
  2509     046D  2C6C               	goto	u957
  2510     046E  0BF5               	decfsz	??_Lcd_Init+1,f
  2511     046F  2C6C               	goto	u957
  2512     0470  2C71               	nop2
  2513     0471                     l1411:
  2514                           
  2515                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2516     0471  3003               	movlw	3
  2517     0472  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2518                           
  2519                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2520     0477  300D               	movlw	13
  2521     0478  00F5               	movwf	??_Lcd_Init+1
  2522     0479  30FB               	movlw	251
  2523     047A  00F4               	movwf	??_Lcd_Init
  2524     047B                     u967:
  2525     047B  0BF4               	decfsz	??_Lcd_Init,f
  2526     047C  2C7B               	goto	u967
  2527     047D  0BF5               	decfsz	??_Lcd_Init+1,f
  2528     047E  2C7B               	goto	u967
  2529     047F  2C80               	nop2
  2530     0480                     l1413:
  2531                           
  2532                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2533     0480  3003               	movlw	3
  2534     0481  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2535     0486                     l1415:
  2536                           
  2537                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2538     0486  301D               	movlw	29
  2539     0487  00F5               	movwf	??_Lcd_Init+1
  2540     0488  3091               	movlw	145
  2541     0489  00F4               	movwf	??_Lcd_Init
  2542     048A                     u977:
  2543     048A  0BF4               	decfsz	??_Lcd_Init,f
  2544     048B  2C8A               	goto	u977
  2545     048C  0BF5               	decfsz	??_Lcd_Init+1,f
  2546     048D  2C8A               	goto	u977
  2547                           
  2548                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2549     048E  3003               	movlw	3
  2550     048F  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2551                           
  2552                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2553     0494  3002               	movlw	2
  2554     0495  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2555                           
  2556                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2557     049A  3002               	movlw	2
  2558     049B  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2559                           
  2560                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2561     04A0  3008               	movlw	8
  2562     04A1  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2563                           
  2564                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2565     04A6  3000               	movlw	0
  2566     04A7  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2567                           
  2568                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2569     04AC  300C               	movlw	12
  2570     04AD  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2571                           
  2572                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2573     04B2  3000               	movlw	0
  2574     04B3  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2575                           
  2576                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2577     04B8  3006               	movlw	6
  2578     04B9  120A  118A  2268  120A  118A  	fcall	_Lcd_Cmd
  2579     04BE                     l190:
  2580     04BE  0008               	return
  2581     04BF                     __end_of_Lcd_Init:
  2582                           
  2583                           	psect	text12
  2584     0268                     __ptext12:	
  2585 ;; *************** function _Lcd_Cmd *****************
  2586 ;; Defined at:
  2587 ;;		line 35 in file "LCD.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  a               1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  a               1    3[COMMON] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0
  2603 ;;      Temps:          2       0       0       0       0
  2604 ;;      Totals:         3       0       0       0       0
  2605 ;;Total ram usage:        3 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 1
  2608 ;; This function calls:
  2609 ;;		_Lcd_Port
  2610 ;; This function is called by:
  2611 ;;		_Lcd_Set_Cursor
  2612 ;;		_Lcd_Init
  2613 ;;		_Lcd_Clear
  2614 ;;		_Lcd_Shift_Right
  2615 ;;		_Lcd_Shift_Left
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619     0268                     _Lcd_Cmd:	
  2620                           ;psect for function _Lcd_Cmd
  2621                           
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2625                           ;Lcd_Cmd@a stored from wreg
  2626     0268  00F3               	movwf	Lcd_Cmd@a
  2627     0269                     l1157:
  2628                           
  2629                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2630     0269  1283               	bcf	3,5	;RP0=0, select bank0
  2631     026A  1303               	bcf	3,6	;RP1=0, select bank0
  2632     026B  1108               	bcf	8,2	;volatile
  2633     026C                     l1159:
  2634                           
  2635                           ;LCD.c: 37:     Lcd_Port(a);
  2636     026C  0873               	movf	Lcd_Cmd@a,w
  2637     026D  120A  118A  22DD  120A  118A  	fcall	_Lcd_Port
  2638     0272                     l1161:
  2639                           
  2640                           ;LCD.c: 38:     RD3 = 1;
  2641     0272  1283               	bcf	3,5	;RP0=0, select bank0
  2642     0273  1303               	bcf	3,6	;RP1=0, select bank0
  2643     0274  1588               	bsf	8,3	;volatile
  2644     0275                     l1163:
  2645                           
  2646                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2647     0275  300B               	movlw	11
  2648     0276  00F2               	movwf	??_Lcd_Cmd+1
  2649     0277  3062               	movlw	98
  2650     0278  00F1               	movwf	??_Lcd_Cmd
  2651     0279                     u987:
  2652     0279  0BF1               	decfsz	??_Lcd_Cmd,f
  2653     027A  2A79               	goto	u987
  2654     027B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2655     027C  2A79               	goto	u987
  2656     027D  0000               	nop
  2657     027E                     l1165:
  2658                           
  2659                           ;LCD.c: 40:     RD3 = 0;
  2660     027E  1283               	bcf	3,5	;RP0=0, select bank0
  2661     027F  1303               	bcf	3,6	;RP1=0, select bank0
  2662     0280  1188               	bcf	8,3	;volatile
  2663     0281                     l178:
  2664     0281  0008               	return
  2665     0282                     __end_of_Lcd_Cmd:
  2666                           
  2667                           	psect	text13
  2668     02DD                     __ptext13:	
  2669 ;; *************** function _Lcd_Port *****************
  2670 ;; Defined at:
  2671 ;;		line 13 in file "LCD.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  a               1    wreg     unsigned char 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  a               1    0[COMMON] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0
  2688 ;;      Totals:         1       0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_Lcd_Cmd
  2695 ;;		_Lcd_Init
  2696 ;;		_Lcd_Write_Char
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700     02DD                     _Lcd_Port:	
  2701                           ;psect for function _Lcd_Port
  2702                           
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _Lcd_Port: [wreg]
  2706                           ;Lcd_Port@a stored from wreg
  2707     02DD  00F0               	movwf	Lcd_Port@a
  2708     02DE                     l1147:
  2709                           
  2710                           ;LCD.c: 14:     if (a & 1)
  2711     02DE  1C70               	btfss	Lcd_Port@a,0
  2712     02DF  2AE1               	goto	u461
  2713     02E0  2AE2               	goto	u460
  2714     02E1                     u461:
  2715     02E1  2AE6               	goto	l167
  2716     02E2                     u460:
  2717     02E2                     l1149:
  2718                           
  2719                           ;LCD.c: 15:         RD4 = 1;
  2720     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2721     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2722     02E4  1608               	bsf	8,4	;volatile
  2723     02E5  2AE9               	goto	l168
  2724     02E6                     l167:	
  2725                           ;LCD.c: 16:     else
  2726                           
  2727                           
  2728                           ;LCD.c: 17:         RD4 = 0;
  2729     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2730     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2731     02E8  1208               	bcf	8,4	;volatile
  2732     02E9                     l168:
  2733                           
  2734                           ;LCD.c: 19:     if (a & 2)
  2735     02E9  1CF0               	btfss	Lcd_Port@a,1
  2736     02EA  2AEC               	goto	u471
  2737     02EB  2AED               	goto	u470
  2738     02EC                     u471:
  2739     02EC  2AEF               	goto	l169
  2740     02ED                     u470:
  2741     02ED                     l1151:
  2742                           
  2743                           ;LCD.c: 20:         RD5 = 1;
  2744     02ED  1688               	bsf	8,5	;volatile
  2745     02EE  2AF0               	goto	l170
  2746     02EF                     l169:	
  2747                           ;LCD.c: 21:     else
  2748                           
  2749                           
  2750                           ;LCD.c: 22:         RD5 = 0;
  2751     02EF  1288               	bcf	8,5	;volatile
  2752     02F0                     l170:
  2753                           
  2754                           ;LCD.c: 24:     if (a & 4)
  2755     02F0  1D70               	btfss	Lcd_Port@a,2
  2756     02F1  2AF3               	goto	u481
  2757     02F2  2AF4               	goto	u480
  2758     02F3                     u481:
  2759     02F3  2AF6               	goto	l171
  2760     02F4                     u480:
  2761     02F4                     l1153:
  2762                           
  2763                           ;LCD.c: 25:         RD6 = 1;
  2764     02F4  1708               	bsf	8,6	;volatile
  2765     02F5  2AF7               	goto	l172
  2766     02F6                     l171:	
  2767                           ;LCD.c: 26:     else
  2768                           
  2769                           
  2770                           ;LCD.c: 27:         RD6 = 0;
  2771     02F6  1308               	bcf	8,6	;volatile
  2772     02F7                     l172:
  2773                           
  2774                           ;LCD.c: 29:     if (a & 8)
  2775     02F7  1DF0               	btfss	Lcd_Port@a,3
  2776     02F8  2AFA               	goto	u491
  2777     02F9  2AFB               	goto	u490
  2778     02FA                     u491:
  2779     02FA  2AFD               	goto	l173
  2780     02FB                     u490:
  2781     02FB                     l1155:
  2782                           
  2783                           ;LCD.c: 30:         RD7 = 1;
  2784     02FB  1788               	bsf	8,7	;volatile
  2785     02FC  2AFE               	goto	l175
  2786     02FD                     l173:	
  2787                           ;LCD.c: 31:     else
  2788                           
  2789                           
  2790                           ;LCD.c: 32:         RD7 = 0;
  2791     02FD  1388               	bcf	8,7	;volatile
  2792     02FE                     l175:
  2793     02FE  0008               	return
  2794     02FF                     __end_of_Lcd_Port:
  2795                           
  2796                           	psect	text14
  2797     0213                     __ptext14:	
  2798 ;; *************** function _I2C_Master_Write *****************
  2799 ;; Defined at:
  2800 ;;		line 65 in file "I2C.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  d               2    0[COMMON] unsigned int 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         2       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         2       0       0       0       0
  2818 ;;Total ram usage:        2 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 1
  2821 ;; This function calls:
  2822 ;;		_I2C_Master_Wait
  2823 ;; This function is called by:
  2824 ;;		_main
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828     0213                     _I2C_Master_Write:	
  2829                           ;psect for function _I2C_Master_Write
  2830                           
  2831     0213                     l1355:	
  2832                           ;incstack = 0
  2833                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2834                           
  2835                           
  2836                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2837     0213  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2838     0218                     l1357:
  2839                           
  2840                           ;I2C.c: 68:     SSPBUF = d;
  2841     0218  0870               	movf	I2C_Master_Write@d,w
  2842     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2843     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2844     021B  0093               	movwf	19	;volatile
  2845     021C                     l47:
  2846     021C  0008               	return
  2847     021D                     __end_of_I2C_Master_Write:
  2848                           
  2849                           	psect	text15
  2850     020A                     __ptext15:	
  2851 ;; *************** function _I2C_Master_Stop *****************
  2852 ;; Defined at:
  2853 ;;		line 55 in file "I2C.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 1
  2874 ;; This function calls:
  2875 ;;		_I2C_Master_Wait
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881     020A                     _I2C_Master_Stop:	
  2882                           ;psect for function _I2C_Master_Stop
  2883                           
  2884     020A                     l1351:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888                           
  2889                           ;I2C.c: 57:     I2C_Master_Wait();
  2890     020A  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2891     020F                     l1353:
  2892                           
  2893                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2894     020F  1683               	bsf	3,5	;RP0=1, select bank1
  2895     0210  1303               	bcf	3,6	;RP1=0, select bank1
  2896     0211  1511               	bsf	17,2	;volatile
  2897     0212                     l44:
  2898     0212  0008               	return
  2899     0213                     __end_of_I2C_Master_Stop:
  2900                           
  2901                           	psect	text16
  2902     0201                     __ptext16:	
  2903 ;; *************** function _I2C_Master_Start *****************
  2904 ;; Defined at:
  2905 ;;		line 39 in file "I2C.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0
  2922 ;;      Totals:         0       0       0       0       0
  2923 ;;Total ram usage:        0 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 1
  2926 ;; This function calls:
  2927 ;;		_I2C_Master_Wait
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933     0201                     _I2C_Master_Start:	
  2934                           ;psect for function _I2C_Master_Start
  2935                           
  2936     0201                     l1343:	
  2937                           ;incstack = 0
  2938                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2939                           
  2940                           
  2941                           ;I2C.c: 41:     I2C_Master_Wait();
  2942     0201  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2943     0206                     l1345:
  2944                           
  2945                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2946     0206  1683               	bsf	3,5	;RP0=1, select bank1
  2947     0207  1303               	bcf	3,6	;RP1=0, select bank1
  2948     0208  1411               	bsf	17,0	;volatile
  2949     0209                     l38:
  2950     0209  0008               	return
  2951     020A                     __end_of_I2C_Master_Start:
  2952                           
  2953                           	psect	text17
  2954     01F8                     __ptext17:	
  2955 ;; *************** function _I2C_Master_RepeatedStart *****************
  2956 ;; Defined at:
  2957 ;;		line 47 in file "I2C.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 1
  2978 ;; This function calls:
  2979 ;;		_I2C_Master_Wait
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985     01F8                     _I2C_Master_RepeatedStart:	
  2986                           ;psect for function _I2C_Master_RepeatedStart
  2987                           
  2988     01F8                     l1347:	
  2989                           ;incstack = 0
  2990                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2991                           
  2992                           
  2993                           ;I2C.c: 49:     I2C_Master_Wait();
  2994     01F8  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  2995     01FD                     l1349:
  2996                           
  2997                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2998     01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2999     01FE  1303               	bcf	3,6	;RP1=0, select bank1
  3000     01FF  1491               	bsf	17,1	;volatile
  3001     0200                     l41:
  3002     0200  0008               	return
  3003     0201                     __end_of_I2C_Master_RepeatedStart:
  3004                           
  3005                           	psect	text18
  3006     02FF                     __ptext18:	
  3007 ;; *************** function _I2C_Master_Read *****************
  3008 ;; Defined at:
  3009 ;;		line 74 in file "I2C.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  a               2    0[COMMON] unsigned short 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  temp            2    4[COMMON] unsigned short 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  2    0[COMMON] unsigned short 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         2       0       0       0       0
  3024 ;;      Locals:         2       0       0       0       0
  3025 ;;      Temps:          2       0       0       0       0
  3026 ;;      Totals:         6       0       0       0       0
  3027 ;;Total ram usage:        6 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 1
  3030 ;; This function calls:
  3031 ;;		_I2C_Master_Wait
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     02FF                     _I2C_Master_Read:	
  3038                           ;psect for function _I2C_Master_Read
  3039                           
  3040     02FF                     l1359:	
  3041                           ;incstack = 0
  3042                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3043                           
  3044                           
  3045                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3046     02FF  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  3047     0304                     l1361:
  3048                           
  3049                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3050     0304  1683               	bsf	3,5	;RP0=1, select bank1
  3051     0305  1303               	bcf	3,6	;RP1=0, select bank1
  3052     0306  1591               	bsf	17,3	;volatile
  3053                           
  3054                           ;I2C.c: 79:     I2C_Master_Wait();
  3055     0307  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  3056     030C                     l1363:
  3057                           
  3058                           ;I2C.c: 80:     temp = SSPBUF;
  3059     030C  1283               	bcf	3,5	;RP0=0, select bank0
  3060     030D  1303               	bcf	3,6	;RP1=0, select bank0
  3061     030E  0813               	movf	19,w	;volatile
  3062     030F  00F2               	movwf	??_I2C_Master_Read
  3063     0310  01F3               	clrf	??_I2C_Master_Read+1
  3064     0311  0872               	movf	??_I2C_Master_Read,w
  3065     0312  00F4               	movwf	I2C_Master_Read@temp
  3066     0313  0873               	movf	??_I2C_Master_Read+1,w
  3067     0314  00F5               	movwf	I2C_Master_Read@temp+1
  3068     0315                     l1365:
  3069                           
  3070                           ;I2C.c: 81:     I2C_Master_Wait();
  3071     0315  120A  118A  221D  120A  118A  	fcall	_I2C_Master_Wait
  3072     031A                     l1367:
  3073                           
  3074                           ;I2C.c: 82:     if(a == 1){
  3075     031A  0370               	decf	I2C_Master_Read@a,w
  3076     031B  0471               	iorwf	I2C_Master_Read@a+1,w
  3077     031C  1D03               	btfss	3,2
  3078     031D  2B1F               	goto	u871
  3079     031E  2B20               	goto	u870
  3080     031F                     u871:
  3081     031F  2B24               	goto	l50
  3082     0320                     u870:
  3083     0320                     l1369:
  3084                           
  3085                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3086     0320  1683               	bsf	3,5	;RP0=1, select bank1
  3087     0321  1303               	bcf	3,6	;RP1=0, select bank1
  3088     0322  1291               	bcf	17,5	;volatile
  3089                           
  3090                           ;I2C.c: 84:     }else{
  3091     0323  2B27               	goto	l51
  3092     0324                     l50:
  3093                           
  3094                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3095     0324  1683               	bsf	3,5	;RP0=1, select bank1
  3096     0325  1303               	bcf	3,6	;RP1=0, select bank1
  3097     0326  1691               	bsf	17,5	;volatile
  3098     0327                     l51:	
  3099                           ;I2C.c: 86:     }
  3100                           
  3101                           
  3102                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3103     0327  1611               	bsf	17,4	;volatile
  3104     0328                     l1371:
  3105                           
  3106                           ;I2C.c: 88:     return temp;
  3107     0328  0875               	movf	I2C_Master_Read@temp+1,w
  3108     0329  00F1               	movwf	?_I2C_Master_Read+1
  3109     032A  0874               	movf	I2C_Master_Read@temp,w
  3110     032B  00F0               	movwf	?_I2C_Master_Read
  3111     032C                     l52:
  3112     032C  0008               	return
  3113     032D                     __end_of_I2C_Master_Read:
  3114                           
  3115                           	psect	text19
  3116     021D                     __ptext19:	
  3117 ;; *************** function _I2C_Master_Wait *****************
  3118 ;; Defined at:
  3119 ;;		line 32 in file "I2C.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3133 ;;      Params:         0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used: 1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_I2C_Master_Start
  3143 ;;		_I2C_Master_RepeatedStart
  3144 ;;		_I2C_Master_Stop
  3145 ;;		_I2C_Master_Write
  3146 ;;		_I2C_Master_Read
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150     021D                     _I2C_Master_Wait:	
  3151                           ;psect for function _I2C_Master_Wait
  3152                           
  3153     021D                     l1201:	
  3154                           ;incstack = 0
  3155                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3156                           
  3157     021D                     l32:	
  3158                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3159                           
  3160     021D  1683               	bsf	3,5	;RP0=1, select bank1
  3161     021E  1303               	bcf	3,6	;RP1=0, select bank1
  3162     021F  1914               	btfsc	20,2	;volatile
  3163     0220  2A22               	goto	u531
  3164     0221  2A23               	goto	u530
  3165     0222                     u531:
  3166     0222  2A1D               	goto	l32
  3167     0223                     u530:
  3168     0223                     l1203:
  3169     0223  0811               	movf	17,w	;volatile
  3170     0224  391F               	andlw	31
  3171     0225  1D03               	btfss	3,2
  3172     0226  2A28               	goto	u541
  3173     0227  2A29               	goto	u540
  3174     0228                     u541:
  3175     0228  2A1D               	goto	l32
  3176     0229                     u540:
  3177     0229                     l35:
  3178     0229  0008               	return
  3179     022A                     __end_of_I2C_Master_Wait:
  3180                           
  3181                           	psect	text20
  3182     035D                     __ptext20:	
  3183 ;; *************** function _I2C_Init *****************
  3184 ;; Defined at:
  3185 ;;		line 45 in file "Lab4master.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       4       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       4       0       0       0
  3202 ;;      Totals:         0       8       0       0       0
  3203 ;;Total ram usage:        8 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 1
  3206 ;; This function calls:
  3207 ;;		___lldiv
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213     035D                     _I2C_Init:	
  3214                           ;psect for function _I2C_Init
  3215                           
  3216     035D                     l1375:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3219                           
  3220                           
  3221                           ;Lab4master.c: 45: void I2C_Init(uint32_t i2c_clk_freq);Lab4master.c: 46: {;Lab4master.c
      +                          : 47:   SSPCON = 0x28;
  3222     035D  3028               	movlw	40
  3223     035E  1283               	bcf	3,5	;RP0=0, select bank0
  3224     035F  1303               	bcf	3,6	;RP1=0, select bank0
  3225     0360  0094               	movwf	20	;volatile
  3226     0361                     l1377:
  3227                           
  3228                           ;Lab4master.c: 48:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3229     0361  0840               	movf	I2C_Init@i2c_clk_freq,w
  3230     0362  00C4               	movwf	??_I2C_Init
  3231     0363  0841               	movf	I2C_Init@i2c_clk_freq+1,w
  3232     0364  00C5               	movwf	??_I2C_Init+1
  3233     0365  0842               	movf	I2C_Init@i2c_clk_freq+2,w
  3234     0366  00C6               	movwf	??_I2C_Init+2
  3235     0367  0843               	movf	I2C_Init@i2c_clk_freq+3,w
  3236     0368  00C7               	movwf	??_I2C_Init+3
  3237     0369  3002               	movlw	2
  3238     036A                     u885:
  3239     036A  1003               	clrc
  3240     036B  0DC4               	rlf	??_I2C_Init,f
  3241     036C  0DC5               	rlf	??_I2C_Init+1,f
  3242     036D  0DC6               	rlf	??_I2C_Init+2,f
  3243     036E  0DC7               	rlf	??_I2C_Init+3,f
  3244     036F                     u880:
  3245     036F  3EFF               	addlw	-1
  3246     0370  1D03               	skipz
  3247     0371  2B6A               	goto	u885
  3248     0372  0847               	movf	??_I2C_Init+3,w
  3249     0373  00F3               	movwf	___lldiv@divisor+3
  3250     0374  0846               	movf	??_I2C_Init+2,w
  3251     0375  00F2               	movwf	___lldiv@divisor+2
  3252     0376  0845               	movf	??_I2C_Init+1,w
  3253     0377  00F1               	movwf	___lldiv@divisor+1
  3254     0378  0844               	movf	??_I2C_Init,w
  3255     0379  00F0               	movwf	___lldiv@divisor
  3256     037A  3000               	movlw	0
  3257     037B  00F7               	movwf	___lldiv@dividend+3
  3258     037C  307A               	movlw	122
  3259     037D  00F6               	movwf	___lldiv@dividend+2
  3260     037E  3012               	movlw	18
  3261     037F  00F5               	movwf	___lldiv@dividend+1
  3262     0380  3000               	movlw	0
  3263     0381  00F4               	movwf	___lldiv@dividend
  3264     0382  120A  118A  24BF  120A  118A  	fcall	___lldiv
  3265     0387  0870               	movf	?___lldiv,w
  3266     0388  3EFF               	addlw	255
  3267     0389  1683               	bsf	3,5	;RP0=1, select bank1
  3268     038A  1303               	bcf	3,6	;RP1=0, select bank1
  3269     038B  0093               	movwf	19	;volatile
  3270     038C                     l1379:
  3271                           
  3272                           ;Lab4master.c: 49:   SSPSTAT = 0;
  3273     038C  0194               	clrf	20	;volatile
  3274     038D                     l126:
  3275     038D  0008               	return
  3276     038E                     __end_of_I2C_Init:
  3277                           
  3278                           	psect	text21
  3279     04BF                     __ptext21:	
  3280 ;; *************** function ___lldiv *****************
  3281 ;; Defined at:
  3282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  divisor         4    0[COMMON] unsigned long 
  3285 ;;  dividend        4    4[COMMON] unsigned long 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  quotient        4    9[COMMON] unsigned long 
  3288 ;;  counter         1   13[COMMON] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  4    0[COMMON] unsigned long 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         8       0       0       0       0
  3299 ;;      Locals:         5       0       0       0       0
  3300 ;;      Temps:          1       0       0       0       0
  3301 ;;      Totals:        14       0       0       0       0
  3302 ;;Total ram usage:       14 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_I2C_Init
  3308 ;;		_I2C_Master_Init
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312     04BF                     ___lldiv:	
  3313                           ;psect for function ___lldiv
  3314                           
  3315     04BF                     l1237:	
  3316                           ;incstack = 0
  3317                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3318                           
  3319     04BF  3000               	movlw	0
  3320     04C0  00FC               	movwf	___lldiv@quotient+3
  3321     04C1  3000               	movlw	0
  3322     04C2  00FB               	movwf	___lldiv@quotient+2
  3323     04C3  3000               	movlw	0
  3324     04C4  00FA               	movwf	___lldiv@quotient+1
  3325     04C5  3000               	movlw	0
  3326     04C6  00F9               	movwf	___lldiv@quotient
  3327     04C7  0873               	movf	___lldiv@divisor+3,w
  3328     04C8  0472               	iorwf	___lldiv@divisor+2,w
  3329     04C9  0471               	iorwf	___lldiv@divisor+1,w
  3330     04CA  0470               	iorwf	___lldiv@divisor,w
  3331     04CB  1903               	skipnz
  3332     04CC  2CCE               	goto	u611
  3333     04CD  2CCF               	goto	u610
  3334     04CE                     u611:
  3335     04CE  2D1C               	goto	l1257
  3336     04CF                     u610:
  3337     04CF                     l1239:
  3338     04CF  01FD               	clrf	___lldiv@counter
  3339     04D0  0AFD               	incf	___lldiv@counter,f
  3340     04D1  2CDF               	goto	l1243
  3341     04D2                     l1241:
  3342     04D2  3001               	movlw	1
  3343     04D3  00F8               	movwf	??___lldiv
  3344     04D4                     u625:
  3345     04D4  1003               	clrc
  3346     04D5  0DF0               	rlf	___lldiv@divisor,f
  3347     04D6  0DF1               	rlf	___lldiv@divisor+1,f
  3348     04D7  0DF2               	rlf	___lldiv@divisor+2,f
  3349     04D8  0DF3               	rlf	___lldiv@divisor+3,f
  3350     04D9  0BF8               	decfsz	??___lldiv,f
  3351     04DA  2CD4               	goto	u625
  3352     04DB  3001               	movlw	1
  3353     04DC  00F8               	movwf	??___lldiv
  3354     04DD  0878               	movf	??___lldiv,w
  3355     04DE  07FD               	addwf	___lldiv@counter,f
  3356     04DF                     l1243:
  3357     04DF  1FF3               	btfss	___lldiv@divisor+3,7
  3358     04E0  2CE2               	goto	u631
  3359     04E1  2CE3               	goto	u630
  3360     04E2                     u631:
  3361     04E2  2CD2               	goto	l1241
  3362     04E3                     u630:
  3363     04E3                     l1245:
  3364     04E3  3001               	movlw	1
  3365     04E4  00F8               	movwf	??___lldiv
  3366     04E5                     u645:
  3367     04E5  1003               	clrc
  3368     04E6  0DF9               	rlf	___lldiv@quotient,f
  3369     04E7  0DFA               	rlf	___lldiv@quotient+1,f
  3370     04E8  0DFB               	rlf	___lldiv@quotient+2,f
  3371     04E9  0DFC               	rlf	___lldiv@quotient+3,f
  3372     04EA  0BF8               	decfsz	??___lldiv,f
  3373     04EB  2CE5               	goto	u645
  3374     04EC                     l1247:
  3375     04EC  0873               	movf	___lldiv@divisor+3,w
  3376     04ED  0277               	subwf	___lldiv@dividend+3,w
  3377     04EE  1D03               	skipz
  3378     04EF  2CFA               	goto	u655
  3379     04F0  0872               	movf	___lldiv@divisor+2,w
  3380     04F1  0276               	subwf	___lldiv@dividend+2,w
  3381     04F2  1D03               	skipz
  3382     04F3  2CFA               	goto	u655
  3383     04F4  0871               	movf	___lldiv@divisor+1,w
  3384     04F5  0275               	subwf	___lldiv@dividend+1,w
  3385     04F6  1D03               	skipz
  3386     04F7  2CFA               	goto	u655
  3387     04F8  0870               	movf	___lldiv@divisor,w
  3388     04F9  0274               	subwf	___lldiv@dividend,w
  3389     04FA                     u655:
  3390     04FA  1C03               	skipc
  3391     04FB  2CFD               	goto	u651
  3392     04FC  2CFE               	goto	u650
  3393     04FD                     u651:
  3394     04FD  2D0D               	goto	l1253
  3395     04FE                     u650:
  3396     04FE                     l1249:
  3397     04FE  0870               	movf	___lldiv@divisor,w
  3398     04FF  02F4               	subwf	___lldiv@dividend,f
  3399     0500  0871               	movf	___lldiv@divisor+1,w
  3400     0501  1C03               	skipc
  3401     0502  0F71               	incfsz	___lldiv@divisor+1,w
  3402     0503  02F5               	subwf	___lldiv@dividend+1,f
  3403     0504  0872               	movf	___lldiv@divisor+2,w
  3404     0505  1C03               	skipc
  3405     0506  0F72               	incfsz	___lldiv@divisor+2,w
  3406     0507  02F6               	subwf	___lldiv@dividend+2,f
  3407     0508  0873               	movf	___lldiv@divisor+3,w
  3408     0509  1C03               	skipc
  3409     050A  0F73               	incfsz	___lldiv@divisor+3,w
  3410     050B  02F7               	subwf	___lldiv@dividend+3,f
  3411     050C                     l1251:
  3412     050C  1479               	bsf	___lldiv@quotient,0
  3413     050D                     l1253:
  3414     050D  3001               	movlw	1
  3415     050E                     u665:
  3416     050E  1003               	clrc
  3417     050F  0CF3               	rrf	___lldiv@divisor+3,f
  3418     0510  0CF2               	rrf	___lldiv@divisor+2,f
  3419     0511  0CF1               	rrf	___lldiv@divisor+1,f
  3420     0512  0CF0               	rrf	___lldiv@divisor,f
  3421     0513  3EFF               	addlw	-1
  3422     0514  1D03               	skipz
  3423     0515  2D0E               	goto	u665
  3424     0516                     l1255:
  3425     0516  3001               	movlw	1
  3426     0517  02FD               	subwf	___lldiv@counter,f
  3427     0518  1D03               	btfss	3,2
  3428     0519  2D1B               	goto	u671
  3429     051A  2D1C               	goto	u670
  3430     051B                     u671:
  3431     051B  2CE3               	goto	l1245
  3432     051C                     u670:
  3433     051C                     l1257:
  3434     051C  087C               	movf	___lldiv@quotient+3,w
  3435     051D  00F3               	movwf	?___lldiv+3
  3436     051E  087B               	movf	___lldiv@quotient+2,w
  3437     051F  00F2               	movwf	?___lldiv+2
  3438     0520  087A               	movf	___lldiv@quotient+1,w
  3439     0521  00F1               	movwf	?___lldiv+1
  3440     0522  0879               	movf	___lldiv@quotient,w
  3441     0523  00F0               	movwf	?___lldiv
  3442     0524                     l327:
  3443     0524  0008               	return
  3444     0525                     __end_of___lldiv:
  3445     007E                     btemp	set	126	;btemp
  3446     007E                     wtemp0	set	126
  3447                           
  3448                           	psect	idloc
  3449                           
  3450                           ;Config register IDLOC0 @ 0x2000
  3451                           ;	unspecified, using default values
  3452     2000                     	org	8192
  3453     2000  3FFF               	dw	16383
  3454                           
  3455                           ;Config register IDLOC1 @ 0x2001
  3456                           ;	unspecified, using default values
  3457     2001                     	org	8193
  3458     2001  3FFF               	dw	16383
  3459                           
  3460                           ;Config register IDLOC2 @ 0x2002
  3461                           ;	unspecified, using default values
  3462     2002                     	org	8194
  3463     2002  3FFF               	dw	16383
  3464                           
  3465                           ;Config register IDLOC3 @ 0x2003
  3466                           ;	unspecified, using default values
  3467     2003                     	org	8195
  3468     2003  3FFF               	dw	16383
  3469                           
  3470                           	psect	config
  3471                           
  3472                           ;Config register CONFIG1 @ 0x2007
  3473                           ;	Oscillator Selection bits
  3474                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3475                           ;	Watchdog Timer Enable bit
  3476                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3477                           ;	Power-up Timer Enable bit
  3478                           ;	PWRTE = OFF, PWRT disabled
  3479                           ;	RE3/MCLR pin function select bit
  3480                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3481                           ;	Code Protection bit
  3482                           ;	CP = OFF, Program memory code protection is disabled
  3483                           ;	Data Code Protection bit
  3484                           ;	CPD = OFF, Data memory code protection is disabled
  3485                           ;	Brown Out Reset Selection bits
  3486                           ;	BOREN = OFF, BOR disabled
  3487                           ;	Internal External Switchover bit
  3488                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3489                           ;	Fail-Safe Clock Monitor Enabled bit
  3490                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3491                           ;	Low Voltage Programming Enable bit
  3492                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3493                           ;	In-Circuit Debugger Mode bit
  3494                           ;	DEBUG = 0x1, unprogrammed default
  3495     2007                     	org	8199
  3496     2007  20D5               	dw	8405
  3497                           
  3498                           ;Config register CONFIG2 @ 0x2008
  3499                           ;	Brown-out Reset Selection bit
  3500                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3501                           ;	Flash Program Memory Self Write Enable bits
  3502                           ;	WRT = OFF, Write protection off
  3503     2008                     	org	8200
  3504     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Set_Cursor
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8430
                                              8 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3693
                                             10 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     456
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     564
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 24 01:24:49 2023

                               _i 0051                                 pc 0002                    ___bmul@product 0072  
                              l32 021D                                l41 0200                                l50 0324  
                              l35 0229                                l51 0327                                l52 032C  
                              l44 0212                                l38 0209                                l47 021C  
                    ___awdiv@sign 0076                                fsr 0004                    _decimal_to_bcd 032D  
                     _RTC_display 06A4                               l132 035C                               l126 038D  
                             l150 029B                               l129 0267                               l170 02F0  
                             l171 02F6                               l139 07E6                               l172 02F7  
                             l173 02FD                               l317 0251                               l190 04BE  
                             l327 0524                               l175 02FE                               l167 02E6  
                             l168 02E9                               l169 02EF                               l193 03C2  
                             l178 0281                               l187 0408                               l444 058B  
                             l199 02DC                               l457 0461                               _GIE 005F  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               u510 0243  
                             u511 0242                               u600 02DC                               u520 0250  
                             u505 039B                               u601 02DB                               u521 024F  
                             u610 04CF                               u530 0223                               u611 04CE  
                             u531 0222                               u540 0229                               u460 02E2  
                             u700 0546                               u541 0228                               u461 02E1  
                             u701 0545                               u630 04E3                               u470 02ED  
                             u631 04E2                               u471 02EC                               u480 02F4  
                             u560 03C9                               u720 0558                               u800 0424  
                             u625 04D4                               u481 02F3                               u561 03C8  
                             u721 0557                               u801 0423                               u650 04FE  
                             u490 02FB                               u651 04FD                               u491 02FA  
                             u715 054A                               u555 025B                               u580 03EC  
                             u740 0569                               u820 0436                               u645 04E5  
                             u581 03EB                               u741 0568                               u821 0435  
                             u670 051C                               u830 0440                               u671 051B  
                             u655 04FA                               u575 03CF                               u735 0559  
                             u831 043F                               u815 0428                               u760 057D  
                             u680 052A                               u665 050E                               u761 057C  
                             u745 0565                               u681 0529                               u770 0582  
                             u690 0535                               u850 0453                               u595 03F2  
                             u771 0581                               u755 0571                               u691 0534  
                             u851 0452                               u835 043C                               u860 0458  
                             u780 040E                               u861 0457                               u845 0447  
                             u781 040D                               u917 05E9                               u870 0320  
                             u790 0419                               u871 031F                               u791 0418  
                             u927 0694                               u880 036F                               u937 03AB  
                             u947 03BC                               u885 036A                               u957 046C  
                             u967 047B                               u895 0343                               u977 048A  
                             u987 0279                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0076                              l1201 021D                              l1203 0223  
                            l1211 03C9                              l1221 03EC                              l1213 03D6  
                            l1301 0587                              l1205 0253                              l1151 02ED  
                            l1223 03F9                              l1215 03D9                              l1231 02C0  
                            l1311 0413                              l1241 04D2                              l1153 02F4  
                            l1161 0272                              l1225 03FC                              l1217 03DF  
                            l1209 03C4                              l1233 02CB                              l1321 0427  
                            l1313 0415                              l1305 0409                              l1401 0295  
                            l1251 050C                              l1243 04DF                              l1155 02FB  
                            l1147 02DE                              l1163 0275                              l1411 0471  
                            l1227 0402                              l1219 03E6                              l1171 0398  
                            l1235 02D1                              l1331 0446                              l1323 042E  
                            l1315 0419                              l1307 040A                              l1403 0296  
                            l1253 050D                              l1245 04E3                              l1237 04BF  
                            l1149 02E2                              l1165 027E                              l1157 0269  
                            l1413 0480                              l1181 03B7                              l1173 03A6  
                            l1229 02BD                              l1261 0525                              l1333 044D  
                            l1325 0432                              l1317 041E                              l1309 040E  
                            l1405 029A                              l1255 0516                              l1247 04EC  
                            l1239 04CF                              l1343 0201                              l1351 020A  
                            l1159 026C                              l1415 0486                              l1407 0462  
                            l1183 03BA                              l1175 03A9                              l1167 038F  
                            l1271 0535                              l1263 0526                              l1327 0436  
                            l1319 0424                              l1335 0453                              l1191 0243  
                            l1431 05E1                              l1249 04FE                              l1257 051C  
                            l1361 0304                              l1345 0206                              l1353 020F  
                            l1409 0468                              l1185 03BF                              l1177 03AE  
                            l1169 0395                              l1281 0549                              l1273 053A  
                            l1265 052A                              l1337 0458                              l1329 0440  
                            l1193 0247                              l1441 0614                              l1433 05F0  
                            l1371 0328                              l1363 030C                              l1347 01F8  
                            l1355 0213                              l1179 03B1                              l1291 056F  
                            l1283 0550                              l1275 053E                              l1267 052F  
                            l1339 045D                              l1195 0249                              l1187 023E  
                            l1451 0634                              l1443 0619                              l1435 05F5  
                            l1365 0315                              l1349 01FD                              l1357 0218  
                            l1293 0570                              l1285 0554                              l1277 0540  
                            l1269 0531                              l1197 0250                              l1189 023F  
                            l1381 0330                              l1461 0658                              l1453 0639  
                            l1445 061E                              l1437 05FE                              l1429 058C  
                            l1375 035D                              l1367 031A                              l1359 02FF  
                            l1295 0577                              l1287 0558                              l1279 0546  
                            l1391 0286                              l1471 0687                              l1463 0664  
                            l1455 0642                              l1447 0627                              l1439 0606  
                            l1377 0361                              l1369 0320                              l1289 0569  
                            l1297 057D                              l1385 06A4                              l1393 0289  
                            l1473 068C                              l1465 066D                              l1457 064A  
                            l1449 062F                              l1379 038C                              l1299 0582  
                            l1387 07E0                              l1395 028A                              l1475 069B  
                            l1467 0672                              l1459 064F                              l1397 028B  
                            l1389 0282                              l1469 067B                              l1399 0294  
                            _PEIE 005E                 ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 0201  
                            _main 058C                              _hour 004E                  __end_of_I2C_Init 038E  
                            _year 004B                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 0282                 ___bmul@multiplier 0073  
          __end_of_decimal_to_bcd 035D                  ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___awdiv 058C  
                 __end_of___awmod 0462                             _ANSEL 0188                   __end_of___lldiv 0525  
                 ___awdiv@divisor 0070                   ___awdiv@counter 0075                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _m_day 004D                             _month 004C  
                           _setup 0282                             pclath 000A                             status 0003  
                           wtemp0 007E              I2C_Init@i2c_clk_freq 0040                  __end_of_Lcd_Init 04BF  
                __end_of_Lcd_Port 02FF                   __initialization 07E7                      __end_of_main 06A4  
                 ?_decimal_to_bcd 0070                            ??_main 0048                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            ?_setup 0070                            _ANSELH 0189  
                       ??_Lcd_Cmd 0071                            _SSPADD 0093                            _TRISC1 0439  
                          _TRISC2 043A                            _TRISC3 043B                            _TRISC4 043C  
                          _TRISC6 043E                            _TRISC7 043F                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 01F8                            ___bmul 023D  
                       ??___awdiv 0074                         ??___awmod 0074                         ??___lldiv 0078  
                ___awdiv@quotient 0077                            _minute 004F                            _second 0050  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                         ?_I2C_Init 0040  
                 Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078  
                 Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 029C                     __end_of_setup 029C  
                    ?_RTC_display 0070                    _Lcd_Set_Cursor 03C3                        ??_I2C_Init 0044  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0070  
                      __pbssBANK0 004B                        __pmaintext 058C                           ?___bmul 0070  
          __end_of_Lcd_Set_Cursor 0409                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                    _Lcd_Write_Char 038E  
                         _Lcd_Cmd 0268                  ??_decimal_to_bcd 0079                           ___awdiv 0525  
                         ___awmod 0409                           ___lldiv 04BF                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 0282                           __ptext2 032D                           __ptext3 06A4  
                         __ptext4 0252                           __ptext5 023D                           __ptext6 0409  
                         __ptext7 0525                           __ptext8 02BC                           __ptext9 038E  
                ___awmod@dividend 0072            __end_of_Lcd_Write_Char 03C3              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070                   ___lldiv@counter 007D  
                I2C_Master_Read@a 0070                         Lcd_Port@a 0070                         _PORTCbits 0007  
                       _PORTDbits 0008                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0078                 Lcd_Write_String@i 0076                    __end_of___bmul 0252  
                _Lcd_Write_String 02BC               start_initialization 07E7                    _bcd_to_decimal 0252  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
                        ??___bmul 0071                        init_fetch0 022A                       __pdataBANK0 0020  
                 Lcd_Write_Char@a 0074                   Lcd_Write_Char@y 0073            __end_of_bcd_to_decimal 0268  
                       ___latbits 0002                     __pcstackBANK0 0040                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 0201                  _I2C_Master_Write 0213                  ??_Lcd_Set_Cursor 0075  
                        ?___awdiv 0070                          ?___awmod 0070                          ?___lldiv 0070  
                 ?_bcd_to_decimal 0070                          _I2C_Init 035D              bcd_to_decimal@number 0076  
                 RTC_display@Date 0020                   RTC_display@Time 0031                          Lcd_Cmd@a 0073  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 0462                          _Lcd_Port 02DD  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 02DD         ?_I2C_Master_RepeatedStart 0070  
                   ??_RTC_display 007A                   _I2C_Master_Read 02FF                   _I2C_Master_Wait 021D  
                 _I2C_Master_Stop 020A                          __ptext10 03C3                          __ptext11 0462  
                        __ptext20 035D                          __ptext12 0268                          __ptext21 04BF  
                        __ptext13 02DD                          __ptext14 0213                          __ptext15 020A  
                        __ptext16 0201                          __ptext17 01F8                          __ptext18 02FF  
                        __ptext19 021D              decimal_to_bcd@number 0040          __end_of_I2C_Master_Start 020A  
        __end_of_I2C_Master_Write 021D                          init_ram0 022E               __end_of_RTC_display 07E7  
              Lcd_Write_Char@temp 0072                  ___lldiv@dividend 0074                        _OSCCONbits 008F  
                ??_bcd_to_decimal 0074           __end_of_I2C_Master_Read 032D           __end_of_I2C_Master_Wait 022A  
         __end_of_I2C_Master_Stop 0213                Lcd_Set_Cursor@temp 0079                  ___lldiv@quotient 0079  
               I2C_Master_Write@d 0070                       _SSPCON2bits 0091  
