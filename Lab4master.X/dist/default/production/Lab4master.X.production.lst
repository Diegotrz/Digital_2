

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 23 15:43:21 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384                           
   385                           	psect	idataBANK0
   386     0285                     __pidataBANK0:
   387                           
   388                           ;initializer for RTC_display@Date
   389     0285  3444               	retlw	68
   390     0286  3441               	retlw	65
   391     0287  3454               	retlw	84
   392     0288  3445               	retlw	69
   393     0289  343A               	retlw	58
   394     028A  3420               	retlw	32
   395     028B  3430               	retlw	48
   396     028C  3430               	retlw	48
   397     028D  342F               	retlw	47
   398     028E  3430               	retlw	48
   399     028F  3430               	retlw	48
   400     0290  342F               	retlw	47
   401     0291  3432               	retlw	50
   402     0292  3430               	retlw	48
   403     0293  3430               	retlw	48
   404     0294  3430               	retlw	48
   405     0295  3400               	retlw	0
   406                           
   407                           ;initializer for RTC_display@Time
   408     0296  3454               	retlw	84
   409     0297  3449               	retlw	73
   410     0298  344D               	retlw	77
   411     0299  3445               	retlw	69
   412     029A  343A               	retlw	58
   413     029B  3420               	retlw	32
   414     029C  3430               	retlw	48
   415     029D  3430               	retlw	48
   416     029E  343A               	retlw	58
   417     029F  3430               	retlw	48
   418     02A0  3430               	retlw	48
   419     02A1  343A               	retlw	58
   420     02A2  3430               	retlw	48
   421     02A3  3430               	retlw	48
   422     02A4  3400               	retlw	0
   423     0007                     _PORTCbits	set	7
   424     0008                     _PORTD	set	8
   425     0006                     _PORTB	set	6
   426     0005                     _PORTA	set	5
   427     0013                     _SSPBUF	set	19
   428     0014                     _SSPCON	set	20
   429     003F                     _RC7	set	63
   430     0047                     _RD7	set	71
   431     0046                     _RD6	set	70
   432     0045                     _RD5	set	69
   433     0044                     _RD4	set	68
   434     0063                     _SSPIF	set	99
   435     005E                     _PEIE	set	94
   436     005F                     _GIE	set	95
   437     008F                     _OSCCONbits	set	143
   438     0088                     _TRISD	set	136
   439     0086                     _TRISB	set	134
   440     0085                     _TRISA	set	133
   441     0091                     _SSPCON2bits	set	145
   442     0087                     _TRISCbits	set	135
   443     0094                     _SSPSTAT	set	148
   444     0093                     _SSPADD	set	147
   445     0091                     _SSPCON2	set	145
   446     043F                     _TRISC7	set	1087
   447     043E                     _TRISC6	set	1086
   448     043A                     _TRISC2	set	1082
   449     0439                     _TRISC1	set	1081
   450     0463                     _SSPIE	set	1123
   451     043C                     _TRISC4	set	1084
   452     043B                     _TRISC3	set	1083
   453     0189                     _ANSELH	set	393
   454     0188                     _ANSEL	set	392
   455                           
   456                           	psect	cinit
   457     07E7                     start_initialization:	
   458                           ; #config settings
   459                           
   460     07E7                     __initialization:
   461                           
   462                           ; Initialize objects allocated to BANK0
   463     07E7  1383               	bcf	3,7	;select IRP bank0
   464     07E8  3040               	movlw	low (__pdataBANK0+32)
   465     07E9  00FD               	movwf	btemp+-1
   466     07EA  3002               	movlw	high __pidataBANK0
   467     07EB  00FE               	movwf	btemp
   468     07EC  3085               	movlw	low __pidataBANK0
   469     07ED  00FF               	movwf	btemp+1
   470     07EE  3020               	movlw	low __pdataBANK0
   471     07EF  0084               	movwf	4
   472     07F0  120A  118A  2217  120A  118A  	fcall	init_ram0
   473                           
   474                           ; Clear objects allocated to BANK0
   475     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   476     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   477     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   478     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   479     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   480     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   481     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   482     07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485     07FC                     __end_of__initialization:
   486     07FC  0183               	clrf	3
   487     07FD  120A  118A  2D75   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssBANK0
   490     004B                     __pbssBANK0:
   491     004B                     _year:
   492     004B                     	ds	1
   493     004C                     _month:
   494     004C                     	ds	1
   495     004D                     _m_day:
   496     004D                     	ds	1
   497     004E                     _hour:
   498     004E                     	ds	1
   499     004F                     _minute:
   500     004F                     	ds	1
   501     0050                     _second:
   502     0050                     	ds	1
   503     0051                     _i:
   504     0051                     	ds	1
   505                           
   506                           	psect	dataBANK0
   507     0020                     __pdataBANK0:
   508     0020                     RTC_display@Date:
   509     0020                     	ds	17
   510     0031                     RTC_display@Time:
   511     0031                     	ds	15
   512                           
   513                           	psect	inittext
   514     0213                     init_fetch0:	
   515                           ;	Called with low address in FSR and high address in W
   516                           
   517     0213  087E               	movf	btemp,w
   518     0214  008A               	movwf	10
   519     0215  087F               	movf	btemp+1,w
   520     0216  0082               	movwf	2
   521     0217                     init_ram0:	
   522                           ;Called with:
   523                           ;	high address of idata address in btemp 
   524                           ;	low address of idata address in btemp+1 
   525                           ;	low address of data in FSR
   526                           ;	high address + 1 of data in btemp-1
   527                           
   528     0217  120A  118A  2213  120A  118A  	fcall	init_fetch0
   529     021C  0080               	movwf	0
   530     021D  0A84               	incf	4,f
   531     021E  0804               	movf	4,w
   532     021F  067D               	xorwf	btemp+-1,w
   533     0220  1903               	btfsc	3,2
   534     0221  3400               	retlw	0
   535     0222  0AFF               	incf	btemp+1,f
   536     0223  1903               	btfsc	3,2
   537     0224  0AFE               	incf	btemp,f
   538     0225  2A17               	goto	init_ram0
   539                           
   540                           	psect	cstackCOMMON
   541     0070                     __pcstackCOMMON:
   542     0070                     ?_Lcd_Write_String:
   543     0070                     ?_setup:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ??_setup:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_Lcd_Init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ?_I2C_Master_Wait:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ??_I2C_Master_Wait:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_I2C_Master_Start:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ??_I2C_Master_Start:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_I2C_Master_RepeatedStart:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_I2C_Master_RepeatedStart:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_I2C_Master_Stop:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ??_I2C_Master_Stop:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_I2C_Master_Write:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_bcd_to_decimal:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_decimal_to_bcd:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_RTC_display:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_main:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_Lcd_Port:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ??_Lcd_Port:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_Lcd_Cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_Lcd_Write_Char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?___bmul:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_I2C_Master_Read:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?___awdiv:	
   610                           ; 2 bytes @ 0x0
   611                           
   612     0070                     ?___awmod:	
   613                           ; 2 bytes @ 0x0
   614                           
   615     0070                     ?___lldiv:	
   616                           ; 2 bytes @ 0x0
   617                           
   618     0070                     Lcd_Port@a:	
   619                           ; 4 bytes @ 0x0
   620                           
   621     0070                     ___bmul@multiplicand:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     I2C_Master_Write@d:	
   625                           ; 1 bytes @ 0x0
   626                           
   627     0070                     I2C_Master_Read@a:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0070                     ___awdiv@divisor:	
   631                           ; 2 bytes @ 0x0
   632                           
   633     0070                     ___awmod@divisor:	
   634                           ; 2 bytes @ 0x0
   635                           
   636     0070                     ___lldiv@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 4 bytes @ 0x0
   641     0070                     	ds	1
   642     0071                     ??_Lcd_Cmd:
   643     0071                     ??_Lcd_Write_Char:	
   644                           ; 1 bytes @ 0x1
   645                           
   646     0071                     ??___bmul:	
   647                           ; 1 bytes @ 0x1
   648                           
   649                           
   650                           ; 1 bytes @ 0x1
   651     0071                     	ds	1
   652     0072                     ??_I2C_Master_Write:
   653     0072                     ??_I2C_Master_Read:	
   654                           ; 1 bytes @ 0x2
   655                           
   656     0072                     Lcd_Write_Char@temp:	
   657                           ; 1 bytes @ 0x2
   658                           
   659     0072                     ___bmul@product:	
   660                           ; 1 bytes @ 0x2
   661                           
   662     0072                     ___awdiv@dividend:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     ___awmod@dividend:	
   666                           ; 2 bytes @ 0x2
   667                           
   668                           
   669                           ; 2 bytes @ 0x2
   670     0072                     	ds	1
   671     0073                     Lcd_Cmd@a:
   672     0073                     Lcd_Write_Char@y:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ___bmul@multiplier:	
   676                           ; 1 bytes @ 0x3
   677                           
   678                           
   679                           ; 1 bytes @ 0x3
   680     0073                     	ds	1
   681     0074                     ?_Lcd_Set_Cursor:
   682     0074                     ??_Lcd_Init:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     ??_bcd_to_decimal:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     ??___awdiv:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     ??___awmod:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     Lcd_Set_Cursor@b:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     Lcd_Write_Char@a:	
   698                           ; 1 bytes @ 0x4
   699                           
   700     0074                     I2C_Master_Read@temp:	
   701                           ; 1 bytes @ 0x4
   702                           
   703     0074                     ___lldiv@dividend:	
   704                           ; 2 bytes @ 0x4
   705                           
   706                           
   707                           ; 4 bytes @ 0x4
   708     0074                     	ds	1
   709     0075                     ??_Lcd_Set_Cursor:
   710     0075                     ??_Lcd_Write_String:	
   711                           ; 1 bytes @ 0x5
   712                           
   713     0075                     ___awdiv@counter:	
   714                           ; 1 bytes @ 0x5
   715                           
   716     0075                     ___awmod@counter:	
   717                           ; 1 bytes @ 0x5
   718                           
   719                           
   720                           ; 1 bytes @ 0x5
   721     0075                     	ds	1
   722     0076                     bcd_to_decimal@number:
   723     0076                     Lcd_Set_Cursor@a:	
   724                           ; 1 bytes @ 0x6
   725                           
   726     0076                     ___awdiv@sign:	
   727                           ; 1 bytes @ 0x6
   728                           
   729     0076                     ___awmod@sign:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     Lcd_Write_String@i:	
   733                           ; 1 bytes @ 0x6
   734                           
   735                           
   736                           ; 2 bytes @ 0x6
   737     0076                     	ds	1
   738     0077                     Lcd_Set_Cursor@z:
   739     0077                     ___awdiv@quotient:	
   740                           ; 1 bytes @ 0x7
   741                           
   742                           
   743                           ; 2 bytes @ 0x7
   744     0077                     	ds	1
   745     0078                     ??___lldiv:
   746     0078                     Lcd_Set_Cursor@y:	
   747                           ; 1 bytes @ 0x8
   748                           
   749     0078                     Lcd_Write_String@a:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754     0078                     	ds	1
   755     0079                     ??_decimal_to_bcd:
   756     0079                     Lcd_Set_Cursor@temp:	
   757                           ; 1 bytes @ 0x9
   758                           
   759     0079                     ___lldiv@quotient:	
   760                           ; 1 bytes @ 0x9
   761                           
   762                           
   763                           ; 4 bytes @ 0x9
   764     0079                     	ds	1
   765     007A                     ??_RTC_display:
   766                           
   767                           ; 1 bytes @ 0xA
   768     007A                     	ds	3
   769     007D                     ___lldiv@counter:
   770                           
   771                           ; 1 bytes @ 0xD
   772     007D                     	ds	1
   773                           
   774                           	psect	cstackBANK0
   775     0040                     __pcstackBANK0:
   776     0040                     ?_I2C_Init:
   777     0040                     decimal_to_bcd@number:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0040                     I2C_Init@i2c_clk_freq:	
   781                           ; 1 bytes @ 0x0
   782                           
   783                           
   784                           ; 4 bytes @ 0x0
   785     0040                     	ds	4
   786     0044                     ??_I2C_Init:
   787                           
   788                           ; 1 bytes @ 0x4
   789     0044                     	ds	4
   790     0048                     ??_main:
   791                           
   792                           ; 1 bytes @ 0x8
   793     0048                     	ds	3
   794                           
   795                           	psect	maintext
   796     0575                     __pmaintext:	
   797 ;;
   798 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   799 ;;
   800 ;; *************** function _main *****************
   801 ;; Defined at:
   802 ;;		line 96 in file "Lab4master.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : B00/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       3       0       0       0
   819 ;;      Totals:         0       3       0       0       0
   820 ;;Total ram usage:        3 bytes
   821 ;; Hardware stack levels required when called: 4
   822 ;; This function calls:
   823 ;;		_I2C_Init
   824 ;;		_I2C_Master_Read
   825 ;;		_I2C_Master_RepeatedStart
   826 ;;		_I2C_Master_Start
   827 ;;		_I2C_Master_Stop
   828 ;;		_I2C_Master_Write
   829 ;;		_Lcd_Init
   830 ;;		_Lcd_Set_Cursor
   831 ;;		_RTC_display
   832 ;;		_decimal_to_bcd
   833 ;;		_setup
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839     0575                     _main:	
   840                           ;psect for function _main
   841                           
   842     0575                     l1433:	
   843                           ;incstack = 0
   844                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   845                           
   846                           
   847                           ;Lab4master.c: 97:     setup();
   848     0575  120A  118A  226B  120A  118A  	fcall	_setup
   849                           
   850                           ;Lab4master.c: 98:     Lcd_Init();
   851     057A  120A  118A  244B  120A  118A  	fcall	_Lcd_Init
   852                           
   853                           ;Lab4master.c: 99:     I2C_Init(100000);
   854     057F  3000               	movlw	0
   855     0580  1283               	bcf	3,5	;RP0=0, select bank0
   856     0581  1303               	bcf	3,6	;RP1=0, select bank0
   857     0582  00C3               	movwf	I2C_Init@i2c_clk_freq+3
   858     0583  3001               	movlw	1
   859     0584  00C2               	movwf	I2C_Init@i2c_clk_freq+2
   860     0585  3086               	movlw	134
   861     0586  00C1               	movwf	I2C_Init@i2c_clk_freq+1
   862     0587  30A0               	movlw	160
   863     0588  00C0               	movwf	I2C_Init@i2c_clk_freq
   864     0589  120A  118A  2346  120A  118A  	fcall	_I2C_Init
   865                           
   866                           ;Lab4master.c: 100:     minute = decimal_to_bcd(0);
   867     058E  3000               	movlw	0
   868     058F  120A  118A  2316  120A  118A  	fcall	_decimal_to_bcd
   869     0594  1283               	bcf	3,5	;RP0=0, select bank0
   870     0595  1303               	bcf	3,6	;RP1=0, select bank0
   871     0596  00CF               	movwf	_minute
   872                           
   873                           ;Lab4master.c: 101:     second = decimal_to_bcd(0);
   874     0597  3000               	movlw	0
   875     0598  120A  118A  2316  120A  118A  	fcall	_decimal_to_bcd
   876     059D  1283               	bcf	3,5	;RP0=0, select bank0
   877     059E  1303               	bcf	3,6	;RP1=0, select bank0
   878     059F  00D0               	movwf	_second
   879                           
   880                           ;Lab4master.c: 102:     I2C_Master_Start();
   881     05A0  120A  118A  21EA  120A  118A  	fcall	_I2C_Master_Start
   882                           
   883                           ;Lab4master.c: 103:         I2C_Master_Write(0xD0);
   884     05A5  30D0               	movlw	208
   885     05A6  00F0               	movwf	I2C_Master_Write@d
   886     05A7  3000               	movlw	0
   887     05A8  00F1               	movwf	I2C_Master_Write@d+1
   888     05A9  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   889                           
   890                           ;Lab4master.c: 104:         I2C_Master_Write(0x01);
   891     05AE  3001               	movlw	1
   892     05AF  00F0               	movwf	I2C_Master_Write@d
   893     05B0  3000               	movlw	0
   894     05B1  00F1               	movwf	I2C_Master_Write@d+1
   895     05B2  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   896                           
   897                           ;Lab4master.c: 105:         I2C_Master_Write(minute);
   898     05B7  1283               	bcf	3,5	;RP0=0, select bank0
   899     05B8  1303               	bcf	3,6	;RP1=0, select bank0
   900     05B9  084F               	movf	_minute,w
   901     05BA  00C8               	movwf	??_main
   902     05BB  01C9               	clrf	??_main+1
   903     05BC  0848               	movf	??_main,w
   904     05BD  00F0               	movwf	I2C_Master_Write@d
   905     05BE  0849               	movf	??_main+1,w
   906     05BF  00F1               	movwf	I2C_Master_Write@d+1
   907     05C0  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   908                           
   909                           ;Lab4master.c: 107:         I2C_Master_Stop();
   910     05C5  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Stop
   911     05CA                     l1435:
   912                           
   913                           ;Lab4master.c: 108:         _delay((unsigned long)((200)*(8000000/4000.0)));
   914     05CA  3003               	movlw	3
   915     05CB  1283               	bcf	3,5	;RP0=0, select bank0
   916     05CC  1303               	bcf	3,6	;RP1=0, select bank0
   917     05CD  00CA               	movwf	??_main+2
   918     05CE  3008               	movlw	8
   919     05CF  00C9               	movwf	??_main+1
   920     05D0  3076               	movlw	118
   921     05D1  00C8               	movwf	??_main
   922     05D2                     u917:
   923     05D2  0BC8               	decfsz	??_main,f
   924     05D3  2DD2               	goto	u917
   925     05D4  0BC9               	decfsz	??_main+1,f
   926     05D5  2DD2               	goto	u917
   927     05D6  0BCA               	decfsz	??_main+2,f
   928     05D7  2DD2               	goto	u917
   929     05D8  0000               	nop
   930     05D9                     l1437:
   931                           
   932                           ;Lab4master.c: 109:         I2C_Master_Start();
   933     05D9  120A  118A  21EA  120A  118A  	fcall	_I2C_Master_Start
   934     05DE                     l1439:
   935                           
   936                           ;Lab4master.c: 110:         I2C_Master_Write(0xD0);
   937     05DE  30D0               	movlw	208
   938     05DF  00F0               	movwf	I2C_Master_Write@d
   939     05E0  3000               	movlw	0
   940     05E1  00F1               	movwf	I2C_Master_Write@d+1
   941     05E2  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   942     05E7                     l1441:
   943                           
   944                           ;Lab4master.c: 111:         I2C_Master_Write(0x00);
   945     05E7  3000               	movlw	0
   946     05E8  00F0               	movwf	I2C_Master_Write@d
   947     05E9  00F1               	movwf	I2C_Master_Write@d+1
   948     05EA  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   949     05EF                     l1443:
   950                           
   951                           ;Lab4master.c: 112:         I2C_Master_Write(second);
   952     05EF  1283               	bcf	3,5	;RP0=0, select bank0
   953     05F0  1303               	bcf	3,6	;RP1=0, select bank0
   954     05F1  0850               	movf	_second,w
   955     05F2  00C8               	movwf	??_main
   956     05F3  01C9               	clrf	??_main+1
   957     05F4  0848               	movf	??_main,w
   958     05F5  00F0               	movwf	I2C_Master_Write@d
   959     05F6  0849               	movf	??_main+1,w
   960     05F7  00F1               	movwf	I2C_Master_Write@d+1
   961     05F8  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   962     05FD                     l1445:
   963                           
   964                           ;Lab4master.c: 114:         I2C_Master_Stop();
   965     05FD  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Stop
   966     0602                     l1447:
   967                           
   968                           ;Lab4master.c: 117:         I2C_Master_Start();
   969     0602  120A  118A  21EA  120A  118A  	fcall	_I2C_Master_Start
   970     0607                     l1449:
   971                           
   972                           ;Lab4master.c: 118:         I2C_Master_Write(0xD0);
   973     0607  30D0               	movlw	208
   974     0608  00F0               	movwf	I2C_Master_Write@d
   975     0609  3000               	movlw	0
   976     060A  00F1               	movwf	I2C_Master_Write@d+1
   977     060B  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   978     0610                     l1451:
   979                           
   980                           ;Lab4master.c: 119:         I2C_Master_Write(0x00);
   981     0610  3000               	movlw	0
   982     0611  00F0               	movwf	I2C_Master_Write@d
   983     0612  00F1               	movwf	I2C_Master_Write@d+1
   984     0613  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
   985     0618                     l1453:
   986                           
   987                           ;Lab4master.c: 120:         I2C_Master_Stop();
   988     0618  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Stop
   989     061D                     l1455:
   990                           
   991                           ;Lab4master.c: 122:         I2C_Master_Start();
   992     061D  120A  118A  21EA  120A  118A  	fcall	_I2C_Master_Start
   993     0622                     l1457:
   994                           
   995                           ;Lab4master.c: 123:         I2C_Master_Write(0xD0);
   996     0622  30D0               	movlw	208
   997     0623  00F0               	movwf	I2C_Master_Write@d
   998     0624  3000               	movlw	0
   999     0625  00F1               	movwf	I2C_Master_Write@d+1
  1000     0626  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
  1001     062B                     l1459:
  1002                           
  1003                           ;Lab4master.c: 124:         I2C_Master_Write(0x00);
  1004     062B  3000               	movlw	0
  1005     062C  00F0               	movwf	I2C_Master_Write@d
  1006     062D  00F1               	movwf	I2C_Master_Write@d+1
  1007     062E  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
  1008     0633                     l1461:
  1009                           
  1010                           ;Lab4master.c: 125:         I2C_Master_RepeatedStart();
  1011     0633  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1012     0638                     l1463:
  1013                           
  1014                           ;Lab4master.c: 126:         I2C_Master_Write(0xD1);
  1015     0638  30D1               	movlw	209
  1016     0639  00F0               	movwf	I2C_Master_Write@d
  1017     063A  3000               	movlw	0
  1018     063B  00F1               	movwf	I2C_Master_Write@d+1
  1019     063C  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
  1020     0641                     l1465:
  1021                           
  1022                           ;Lab4master.c: 127:         second = I2C_Master_Read(0);
  1023     0641  3000               	movlw	0
  1024     0642  00F0               	movwf	I2C_Master_Read@a
  1025     0643  00F1               	movwf	I2C_Master_Read@a+1
  1026     0644  120A  118A  22E8  120A  118A  	fcall	_I2C_Master_Read
  1027     0649  0870               	movf	?_I2C_Master_Read,w
  1028     064A  1283               	bcf	3,5	;RP0=0, select bank0
  1029     064B  1303               	bcf	3,6	;RP1=0, select bank0
  1030     064C  00D0               	movwf	_second
  1031     064D                     l1467:
  1032                           
  1033                           ;Lab4master.c: 128:         I2C_Master_Write(0x01);
  1034     064D  3001               	movlw	1
  1035     064E  00F0               	movwf	I2C_Master_Write@d
  1036     064F  3000               	movlw	0
  1037     0650  00F1               	movwf	I2C_Master_Write@d+1
  1038     0651  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
  1039     0656                     l1469:
  1040                           
  1041                           ;Lab4master.c: 129:         I2C_Master_RepeatedStart();
  1042     0656  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1043     065B                     l1471:
  1044                           
  1045                           ;Lab4master.c: 130:         I2C_Master_Write(0xD1);
  1046     065B  30D1               	movlw	209
  1047     065C  00F0               	movwf	I2C_Master_Write@d
  1048     065D  3000               	movlw	0
  1049     065E  00F1               	movwf	I2C_Master_Write@d+1
  1050     065F  120A  118A  21FC  120A  118A  	fcall	_I2C_Master_Write
  1051     0664                     l1473:
  1052                           
  1053                           ;Lab4master.c: 131:         minute = I2C_Master_Read(0);
  1054     0664  3000               	movlw	0
  1055     0665  00F0               	movwf	I2C_Master_Read@a
  1056     0666  00F1               	movwf	I2C_Master_Read@a+1
  1057     0667  120A  118A  22E8  120A  118A  	fcall	_I2C_Master_Read
  1058     066C  0870               	movf	?_I2C_Master_Read,w
  1059     066D  1283               	bcf	3,5	;RP0=0, select bank0
  1060     066E  1303               	bcf	3,6	;RP1=0, select bank0
  1061     066F  00CF               	movwf	_minute
  1062     0670                     l1475:
  1063                           
  1064                           ;Lab4master.c: 132:         I2C_Master_Stop();
  1065     0670  120A  118A  21F3  120A  118A  	fcall	_I2C_Master_Stop
  1066     0675                     l1477:
  1067                           
  1068                           ;Lab4master.c: 133:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1069     0675  3003               	movlw	3
  1070     0676  1283               	bcf	3,5	;RP0=0, select bank0
  1071     0677  1303               	bcf	3,6	;RP1=0, select bank0
  1072     0678  00CA               	movwf	??_main+2
  1073     0679  3008               	movlw	8
  1074     067A  00C9               	movwf	??_main+1
  1075     067B  3076               	movlw	118
  1076     067C  00C8               	movwf	??_main
  1077     067D                     u927:
  1078     067D  0BC8               	decfsz	??_main,f
  1079     067E  2E7D               	goto	u927
  1080     067F  0BC9               	decfsz	??_main+1,f
  1081     0680  2E7D               	goto	u927
  1082     0681  0BCA               	decfsz	??_main+2,f
  1083     0682  2E7D               	goto	u927
  1084     0683  0000               	nop
  1085     0684                     l1479:
  1086                           
  1087                           ;Lab4master.c: 135:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1088     0684  3003               	movlw	3
  1089     0685  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0686  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0687  00CA               	movwf	??_main+2
  1092     0688  3008               	movlw	8
  1093     0689  00C9               	movwf	??_main+1
  1094     068A  3076               	movlw	118
  1095     068B  00C8               	movwf	??_main
  1096     068C                     u937:
  1097     068C  0BC8               	decfsz	??_main,f
  1098     068D  2E8C               	goto	u937
  1099     068E  0BC9               	decfsz	??_main+1,f
  1100     068F  2E8C               	goto	u937
  1101     0690  0BCA               	decfsz	??_main+2,f
  1102     0691  2E8C               	goto	u937
  1103     0692  0000               	nop
  1104     0693                     l1481:
  1105                           
  1106                           ;Lab4master.c: 137:         RTC_display();
  1107     0693  120A  118A  26A4  120A  118A  	fcall	_RTC_display
  1108     0698                     l1483:
  1109                           
  1110                           ;Lab4master.c: 139:        Lcd_Set_Cursor(2,8);
  1111     0698  3008               	movlw	8
  1112     0699  00F4               	movwf	Lcd_Set_Cursor@b
  1113     069A  3002               	movlw	2
  1114     069B  120A  118A  23AC  120A  118A  	fcall	_Lcd_Set_Cursor
  1115     06A0  2E02               	goto	l1447
  1116     06A1  120A  118A  2800   	ljmp	start
  1117     06A4                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120     026B                     __ptext1:	
  1121 ;; *************** function _setup *****************
  1122 ;; Defined at:
  1123 ;;		line 148 in file "Lab4master.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150     026B                     _setup:	
  1151                           ;psect for function _setup
  1152                           
  1153     026B                     l1393:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _setup: [wreg+status,2+status,0]
  1156                           
  1157                           
  1158                           ;Lab4master.c: 149:     ANSEL = 0;
  1159     026B  1683               	bsf	3,5	;RP0=1, select bank3
  1160     026C  1703               	bsf	3,6	;RP1=1, select bank3
  1161     026D  0188               	clrf	8	;volatile
  1162                           
  1163                           ;Lab4master.c: 150:     ANSELH = 0;
  1164     026E  0189               	clrf	9	;volatile
  1165     026F                     l1395:
  1166                           
  1167                           ;Lab4master.c: 151:     TRISC1 = 0;
  1168     026F  1683               	bsf	3,5	;RP0=1, select bank1
  1169     0270  1303               	bcf	3,6	;RP1=0, select bank1
  1170     0271  1087               	bcf	7,1	;volatile
  1171     0272                     l1397:
  1172                           
  1173                           ;Lab4master.c: 152:     TRISC2 = 0;
  1174     0272  1107               	bcf	7,2	;volatile
  1175     0273                     l1399:
  1176                           
  1177                           ;Lab4master.c: 153:     TRISC6 = 0;
  1178     0273  1307               	bcf	7,6	;volatile
  1179     0274                     l1401:
  1180                           
  1181                           ;Lab4master.c: 154:     TRISC7 = 0;
  1182     0274  1387               	bcf	7,7	;volatile
  1183                           
  1184                           ;Lab4master.c: 155:     TRISA =0;
  1185     0275  0185               	clrf	5	;volatile
  1186                           
  1187                           ;Lab4master.c: 156:     TRISB = 0;
  1188     0276  0186               	clrf	6	;volatile
  1189                           
  1190                           ;Lab4master.c: 157:     TRISD = 0;
  1191     0277  0188               	clrf	8	;volatile
  1192                           
  1193                           ;Lab4master.c: 158:     PORTA = 0;
  1194     0278  1283               	bcf	3,5	;RP0=0, select bank0
  1195     0279  1303               	bcf	3,6	;RP1=0, select bank0
  1196     027A  0185               	clrf	5	;volatile
  1197                           
  1198                           ;Lab4master.c: 159:     PORTB = 0;
  1199     027B  0186               	clrf	6	;volatile
  1200                           
  1201                           ;Lab4master.c: 160:     PORTD = 0;
  1202     027C  0188               	clrf	8	;volatile
  1203     027D                     l1403:
  1204                           
  1205                           ;Lab4master.c: 161:     PORTCbits.RC1 = 1;
  1206     027D  1487               	bsf	7,1	;volatile
  1207     027E                     l1405:
  1208                           
  1209                           ;Lab4master.c: 162:     PORTCbits.RC2 = 1;
  1210     027E  1507               	bsf	7,2	;volatile
  1211     027F                     l1407:
  1212                           
  1213                           ;Lab4master.c: 165:     OSCCONbits.IRCF = 0b0111;
  1214     027F  3070               	movlw	112
  1215     0280  1683               	bsf	3,5	;RP0=1, select bank1
  1216     0281  1303               	bcf	3,6	;RP1=0, select bank1
  1217     0282  048F               	iorwf	15,f	;volatile
  1218     0283                     l1409:
  1219                           
  1220                           ;Lab4master.c: 166:     OSCCONbits.SCS = 1;
  1221     0283  140F               	bsf	15,0	;volatile
  1222     0284                     l150:
  1223     0284  0008               	return
  1224     0285                     __end_of_setup:
  1225                           
  1226                           	psect	text2
  1227     0316                     __ptext2:	
  1228 ;; *************** function _decimal_to_bcd *****************
  1229 ;; Defined at:
  1230 ;;		line 56 in file "Lab4master.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  number          1    wreg     unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  number          1    0[BANK0 ] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       1       0       0       0
  1246 ;;      Temps:          5       0       0       0       0
  1247 ;;      Totals:         5       1       0       0       0
  1248 ;;Total ram usage:        6 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 1
  1251 ;; This function calls:
  1252 ;;		___awdiv
  1253 ;;		___awmod
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259     0316                     _decimal_to_bcd:	
  1260                           ;psect for function _decimal_to_bcd
  1261                           
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1265                           ;decimal_to_bcd@number stored from wreg
  1266     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0318  00C0               	movwf	decimal_to_bcd@number
  1269     0319                     l1385:
  1270                           
  1271                           ;Lab4master.c: 57:   return(((number / 10) << 4) + (number % 10));
  1272     0319  300A               	movlw	10
  1273     031A  00F0               	movwf	___awdiv@divisor
  1274     031B  3000               	movlw	0
  1275     031C  00F1               	movwf	___awdiv@divisor+1
  1276     031D  0840               	movf	decimal_to_bcd@number,w
  1277     031E  00F9               	movwf	??_decimal_to_bcd
  1278     031F  01FA               	clrf	??_decimal_to_bcd+1
  1279     0320  0879               	movf	??_decimal_to_bcd,w
  1280     0321  00F2               	movwf	___awdiv@dividend
  1281     0322  087A               	movf	??_decimal_to_bcd+1,w
  1282     0323  00F3               	movwf	___awdiv@dividend+1
  1283     0324  120A  118A  250E  120A  118A  	fcall	___awdiv
  1284     0329  0870               	movf	?___awdiv,w
  1285     032A  00FB               	movwf	??_decimal_to_bcd+2
  1286     032B  3004               	movlw	4
  1287     032C                     u895:
  1288     032C  1003               	clrc
  1289     032D  0DFB               	rlf	??_decimal_to_bcd+2,f
  1290     032E  3EFF               	addlw	-1
  1291     032F  1D03               	skipz
  1292     0330  2B2C               	goto	u895
  1293     0331  300A               	movlw	10
  1294     0332  00F0               	movwf	___awmod@divisor
  1295     0333  3000               	movlw	0
  1296     0334  00F1               	movwf	___awmod@divisor+1
  1297     0335  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0336  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0337  0840               	movf	decimal_to_bcd@number,w
  1300     0338  00FC               	movwf	??_decimal_to_bcd+3
  1301     0339  01FD               	clrf	??_decimal_to_bcd+4
  1302     033A  087C               	movf	??_decimal_to_bcd+3,w
  1303     033B  00F2               	movwf	___awmod@dividend
  1304     033C  087D               	movf	??_decimal_to_bcd+4,w
  1305     033D  00F3               	movwf	___awmod@dividend+1
  1306     033E  120A  118A  23F2  120A  118A  	fcall	___awmod
  1307     0343  0870               	movf	?___awmod,w
  1308     0344  077B               	addwf	??_decimal_to_bcd+2,w
  1309     0345                     l132:
  1310     0345  0008               	return
  1311     0346                     __end_of_decimal_to_bcd:
  1312                           
  1313                           	psect	text3
  1314     06A4                     __ptext3:	
  1315 ;; *************** function _RTC_display *****************
  1316 ;; Defined at:
  1317 ;;		line 59 in file "Lab4master.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0
  1333 ;;      Temps:          2       0       0       0       0
  1334 ;;      Totals:         2       0       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 3
  1338 ;; This function calls:
  1339 ;;		_Lcd_Set_Cursor
  1340 ;;		_Lcd_Write_String
  1341 ;;		___awdiv
  1342 ;;		___awmod
  1343 ;;		_bcd_to_decimal
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     06A4                     _RTC_display:	
  1350                           ;psect for function _RTC_display
  1351                           
  1352     06A4                     l1389:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1355                           
  1356                           
  1357                           ;Lab4master.c: 61:   static char Time[] = "TIME: 00:00:00";;Lab4master.c: 62:   static c
      +                          har Date[] = "DATE: 00/00/2000";;Lab4master.c: 65:   second = bcd_to_decimal(second);
  1358     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1359     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1360     06A6  0850               	movf	_second,w
  1361     06A7  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1362     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1363     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1364     06AE  00D0               	movwf	_second
  1365                           
  1366                           ;Lab4master.c: 66:   minute = bcd_to_decimal(minute);
  1367     06AF  084F               	movf	_minute,w
  1368     06B0  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1369     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1370     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1371     06B7  00CF               	movwf	_minute
  1372                           
  1373                           ;Lab4master.c: 67:   hour = bcd_to_decimal(hour);
  1374     06B8  084E               	movf	_hour,w
  1375     06B9  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1376     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1377     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1378     06C0  00CE               	movwf	_hour
  1379                           
  1380                           ;Lab4master.c: 68:   m_day = bcd_to_decimal(m_day);
  1381     06C1  084D               	movf	_m_day,w
  1382     06C2  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1383     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1384     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1385     06C9  00CD               	movwf	_m_day
  1386                           
  1387                           ;Lab4master.c: 69:   month = bcd_to_decimal(month);
  1388     06CA  084C               	movf	_month,w
  1389     06CB  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1390     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1391     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1392     06D2  00CC               	movwf	_month
  1393                           
  1394                           ;Lab4master.c: 70:   year = bcd_to_decimal(year);
  1395     06D3  084B               	movf	_year,w
  1396     06D4  120A  118A  223B  120A  118A  	fcall	_bcd_to_decimal
  1397     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1398     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1399     06DB  00CB               	movwf	_year
  1400                           
  1401                           ;Lab4master.c: 74:   Time[6] = hour / 10 + '0';
  1402     06DC  300A               	movlw	10
  1403     06DD  00F0               	movwf	___awdiv@divisor
  1404     06DE  3000               	movlw	0
  1405     06DF  00F1               	movwf	___awdiv@divisor+1
  1406     06E0  084E               	movf	_hour,w
  1407     06E1  00FA               	movwf	??_RTC_display
  1408     06E2  01FB               	clrf	??_RTC_display+1
  1409     06E3  087A               	movf	??_RTC_display,w
  1410     06E4  00F2               	movwf	___awdiv@dividend
  1411     06E5  087B               	movf	??_RTC_display+1,w
  1412     06E6  00F3               	movwf	___awdiv@dividend+1
  1413     06E7  120A  118A  250E  120A  118A  	fcall	___awdiv
  1414     06EC  0870               	movf	?___awdiv,w
  1415     06ED  3E30               	addlw	48
  1416     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1417     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1418     06F0  00B7               	movwf	RTC_display@Time+6
  1419                           
  1420                           ;Lab4master.c: 75:   Time[7] = hour % 10 + '0';
  1421     06F1  300A               	movlw	10
  1422     06F2  00F0               	movwf	___awmod@divisor
  1423     06F3  3000               	movlw	0
  1424     06F4  00F1               	movwf	___awmod@divisor+1
  1425     06F5  084E               	movf	_hour,w
  1426     06F6  00FA               	movwf	??_RTC_display
  1427     06F7  01FB               	clrf	??_RTC_display+1
  1428     06F8  087A               	movf	??_RTC_display,w
  1429     06F9  00F2               	movwf	___awmod@dividend
  1430     06FA  087B               	movf	??_RTC_display+1,w
  1431     06FB  00F3               	movwf	___awmod@dividend+1
  1432     06FC  120A  118A  23F2  120A  118A  	fcall	___awmod
  1433     0701  0870               	movf	?___awmod,w
  1434     0702  3E30               	addlw	48
  1435     0703  1283               	bcf	3,5	;RP0=0, select bank0
  1436     0704  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0705  00B8               	movwf	RTC_display@Time+7
  1438                           
  1439                           ;Lab4master.c: 76:   Time[9] = minute / 10 + '0';
  1440     0706  300A               	movlw	10
  1441     0707  00F0               	movwf	___awdiv@divisor
  1442     0708  3000               	movlw	0
  1443     0709  00F1               	movwf	___awdiv@divisor+1
  1444     070A  084F               	movf	_minute,w
  1445     070B  00FA               	movwf	??_RTC_display
  1446     070C  01FB               	clrf	??_RTC_display+1
  1447     070D  087A               	movf	??_RTC_display,w
  1448     070E  00F2               	movwf	___awdiv@dividend
  1449     070F  087B               	movf	??_RTC_display+1,w
  1450     0710  00F3               	movwf	___awdiv@dividend+1
  1451     0711  120A  118A  250E  120A  118A  	fcall	___awdiv
  1452     0716  0870               	movf	?___awdiv,w
  1453     0717  3E30               	addlw	48
  1454     0718  1283               	bcf	3,5	;RP0=0, select bank0
  1455     0719  1303               	bcf	3,6	;RP1=0, select bank0
  1456     071A  00BA               	movwf	RTC_display@Time+9
  1457                           
  1458                           ;Lab4master.c: 77:   Time[10] = minute % 10 + '0';
  1459     071B  300A               	movlw	10
  1460     071C  00F0               	movwf	___awmod@divisor
  1461     071D  3000               	movlw	0
  1462     071E  00F1               	movwf	___awmod@divisor+1
  1463     071F  084F               	movf	_minute,w
  1464     0720  00FA               	movwf	??_RTC_display
  1465     0721  01FB               	clrf	??_RTC_display+1
  1466     0722  087A               	movf	??_RTC_display,w
  1467     0723  00F2               	movwf	___awmod@dividend
  1468     0724  087B               	movf	??_RTC_display+1,w
  1469     0725  00F3               	movwf	___awmod@dividend+1
  1470     0726  120A  118A  23F2  120A  118A  	fcall	___awmod
  1471     072B  0870               	movf	?___awmod,w
  1472     072C  3E30               	addlw	48
  1473     072D  1283               	bcf	3,5	;RP0=0, select bank0
  1474     072E  1303               	bcf	3,6	;RP1=0, select bank0
  1475     072F  00BB               	movwf	RTC_display@Time+10
  1476                           
  1477                           ;Lab4master.c: 78:   Time[12] = second / 10 + '0';
  1478     0730  300A               	movlw	10
  1479     0731  00F0               	movwf	___awdiv@divisor
  1480     0732  3000               	movlw	0
  1481     0733  00F1               	movwf	___awdiv@divisor+1
  1482     0734  0850               	movf	_second,w
  1483     0735  00FA               	movwf	??_RTC_display
  1484     0736  01FB               	clrf	??_RTC_display+1
  1485     0737  087A               	movf	??_RTC_display,w
  1486     0738  00F2               	movwf	___awdiv@dividend
  1487     0739  087B               	movf	??_RTC_display+1,w
  1488     073A  00F3               	movwf	___awdiv@dividend+1
  1489     073B  120A  118A  250E  120A  118A  	fcall	___awdiv
  1490     0740  0870               	movf	?___awdiv,w
  1491     0741  3E30               	addlw	48
  1492     0742  1283               	bcf	3,5	;RP0=0, select bank0
  1493     0743  1303               	bcf	3,6	;RP1=0, select bank0
  1494     0744  00BD               	movwf	RTC_display@Time+12
  1495                           
  1496                           ;Lab4master.c: 79:   Time[13] = second % 10 + '0';
  1497     0745  300A               	movlw	10
  1498     0746  00F0               	movwf	___awmod@divisor
  1499     0747  3000               	movlw	0
  1500     0748  00F1               	movwf	___awmod@divisor+1
  1501     0749  0850               	movf	_second,w
  1502     074A  00FA               	movwf	??_RTC_display
  1503     074B  01FB               	clrf	??_RTC_display+1
  1504     074C  087A               	movf	??_RTC_display,w
  1505     074D  00F2               	movwf	___awmod@dividend
  1506     074E  087B               	movf	??_RTC_display+1,w
  1507     074F  00F3               	movwf	___awmod@dividend+1
  1508     0750  120A  118A  23F2  120A  118A  	fcall	___awmod
  1509     0755  0870               	movf	?___awmod,w
  1510     0756  3E30               	addlw	48
  1511     0757  1283               	bcf	3,5	;RP0=0, select bank0
  1512     0758  1303               	bcf	3,6	;RP1=0, select bank0
  1513     0759  00BE               	movwf	RTC_display@Time+13
  1514                           
  1515                           ;Lab4master.c: 81:   Date[6] = m_day / 10 + '0';
  1516     075A  300A               	movlw	10
  1517     075B  00F0               	movwf	___awdiv@divisor
  1518     075C  3000               	movlw	0
  1519     075D  00F1               	movwf	___awdiv@divisor+1
  1520     075E  084D               	movf	_m_day,w
  1521     075F  00FA               	movwf	??_RTC_display
  1522     0760  01FB               	clrf	??_RTC_display+1
  1523     0761  087A               	movf	??_RTC_display,w
  1524     0762  00F2               	movwf	___awdiv@dividend
  1525     0763  087B               	movf	??_RTC_display+1,w
  1526     0764  00F3               	movwf	___awdiv@dividend+1
  1527     0765  120A  118A  250E  120A  118A  	fcall	___awdiv
  1528     076A  0870               	movf	?___awdiv,w
  1529     076B  3E30               	addlw	48
  1530     076C  1283               	bcf	3,5	;RP0=0, select bank0
  1531     076D  1303               	bcf	3,6	;RP1=0, select bank0
  1532     076E  00A6               	movwf	RTC_display@Date+6
  1533                           
  1534                           ;Lab4master.c: 82:   Date[7] = m_day % 10 + '0';
  1535     076F  300A               	movlw	10
  1536     0770  00F0               	movwf	___awmod@divisor
  1537     0771  3000               	movlw	0
  1538     0772  00F1               	movwf	___awmod@divisor+1
  1539     0773  084D               	movf	_m_day,w
  1540     0774  00FA               	movwf	??_RTC_display
  1541     0775  01FB               	clrf	??_RTC_display+1
  1542     0776  087A               	movf	??_RTC_display,w
  1543     0777  00F2               	movwf	___awmod@dividend
  1544     0778  087B               	movf	??_RTC_display+1,w
  1545     0779  00F3               	movwf	___awmod@dividend+1
  1546     077A  120A  118A  23F2  120A  118A  	fcall	___awmod
  1547     077F  0870               	movf	?___awmod,w
  1548     0780  3E30               	addlw	48
  1549     0781  1283               	bcf	3,5	;RP0=0, select bank0
  1550     0782  1303               	bcf	3,6	;RP1=0, select bank0
  1551     0783  00A7               	movwf	RTC_display@Date+7
  1552                           
  1553                           ;Lab4master.c: 83:   Date[9] = month / 10 + '0';
  1554     0784  300A               	movlw	10
  1555     0785  00F0               	movwf	___awdiv@divisor
  1556     0786  3000               	movlw	0
  1557     0787  00F1               	movwf	___awdiv@divisor+1
  1558     0788  084C               	movf	_month,w
  1559     0789  00FA               	movwf	??_RTC_display
  1560     078A  01FB               	clrf	??_RTC_display+1
  1561     078B  087A               	movf	??_RTC_display,w
  1562     078C  00F2               	movwf	___awdiv@dividend
  1563     078D  087B               	movf	??_RTC_display+1,w
  1564     078E  00F3               	movwf	___awdiv@dividend+1
  1565     078F  120A  118A  250E  120A  118A  	fcall	___awdiv
  1566     0794  0870               	movf	?___awdiv,w
  1567     0795  3E30               	addlw	48
  1568     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0798  00A9               	movwf	RTC_display@Date+9
  1571                           
  1572                           ;Lab4master.c: 84:   Date[10] = month % 10 + '0';
  1573     0799  300A               	movlw	10
  1574     079A  00F0               	movwf	___awmod@divisor
  1575     079B  3000               	movlw	0
  1576     079C  00F1               	movwf	___awmod@divisor+1
  1577     079D  084C               	movf	_month,w
  1578     079E  00FA               	movwf	??_RTC_display
  1579     079F  01FB               	clrf	??_RTC_display+1
  1580     07A0  087A               	movf	??_RTC_display,w
  1581     07A1  00F2               	movwf	___awmod@dividend
  1582     07A2  087B               	movf	??_RTC_display+1,w
  1583     07A3  00F3               	movwf	___awmod@dividend+1
  1584     07A4  120A  118A  23F2  120A  118A  	fcall	___awmod
  1585     07A9  0870               	movf	?___awmod,w
  1586     07AA  3E30               	addlw	48
  1587     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1588     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1589     07AD  00AA               	movwf	RTC_display@Date+10
  1590                           
  1591                           ;Lab4master.c: 85:   Date[14] = year / 10 + '0';
  1592     07AE  300A               	movlw	10
  1593     07AF  00F0               	movwf	___awdiv@divisor
  1594     07B0  3000               	movlw	0
  1595     07B1  00F1               	movwf	___awdiv@divisor+1
  1596     07B2  084B               	movf	_year,w
  1597     07B3  00FA               	movwf	??_RTC_display
  1598     07B4  01FB               	clrf	??_RTC_display+1
  1599     07B5  087A               	movf	??_RTC_display,w
  1600     07B6  00F2               	movwf	___awdiv@dividend
  1601     07B7  087B               	movf	??_RTC_display+1,w
  1602     07B8  00F3               	movwf	___awdiv@dividend+1
  1603     07B9  120A  118A  250E  120A  118A  	fcall	___awdiv
  1604     07BE  0870               	movf	?___awdiv,w
  1605     07BF  3E30               	addlw	48
  1606     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1607     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1608     07C2  00AE               	movwf	RTC_display@Date+14
  1609                           
  1610                           ;Lab4master.c: 86:   Date[15] = year % 10 + '0';
  1611     07C3  300A               	movlw	10
  1612     07C4  00F0               	movwf	___awmod@divisor
  1613     07C5  3000               	movlw	0
  1614     07C6  00F1               	movwf	___awmod@divisor+1
  1615     07C7  084B               	movf	_year,w
  1616     07C8  00FA               	movwf	??_RTC_display
  1617     07C9  01FB               	clrf	??_RTC_display+1
  1618     07CA  087A               	movf	??_RTC_display,w
  1619     07CB  00F2               	movwf	___awmod@dividend
  1620     07CC  087B               	movf	??_RTC_display+1,w
  1621     07CD  00F3               	movwf	___awmod@dividend+1
  1622     07CE  120A  118A  23F2  120A  118A  	fcall	___awmod
  1623     07D3  0870               	movf	?___awmod,w
  1624     07D4  3E30               	addlw	48
  1625     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1626     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1627     07D7  00AF               	movwf	RTC_display@Date+15
  1628                           
  1629                           ;Lab4master.c: 88:  Lcd_Set_Cursor(1,1);
  1630     07D8  01F4               	clrf	Lcd_Set_Cursor@b
  1631     07D9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1632     07DA  3001               	movlw	1
  1633     07DB  120A  118A  23AC  120A  118A  	fcall	_Lcd_Set_Cursor
  1634     07E0                     l1391:
  1635                           
  1636                           ;Lab4master.c: 90:   Lcd_Write_String(Time);
  1637     07E0  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1638     07E1  120A  118A  22A5  120A  118A  	fcall	_Lcd_Write_String
  1639     07E6                     l139:
  1640     07E6  0008               	return
  1641     07E7                     __end_of_RTC_display:
  1642                           
  1643                           	psect	text4
  1644     023B                     __ptext4:	
  1645 ;; *************** function _bcd_to_decimal *****************
  1646 ;; Defined at:
  1647 ;;		line 51 in file "Lab4master.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  number          1    wreg     unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  number          1    6[COMMON] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0
  1663 ;;      Temps:          2       0       0       0       0
  1664 ;;      Totals:         3       0       0       0       0
  1665 ;;Total ram usage:        3 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 1
  1668 ;; This function calls:
  1669 ;;		___bmul
  1670 ;; This function is called by:
  1671 ;;		_RTC_display
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675     023B                     _bcd_to_decimal:	
  1676                           ;psect for function _bcd_to_decimal
  1677                           
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1681                           ;bcd_to_decimal@number stored from wreg
  1682     023B  00F6               	movwf	bcd_to_decimal@number
  1683     023C                     l1209:
  1684                           
  1685                           ;Lab4master.c: 52:   return((number >> 4) * 10 + (number & 0x0F));
  1686     023C  300F               	movlw	15
  1687     023D  0576               	andwf	bcd_to_decimal@number,w
  1688     023E  00F4               	movwf	??_bcd_to_decimal
  1689     023F  300A               	movlw	10
  1690     0240  00F0               	movwf	___bmul@multiplicand
  1691     0241  0876               	movf	bcd_to_decimal@number,w
  1692     0242  00F5               	movwf	??_bcd_to_decimal+1
  1693     0243  3004               	movlw	4
  1694     0244                     u555:
  1695     0244  1003               	clrc
  1696     0245  0CF5               	rrf	??_bcd_to_decimal+1,f
  1697     0246  3EFF               	addlw	-1
  1698     0247  1D03               	skipz
  1699     0248  2A44               	goto	u555
  1700     0249  0875               	movf	??_bcd_to_decimal+1,w
  1701     024A  120A  118A  2226  120A  118A  	fcall	___bmul
  1702     024F  0774               	addwf	??_bcd_to_decimal,w
  1703     0250                     l129:
  1704     0250  0008               	return
  1705     0251                     __end_of_bcd_to_decimal:
  1706                           
  1707                           	psect	text5
  1708     0226                     __ptext5:	
  1709 ;; *************** function ___bmul *****************
  1710 ;; Defined at:
  1711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  multiplier      1    wreg     unsigned char 
  1714 ;;  multiplicand    1    0[COMMON] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  multiplier      1    3[COMMON] unsigned char 
  1717 ;;  product         1    2[COMMON] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         1       0       0       0       0
  1728 ;;      Locals:         2       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0
  1730 ;;      Totals:         4       0       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_bcd_to_decimal
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740     0226                     ___bmul:	
  1741                           ;psect for function ___bmul
  1742                           
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1746                           ;___bmul@multiplier stored from wreg
  1747     0226  00F3               	movwf	___bmul@multiplier
  1748     0227                     l1191:
  1749     0227  01F2               	clrf	___bmul@product
  1750     0228                     l1193:
  1751     0228  1C73               	btfss	___bmul@multiplier,0
  1752     0229  2A2B               	goto	u511
  1753     022A  2A2C               	goto	u510
  1754     022B                     u511:
  1755     022B  2A30               	goto	l1197
  1756     022C                     u510:
  1757     022C                     l1195:
  1758     022C  0870               	movf	___bmul@multiplicand,w
  1759     022D  00F1               	movwf	??___bmul
  1760     022E  0871               	movf	??___bmul,w
  1761     022F  07F2               	addwf	___bmul@product,f
  1762     0230                     l1197:
  1763     0230  1003               	clrc
  1764     0231  0DF0               	rlf	___bmul@multiplicand,f
  1765     0232                     l1199:
  1766     0232  1003               	clrc
  1767     0233  0CF3               	rrf	___bmul@multiplier,f
  1768     0234  0873               	movf	___bmul@multiplier,w
  1769     0235  1D03               	btfss	3,2
  1770     0236  2A38               	goto	u521
  1771     0237  2A39               	goto	u520
  1772     0238                     u521:
  1773     0238  2A28               	goto	l1193
  1774     0239                     u520:
  1775     0239                     l1201:
  1776     0239  0872               	movf	___bmul@product,w
  1777     023A                     l317:
  1778     023A  0008               	return
  1779     023B                     __end_of___bmul:
  1780                           
  1781                           	psect	text6
  1782     03F2                     __ptext6:	
  1783 ;; *************** function ___awmod *****************
  1784 ;; Defined at:
  1785 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  divisor         2    0[COMMON] int 
  1788 ;;  dividend        2    2[COMMON] int 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  sign            1    6[COMMON] unsigned char 
  1791 ;;  counter         1    5[COMMON] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2    0[COMMON] int 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         4       0       0       0       0
  1802 ;;      Locals:         2       0       0       0       0
  1803 ;;      Temps:          1       0       0       0       0
  1804 ;;      Totals:         7       0       0       0       0
  1805 ;;Total ram usage:        7 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_decimal_to_bcd
  1811 ;;		_RTC_display
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815     03F2                     ___awmod:	
  1816                           ;psect for function ___awmod
  1817                           
  1818     03F2                     l1309:	
  1819                           ;incstack = 0
  1820                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1821                           
  1822     03F2  01F6               	clrf	___awmod@sign
  1823     03F3                     l1311:
  1824     03F3  1FF3               	btfss	___awmod@dividend+1,7
  1825     03F4  2BF6               	goto	u781
  1826     03F5  2BF7               	goto	u780
  1827     03F6                     u781:
  1828     03F6  2BFE               	goto	l1317
  1829     03F7                     u780:
  1830     03F7                     l1313:
  1831     03F7  09F2               	comf	___awmod@dividend,f
  1832     03F8  09F3               	comf	___awmod@dividend+1,f
  1833     03F9  0AF2               	incf	___awmod@dividend,f
  1834     03FA  1903               	skipnz
  1835     03FB  0AF3               	incf	___awmod@dividend+1,f
  1836     03FC                     l1315:
  1837     03FC  01F6               	clrf	___awmod@sign
  1838     03FD  0AF6               	incf	___awmod@sign,f
  1839     03FE                     l1317:
  1840     03FE  1FF1               	btfss	___awmod@divisor+1,7
  1841     03FF  2C01               	goto	u791
  1842     0400  2C02               	goto	u790
  1843     0401                     u791:
  1844     0401  2C07               	goto	l1321
  1845     0402                     u790:
  1846     0402                     l1319:
  1847     0402  09F0               	comf	___awmod@divisor,f
  1848     0403  09F1               	comf	___awmod@divisor+1,f
  1849     0404  0AF0               	incf	___awmod@divisor,f
  1850     0405  1903               	skipnz
  1851     0406  0AF1               	incf	___awmod@divisor+1,f
  1852     0407                     l1321:
  1853     0407  0870               	movf	___awmod@divisor,w
  1854     0408  0471               	iorwf	___awmod@divisor+1,w
  1855     0409  1903               	btfsc	3,2
  1856     040A  2C0C               	goto	u801
  1857     040B  2C0D               	goto	u800
  1858     040C                     u801:
  1859     040C  2C3C               	goto	l1339
  1860     040D                     u800:
  1861     040D                     l1323:
  1862     040D  01F5               	clrf	___awmod@counter
  1863     040E  0AF5               	incf	___awmod@counter,f
  1864     040F  2C1B               	goto	l1329
  1865     0410                     l1325:
  1866     0410  3001               	movlw	1
  1867     0411                     u815:
  1868     0411  1003               	clrc
  1869     0412  0DF0               	rlf	___awmod@divisor,f
  1870     0413  0DF1               	rlf	___awmod@divisor+1,f
  1871     0414  3EFF               	addlw	-1
  1872     0415  1D03               	skipz
  1873     0416  2C11               	goto	u815
  1874     0417                     l1327:
  1875     0417  3001               	movlw	1
  1876     0418  00F4               	movwf	??___awmod
  1877     0419  0874               	movf	??___awmod,w
  1878     041A  07F5               	addwf	___awmod@counter,f
  1879     041B                     l1329:
  1880     041B  1FF1               	btfss	___awmod@divisor+1,7
  1881     041C  2C1E               	goto	u821
  1882     041D  2C1F               	goto	u820
  1883     041E                     u821:
  1884     041E  2C10               	goto	l1325
  1885     041F                     u820:
  1886     041F                     l1331:
  1887     041F  0871               	movf	___awmod@divisor+1,w
  1888     0420  0273               	subwf	___awmod@dividend+1,w
  1889     0421  1D03               	skipz
  1890     0422  2C25               	goto	u835
  1891     0423  0870               	movf	___awmod@divisor,w
  1892     0424  0272               	subwf	___awmod@dividend,w
  1893     0425                     u835:
  1894     0425  1C03               	skipc
  1895     0426  2C28               	goto	u831
  1896     0427  2C29               	goto	u830
  1897     0428                     u831:
  1898     0428  2C2F               	goto	l1335
  1899     0429                     u830:
  1900     0429                     l1333:
  1901     0429  0870               	movf	___awmod@divisor,w
  1902     042A  02F2               	subwf	___awmod@dividend,f
  1903     042B  0871               	movf	___awmod@divisor+1,w
  1904     042C  1C03               	skipc
  1905     042D  03F3               	decf	___awmod@dividend+1,f
  1906     042E  02F3               	subwf	___awmod@dividend+1,f
  1907     042F                     l1335:
  1908     042F  3001               	movlw	1
  1909     0430                     u845:
  1910     0430  1003               	clrc
  1911     0431  0CF1               	rrf	___awmod@divisor+1,f
  1912     0432  0CF0               	rrf	___awmod@divisor,f
  1913     0433  3EFF               	addlw	-1
  1914     0434  1D03               	skipz
  1915     0435  2C30               	goto	u845
  1916     0436                     l1337:
  1917     0436  3001               	movlw	1
  1918     0437  02F5               	subwf	___awmod@counter,f
  1919     0438  1D03               	btfss	3,2
  1920     0439  2C3B               	goto	u851
  1921     043A  2C3C               	goto	u850
  1922     043B                     u851:
  1923     043B  2C1F               	goto	l1331
  1924     043C                     u850:
  1925     043C                     l1339:
  1926     043C  0876               	movf	___awmod@sign,w
  1927     043D  1903               	btfsc	3,2
  1928     043E  2C40               	goto	u861
  1929     043F  2C41               	goto	u860
  1930     0440                     u861:
  1931     0440  2C46               	goto	l1343
  1932     0441                     u860:
  1933     0441                     l1341:
  1934     0441  09F2               	comf	___awmod@dividend,f
  1935     0442  09F3               	comf	___awmod@dividend+1,f
  1936     0443  0AF2               	incf	___awmod@dividend,f
  1937     0444  1903               	skipnz
  1938     0445  0AF3               	incf	___awmod@dividend+1,f
  1939     0446                     l1343:
  1940     0446  0873               	movf	___awmod@dividend+1,w
  1941     0447  00F1               	movwf	?___awmod+1
  1942     0448  0872               	movf	___awmod@dividend,w
  1943     0449  00F0               	movwf	?___awmod
  1944     044A                     l457:
  1945     044A  0008               	return
  1946     044B                     __end_of___awmod:
  1947                           
  1948                           	psect	text7
  1949     050E                     __ptext7:	
  1950 ;; *************** function ___awdiv *****************
  1951 ;; Defined at:
  1952 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  divisor         2    0[COMMON] int 
  1955 ;;  dividend        2    2[COMMON] int 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  quotient        2    7[COMMON] int 
  1958 ;;  sign            1    6[COMMON] unsigned char 
  1959 ;;  counter         1    5[COMMON] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  2    0[COMMON] int 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         4       0       0       0       0
  1970 ;;      Locals:         4       0       0       0       0
  1971 ;;      Temps:          1       0       0       0       0
  1972 ;;      Totals:         9       0       0       0       0
  1973 ;;Total ram usage:        9 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_decimal_to_bcd
  1979 ;;		_RTC_display
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983     050E                     ___awdiv:	
  1984                           ;psect for function ___awdiv
  1985                           
  1986     050E                     l1265:	
  1987                           ;incstack = 0
  1988                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1989                           
  1990     050E  01F6               	clrf	___awdiv@sign
  1991     050F                     l1267:
  1992     050F  1FF1               	btfss	___awdiv@divisor+1,7
  1993     0510  2D12               	goto	u681
  1994     0511  2D13               	goto	u680
  1995     0512                     u681:
  1996     0512  2D1A               	goto	l1273
  1997     0513                     u680:
  1998     0513                     l1269:
  1999     0513  09F0               	comf	___awdiv@divisor,f
  2000     0514  09F1               	comf	___awdiv@divisor+1,f
  2001     0515  0AF0               	incf	___awdiv@divisor,f
  2002     0516  1903               	skipnz
  2003     0517  0AF1               	incf	___awdiv@divisor+1,f
  2004     0518                     l1271:
  2005     0518  01F6               	clrf	___awdiv@sign
  2006     0519  0AF6               	incf	___awdiv@sign,f
  2007     051A                     l1273:
  2008     051A  1FF3               	btfss	___awdiv@dividend+1,7
  2009     051B  2D1D               	goto	u691
  2010     051C  2D1E               	goto	u690
  2011     051D                     u691:
  2012     051D  2D27               	goto	l1279
  2013     051E                     u690:
  2014     051E                     l1275:
  2015     051E  09F2               	comf	___awdiv@dividend,f
  2016     051F  09F3               	comf	___awdiv@dividend+1,f
  2017     0520  0AF2               	incf	___awdiv@dividend,f
  2018     0521  1903               	skipnz
  2019     0522  0AF3               	incf	___awdiv@dividend+1,f
  2020     0523                     l1277:
  2021     0523  3001               	movlw	1
  2022     0524  00F4               	movwf	??___awdiv
  2023     0525  0874               	movf	??___awdiv,w
  2024     0526  06F6               	xorwf	___awdiv@sign,f
  2025     0527                     l1279:
  2026     0527  01F7               	clrf	___awdiv@quotient
  2027     0528  01F8               	clrf	___awdiv@quotient+1
  2028     0529                     l1281:
  2029     0529  0870               	movf	___awdiv@divisor,w
  2030     052A  0471               	iorwf	___awdiv@divisor+1,w
  2031     052B  1903               	btfsc	3,2
  2032     052C  2D2E               	goto	u701
  2033     052D  2D2F               	goto	u700
  2034     052E                     u701:
  2035     052E  2D66               	goto	l1301
  2036     052F                     u700:
  2037     052F                     l1283:
  2038     052F  01F5               	clrf	___awdiv@counter
  2039     0530  0AF5               	incf	___awdiv@counter,f
  2040     0531  2D3D               	goto	l1289
  2041     0532                     l1285:
  2042     0532  3001               	movlw	1
  2043     0533                     u715:
  2044     0533  1003               	clrc
  2045     0534  0DF0               	rlf	___awdiv@divisor,f
  2046     0535  0DF1               	rlf	___awdiv@divisor+1,f
  2047     0536  3EFF               	addlw	-1
  2048     0537  1D03               	skipz
  2049     0538  2D33               	goto	u715
  2050     0539                     l1287:
  2051     0539  3001               	movlw	1
  2052     053A  00F4               	movwf	??___awdiv
  2053     053B  0874               	movf	??___awdiv,w
  2054     053C  07F5               	addwf	___awdiv@counter,f
  2055     053D                     l1289:
  2056     053D  1FF1               	btfss	___awdiv@divisor+1,7
  2057     053E  2D40               	goto	u721
  2058     053F  2D41               	goto	u720
  2059     0540                     u721:
  2060     0540  2D32               	goto	l1285
  2061     0541                     u720:
  2062     0541                     l1291:
  2063     0541  3001               	movlw	1
  2064     0542                     u735:
  2065     0542  1003               	clrc
  2066     0543  0DF7               	rlf	___awdiv@quotient,f
  2067     0544  0DF8               	rlf	___awdiv@quotient+1,f
  2068     0545  3EFF               	addlw	-1
  2069     0546  1D03               	skipz
  2070     0547  2D42               	goto	u735
  2071     0548  0871               	movf	___awdiv@divisor+1,w
  2072     0549  0273               	subwf	___awdiv@dividend+1,w
  2073     054A  1D03               	skipz
  2074     054B  2D4E               	goto	u745
  2075     054C  0870               	movf	___awdiv@divisor,w
  2076     054D  0272               	subwf	___awdiv@dividend,w
  2077     054E                     u745:
  2078     054E  1C03               	skipc
  2079     054F  2D51               	goto	u741
  2080     0550  2D52               	goto	u740
  2081     0551                     u741:
  2082     0551  2D59               	goto	l1297
  2083     0552                     u740:
  2084     0552                     l1293:
  2085     0552  0870               	movf	___awdiv@divisor,w
  2086     0553  02F2               	subwf	___awdiv@dividend,f
  2087     0554  0871               	movf	___awdiv@divisor+1,w
  2088     0555  1C03               	skipc
  2089     0556  03F3               	decf	___awdiv@dividend+1,f
  2090     0557  02F3               	subwf	___awdiv@dividend+1,f
  2091     0558                     l1295:
  2092     0558  1477               	bsf	___awdiv@quotient,0
  2093     0559                     l1297:
  2094     0559  3001               	movlw	1
  2095     055A                     u755:
  2096     055A  1003               	clrc
  2097     055B  0CF1               	rrf	___awdiv@divisor+1,f
  2098     055C  0CF0               	rrf	___awdiv@divisor,f
  2099     055D  3EFF               	addlw	-1
  2100     055E  1D03               	skipz
  2101     055F  2D5A               	goto	u755
  2102     0560                     l1299:
  2103     0560  3001               	movlw	1
  2104     0561  02F5               	subwf	___awdiv@counter,f
  2105     0562  1D03               	btfss	3,2
  2106     0563  2D65               	goto	u761
  2107     0564  2D66               	goto	u760
  2108     0565                     u761:
  2109     0565  2D41               	goto	l1291
  2110     0566                     u760:
  2111     0566                     l1301:
  2112     0566  0876               	movf	___awdiv@sign,w
  2113     0567  1903               	btfsc	3,2
  2114     0568  2D6A               	goto	u771
  2115     0569  2D6B               	goto	u770
  2116     056A                     u771:
  2117     056A  2D70               	goto	l1305
  2118     056B                     u770:
  2119     056B                     l1303:
  2120     056B  09F7               	comf	___awdiv@quotient,f
  2121     056C  09F8               	comf	___awdiv@quotient+1,f
  2122     056D  0AF7               	incf	___awdiv@quotient,f
  2123     056E  1903               	skipnz
  2124     056F  0AF8               	incf	___awdiv@quotient+1,f
  2125     0570                     l1305:
  2126     0570  0878               	movf	___awdiv@quotient+1,w
  2127     0571  00F1               	movwf	?___awdiv+1
  2128     0572  0877               	movf	___awdiv@quotient,w
  2129     0573  00F0               	movwf	?___awdiv
  2130     0574                     l444:
  2131     0574  0008               	return
  2132     0575                     __end_of___awdiv:
  2133                           
  2134                           	psect	text8
  2135     02A5                     __ptext8:	
  2136 ;; *************** function _Lcd_Write_String *****************
  2137 ;; Defined at:
  2138 ;;		line 98 in file "LCD.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  a               1    wreg     PTR unsigned char 
  2141 ;;		 -> RTC_display@Time(15), 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  a               1    8[COMMON] PTR unsigned char 
  2144 ;;		 -> RTC_display@Time(15), 
  2145 ;;  i               2    6[COMMON] int 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       0       0       0       0
  2156 ;;      Locals:         3       0       0       0       0
  2157 ;;      Temps:          1       0       0       0       0
  2158 ;;      Totals:         4       0       0       0       0
  2159 ;;Total ram usage:        4 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 2
  2162 ;; This function calls:
  2163 ;;		_Lcd_Write_Char
  2164 ;; This function is called by:
  2165 ;;		_RTC_display
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169     02A5                     _Lcd_Write_String:	
  2170                           ;psect for function _Lcd_Write_String
  2171                           
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2175                           ;Lcd_Write_String@a stored from wreg
  2176     02A5  00F8               	movwf	Lcd_Write_String@a
  2177     02A6                     l1233:
  2178                           
  2179                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2180     02A6  01F6               	clrf	Lcd_Write_String@i
  2181     02A7  01F7               	clrf	Lcd_Write_String@i+1
  2182     02A8  2ABA               	goto	l1239
  2183     02A9                     l1235:
  2184                           
  2185                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2186     02A9  0876               	movf	Lcd_Write_String@i,w
  2187     02AA  0778               	addwf	Lcd_Write_String@a,w
  2188     02AB  00F5               	movwf	??_Lcd_Write_String
  2189     02AC  0875               	movf	??_Lcd_Write_String,w
  2190     02AD  0084               	movwf	4
  2191     02AE  0800               	movf	0,w
  2192     02AF  120A  118A  2377  120A  118A  	fcall	_Lcd_Write_Char
  2193     02B4                     l1237:
  2194     02B4  3001               	movlw	1
  2195     02B5  07F6               	addwf	Lcd_Write_String@i,f
  2196     02B6  1803               	skipnc
  2197     02B7  0AF7               	incf	Lcd_Write_String@i+1,f
  2198     02B8  3000               	movlw	0
  2199     02B9  07F7               	addwf	Lcd_Write_String@i+1,f
  2200     02BA                     l1239:
  2201     02BA  0876               	movf	Lcd_Write_String@i,w
  2202     02BB  0778               	addwf	Lcd_Write_String@a,w
  2203     02BC  00F5               	movwf	??_Lcd_Write_String
  2204     02BD  0875               	movf	??_Lcd_Write_String,w
  2205     02BE  0084               	movwf	4
  2206     02BF  1383               	bcf	3,7	;select IRP bank0
  2207     02C0  0800               	movf	0,w
  2208     02C1  1D03               	btfss	3,2
  2209     02C2  2AC4               	goto	u601
  2210     02C3  2AC5               	goto	u600
  2211     02C4                     u601:
  2212     02C4  2AA9               	goto	l1235
  2213     02C5                     u600:
  2214     02C5                     l199:
  2215     02C5  0008               	return
  2216     02C6                     __end_of_Lcd_Write_String:
  2217                           
  2218                           	psect	text9
  2219     0377                     __ptext9:	
  2220 ;; *************** function _Lcd_Write_Char *****************
  2221 ;; Defined at:
  2222 ;;		line 83 in file "LCD.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  a               1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  a               1    4[COMMON] unsigned char 
  2227 ;;  y               1    3[COMMON] unsigned char 
  2228 ;;  temp            1    2[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         3       0       0       0       0
  2240 ;;      Temps:          1       0       0       0       0
  2241 ;;      Totals:         4       0       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 1
  2245 ;; This function calls:
  2246 ;;		_Lcd_Port
  2247 ;; This function is called by:
  2248 ;;		_Lcd_Write_String
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252     0377                     _Lcd_Write_Char:	
  2253                           ;psect for function _Lcd_Write_Char
  2254                           
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2258                           ;Lcd_Write_Char@a stored from wreg
  2259     0377  00F4               	movwf	Lcd_Write_Char@a
  2260     0378                     l1171:
  2261                           
  2262                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2263     0378  0874               	movf	Lcd_Write_Char@a,w
  2264     0379  390F               	andlw	15
  2265     037A  00F2               	movwf	Lcd_Write_Char@temp
  2266                           
  2267                           ;LCD.c: 86:     y = a & 0xF0;
  2268     037B  0874               	movf	Lcd_Write_Char@a,w
  2269     037C  39F0               	andlw	240
  2270     037D  00F3               	movwf	Lcd_Write_Char@y
  2271     037E                     l1173:
  2272                           
  2273                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2274     037E  1283               	bcf	3,5	;RP0=0, select bank0
  2275     037F  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0380  1707               	bsf	7,6	;volatile
  2277     0381                     l1175:
  2278                           
  2279                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2280     0381  0873               	movf	Lcd_Write_Char@y,w
  2281     0382  00F1               	movwf	??_Lcd_Write_Char
  2282     0383  3004               	movlw	4
  2283     0384                     u505:
  2284     0384  1003               	clrc
  2285     0385  0CF1               	rrf	??_Lcd_Write_Char,f
  2286     0386  3EFF               	addlw	-1
  2287     0387  1D03               	skipz
  2288     0388  2B84               	goto	u505
  2289     0389  0871               	movf	??_Lcd_Write_Char,w
  2290     038A  120A  118A  22C6  120A  118A  	fcall	_Lcd_Port
  2291     038F                     l1177:
  2292                           
  2293                           ;LCD.c: 89:     RC7 = 1;
  2294     038F  1283               	bcf	3,5	;RP0=0, select bank0
  2295     0390  1303               	bcf	3,6	;RP1=0, select bank0
  2296     0391  1787               	bsf	7,7	;volatile
  2297     0392                     l1179:
  2298                           
  2299                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2300     0392  301A               	movlw	26
  2301     0393  00F1               	movwf	??_Lcd_Write_Char
  2302     0394                     u947:
  2303     0394  0BF1               	decfsz	??_Lcd_Write_Char,f
  2304     0395  2B94               	goto	u947
  2305     0396  0000               	nop
  2306     0397                     l1181:
  2307                           
  2308                           ;LCD.c: 91:     RC7 = 0;
  2309     0397  1283               	bcf	3,5	;RP0=0, select bank0
  2310     0398  1303               	bcf	3,6	;RP1=0, select bank0
  2311     0399  1387               	bcf	7,7	;volatile
  2312     039A                     l1183:
  2313                           
  2314                           ;LCD.c: 92:     Lcd_Port(temp);
  2315     039A  0872               	movf	Lcd_Write_Char@temp,w
  2316     039B  120A  118A  22C6  120A  118A  	fcall	_Lcd_Port
  2317     03A0                     l1185:
  2318                           
  2319                           ;LCD.c: 93:     RC7 = 1;
  2320     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2321     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2322     03A2  1787               	bsf	7,7	;volatile
  2323     03A3                     l1187:
  2324                           
  2325                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2326     03A3  301A               	movlw	26
  2327     03A4  00F1               	movwf	??_Lcd_Write_Char
  2328     03A5                     u957:
  2329     03A5  0BF1               	decfsz	??_Lcd_Write_Char,f
  2330     03A6  2BA5               	goto	u957
  2331     03A7  0000               	nop
  2332     03A8                     l1189:
  2333                           
  2334                           ;LCD.c: 95:     RC7 = 0;
  2335     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2336     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2337     03AA  1387               	bcf	7,7	;volatile
  2338     03AB                     l193:
  2339     03AB  0008               	return
  2340     03AC                     __end_of_Lcd_Write_Char:
  2341                           
  2342                           	psect	text10
  2343     03AC                     __ptext10:	
  2344 ;; *************** function _Lcd_Set_Cursor *****************
  2345 ;; Defined at:
  2346 ;;		line 48 in file "LCD.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  a               1    wreg     unsigned char 
  2349 ;;  b               1    4[COMMON] unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  a               1    6[COMMON] unsigned char 
  2352 ;;  temp            1    9[COMMON] unsigned char 
  2353 ;;  y               1    8[COMMON] unsigned char 
  2354 ;;  z               1    7[COMMON] unsigned char 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  1    wreg      void 
  2357 ;; Registers used:
  2358 ;;		wreg, status,2, status,0, pclath, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2364 ;;      Params:         1       0       0       0       0
  2365 ;;      Locals:         4       0       0       0       0
  2366 ;;      Temps:          1       0       0       0       0
  2367 ;;      Totals:         6       0       0       0       0
  2368 ;;Total ram usage:        6 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 2
  2371 ;; This function calls:
  2372 ;;		_Lcd_Cmd
  2373 ;; This function is called by:
  2374 ;;		_RTC_display
  2375 ;;		_main
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379     03AC                     _Lcd_Set_Cursor:	
  2380                           ;psect for function _Lcd_Set_Cursor
  2381                           
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2385                           ;Lcd_Set_Cursor@a stored from wreg
  2386     03AC  00F6               	movwf	Lcd_Set_Cursor@a
  2387     03AD                     l1213:
  2388                           
  2389                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2390     03AD  0376               	decf	Lcd_Set_Cursor@a,w
  2391     03AE  1D03               	btfss	3,2
  2392     03AF  2BB1               	goto	u561
  2393     03B0  2BB2               	goto	u560
  2394     03B1                     u561:
  2395     03B1  2BCF               	goto	l1223
  2396     03B2                     u560:
  2397     03B2                     l1215:
  2398                           
  2399                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2400     03B2  0874               	movf	Lcd_Set_Cursor@b,w
  2401     03B3  3E7F               	addlw	127
  2402     03B4  00F9               	movwf	Lcd_Set_Cursor@temp
  2403                           
  2404                           ;LCD.c: 52:         z = temp >> 4;
  2405     03B5  0879               	movf	Lcd_Set_Cursor@temp,w
  2406     03B6  00F5               	movwf	??_Lcd_Set_Cursor
  2407     03B7  3004               	movlw	4
  2408     03B8                     u575:
  2409     03B8  1003               	clrc
  2410     03B9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2411     03BA  3EFF               	addlw	-1
  2412     03BB  1D03               	skipz
  2413     03BC  2BB8               	goto	u575
  2414     03BD  0875               	movf	??_Lcd_Set_Cursor,w
  2415     03BE  00F7               	movwf	Lcd_Set_Cursor@z
  2416     03BF                     l1217:
  2417                           
  2418                           ;LCD.c: 53:         y = temp & 0x0F;
  2419     03BF  0879               	movf	Lcd_Set_Cursor@temp,w
  2420     03C0  390F               	andlw	15
  2421     03C1  00F8               	movwf	Lcd_Set_Cursor@y
  2422     03C2                     l1219:
  2423                           
  2424                           ;LCD.c: 54:         Lcd_Cmd(z);
  2425     03C2  0877               	movf	Lcd_Set_Cursor@z,w
  2426     03C3  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2427     03C8                     l1221:
  2428                           
  2429                           ;LCD.c: 55:         Lcd_Cmd(y);
  2430     03C8  0878               	movf	Lcd_Set_Cursor@y,w
  2431     03C9  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2432                           
  2433                           ;LCD.c: 56:     } else if (a == 2) {
  2434     03CE  2BF1               	goto	l187
  2435     03CF                     l1223:
  2436     03CF  3002               	movlw	2
  2437     03D0  0676               	xorwf	Lcd_Set_Cursor@a,w
  2438     03D1  1D03               	btfss	3,2
  2439     03D2  2BD4               	goto	u581
  2440     03D3  2BD5               	goto	u580
  2441     03D4                     u581:
  2442     03D4  2BF1               	goto	l187
  2443     03D5                     u580:
  2444     03D5                     l1225:
  2445                           
  2446                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2447     03D5  0874               	movf	Lcd_Set_Cursor@b,w
  2448     03D6  3EBF               	addlw	191
  2449     03D7  00F9               	movwf	Lcd_Set_Cursor@temp
  2450                           
  2451                           ;LCD.c: 58:         z = temp >> 4;
  2452     03D8  0879               	movf	Lcd_Set_Cursor@temp,w
  2453     03D9  00F5               	movwf	??_Lcd_Set_Cursor
  2454     03DA  3004               	movlw	4
  2455     03DB                     u595:
  2456     03DB  1003               	clrc
  2457     03DC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2458     03DD  3EFF               	addlw	-1
  2459     03DE  1D03               	skipz
  2460     03DF  2BDB               	goto	u595
  2461     03E0  0875               	movf	??_Lcd_Set_Cursor,w
  2462     03E1  00F7               	movwf	Lcd_Set_Cursor@z
  2463     03E2                     l1227:
  2464                           
  2465                           ;LCD.c: 59:         y = temp & 0x0F;
  2466     03E2  0879               	movf	Lcd_Set_Cursor@temp,w
  2467     03E3  390F               	andlw	15
  2468     03E4  00F8               	movwf	Lcd_Set_Cursor@y
  2469     03E5                     l1229:
  2470                           
  2471                           ;LCD.c: 60:         Lcd_Cmd(z);
  2472     03E5  0877               	movf	Lcd_Set_Cursor@z,w
  2473     03E6  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2474     03EB                     l1231:
  2475                           
  2476                           ;LCD.c: 61:         Lcd_Cmd(y);
  2477     03EB  0878               	movf	Lcd_Set_Cursor@y,w
  2478     03EC  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2479     03F1                     l187:
  2480     03F1  0008               	return
  2481     03F2                     __end_of_Lcd_Set_Cursor:
  2482                           
  2483                           	psect	text11
  2484     044B                     __ptext11:	
  2485 ;; *************** function _Lcd_Init *****************
  2486 ;; Defined at:
  2487 ;;		line 65 in file "LCD.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2501 ;;      Params:         0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0
  2503 ;;      Temps:          2       0       0       0       0
  2504 ;;      Totals:         2       0       0       0       0
  2505 ;;Total ram usage:        2 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 2
  2508 ;; This function calls:
  2509 ;;		_Lcd_Cmd
  2510 ;;		_Lcd_Port
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516     044B                     _Lcd_Init:	
  2517                           ;psect for function _Lcd_Init
  2518                           
  2519     044B                     l1411:	
  2520                           ;incstack = 0
  2521                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2522                           
  2523                           
  2524                           ;LCD.c: 66:     Lcd_Port(0x00);
  2525     044B  3000               	movlw	0
  2526     044C  120A  118A  22C6  120A  118A  	fcall	_Lcd_Port
  2527     0451                     l1413:
  2528                           
  2529                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2530     0451  3034               	movlw	52
  2531     0452  00F5               	movwf	??_Lcd_Init+1
  2532     0453  30F1               	movlw	241
  2533     0454  00F4               	movwf	??_Lcd_Init
  2534     0455                     u967:
  2535     0455  0BF4               	decfsz	??_Lcd_Init,f
  2536     0456  2C55               	goto	u967
  2537     0457  0BF5               	decfsz	??_Lcd_Init+1,f
  2538     0458  2C55               	goto	u967
  2539     0459  2C5A               	nop2
  2540     045A                     l1415:
  2541                           
  2542                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2543     045A  3003               	movlw	3
  2544     045B  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2545                           
  2546                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2547     0460  300D               	movlw	13
  2548     0461  00F5               	movwf	??_Lcd_Init+1
  2549     0462  30FB               	movlw	251
  2550     0463  00F4               	movwf	??_Lcd_Init
  2551     0464                     u977:
  2552     0464  0BF4               	decfsz	??_Lcd_Init,f
  2553     0465  2C64               	goto	u977
  2554     0466  0BF5               	decfsz	??_Lcd_Init+1,f
  2555     0467  2C64               	goto	u977
  2556     0468  2C69               	nop2
  2557     0469                     l1417:
  2558                           
  2559                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2560     0469  3003               	movlw	3
  2561     046A  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2562     046F                     l1419:
  2563                           
  2564                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2565     046F  301D               	movlw	29
  2566     0470  00F5               	movwf	??_Lcd_Init+1
  2567     0471  3091               	movlw	145
  2568     0472  00F4               	movwf	??_Lcd_Init
  2569     0473                     u987:
  2570     0473  0BF4               	decfsz	??_Lcd_Init,f
  2571     0474  2C73               	goto	u987
  2572     0475  0BF5               	decfsz	??_Lcd_Init+1,f
  2573     0476  2C73               	goto	u987
  2574                           
  2575                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2576     0477  3003               	movlw	3
  2577     0478  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2578                           
  2579                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2580     047D  3002               	movlw	2
  2581     047E  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2582                           
  2583                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2584     0483  3002               	movlw	2
  2585     0484  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2586                           
  2587                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2588     0489  3008               	movlw	8
  2589     048A  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2590                           
  2591                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2592     048F  3000               	movlw	0
  2593     0490  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2594                           
  2595                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2596     0495  300C               	movlw	12
  2597     0496  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2598                           
  2599                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2600     049B  3000               	movlw	0
  2601     049C  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2602                           
  2603                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2604     04A1  3006               	movlw	6
  2605     04A2  120A  118A  2251  120A  118A  	fcall	_Lcd_Cmd
  2606     04A7                     l190:
  2607     04A7  0008               	return
  2608     04A8                     __end_of_Lcd_Init:
  2609                           
  2610                           	psect	text12
  2611     0251                     __ptext12:	
  2612 ;; *************** function _Lcd_Cmd *****************
  2613 ;; Defined at:
  2614 ;;		line 35 in file "LCD.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  a               1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  a               1    3[COMMON] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       0       0       0       0
  2629 ;;      Locals:         1       0       0       0       0
  2630 ;;      Temps:          2       0       0       0       0
  2631 ;;      Totals:         3       0       0       0       0
  2632 ;;Total ram usage:        3 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		_Lcd_Port
  2637 ;; This function is called by:
  2638 ;;		_Lcd_Set_Cursor
  2639 ;;		_Lcd_Init
  2640 ;;		_Lcd_Clear
  2641 ;;		_Lcd_Shift_Right
  2642 ;;		_Lcd_Shift_Left
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646     0251                     _Lcd_Cmd:	
  2647                           ;psect for function _Lcd_Cmd
  2648                           
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2652                           ;Lcd_Cmd@a stored from wreg
  2653     0251  00F3               	movwf	Lcd_Cmd@a
  2654     0252                     l1161:
  2655                           
  2656                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2657     0252  1283               	bcf	3,5	;RP0=0, select bank0
  2658     0253  1303               	bcf	3,6	;RP1=0, select bank0
  2659     0254  1307               	bcf	7,6	;volatile
  2660     0255                     l1163:
  2661                           
  2662                           ;LCD.c: 37:     Lcd_Port(a);
  2663     0255  0873               	movf	Lcd_Cmd@a,w
  2664     0256  120A  118A  22C6  120A  118A  	fcall	_Lcd_Port
  2665     025B                     l1165:
  2666                           
  2667                           ;LCD.c: 38:     RC7 = 1;
  2668     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2669     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2670     025D  1787               	bsf	7,7	;volatile
  2671     025E                     l1167:
  2672                           
  2673                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2674     025E  300B               	movlw	11
  2675     025F  00F2               	movwf	??_Lcd_Cmd+1
  2676     0260  3062               	movlw	98
  2677     0261  00F1               	movwf	??_Lcd_Cmd
  2678     0262                     u997:
  2679     0262  0BF1               	decfsz	??_Lcd_Cmd,f
  2680     0263  2A62               	goto	u997
  2681     0264  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2682     0265  2A62               	goto	u997
  2683     0266  0000               	nop
  2684     0267                     l1169:
  2685                           
  2686                           ;LCD.c: 40:     RC7 = 0;
  2687     0267  1283               	bcf	3,5	;RP0=0, select bank0
  2688     0268  1303               	bcf	3,6	;RP1=0, select bank0
  2689     0269  1387               	bcf	7,7	;volatile
  2690     026A                     l178:
  2691     026A  0008               	return
  2692     026B                     __end_of_Lcd_Cmd:
  2693                           
  2694                           	psect	text13
  2695     02C6                     __ptext13:	
  2696 ;; *************** function _Lcd_Port *****************
  2697 ;; Defined at:
  2698 ;;		line 13 in file "LCD.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  a               1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  a               1    0[COMMON] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2712 ;;      Params:         0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_Lcd_Cmd
  2722 ;;		_Lcd_Init
  2723 ;;		_Lcd_Write_Char
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727     02C6                     _Lcd_Port:	
  2728                           ;psect for function _Lcd_Port
  2729                           
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _Lcd_Port: [wreg]
  2733                           ;Lcd_Port@a stored from wreg
  2734     02C6  00F0               	movwf	Lcd_Port@a
  2735     02C7                     l1151:
  2736                           
  2737                           ;LCD.c: 14:     if (a & 1)
  2738     02C7  1C70               	btfss	Lcd_Port@a,0
  2739     02C8  2ACA               	goto	u461
  2740     02C9  2ACB               	goto	u460
  2741     02CA                     u461:
  2742     02CA  2ACF               	goto	l167
  2743     02CB                     u460:
  2744     02CB                     l1153:
  2745                           
  2746                           ;LCD.c: 15:         RD4 = 1;
  2747     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2748     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2749     02CD  1608               	bsf	8,4	;volatile
  2750     02CE  2AD2               	goto	l168
  2751     02CF                     l167:	
  2752                           ;LCD.c: 16:     else
  2753                           
  2754                           
  2755                           ;LCD.c: 17:         RD4 = 0;
  2756     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2757     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2758     02D1  1208               	bcf	8,4	;volatile
  2759     02D2                     l168:
  2760                           
  2761                           ;LCD.c: 19:     if (a & 2)
  2762     02D2  1CF0               	btfss	Lcd_Port@a,1
  2763     02D3  2AD5               	goto	u471
  2764     02D4  2AD6               	goto	u470
  2765     02D5                     u471:
  2766     02D5  2AD8               	goto	l169
  2767     02D6                     u470:
  2768     02D6                     l1155:
  2769                           
  2770                           ;LCD.c: 20:         RD5 = 1;
  2771     02D6  1688               	bsf	8,5	;volatile
  2772     02D7  2AD9               	goto	l170
  2773     02D8                     l169:	
  2774                           ;LCD.c: 21:     else
  2775                           
  2776                           
  2777                           ;LCD.c: 22:         RD5 = 0;
  2778     02D8  1288               	bcf	8,5	;volatile
  2779     02D9                     l170:
  2780                           
  2781                           ;LCD.c: 24:     if (a & 4)
  2782     02D9  1D70               	btfss	Lcd_Port@a,2
  2783     02DA  2ADC               	goto	u481
  2784     02DB  2ADD               	goto	u480
  2785     02DC                     u481:
  2786     02DC  2ADF               	goto	l171
  2787     02DD                     u480:
  2788     02DD                     l1157:
  2789                           
  2790                           ;LCD.c: 25:         RD6 = 1;
  2791     02DD  1708               	bsf	8,6	;volatile
  2792     02DE  2AE0               	goto	l172
  2793     02DF                     l171:	
  2794                           ;LCD.c: 26:     else
  2795                           
  2796                           
  2797                           ;LCD.c: 27:         RD6 = 0;
  2798     02DF  1308               	bcf	8,6	;volatile
  2799     02E0                     l172:
  2800                           
  2801                           ;LCD.c: 29:     if (a & 8)
  2802     02E0  1DF0               	btfss	Lcd_Port@a,3
  2803     02E1  2AE3               	goto	u491
  2804     02E2  2AE4               	goto	u490
  2805     02E3                     u491:
  2806     02E3  2AE6               	goto	l173
  2807     02E4                     u490:
  2808     02E4                     l1159:
  2809                           
  2810                           ;LCD.c: 30:         RD7 = 1;
  2811     02E4  1788               	bsf	8,7	;volatile
  2812     02E5  2AE7               	goto	l175
  2813     02E6                     l173:	
  2814                           ;LCD.c: 31:     else
  2815                           
  2816                           
  2817                           ;LCD.c: 32:         RD7 = 0;
  2818     02E6  1388               	bcf	8,7	;volatile
  2819     02E7                     l175:
  2820     02E7  0008               	return
  2821     02E8                     __end_of_Lcd_Port:
  2822                           
  2823                           	psect	text14
  2824     01FC                     __ptext14:	
  2825 ;; *************** function _I2C_Master_Write *****************
  2826 ;; Defined at:
  2827 ;;		line 65 in file "I2C.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;  d               2    0[COMMON] unsigned int 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, pclath, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         2       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         2       0       0       0       0
  2845 ;;Total ram usage:        2 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 1
  2848 ;; This function calls:
  2849 ;;		_I2C_Master_Wait
  2850 ;; This function is called by:
  2851 ;;		_main
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855     01FC                     _I2C_Master_Write:	
  2856                           ;psect for function _I2C_Master_Write
  2857                           
  2858     01FC                     l1359:	
  2859                           ;incstack = 0
  2860                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2861                           
  2862                           
  2863                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2864     01FC  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  2865     0201                     l1361:
  2866                           
  2867                           ;I2C.c: 68:     SSPBUF = d;
  2868     0201  0870               	movf	I2C_Master_Write@d,w
  2869     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2870     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2871     0204  0093               	movwf	19	;volatile
  2872     0205                     l47:
  2873     0205  0008               	return
  2874     0206                     __end_of_I2C_Master_Write:
  2875                           
  2876                           	psect	text15
  2877     01F3                     __ptext15:	
  2878 ;; *************** function _I2C_Master_Stop *****************
  2879 ;; Defined at:
  2880 ;;		line 55 in file "I2C.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 1
  2901 ;; This function calls:
  2902 ;;		_I2C_Master_Wait
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908     01F3                     _I2C_Master_Stop:	
  2909                           ;psect for function _I2C_Master_Stop
  2910                           
  2911     01F3                     l1355:	
  2912                           ;incstack = 0
  2913                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2914                           
  2915                           
  2916                           ;I2C.c: 57:     I2C_Master_Wait();
  2917     01F3  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  2918     01F8                     l1357:
  2919                           
  2920                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2921     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2922     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2923     01FA  1511               	bsf	17,2	;volatile
  2924     01FB                     l44:
  2925     01FB  0008               	return
  2926     01FC                     __end_of_I2C_Master_Stop:
  2927                           
  2928                           	psect	text16
  2929     01EA                     __ptext16:	
  2930 ;; *************** function _I2C_Master_Start *****************
  2931 ;; Defined at:
  2932 ;;		line 39 in file "I2C.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 1
  2953 ;; This function calls:
  2954 ;;		_I2C_Master_Wait
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960     01EA                     _I2C_Master_Start:	
  2961                           ;psect for function _I2C_Master_Start
  2962                           
  2963     01EA                     l1347:	
  2964                           ;incstack = 0
  2965                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2966                           
  2967                           
  2968                           ;I2C.c: 41:     I2C_Master_Wait();
  2969     01EA  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  2970     01EF                     l1349:
  2971                           
  2972                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2973     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2974     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2975     01F1  1411               	bsf	17,0	;volatile
  2976     01F2                     l38:
  2977     01F2  0008               	return
  2978     01F3                     __end_of_I2C_Master_Start:
  2979                           
  2980                           	psect	text17
  2981     01E1                     __ptext17:	
  2982 ;; *************** function _I2C_Master_RepeatedStart *****************
  2983 ;; Defined at:
  2984 ;;		line 47 in file "I2C.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0, pclath, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 1
  3005 ;; This function calls:
  3006 ;;		_I2C_Master_Wait
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012     01E1                     _I2C_Master_RepeatedStart:	
  3013                           ;psect for function _I2C_Master_RepeatedStart
  3014                           
  3015     01E1                     l1351:	
  3016                           ;incstack = 0
  3017                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3018                           
  3019                           
  3020                           ;I2C.c: 49:     I2C_Master_Wait();
  3021     01E1  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  3022     01E6                     l1353:
  3023                           
  3024                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3025     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3026     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3027     01E8  1491               	bsf	17,1	;volatile
  3028     01E9                     l41:
  3029     01E9  0008               	return
  3030     01EA                     __end_of_I2C_Master_RepeatedStart:
  3031                           
  3032                           	psect	text18
  3033     02E8                     __ptext18:	
  3034 ;; *************** function _I2C_Master_Read *****************
  3035 ;; Defined at:
  3036 ;;		line 74 in file "I2C.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  a               2    0[COMMON] unsigned short 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  temp            2    4[COMMON] unsigned short 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2    0[COMMON] unsigned short 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         2       0       0       0       0
  3051 ;;      Locals:         2       0       0       0       0
  3052 ;;      Temps:          2       0       0       0       0
  3053 ;;      Totals:         6       0       0       0       0
  3054 ;;Total ram usage:        6 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 1
  3057 ;; This function calls:
  3058 ;;		_I2C_Master_Wait
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064     02E8                     _I2C_Master_Read:	
  3065                           ;psect for function _I2C_Master_Read
  3066                           
  3067     02E8                     l1363:	
  3068                           ;incstack = 0
  3069                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3070                           
  3071                           
  3072                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3073     02E8  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  3074     02ED                     l1365:
  3075                           
  3076                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3077     02ED  1683               	bsf	3,5	;RP0=1, select bank1
  3078     02EE  1303               	bcf	3,6	;RP1=0, select bank1
  3079     02EF  1591               	bsf	17,3	;volatile
  3080                           
  3081                           ;I2C.c: 79:     I2C_Master_Wait();
  3082     02F0  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  3083     02F5                     l1367:
  3084                           
  3085                           ;I2C.c: 80:     temp = SSPBUF;
  3086     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3087     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3088     02F7  0813               	movf	19,w	;volatile
  3089     02F8  00F2               	movwf	??_I2C_Master_Read
  3090     02F9  01F3               	clrf	??_I2C_Master_Read+1
  3091     02FA  0872               	movf	??_I2C_Master_Read,w
  3092     02FB  00F4               	movwf	I2C_Master_Read@temp
  3093     02FC  0873               	movf	??_I2C_Master_Read+1,w
  3094     02FD  00F5               	movwf	I2C_Master_Read@temp+1
  3095     02FE                     l1369:
  3096                           
  3097                           ;I2C.c: 81:     I2C_Master_Wait();
  3098     02FE  120A  118A  2206  120A  118A  	fcall	_I2C_Master_Wait
  3099     0303                     l1371:
  3100                           
  3101                           ;I2C.c: 82:     if(a == 1){
  3102     0303  0370               	decf	I2C_Master_Read@a,w
  3103     0304  0471               	iorwf	I2C_Master_Read@a+1,w
  3104     0305  1D03               	btfss	3,2
  3105     0306  2B08               	goto	u871
  3106     0307  2B09               	goto	u870
  3107     0308                     u871:
  3108     0308  2B0D               	goto	l50
  3109     0309                     u870:
  3110     0309                     l1373:
  3111                           
  3112                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3113     0309  1683               	bsf	3,5	;RP0=1, select bank1
  3114     030A  1303               	bcf	3,6	;RP1=0, select bank1
  3115     030B  1291               	bcf	17,5	;volatile
  3116                           
  3117                           ;I2C.c: 84:     }else{
  3118     030C  2B10               	goto	l51
  3119     030D                     l50:
  3120                           
  3121                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3122     030D  1683               	bsf	3,5	;RP0=1, select bank1
  3123     030E  1303               	bcf	3,6	;RP1=0, select bank1
  3124     030F  1691               	bsf	17,5	;volatile
  3125     0310                     l51:	
  3126                           ;I2C.c: 86:     }
  3127                           
  3128                           
  3129                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3130     0310  1611               	bsf	17,4	;volatile
  3131     0311                     l1375:
  3132                           
  3133                           ;I2C.c: 88:     return temp;
  3134     0311  0875               	movf	I2C_Master_Read@temp+1,w
  3135     0312  00F1               	movwf	?_I2C_Master_Read+1
  3136     0313  0874               	movf	I2C_Master_Read@temp,w
  3137     0314  00F0               	movwf	?_I2C_Master_Read
  3138     0315                     l52:
  3139     0315  0008               	return
  3140     0316                     __end_of_I2C_Master_Read:
  3141                           
  3142                           	psect	text19
  3143     0206                     __ptext19:	
  3144 ;; *************** function _I2C_Master_Wait *****************
  3145 ;; Defined at:
  3146 ;;		line 32 in file "I2C.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_I2C_Master_Start
  3170 ;;		_I2C_Master_RepeatedStart
  3171 ;;		_I2C_Master_Stop
  3172 ;;		_I2C_Master_Write
  3173 ;;		_I2C_Master_Read
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     0206                     _I2C_Master_Wait:	
  3178                           ;psect for function _I2C_Master_Wait
  3179                           
  3180     0206                     l1205:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3183                           
  3184     0206                     l32:	
  3185                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3186                           
  3187     0206  1683               	bsf	3,5	;RP0=1, select bank1
  3188     0207  1303               	bcf	3,6	;RP1=0, select bank1
  3189     0208  1914               	btfsc	20,2	;volatile
  3190     0209  2A0B               	goto	u531
  3191     020A  2A0C               	goto	u530
  3192     020B                     u531:
  3193     020B  2A06               	goto	l32
  3194     020C                     u530:
  3195     020C                     l1207:
  3196     020C  0811               	movf	17,w	;volatile
  3197     020D  391F               	andlw	31
  3198     020E  1D03               	btfss	3,2
  3199     020F  2A11               	goto	u541
  3200     0210  2A12               	goto	u540
  3201     0211                     u541:
  3202     0211  2A06               	goto	l32
  3203     0212                     u540:
  3204     0212                     l35:
  3205     0212  0008               	return
  3206     0213                     __end_of_I2C_Master_Wait:
  3207                           
  3208                           	psect	text20
  3209     0346                     __ptext20:	
  3210 ;; *************** function _I2C_Init *****************
  3211 ;; Defined at:
  3212 ;;		line 45 in file "Lab4master.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  i2c_clk_freq    4    0[BANK0 ] unsigned long 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0, pclath, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3226 ;;      Params:         0       4       0       0       0
  3227 ;;      Locals:         0       0       0       0       0
  3228 ;;      Temps:          0       4       0       0       0
  3229 ;;      Totals:         0       8       0       0       0
  3230 ;;Total ram usage:        8 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 1
  3233 ;; This function calls:
  3234 ;;		___lldiv
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240     0346                     _I2C_Init:	
  3241                           ;psect for function _I2C_Init
  3242                           
  3243     0346                     l1379:	
  3244                           ;incstack = 0
  3245                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  3246                           
  3247                           
  3248                           ;Lab4master.c: 45: void I2C_Init(uint32_t i2c_clk_freq);Lab4master.c: 46: {;Lab4master.c
      +                          : 47:   SSPCON = 0x28;
  3249     0346  3028               	movlw	40
  3250     0347  1283               	bcf	3,5	;RP0=0, select bank0
  3251     0348  1303               	bcf	3,6	;RP1=0, select bank0
  3252     0349  0094               	movwf	20	;volatile
  3253     034A                     l1381:
  3254                           
  3255                           ;Lab4master.c: 48:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  3256     034A  0840               	movf	I2C_Init@i2c_clk_freq,w
  3257     034B  00C4               	movwf	??_I2C_Init
  3258     034C  0841               	movf	I2C_Init@i2c_clk_freq+1,w
  3259     034D  00C5               	movwf	??_I2C_Init+1
  3260     034E  0842               	movf	I2C_Init@i2c_clk_freq+2,w
  3261     034F  00C6               	movwf	??_I2C_Init+2
  3262     0350  0843               	movf	I2C_Init@i2c_clk_freq+3,w
  3263     0351  00C7               	movwf	??_I2C_Init+3
  3264     0352  3002               	movlw	2
  3265     0353                     u885:
  3266     0353  1003               	clrc
  3267     0354  0DC4               	rlf	??_I2C_Init,f
  3268     0355  0DC5               	rlf	??_I2C_Init+1,f
  3269     0356  0DC6               	rlf	??_I2C_Init+2,f
  3270     0357  0DC7               	rlf	??_I2C_Init+3,f
  3271     0358                     u880:
  3272     0358  3EFF               	addlw	-1
  3273     0359  1D03               	skipz
  3274     035A  2B53               	goto	u885
  3275     035B  0847               	movf	??_I2C_Init+3,w
  3276     035C  00F3               	movwf	___lldiv@divisor+3
  3277     035D  0846               	movf	??_I2C_Init+2,w
  3278     035E  00F2               	movwf	___lldiv@divisor+2
  3279     035F  0845               	movf	??_I2C_Init+1,w
  3280     0360  00F1               	movwf	___lldiv@divisor+1
  3281     0361  0844               	movf	??_I2C_Init,w
  3282     0362  00F0               	movwf	___lldiv@divisor
  3283     0363  3000               	movlw	0
  3284     0364  00F7               	movwf	___lldiv@dividend+3
  3285     0365  307A               	movlw	122
  3286     0366  00F6               	movwf	___lldiv@dividend+2
  3287     0367  3012               	movlw	18
  3288     0368  00F5               	movwf	___lldiv@dividend+1
  3289     0369  3000               	movlw	0
  3290     036A  00F4               	movwf	___lldiv@dividend
  3291     036B  120A  118A  24A8  120A  118A  	fcall	___lldiv
  3292     0370  0870               	movf	?___lldiv,w
  3293     0371  3EFF               	addlw	255
  3294     0372  1683               	bsf	3,5	;RP0=1, select bank1
  3295     0373  1303               	bcf	3,6	;RP1=0, select bank1
  3296     0374  0093               	movwf	19	;volatile
  3297     0375                     l1383:
  3298                           
  3299                           ;Lab4master.c: 49:   SSPSTAT = 0;
  3300     0375  0194               	clrf	20	;volatile
  3301     0376                     l126:
  3302     0376  0008               	return
  3303     0377                     __end_of_I2C_Init:
  3304                           
  3305                           	psect	text21
  3306     04A8                     __ptext21:	
  3307 ;; *************** function ___lldiv *****************
  3308 ;; Defined at:
  3309 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  divisor         4    0[COMMON] unsigned long 
  3312 ;;  dividend        4    4[COMMON] unsigned long 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  quotient        4    9[COMMON] unsigned long 
  3315 ;;  counter         1   13[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  4    0[COMMON] unsigned long 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         8       0       0       0       0
  3326 ;;      Locals:         5       0       0       0       0
  3327 ;;      Temps:          1       0       0       0       0
  3328 ;;      Totals:        14       0       0       0       0
  3329 ;;Total ram usage:       14 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_I2C_Init
  3335 ;;		_I2C_Master_Init
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339     04A8                     ___lldiv:	
  3340                           ;psect for function ___lldiv
  3341                           
  3342     04A8                     l1241:	
  3343                           ;incstack = 0
  3344                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3345                           
  3346     04A8  3000               	movlw	0
  3347     04A9  00FC               	movwf	___lldiv@quotient+3
  3348     04AA  3000               	movlw	0
  3349     04AB  00FB               	movwf	___lldiv@quotient+2
  3350     04AC  3000               	movlw	0
  3351     04AD  00FA               	movwf	___lldiv@quotient+1
  3352     04AE  3000               	movlw	0
  3353     04AF  00F9               	movwf	___lldiv@quotient
  3354     04B0  0873               	movf	___lldiv@divisor+3,w
  3355     04B1  0472               	iorwf	___lldiv@divisor+2,w
  3356     04B2  0471               	iorwf	___lldiv@divisor+1,w
  3357     04B3  0470               	iorwf	___lldiv@divisor,w
  3358     04B4  1903               	skipnz
  3359     04B5  2CB7               	goto	u611
  3360     04B6  2CB8               	goto	u610
  3361     04B7                     u611:
  3362     04B7  2D05               	goto	l1261
  3363     04B8                     u610:
  3364     04B8                     l1243:
  3365     04B8  01FD               	clrf	___lldiv@counter
  3366     04B9  0AFD               	incf	___lldiv@counter,f
  3367     04BA  2CC8               	goto	l1247
  3368     04BB                     l1245:
  3369     04BB  3001               	movlw	1
  3370     04BC  00F8               	movwf	??___lldiv
  3371     04BD                     u625:
  3372     04BD  1003               	clrc
  3373     04BE  0DF0               	rlf	___lldiv@divisor,f
  3374     04BF  0DF1               	rlf	___lldiv@divisor+1,f
  3375     04C0  0DF2               	rlf	___lldiv@divisor+2,f
  3376     04C1  0DF3               	rlf	___lldiv@divisor+3,f
  3377     04C2  0BF8               	decfsz	??___lldiv,f
  3378     04C3  2CBD               	goto	u625
  3379     04C4  3001               	movlw	1
  3380     04C5  00F8               	movwf	??___lldiv
  3381     04C6  0878               	movf	??___lldiv,w
  3382     04C7  07FD               	addwf	___lldiv@counter,f
  3383     04C8                     l1247:
  3384     04C8  1FF3               	btfss	___lldiv@divisor+3,7
  3385     04C9  2CCB               	goto	u631
  3386     04CA  2CCC               	goto	u630
  3387     04CB                     u631:
  3388     04CB  2CBB               	goto	l1245
  3389     04CC                     u630:
  3390     04CC                     l1249:
  3391     04CC  3001               	movlw	1
  3392     04CD  00F8               	movwf	??___lldiv
  3393     04CE                     u645:
  3394     04CE  1003               	clrc
  3395     04CF  0DF9               	rlf	___lldiv@quotient,f
  3396     04D0  0DFA               	rlf	___lldiv@quotient+1,f
  3397     04D1  0DFB               	rlf	___lldiv@quotient+2,f
  3398     04D2  0DFC               	rlf	___lldiv@quotient+3,f
  3399     04D3  0BF8               	decfsz	??___lldiv,f
  3400     04D4  2CCE               	goto	u645
  3401     04D5                     l1251:
  3402     04D5  0873               	movf	___lldiv@divisor+3,w
  3403     04D6  0277               	subwf	___lldiv@dividend+3,w
  3404     04D7  1D03               	skipz
  3405     04D8  2CE3               	goto	u655
  3406     04D9  0872               	movf	___lldiv@divisor+2,w
  3407     04DA  0276               	subwf	___lldiv@dividend+2,w
  3408     04DB  1D03               	skipz
  3409     04DC  2CE3               	goto	u655
  3410     04DD  0871               	movf	___lldiv@divisor+1,w
  3411     04DE  0275               	subwf	___lldiv@dividend+1,w
  3412     04DF  1D03               	skipz
  3413     04E0  2CE3               	goto	u655
  3414     04E1  0870               	movf	___lldiv@divisor,w
  3415     04E2  0274               	subwf	___lldiv@dividend,w
  3416     04E3                     u655:
  3417     04E3  1C03               	skipc
  3418     04E4  2CE6               	goto	u651
  3419     04E5  2CE7               	goto	u650
  3420     04E6                     u651:
  3421     04E6  2CF6               	goto	l1257
  3422     04E7                     u650:
  3423     04E7                     l1253:
  3424     04E7  0870               	movf	___lldiv@divisor,w
  3425     04E8  02F4               	subwf	___lldiv@dividend,f
  3426     04E9  0871               	movf	___lldiv@divisor+1,w
  3427     04EA  1C03               	skipc
  3428     04EB  0F71               	incfsz	___lldiv@divisor+1,w
  3429     04EC  02F5               	subwf	___lldiv@dividend+1,f
  3430     04ED  0872               	movf	___lldiv@divisor+2,w
  3431     04EE  1C03               	skipc
  3432     04EF  0F72               	incfsz	___lldiv@divisor+2,w
  3433     04F0  02F6               	subwf	___lldiv@dividend+2,f
  3434     04F1  0873               	movf	___lldiv@divisor+3,w
  3435     04F2  1C03               	skipc
  3436     04F3  0F73               	incfsz	___lldiv@divisor+3,w
  3437     04F4  02F7               	subwf	___lldiv@dividend+3,f
  3438     04F5                     l1255:
  3439     04F5  1479               	bsf	___lldiv@quotient,0
  3440     04F6                     l1257:
  3441     04F6  3001               	movlw	1
  3442     04F7                     u665:
  3443     04F7  1003               	clrc
  3444     04F8  0CF3               	rrf	___lldiv@divisor+3,f
  3445     04F9  0CF2               	rrf	___lldiv@divisor+2,f
  3446     04FA  0CF1               	rrf	___lldiv@divisor+1,f
  3447     04FB  0CF0               	rrf	___lldiv@divisor,f
  3448     04FC  3EFF               	addlw	-1
  3449     04FD  1D03               	skipz
  3450     04FE  2CF7               	goto	u665
  3451     04FF                     l1259:
  3452     04FF  3001               	movlw	1
  3453     0500  02FD               	subwf	___lldiv@counter,f
  3454     0501  1D03               	btfss	3,2
  3455     0502  2D04               	goto	u671
  3456     0503  2D05               	goto	u670
  3457     0504                     u671:
  3458     0504  2CCC               	goto	l1249
  3459     0505                     u670:
  3460     0505                     l1261:
  3461     0505  087C               	movf	___lldiv@quotient+3,w
  3462     0506  00F3               	movwf	?___lldiv+3
  3463     0507  087B               	movf	___lldiv@quotient+2,w
  3464     0508  00F2               	movwf	?___lldiv+2
  3465     0509  087A               	movf	___lldiv@quotient+1,w
  3466     050A  00F1               	movwf	?___lldiv+1
  3467     050B  0879               	movf	___lldiv@quotient,w
  3468     050C  00F0               	movwf	?___lldiv
  3469     050D                     l327:
  3470     050D  0008               	return
  3471     050E                     __end_of___lldiv:
  3472     007E                     btemp	set	126	;btemp
  3473     007E                     wtemp0	set	126
  3474                           
  3475                           	psect	idloc
  3476                           
  3477                           ;Config register IDLOC0 @ 0x2000
  3478                           ;	unspecified, using default values
  3479     2000                     	org	8192
  3480     2000  3FFF               	dw	16383
  3481                           
  3482                           ;Config register IDLOC1 @ 0x2001
  3483                           ;	unspecified, using default values
  3484     2001                     	org	8193
  3485     2001  3FFF               	dw	16383
  3486                           
  3487                           ;Config register IDLOC2 @ 0x2002
  3488                           ;	unspecified, using default values
  3489     2002                     	org	8194
  3490     2002  3FFF               	dw	16383
  3491                           
  3492                           ;Config register IDLOC3 @ 0x2003
  3493                           ;	unspecified, using default values
  3494     2003                     	org	8195
  3495     2003  3FFF               	dw	16383
  3496                           
  3497                           	psect	config
  3498                           
  3499                           ;Config register CONFIG1 @ 0x2007
  3500                           ;	Oscillator Selection bits
  3501                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3502                           ;	Watchdog Timer Enable bit
  3503                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3504                           ;	Power-up Timer Enable bit
  3505                           ;	PWRTE = OFF, PWRT disabled
  3506                           ;	RE3/MCLR pin function select bit
  3507                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3508                           ;	Code Protection bit
  3509                           ;	CP = OFF, Program memory code protection is disabled
  3510                           ;	Data Code Protection bit
  3511                           ;	CPD = OFF, Data memory code protection is disabled
  3512                           ;	Brown Out Reset Selection bits
  3513                           ;	BOREN = OFF, BOR disabled
  3514                           ;	Internal External Switchover bit
  3515                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3516                           ;	Fail-Safe Clock Monitor Enabled bit
  3517                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3518                           ;	Low Voltage Programming Enable bit
  3519                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3520                           ;	In-Circuit Debugger Mode bit
  3521                           ;	DEBUG = 0x1, unprogrammed default
  3522     2007                     	org	8199
  3523     2007  20D5               	dw	8405
  3524                           
  3525                           ;Config register CONFIG2 @ 0x2008
  3526                           ;	Brown-out Reset Selection bit
  3527                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3528                           ;	Flash Program Memory Self Write Enable bits
  3529                           ;	WRT = OFF, Write protection off
  3530     2008                     	org	8200
  3531     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Set_Cursor
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9038
                                              8 BANK0      3     3      0
                           _I2C_Init
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3769
                                             10 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    1010
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     564
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _RTC_display
     _Lcd_Set_Cursor
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 23 15:43:21 2023

                               _i 0051                                 pc 0002                    ___bmul@product 0072  
                              l32 0206                                l41 01E9                                l50 030D  
                              l35 0212                                l51 0310                                l52 0315  
                              l44 01FB                                l38 01F2                                l47 0205  
                    ___awdiv@sign 0076                                fsr 0004                    _decimal_to_bcd 0316  
                     _RTC_display 06A4                               l132 0345                               l126 0376  
                             l150 0284                               l129 0250                               l170 02D9  
                             l171 02DF                               l139 07E6                               l172 02E0  
                             l173 02E6                               l317 023A                               l190 04A7  
                             l327 050D                               l175 02E7                               l167 02CF  
                             l168 02D2                               l169 02D8                               l193 03AB  
                             l178 026A                               l187 03F1                               l444 0574  
                             l199 02C5                               l457 044A                               _GIE 005F  
                             _RD4 0044                               _RD5 0045                               _RC7 003F  
                             _RD6 0046                               _RD7 0047                               u510 022C  
                             u511 022B                               u600 02C5                               u520 0239  
                             u505 0384                               u601 02C4                               u521 0238  
                             u610 04B8                               u530 020C                               u611 04B7  
                             u531 020B                               u540 0212                               u460 02CB  
                             u700 052F                               u541 0211                               u461 02CA  
                             u701 052E                               u630 04CC                               u470 02D6  
                             u631 04CB                               u471 02D5                               u480 02DD  
                             u560 03B2                               u720 0541                               u800 040D  
                             u625 04BD                               u481 02DC                               u561 03B1  
                             u721 0540                               u801 040C                               u650 04E7  
                             u490 02E4                               u651 04E6                               u491 02E3  
                             u715 0533                               u555 0244                               u580 03D5  
                             u740 0552                               u820 041F                               u645 04CE  
                             u581 03D4                               u741 0551                               u821 041E  
                             u670 0505                               u830 0429                               u671 0504  
                             u655 04E3                               u575 03B8                               u735 0542  
                             u831 0428                               u815 0411                               u760 0566  
                             u680 0513                               u665 04F7                               u761 0565  
                             u745 054E                               u681 0512                               u770 056B  
                             u690 051E                               u850 043C                               u595 03DB  
                             u771 056A                               u755 055A                               u691 051D  
                             u851 043B                               u835 0425                               u860 0441  
                             u780 03F7                               u861 0440                               u845 0430  
                             u781 03F6                               u917 05D2                               u870 0309  
                             u790 0402                               u871 0308                               u791 0401  
                             u927 067D                               u880 0358                               u937 068C  
                             u947 0394                               u885 0353                               u957 03A5  
                             u967 0455                               u895 032C                               u977 0464  
                             u987 0473                               u997 0262                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0076                              l1201 0239  
                            l1205 0206                              l1221 03C8                              l1213 03AD  
                            l1301 0566                              l1207 020C                              l1151 02C7  
                            l1231 03EB                              l1215 03B2                              l1223 03CF  
                            l1303 056B                              l1311 03F3                              l1241 04A8  
                            l1153 02CB                              l1161 0252                              l1225 03D5  
                            l1217 03BF                              l1233 02A6                              l1305 0570  
                            l1321 0407                              l1313 03F7                              l1209 023C  
                            l1401 0274                              l1251 04D5                              l1243 04B8  
                            l1155 02D6                              l1163 0255                              l1411 044B  
                            l1227 03E2                              l1219 03C2                              l1171 0378  
                            l1235 02A9                              l1331 041F                              l1323 040D  
                            l1315 03FC                              l1403 027D                              l1253 04E7  
                            l1245 04BB                              l1261 0505                              l1157 02DD  
                            l1165 025B                              l1413 0451                              l1229 03E5  
                            l1181 0397                              l1173 037E                              l1237 02B4  
                            l1341 0441                              l1333 0429                              l1325 0410  
                            l1317 03FE                              l1309 03F2                              l1405 027E  
                            l1255 04F5                              l1247 04C8                              l1351 01E1  
                            l1159 02E4                              l1167 025E                              l1415 045A  
                            l1183 039A                              l1175 0381                              l1239 02BA  
                            l1271 0518                              l1343 0446                              l1335 042F  
                            l1327 0417                              l1319 0402                              l1191 0227  
                            l1407 027F                              l1257 04F6                              l1249 04CC  
                            l1353 01E6                              l1361 0201                              l1169 0267  
                            l1417 0469                              l1185 03A0                              l1177 038F  
                            l1281 0529                              l1273 051A                              l1265 050E  
                            l1337 0436                              l1329 041B                              l1193 0228  
                            l1409 0283                              l1441 05E7                              l1433 0575  
                            l1259 04FF                              l1371 0303                              l1363 02E8  
                            l1347 01EA                              l1355 01F3                              l1419 046F  
                            l1187 03A3                              l1179 0392                              l1291 0541  
                            l1283 052F                              l1275 051E                              l1267 050F  
                            l1339 043C                              l1195 022C                              l1451 0610  
                            l1443 05EF                              l1435 05CA                              l1381 034A  
                            l1373 0309                              l1365 02ED                              l1349 01EF  
                            l1357 01F8                              l1189 03A8                              l1293 0552  
                            l1285 0532                              l1277 0523                              l1269 0513  
                            l1197 0230                              l1461 0633                              l1453 0618  
                            l1445 05FD                              l1437 05D9                              l1383 0375  
                            l1375 0311                              l1367 02F5                              l1359 01FC  
                            l1295 0558                              l1287 0539                              l1279 0527  
                            l1199 0232                              l1391 07E0                              l1471 065B  
                            l1463 0638                              l1455 061D                              l1447 0602  
                            l1439 05DE                              l1369 02FE                              l1297 0559  
                            l1289 053D                              l1385 0319                              l1393 026B  
                            l1481 0693                              l1473 0664                              l1465 0641  
                            l1457 0622                              l1449 0607                              l1379 0346  
                            l1299 0560                              l1395 026F                              l1483 0698  
                            l1475 0670                              l1467 064D                              l1459 062B  
                            l1389 06A4                              l1397 0272                              l1477 0675  
                            l1469 0656                              l1399 0273                              l1479 0684  
                            _PEIE 005E                 ?_Lcd_Write_String 0070  __end_of_I2C_Master_RepeatedStart 01EA  
                            _main 0575                              _hour 004E                  __end_of_I2C_Init 0377  
                            _year 004B                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0075                   __end_of_Lcd_Cmd 026B                 ___bmul@multiplier 0073  
          __end_of_decimal_to_bcd 0346                  ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___awdiv 0575  
                 __end_of___awmod 044B                             _ANSEL 0188                   __end_of___lldiv 050E  
                 ___awdiv@divisor 0070                   ___awdiv@counter 0075                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _m_day 004D                             _month 004C  
                           _setup 026B                             pclath 000A                             status 0003  
                           wtemp0 007E              I2C_Init@i2c_clk_freq 0040                  __end_of_Lcd_Init 04A8  
                __end_of_Lcd_Port 02E8                   __initialization 07E7                      __end_of_main 06A4  
                 ?_decimal_to_bcd 0070                            ??_main 0048                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            ?_setup 0070                            _ANSELH 0189  
                       ??_Lcd_Cmd 0071                            _SSPADD 0093                            _TRISC1 0439  
                          _TRISC2 043A                            _TRISC3 043B                            _TRISC4 043C  
                          _TRISC6 043E                            _TRISC7 043F                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 01E1                            ___bmul 0226  
                       ??___awdiv 0074                         ??___awmod 0074                         ??___lldiv 0078  
                ___awdiv@quotient 0077                            _minute 004F                            _second 0050  
                 ___awmod@divisor 0070                   ___awmod@counter 0075                         ?_I2C_Init 0040  
                 Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074                   Lcd_Set_Cursor@y 0078  
                 Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 0285                     __end_of_setup 0285  
                    ?_RTC_display 0070                    _Lcd_Set_Cursor 03AC                        ??_I2C_Init 0044  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0070  
                      __pbssBANK0 004B                        __pmaintext 0575                           ?___bmul 0070  
          __end_of_Lcd_Set_Cursor 03F2                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                    _Lcd_Write_Char 0377  
                         _Lcd_Cmd 0251                  ??_decimal_to_bcd 0079                           ___awdiv 050E  
                         ___awmod 03F2                           ___lldiv 04A8                   ?_Lcd_Set_Cursor 0074  
                         __ptext1 026B                           __ptext2 0316                           __ptext3 06A4  
                         __ptext4 023B                           __ptext5 0226                           __ptext6 03F2  
                         __ptext7 050E                           __ptext8 02A5                           __ptext9 0377  
                ___awmod@dividend 0072            __end_of_Lcd_Write_Char 03AC              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070                   ___lldiv@counter 007D  
                I2C_Master_Read@a 0070                         Lcd_Port@a 0070                         _PORTCbits 0007  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0078  
               Lcd_Write_String@i 0076                    __end_of___bmul 023B                  _Lcd_Write_String 02A5  
             start_initialization 07E7                    _bcd_to_decimal 023B                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                          ??___bmul 0071  
                      init_fetch0 0213                       __pdataBANK0 0020                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073            __end_of_bcd_to_decimal 0251                         ___latbits 0002  
                   __pcstackBANK0 0040                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 01EA  
                _I2C_Master_Write 01FC                  ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070  
                        ?___awmod 0070                          ?___lldiv 0070                   ?_bcd_to_decimal 0070  
                        _I2C_Init 0346              bcd_to_decimal@number 0076                   RTC_display@Date 0020  
                 RTC_display@Time 0031                          Lcd_Cmd@a 0073                  ??_Lcd_Write_Char 0071  
                        _Lcd_Init 044B                          _Lcd_Port 02C6               I2C_Master_Read@temp 0074  
        __end_of_Lcd_Write_String 02C6         ?_I2C_Master_RepeatedStart 0070                     ??_RTC_display 007A  
                 _I2C_Master_Read 02E8                   _I2C_Master_Wait 0206                   _I2C_Master_Stop 01F3  
                        __ptext10 03AC                          __ptext11 044B                          __ptext20 0346  
                        __ptext12 0251                          __ptext21 04A8                          __ptext13 02C6  
                        __ptext14 01FC                          __ptext15 01F3                          __ptext16 01EA  
                        __ptext17 01E1                          __ptext18 02E8                          __ptext19 0206  
            decimal_to_bcd@number 0040          __end_of_I2C_Master_Start 01F3          __end_of_I2C_Master_Write 0206  
                        init_ram0 0217               __end_of_RTC_display 07E7                Lcd_Write_Char@temp 0072  
                ___lldiv@dividend 0074                        _OSCCONbits 008F                  ??_bcd_to_decimal 0074  
         __end_of_I2C_Master_Read 0316           __end_of_I2C_Master_Wait 0213           __end_of_I2C_Master_Stop 01FC  
              Lcd_Set_Cursor@temp 0079                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                     _SSPCON2bits 0091  
