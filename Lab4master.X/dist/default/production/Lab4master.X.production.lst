

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 03 18:31:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385                           
   386                           	psect	idataBANK0
   387     029C                     __pidataBANK0:
   388                           
   389                           ;initializer for RTC_display@Date
   390     029C  3444               	retlw	68
   391     029D  3441               	retlw	65
   392     029E  3454               	retlw	84
   393     029F  3445               	retlw	69
   394     02A0  343A               	retlw	58
   395     02A1  3420               	retlw	32
   396     02A2  3430               	retlw	48
   397     02A3  3430               	retlw	48
   398     02A4  342F               	retlw	47
   399     02A5  3430               	retlw	48
   400     02A6  3430               	retlw	48
   401     02A7  342F               	retlw	47
   402     02A8  3432               	retlw	50
   403     02A9  3430               	retlw	48
   404     02AA  3430               	retlw	48
   405     02AB  3430               	retlw	48
   406     02AC  3400               	retlw	0
   407                           
   408                           ;initializer for RTC_display@Time
   409     02AD  3454               	retlw	84
   410     02AE  3449               	retlw	73
   411     02AF  344D               	retlw	77
   412     02B0  3445               	retlw	69
   413     02B1  343A               	retlw	58
   414     02B2  3420               	retlw	32
   415     02B3  3430               	retlw	48
   416     02B4  3430               	retlw	48
   417     02B5  343A               	retlw	58
   418     02B6  3430               	retlw	48
   419     02B7  3430               	retlw	48
   420     02B8  343A               	retlw	58
   421     02B9  3430               	retlw	48
   422     02BA  3430               	retlw	48
   423     02BB  3400               	retlw	0
   424     0007                     _PORTCbits	set	7
   425     0008                     _PORTD	set	8
   426     0006                     _PORTB	set	6
   427     0013                     _SSPBUF	set	19
   428     0014                     _SSPCON	set	20
   429     003F                     _RC7	set	63
   430     0047                     _RD7	set	71
   431     0046                     _RD6	set	70
   432     0045                     _RD5	set	69
   433     0044                     _RD4	set	68
   434     0063                     _SSPIF	set	99
   435     005E                     _PEIE	set	94
   436     005F                     _GIE	set	95
   437     008F                     _OSCCONbits	set	143
   438     0088                     _TRISD	set	136
   439     0086                     _TRISB	set	134
   440     0091                     _SSPCON2bits	set	145
   441     0087                     _TRISCbits	set	135
   442     0094                     _SSPSTAT	set	148
   443     0093                     _SSPADD	set	147
   444     0091                     _SSPCON2	set	145
   445     043F                     _TRISC7	set	1087
   446     043E                     _TRISC6	set	1086
   447     0463                     _SSPIE	set	1123
   448     043C                     _TRISC4	set	1084
   449     043B                     _TRISC3	set	1083
   450     0189                     _ANSELH	set	393
   451     0188                     _ANSEL	set	392
   452                           
   453                           	psect	strings
   454     0003                     __pstrings:
   455     0003                     stringtab:
   456     0003                     __stringtab:
   457                           
   458                           ;	String table - string pointers are 1 byte each
   459     0003  1BFF               	btfsc	btemp+1,7
   460     0004  280D               	ljmp	stringcode
   461     0005  1383               	bcf	3,7
   462     0006  187F               	btfsc	btemp+1,0
   463     0007  1783               	bsf	3,7
   464     0008  0800               	movf	0,w
   465     0009  0A84               	incf	4,f
   466     000A  1903               	skipnz
   467     000B  0AFF               	incf	btemp+1,f
   468     000C  0008               	return
   469     000D                     stringcode:
   470     000D                     stringdir:
   471     000D  3000               	movlw	high stringdir
   472     000E  008A               	movwf	10
   473     000F  0804               	movf	4,w
   474     0010  0A84               	incf	4,f
   475     0011  0782               	addwf	2,f
   476     0012                     __stringbase:
   477     0012  3400               	retlw	0
   478     0013                     __end_of__stringtab:
   479     0013                     STR_1:
   480     0013  3470               	retlw	112	;'p'
   481     0014  3472               	retlw	114	;'r'
   482     0015  3475               	retlw	117	;'u'
   483     0016  3465               	retlw	101	;'e'
   484     0017  3462               	retlw	98	;'b'
   485     0018  3461               	retlw	97	;'a'
   486     0019  3400               	retlw	0
   487                           
   488                           	psect	cinit
   489     07E7                     start_initialization:	
   490                           ; #config settings
   491                           
   492     07E7                     __initialization:
   493                           
   494                           ; Initialize objects allocated to BANK0
   495     07E7  1383               	bcf	3,7	;select IRP bank0
   496     07E8  3040               	movlw	low (__pdataBANK0+32)
   497     07E9  00FD               	movwf	btemp+-1
   498     07EA  3002               	movlw	high __pidataBANK0
   499     07EB  00FE               	movwf	btemp
   500     07EC  309C               	movlw	low __pidataBANK0
   501     07ED  00FF               	movwf	btemp+1
   502     07EE  3020               	movlw	low __pdataBANK0
   503     07EF  0084               	movwf	4
   504     07F0  120A  118A  2248  120A  118A  	fcall	init_ram0
   505                           
   506                           ; Clear objects allocated to BANK0
   507     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   508     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   509     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   510     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   511     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   512     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   513     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   514     07FC                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517     07FC                     __end_of__initialization:
   518     07FC  0183               	clrf	3
   519     07FD  120A  118A  2DD7   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssBANK0
   522     004B                     __pbssBANK0:
   523     004B                     _year:
   524     004B                     	ds	1
   525     004C                     _month:
   526     004C                     	ds	1
   527     004D                     _m_day:
   528     004D                     	ds	1
   529     004E                     _hour:
   530     004E                     	ds	1
   531     004F                     _minute:
   532     004F                     	ds	1
   533     0050                     _second:
   534     0050                     	ds	1
   535     0051                     _i:
   536     0051                     	ds	1
   537                           
   538                           	psect	dataBANK0
   539     0020                     __pdataBANK0:
   540     0020                     RTC_display@Date:
   541     0020                     	ds	17
   542     0031                     RTC_display@Time:
   543     0031                     	ds	15
   544                           
   545                           	psect	inittext
   546     0244                     init_fetch0:	
   547                           ;	Called with low address in FSR and high address in W
   548                           
   549     0244  087E               	movf	btemp,w
   550     0245  008A               	movwf	10
   551     0246  087F               	movf	btemp+1,w
   552     0247  0082               	movwf	2
   553     0248                     init_ram0:	
   554                           ;Called with:
   555                           ;	high address of idata address in btemp 
   556                           ;	low address of idata address in btemp+1 
   557                           ;	low address of data in FSR
   558                           ;	high address + 1 of data in btemp-1
   559                           
   560     0248  120A  118A  2244  120A  118A  	fcall	init_fetch0
   561     024D  0080               	movwf	0
   562     024E  0A84               	incf	4,f
   563     024F  0804               	movf	4,w
   564     0250  067D               	xorwf	btemp+-1,w
   565     0251  1903               	btfsc	3,2
   566     0252  3400               	retlw	0
   567     0253  0AFF               	incf	btemp+1,f
   568     0254  1903               	btfsc	3,2
   569     0255  0AFE               	incf	btemp,f
   570     0256  2A48               	goto	init_ram0
   571                           
   572                           	psect	cstackCOMMON
   573     0070                     __pcstackCOMMON:
   574     0070                     ?_setup:
   575     0070                     ?_Lcd_Init:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_I2C_Master_Wait:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ??_I2C_Master_Wait:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_I2C_Master_Start:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ??_I2C_Master_Start:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_I2C_Master_RepeatedStart:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ??_I2C_Master_RepeatedStart:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_I2C_Master_Stop:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ??_I2C_Master_Stop:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_I2C_Master_Write:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?_bcd_to_decimal:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_decimal_to_bcd:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_RTC_display:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_main:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ?_Lcd_Port:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ??_Lcd_Port:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_Lcd_Cmd:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_Lcd_Write_Char:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?___bmul:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_I2C_Master_Read:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?___awdiv:	
   636                           ; 2 bytes @ 0x0
   637                           
   638     0070                     ?___awmod:	
   639                           ; 2 bytes @ 0x0
   640                           
   641     0070                     ?___lldiv:	
   642                           ; 2 bytes @ 0x0
   643                           
   644     0070                     Lcd_Port@a:	
   645                           ; 4 bytes @ 0x0
   646                           
   647     0070                     ___bmul@multiplicand:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     I2C_Master_Write@d:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     I2C_Master_Read@a:	
   654                           ; 2 bytes @ 0x0
   655                           
   656     0070                     ___awdiv@divisor:	
   657                           ; 2 bytes @ 0x0
   658                           
   659     0070                     ___awmod@divisor:	
   660                           ; 2 bytes @ 0x0
   661                           
   662     0070                     ___lldiv@divisor:	
   663                           ; 2 bytes @ 0x0
   664                           
   665                           
   666                           ; 4 bytes @ 0x0
   667     0070                     	ds	1
   668     0071                     ??_Lcd_Cmd:
   669     0071                     ??_Lcd_Write_Char:	
   670                           ; 1 bytes @ 0x1
   671                           
   672     0071                     ??___bmul:	
   673                           ; 1 bytes @ 0x1
   674                           
   675                           
   676                           ; 1 bytes @ 0x1
   677     0071                     	ds	1
   678     0072                     ??_I2C_Master_Write:
   679     0072                     ??_I2C_Master_Read:	
   680                           ; 1 bytes @ 0x2
   681                           
   682     0072                     Lcd_Write_Char@temp:	
   683                           ; 1 bytes @ 0x2
   684                           
   685     0072                     ___bmul@product:	
   686                           ; 1 bytes @ 0x2
   687                           
   688     0072                     ___awdiv@dividend:	
   689                           ; 1 bytes @ 0x2
   690                           
   691     0072                     ___awmod@dividend:	
   692                           ; 2 bytes @ 0x2
   693                           
   694                           
   695                           ; 2 bytes @ 0x2
   696     0072                     	ds	1
   697     0073                     Lcd_Cmd@a:
   698     0073                     Lcd_Write_Char@y:	
   699                           ; 1 bytes @ 0x3
   700                           
   701     0073                     ___bmul@multiplier:	
   702                           ; 1 bytes @ 0x3
   703                           
   704                           
   705                           ; 1 bytes @ 0x3
   706     0073                     	ds	1
   707     0074                     ?_Lcd_Set_Cursor:
   708     0074                     ??_Lcd_Init:	
   709                           ; 1 bytes @ 0x4
   710                           
   711     0074                     ??_bcd_to_decimal:	
   712                           ; 1 bytes @ 0x4
   713                           
   714     0074                     ??___awdiv:	
   715                           ; 1 bytes @ 0x4
   716                           
   717     0074                     ??___awmod:	
   718                           ; 1 bytes @ 0x4
   719                           
   720     0074                     Lcd_Set_Cursor@b:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0074                     Lcd_Write_Char@a:	
   724                           ; 1 bytes @ 0x4
   725                           
   726     0074                     I2C_Master_Read@temp:	
   727                           ; 1 bytes @ 0x4
   728                           
   729     0074                     ___lldiv@dividend:	
   730                           ; 2 bytes @ 0x4
   731                           
   732                           
   733                           ; 4 bytes @ 0x4
   734     0074                     	ds	1
   735     0075                     ??_Lcd_Set_Cursor:
   736     0075                     ?_Lcd_Write_String:	
   737                           ; 1 bytes @ 0x5
   738                           
   739     0075                     ___awdiv@counter:	
   740                           ; 1 bytes @ 0x5
   741                           
   742     0075                     ___awmod@counter:	
   743                           ; 1 bytes @ 0x5
   744                           
   745     0075                     Lcd_Write_String@a:	
   746                           ; 1 bytes @ 0x5
   747                           
   748                           
   749                           ; 2 bytes @ 0x5
   750     0075                     	ds	1
   751     0076                     bcd_to_decimal@number:
   752     0076                     Lcd_Set_Cursor@a:	
   753                           ; 1 bytes @ 0x6
   754                           
   755     0076                     ___awdiv@sign:	
   756                           ; 1 bytes @ 0x6
   757                           
   758     0076                     ___awmod@sign:	
   759                           ; 1 bytes @ 0x6
   760                           
   761                           
   762                           ; 1 bytes @ 0x6
   763     0076                     	ds	1
   764     0077                     ??_Lcd_Write_String:
   765     0077                     Lcd_Set_Cursor@z:	
   766                           ; 1 bytes @ 0x7
   767                           
   768     0077                     ___awdiv@quotient:	
   769                           ; 1 bytes @ 0x7
   770                           
   771                           
   772                           ; 2 bytes @ 0x7
   773     0077                     	ds	1
   774     0078                     ??___lldiv:
   775     0078                     Lcd_Set_Cursor@y:	
   776                           ; 1 bytes @ 0x8
   777                           
   778                           
   779                           ; 1 bytes @ 0x8
   780     0078                     	ds	1
   781     0079                     ??_decimal_to_bcd:
   782     0079                     Lcd_Set_Cursor@temp:	
   783                           ; 1 bytes @ 0x9
   784                           
   785     0079                     ___lldiv@quotient:	
   786                           ; 1 bytes @ 0x9
   787                           
   788                           
   789                           ; 4 bytes @ 0x9
   790     0079                     	ds	1
   791     007A                     Lcd_Write_String@i:
   792                           
   793                           ; 2 bytes @ 0xA
   794     007A                     	ds	2
   795     007C                     ??_RTC_display:
   796                           
   797                           ; 1 bytes @ 0xC
   798     007C                     	ds	1
   799     007D                     ___lldiv@counter:
   800                           
   801                           ; 1 bytes @ 0xD
   802     007D                     	ds	1
   803     007E                     ??_setup:
   804                           
   805                           	psect	cstackBANK0
   806     0040                     __pcstackBANK0:	
   807                           ; 1 bytes @ 0xE
   808                           
   809     0040                     ?_I2C_Master_Init:
   810     0040                     decimal_to_bcd@number:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0040                     I2C_Master_Init@c:	
   814                           ; 1 bytes @ 0x0
   815                           
   816                           
   817                           ; 4 bytes @ 0x0
   818     0040                     	ds	4
   819     0044                     ??_I2C_Master_Init:
   820                           
   821                           ; 1 bytes @ 0x4
   822     0044                     	ds	4
   823     0048                     ??_main:
   824                           
   825                           ; 1 bytes @ 0x8
   826     0048                     	ds	3
   827                           
   828                           	psect	maintext
   829     05D7                     __pmaintext:	
   830 ;;
   831 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   832 ;;
   833 ;; *************** function _main *****************
   834 ;; Defined at:
   835 ;;		line 90 in file "Lab4master.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : B00/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       3       0       0       0
   852 ;;      Totals:         0       3       0       0       0
   853 ;;Total ram usage:        3 bytes
   854 ;; Hardware stack levels required when called: 4
   855 ;; This function calls:
   856 ;;		_I2C_Master_Read
   857 ;;		_I2C_Master_RepeatedStart
   858 ;;		_I2C_Master_Start
   859 ;;		_I2C_Master_Stop
   860 ;;		_I2C_Master_Write
   861 ;;		_Lcd_Init
   862 ;;		_Lcd_Set_Cursor
   863 ;;		_Lcd_Write_String
   864 ;;		_RTC_display
   865 ;;		_decimal_to_bcd
   866 ;;		_setup
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872     05D7                     _main:	
   873                           ;psect for function _main
   874                           
   875     05D7                     l1372:	
   876                           ;incstack = 0
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878                           
   879                           
   880                           ;Lab4master.c: 91:     setup();
   881     05D7  120A  118A  22DE  120A  118A  	fcall	_setup
   882                           
   883                           ;Lab4master.c: 92:     Lcd_Init();
   884     05DC  120A  118A  24AD  120A  118A  	fcall	_Lcd_Init
   885                           
   886                           ;Lab4master.c: 93:     minute = decimal_to_bcd(1);
   887     05E1  3001               	movlw	1
   888     05E2  120A  118A  232F  120A  118A  	fcall	_decimal_to_bcd
   889     05E7  1283               	bcf	3,5	;RP0=0, select bank0
   890     05E8  1303               	bcf	3,6	;RP1=0, select bank0
   891     05E9  00CF               	movwf	_minute
   892                           
   893                           ;Lab4master.c: 94:     I2C_Master_Start();
   894     05EA  120A  118A  221B  120A  118A  	fcall	_I2C_Master_Start
   895                           
   896                           ;Lab4master.c: 95:         I2C_Master_Write(0xD0);
   897     05EF  30D0               	movlw	208
   898     05F0  00F0               	movwf	I2C_Master_Write@d
   899     05F1  3000               	movlw	0
   900     05F2  00F1               	movwf	I2C_Master_Write@d+1
   901     05F3  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   902                           
   903                           ;Lab4master.c: 96:         I2C_Master_Write(0x01);
   904     05F8  3001               	movlw	1
   905     05F9  00F0               	movwf	I2C_Master_Write@d
   906     05FA  3000               	movlw	0
   907     05FB  00F1               	movwf	I2C_Master_Write@d+1
   908     05FC  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   909                           
   910                           ;Lab4master.c: 97:         I2C_Master_Write(minute);
   911     0601  1283               	bcf	3,5	;RP0=0, select bank0
   912     0602  1303               	bcf	3,6	;RP1=0, select bank0
   913     0603  084F               	movf	_minute,w
   914     0604  00C8               	movwf	??_main
   915     0605  01C9               	clrf	??_main+1
   916     0606  0848               	movf	??_main,w
   917     0607  00F0               	movwf	I2C_Master_Write@d
   918     0608  0849               	movf	??_main+1,w
   919     0609  00F1               	movwf	I2C_Master_Write@d+1
   920     060A  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   921                           
   922                           ;Lab4master.c: 98:         I2C_Master_Stop();
   923     060F  120A  118A  2224  120A  118A  	fcall	_I2C_Master_Stop
   924     0614                     l1374:
   925                           
   926                           ;Lab4master.c: 99:         _delay((unsigned long)((200)*(8000000/4000.0)));
   927     0614  3003               	movlw	3
   928     0615  1283               	bcf	3,5	;RP0=0, select bank0
   929     0616  1303               	bcf	3,6	;RP1=0, select bank0
   930     0617  00CA               	movwf	??_main+2
   931     0618  3008               	movlw	8
   932     0619  00C9               	movwf	??_main+1
   933     061A  3076               	movlw	118
   934     061B  00C8               	movwf	??_main
   935     061C                     u937:
   936     061C  0BC8               	decfsz	??_main,f
   937     061D  2E1C               	goto	u937
   938     061E  0BC9               	decfsz	??_main+1,f
   939     061F  2E1C               	goto	u937
   940     0620  0BCA               	decfsz	??_main+2,f
   941     0621  2E1C               	goto	u937
   942     0622  0000               	nop
   943     0623                     l1376:
   944                           
   945                           ;Lab4master.c: 102:         I2C_Master_Start();
   946     0623  120A  118A  221B  120A  118A  	fcall	_I2C_Master_Start
   947     0628                     l1378:
   948                           
   949                           ;Lab4master.c: 103:         I2C_Master_Write(0xD0);
   950     0628  30D0               	movlw	208
   951     0629  00F0               	movwf	I2C_Master_Write@d
   952     062A  3000               	movlw	0
   953     062B  00F1               	movwf	I2C_Master_Write@d+1
   954     062C  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   955     0631                     l1380:
   956                           
   957                           ;Lab4master.c: 104:         I2C_Master_Write(0x00);
   958     0631  3000               	movlw	0
   959     0632  00F0               	movwf	I2C_Master_Write@d
   960     0633  00F1               	movwf	I2C_Master_Write@d+1
   961     0634  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   962     0639                     l1382:
   963                           
   964                           ;Lab4master.c: 105:        I2C_Master_RepeatedStart();
   965     0639  120A  118A  2212  120A  118A  	fcall	_I2C_Master_RepeatedStart
   966     063E                     l1384:
   967                           
   968                           ;Lab4master.c: 106:          I2C_Master_Write(0xD1);
   969     063E  30D1               	movlw	209
   970     063F  00F0               	movwf	I2C_Master_Write@d
   971     0640  3000               	movlw	0
   972     0641  00F1               	movwf	I2C_Master_Write@d+1
   973     0642  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   974     0647                     l1386:
   975                           
   976                           ;Lab4master.c: 107:          I2C_Master_Write(0x00);
   977     0647  3000               	movlw	0
   978     0648  00F0               	movwf	I2C_Master_Write@d
   979     0649  00F1               	movwf	I2C_Master_Write@d+1
   980     064A  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
   981     064F                     l1388:
   982                           
   983                           ;Lab4master.c: 108:        second = I2C_Master_Read(1);
   984     064F  3001               	movlw	1
   985     0650  00F0               	movwf	I2C_Master_Read@a
   986     0651  3000               	movlw	0
   987     0652  00F1               	movwf	I2C_Master_Read@a+1
   988     0653  120A  118A  2301  120A  118A  	fcall	_I2C_Master_Read
   989     0658  0870               	movf	?_I2C_Master_Read,w
   990     0659  1283               	bcf	3,5	;RP0=0, select bank0
   991     065A  1303               	bcf	3,6	;RP1=0, select bank0
   992     065B  00D0               	movwf	_second
   993     065C                     l1390:
   994                           
   995                           ;Lab4master.c: 109:         I2C_Master_RepeatedStart();
   996     065C  120A  118A  2212  120A  118A  	fcall	_I2C_Master_RepeatedStart
   997     0661                     l1392:
   998                           
   999                           ;Lab4master.c: 110:        I2C_Master_Write(0xD1);
  1000     0661  30D1               	movlw	209
  1001     0662  00F0               	movwf	I2C_Master_Write@d
  1002     0663  3000               	movlw	0
  1003     0664  00F1               	movwf	I2C_Master_Write@d+1
  1004     0665  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
  1005     066A                     l1394:
  1006                           
  1007                           ;Lab4master.c: 111:        I2C_Master_Write(0x01);
  1008     066A  3001               	movlw	1
  1009     066B  00F0               	movwf	I2C_Master_Write@d
  1010     066C  3000               	movlw	0
  1011     066D  00F1               	movwf	I2C_Master_Write@d+1
  1012     066E  120A  118A  222D  120A  118A  	fcall	_I2C_Master_Write
  1013     0673                     l1396:
  1014                           
  1015                           ;Lab4master.c: 113:         I2C_Master_Stop();
  1016     0673  120A  118A  2224  120A  118A  	fcall	_I2C_Master_Stop
  1017                           
  1018                           ;Lab4master.c: 114:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1019     0678  3003               	movlw	3
  1020     0679  1283               	bcf	3,5	;RP0=0, select bank0
  1021     067A  1303               	bcf	3,6	;RP1=0, select bank0
  1022     067B  00CA               	movwf	??_main+2
  1023     067C  3008               	movlw	8
  1024     067D  00C9               	movwf	??_main+1
  1025     067E  3076               	movlw	118
  1026     067F  00C8               	movwf	??_main
  1027     0680                     u947:
  1028     0680  0BC8               	decfsz	??_main,f
  1029     0681  2E80               	goto	u947
  1030     0682  0BC9               	decfsz	??_main+1,f
  1031     0683  2E80               	goto	u947
  1032     0684  0BCA               	decfsz	??_main+2,f
  1033     0685  2E80               	goto	u947
  1034     0686  0000               	nop
  1035     0687                     l1398:
  1036                           
  1037                           ;Lab4master.c: 116:         RTC_display();
  1038     0687  120A  118A  26A1  120A  118A  	fcall	_RTC_display
  1039     068C                     l1400:
  1040                           
  1041                           ;Lab4master.c: 118:        Lcd_Set_Cursor(2,8);
  1042     068C  3008               	movlw	8
  1043     068D  00F4               	movwf	Lcd_Set_Cursor@b
  1044     068E  3002               	movlw	2
  1045     068F  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
  1046     0694                     l1402:
  1047                           
  1048                           ;Lab4master.c: 120:   Lcd_Write_String("prueba");
  1049     0694  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1050     0695  00F5               	movwf	Lcd_Write_String@a
  1051     0696  3080               	movlw	128
  1052     0697  00F6               	movwf	Lcd_Write_String@a+1
  1053     0698  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String
  1054     069D  2E23               	goto	l1376
  1055     069E  120A  118A  2800   	ljmp	start
  1056     06A1                     __end_of_main:
  1057                           
  1058                           	psect	text1
  1059     02DE                     __ptext1:	
  1060 ;; *************** function _setup *****************
  1061 ;; Defined at:
  1062 ;;		line 127 in file "Lab4master.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       0       0       0       0
  1079 ;;      Totals:         0       0       0       0       0
  1080 ;;Total ram usage:        0 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 2
  1083 ;; This function calls:
  1084 ;;		_I2C_Master_Init
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090     02DE                     _setup:	
  1091                           ;psect for function _setup
  1092                           
  1093     02DE                     l1350:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1096                           
  1097                           
  1098                           ;Lab4master.c: 128:     ANSEL = 0;
  1099     02DE  1683               	bsf	3,5	;RP0=1, select bank3
  1100     02DF  1703               	bsf	3,6	;RP1=1, select bank3
  1101     02E0  0188               	clrf	8	;volatile
  1102                           
  1103                           ;Lab4master.c: 129:     ANSELH = 0;
  1104     02E1  0189               	clrf	9	;volatile
  1105                           
  1106                           ;Lab4master.c: 130:     TRISB = 0;
  1107     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  1108     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  1109     02E4  0186               	clrf	6	;volatile
  1110     02E5                     l1352:
  1111                           
  1112                           ;Lab4master.c: 131:     TRISC6 = 0;
  1113     02E5  1307               	bcf	7,6	;volatile
  1114     02E6                     l1354:
  1115                           
  1116                           ;Lab4master.c: 132:     TRISC7 = 0;
  1117     02E6  1387               	bcf	7,7	;volatile
  1118                           
  1119                           ;Lab4master.c: 133:     TRISD = 0;
  1120     02E7  0188               	clrf	8	;volatile
  1121                           
  1122                           ;Lab4master.c: 134:     PORTB = 0;
  1123     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1124     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1125     02EA  0186               	clrf	6	;volatile
  1126                           
  1127                           ;Lab4master.c: 135:     PORTD = 0;
  1128     02EB  0188               	clrf	8	;volatile
  1129     02EC                     l1356:
  1130                           
  1131                           ;Lab4master.c: 137:     OSCCONbits.IRCF = 0b0111;
  1132     02EC  3070               	movlw	112
  1133     02ED  1683               	bsf	3,5	;RP0=1, select bank1
  1134     02EE  1303               	bcf	3,6	;RP1=0, select bank1
  1135     02EF  048F               	iorwf	15,f	;volatile
  1136     02F0                     l1358:
  1137                           
  1138                           ;Lab4master.c: 138:     OSCCONbits.SCS = 1;
  1139     02F0  140F               	bsf	15,0	;volatile
  1140     02F1                     l1360:
  1141                           
  1142                           ;Lab4master.c: 139:     I2C_Master_Init(100000);
  1143     02F1  3000               	movlw	0
  1144     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1145     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1146     02F4  00C3               	movwf	I2C_Master_Init@c+3
  1147     02F5  3001               	movlw	1
  1148     02F6  00C2               	movwf	I2C_Master_Init@c+2
  1149     02F7  3086               	movlw	134
  1150     02F8  00C1               	movwf	I2C_Master_Init@c+1
  1151     02F9  30A0               	movlw	160
  1152     02FA  00C0               	movwf	I2C_Master_Init@c
  1153     02FB  120A  118A  2394  120A  118A  	fcall	_I2C_Master_Init
  1154     0300                     l133:
  1155     0300  0008               	return
  1156     0301                     __end_of_setup:
  1157                           
  1158                           	psect	text2
  1159     0394                     __ptext2:	
  1160 ;; *************** function _I2C_Master_Init *****************
  1161 ;; Defined at:
  1162 ;;		line 16 in file "I2C.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  c               4    0[BANK0 ] const unsigned long 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       4       0       0       0
  1177 ;;      Locals:         0       0       0       0       0
  1178 ;;      Temps:          0       4       0       0       0
  1179 ;;      Totals:         0       8       0       0       0
  1180 ;;Total ram usage:        8 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 1
  1183 ;; This function calls:
  1184 ;;		___lldiv
  1185 ;; This function is called by:
  1186 ;;		_setup
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190     0394                     _I2C_Master_Init:	
  1191                           ;psect for function _I2C_Master_Init
  1192                           
  1193     0394                     l1180:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1196                           
  1197                           
  1198                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1199     0394  3028               	movlw	40
  1200     0395  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0396  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0397  0094               	movwf	20	;volatile
  1203     0398                     l1182:
  1204                           
  1205                           ;I2C.c: 19:     SSPCON2 = 0;
  1206     0398  1683               	bsf	3,5	;RP0=1, select bank1
  1207     0399  1303               	bcf	3,6	;RP1=0, select bank1
  1208     039A  0191               	clrf	17	;volatile
  1209     039B                     l1184:
  1210                           
  1211                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1212     039B  1283               	bcf	3,5	;RP0=0, select bank0
  1213     039C  1303               	bcf	3,6	;RP1=0, select bank0
  1214     039D  0840               	movf	I2C_Master_Init@c,w
  1215     039E  00C4               	movwf	??_I2C_Master_Init
  1216     039F  0841               	movf	I2C_Master_Init@c+1,w
  1217     03A0  00C5               	movwf	??_I2C_Master_Init+1
  1218     03A1  0842               	movf	I2C_Master_Init@c+2,w
  1219     03A2  00C6               	movwf	??_I2C_Master_Init+2
  1220     03A3  0843               	movf	I2C_Master_Init@c+3,w
  1221     03A4  00C7               	movwf	??_I2C_Master_Init+3
  1222     03A5  3002               	movlw	2
  1223     03A6                     u615:
  1224     03A6  1003               	clrc
  1225     03A7  0DC4               	rlf	??_I2C_Master_Init,f
  1226     03A8  0DC5               	rlf	??_I2C_Master_Init+1,f
  1227     03A9  0DC6               	rlf	??_I2C_Master_Init+2,f
  1228     03AA  0DC7               	rlf	??_I2C_Master_Init+3,f
  1229     03AB                     u610:
  1230     03AB  3EFF               	addlw	-1
  1231     03AC  1D03               	skipz
  1232     03AD  2BA6               	goto	u615
  1233     03AE  0847               	movf	??_I2C_Master_Init+3,w
  1234     03AF  00F3               	movwf	___lldiv@divisor+3
  1235     03B0  0846               	movf	??_I2C_Master_Init+2,w
  1236     03B1  00F2               	movwf	___lldiv@divisor+2
  1237     03B2  0845               	movf	??_I2C_Master_Init+1,w
  1238     03B3  00F1               	movwf	___lldiv@divisor+1
  1239     03B4  0844               	movf	??_I2C_Master_Init,w
  1240     03B5  00F0               	movwf	___lldiv@divisor
  1241     03B6  3000               	movlw	0
  1242     03B7  00F7               	movwf	___lldiv@dividend+3
  1243     03B8  307A               	movlw	122
  1244     03B9  00F6               	movwf	___lldiv@dividend+2
  1245     03BA  3012               	movlw	18
  1246     03BB  00F5               	movwf	___lldiv@dividend+1
  1247     03BC  3000               	movlw	0
  1248     03BD  00F4               	movwf	___lldiv@dividend
  1249     03BE  120A  118A  250A  120A  118A  	fcall	___lldiv
  1250     03C3  0870               	movf	?___lldiv,w
  1251     03C4  3EFF               	addlw	255
  1252     03C5  1683               	bsf	3,5	;RP0=1, select bank1
  1253     03C6  1303               	bcf	3,6	;RP1=0, select bank1
  1254     03C7  0093               	movwf	19	;volatile
  1255     03C8                     l1186:
  1256                           
  1257                           ;I2C.c: 21:     SSPSTAT = 0;
  1258     03C8  0194               	clrf	20	;volatile
  1259     03C9                     l1188:
  1260                           
  1261                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1262     03C9  1587               	bsf	7,3	;volatile
  1263     03CA                     l1190:
  1264                           
  1265                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1266     03CA  1607               	bsf	7,4	;volatile
  1267     03CB                     l29:
  1268     03CB  0008               	return
  1269     03CC                     __end_of_I2C_Master_Init:
  1270                           
  1271                           	psect	text3
  1272     050A                     __ptext3:	
  1273 ;; *************** function ___lldiv *****************
  1274 ;; Defined at:
  1275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;  divisor         4    0[COMMON] unsigned long 
  1278 ;;  dividend        4    4[COMMON] unsigned long 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  quotient        4    9[COMMON] unsigned long 
  1281 ;;  counter         1   13[COMMON] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  4    0[COMMON] unsigned long 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1291 ;;      Params:         8       0       0       0       0
  1292 ;;      Locals:         5       0       0       0       0
  1293 ;;      Temps:          1       0       0       0       0
  1294 ;;      Totals:        14       0       0       0       0
  1295 ;;Total ram usage:       14 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_I2C_Master_Init
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304     050A                     ___lldiv:	
  1305                           ;psect for function ___lldiv
  1306                           
  1307     050A                     l1156:	
  1308                           ;incstack = 0
  1309                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1310                           
  1311     050A  3000               	movlw	0
  1312     050B  00FC               	movwf	___lldiv@quotient+3
  1313     050C  3000               	movlw	0
  1314     050D  00FB               	movwf	___lldiv@quotient+2
  1315     050E  3000               	movlw	0
  1316     050F  00FA               	movwf	___lldiv@quotient+1
  1317     0510  3000               	movlw	0
  1318     0511  00F9               	movwf	___lldiv@quotient
  1319     0512  0873               	movf	___lldiv@divisor+3,w
  1320     0513  0472               	iorwf	___lldiv@divisor+2,w
  1321     0514  0471               	iorwf	___lldiv@divisor+1,w
  1322     0515  0470               	iorwf	___lldiv@divisor,w
  1323     0516  1903               	skipnz
  1324     0517  2D19               	goto	u541
  1325     0518  2D1A               	goto	u540
  1326     0519                     u541:
  1327     0519  2D67               	goto	l1176
  1328     051A                     u540:
  1329     051A                     l1158:
  1330     051A  01FD               	clrf	___lldiv@counter
  1331     051B  0AFD               	incf	___lldiv@counter,f
  1332     051C  2D2A               	goto	l1162
  1333     051D                     l1160:
  1334     051D  3001               	movlw	1
  1335     051E  00F8               	movwf	??___lldiv
  1336     051F                     u555:
  1337     051F  1003               	clrc
  1338     0520  0DF0               	rlf	___lldiv@divisor,f
  1339     0521  0DF1               	rlf	___lldiv@divisor+1,f
  1340     0522  0DF2               	rlf	___lldiv@divisor+2,f
  1341     0523  0DF3               	rlf	___lldiv@divisor+3,f
  1342     0524  0BF8               	decfsz	??___lldiv,f
  1343     0525  2D1F               	goto	u555
  1344     0526  3001               	movlw	1
  1345     0527  00F8               	movwf	??___lldiv
  1346     0528  0878               	movf	??___lldiv,w
  1347     0529  07FD               	addwf	___lldiv@counter,f
  1348     052A                     l1162:
  1349     052A  1FF3               	btfss	___lldiv@divisor+3,7
  1350     052B  2D2D               	goto	u561
  1351     052C  2D2E               	goto	u560
  1352     052D                     u561:
  1353     052D  2D1D               	goto	l1160
  1354     052E                     u560:
  1355     052E                     l1164:
  1356     052E  3001               	movlw	1
  1357     052F  00F8               	movwf	??___lldiv
  1358     0530                     u575:
  1359     0530  1003               	clrc
  1360     0531  0DF9               	rlf	___lldiv@quotient,f
  1361     0532  0DFA               	rlf	___lldiv@quotient+1,f
  1362     0533  0DFB               	rlf	___lldiv@quotient+2,f
  1363     0534  0DFC               	rlf	___lldiv@quotient+3,f
  1364     0535  0BF8               	decfsz	??___lldiv,f
  1365     0536  2D30               	goto	u575
  1366     0537                     l1166:
  1367     0537  0873               	movf	___lldiv@divisor+3,w
  1368     0538  0277               	subwf	___lldiv@dividend+3,w
  1369     0539  1D03               	skipz
  1370     053A  2D45               	goto	u585
  1371     053B  0872               	movf	___lldiv@divisor+2,w
  1372     053C  0276               	subwf	___lldiv@dividend+2,w
  1373     053D  1D03               	skipz
  1374     053E  2D45               	goto	u585
  1375     053F  0871               	movf	___lldiv@divisor+1,w
  1376     0540  0275               	subwf	___lldiv@dividend+1,w
  1377     0541  1D03               	skipz
  1378     0542  2D45               	goto	u585
  1379     0543  0870               	movf	___lldiv@divisor,w
  1380     0544  0274               	subwf	___lldiv@dividend,w
  1381     0545                     u585:
  1382     0545  1C03               	skipc
  1383     0546  2D48               	goto	u581
  1384     0547  2D49               	goto	u580
  1385     0548                     u581:
  1386     0548  2D58               	goto	l1172
  1387     0549                     u580:
  1388     0549                     l1168:
  1389     0549  0870               	movf	___lldiv@divisor,w
  1390     054A  02F4               	subwf	___lldiv@dividend,f
  1391     054B  0871               	movf	___lldiv@divisor+1,w
  1392     054C  1C03               	skipc
  1393     054D  0F71               	incfsz	___lldiv@divisor+1,w
  1394     054E  02F5               	subwf	___lldiv@dividend+1,f
  1395     054F  0872               	movf	___lldiv@divisor+2,w
  1396     0550  1C03               	skipc
  1397     0551  0F72               	incfsz	___lldiv@divisor+2,w
  1398     0552  02F6               	subwf	___lldiv@dividend+2,f
  1399     0553  0873               	movf	___lldiv@divisor+3,w
  1400     0554  1C03               	skipc
  1401     0555  0F73               	incfsz	___lldiv@divisor+3,w
  1402     0556  02F7               	subwf	___lldiv@dividend+3,f
  1403     0557                     l1170:
  1404     0557  1479               	bsf	___lldiv@quotient,0
  1405     0558                     l1172:
  1406     0558  3001               	movlw	1
  1407     0559                     u595:
  1408     0559  1003               	clrc
  1409     055A  0CF3               	rrf	___lldiv@divisor+3,f
  1410     055B  0CF2               	rrf	___lldiv@divisor+2,f
  1411     055C  0CF1               	rrf	___lldiv@divisor+1,f
  1412     055D  0CF0               	rrf	___lldiv@divisor,f
  1413     055E  3EFF               	addlw	-1
  1414     055F  1D03               	skipz
  1415     0560  2D59               	goto	u595
  1416     0561                     l1174:
  1417     0561  3001               	movlw	1
  1418     0562  02FD               	subwf	___lldiv@counter,f
  1419     0563  1D03               	btfss	3,2
  1420     0564  2D66               	goto	u601
  1421     0565  2D67               	goto	u600
  1422     0566                     u601:
  1423     0566  2D2E               	goto	l1164
  1424     0567                     u600:
  1425     0567                     l1176:
  1426     0567  087C               	movf	___lldiv@quotient+3,w
  1427     0568  00F3               	movwf	?___lldiv+3
  1428     0569  087B               	movf	___lldiv@quotient+2,w
  1429     056A  00F2               	movwf	?___lldiv+2
  1430     056B  087A               	movf	___lldiv@quotient+1,w
  1431     056C  00F1               	movwf	?___lldiv+1
  1432     056D  0879               	movf	___lldiv@quotient,w
  1433     056E  00F0               	movwf	?___lldiv
  1434     056F                     l310:
  1435     056F  0008               	return
  1436     0570                     __end_of___lldiv:
  1437                           
  1438                           	psect	text4
  1439     032F                     __ptext4:	
  1440 ;; *************** function _decimal_to_bcd *****************
  1441 ;; Defined at:
  1442 ;;		line 50 in file "Lab4master.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  number          1    wreg     unsigned char 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  number          1    0[BANK0 ] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      unsigned char 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       1       0       0       0
  1458 ;;      Temps:          5       0       0       0       0
  1459 ;;      Totals:         5       1       0       0       0
  1460 ;;Total ram usage:        6 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 1
  1463 ;; This function calls:
  1464 ;;		___awdiv
  1465 ;;		___awmod
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471     032F                     _decimal_to_bcd:	
  1472                           ;psect for function _decimal_to_bcd
  1473                           
  1474                           
  1475                           ;incstack = 0
  1476                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1477                           ;decimal_to_bcd@number stored from wreg
  1478     032F  1283               	bcf	3,5	;RP0=0, select bank0
  1479     0330  1303               	bcf	3,6	;RP1=0, select bank0
  1480     0331  00C0               	movwf	decimal_to_bcd@number
  1481     0332                     l1342:
  1482                           
  1483                           ;Lab4master.c: 51:   return(((number / 10) << 4) + (number % 10));
  1484     0332  300A               	movlw	10
  1485     0333  00F0               	movwf	___awdiv@divisor
  1486     0334  3000               	movlw	0
  1487     0335  00F1               	movwf	___awdiv@divisor+1
  1488     0336  0840               	movf	decimal_to_bcd@number,w
  1489     0337  00F9               	movwf	??_decimal_to_bcd
  1490     0338  01FA               	clrf	??_decimal_to_bcd+1
  1491     0339  0879               	movf	??_decimal_to_bcd,w
  1492     033A  00F2               	movwf	___awdiv@dividend
  1493     033B  087A               	movf	??_decimal_to_bcd+1,w
  1494     033C  00F3               	movwf	___awdiv@dividend+1
  1495     033D  120A  118A  2570  120A  118A  	fcall	___awdiv
  1496     0342  0870               	movf	?___awdiv,w
  1497     0343  00FB               	movwf	??_decimal_to_bcd+2
  1498     0344  3004               	movlw	4
  1499     0345                     u925:
  1500     0345  1003               	clrc
  1501     0346  0DFB               	rlf	??_decimal_to_bcd+2,f
  1502     0347  3EFF               	addlw	-1
  1503     0348  1D03               	skipz
  1504     0349  2B45               	goto	u925
  1505     034A  300A               	movlw	10
  1506     034B  00F0               	movwf	___awmod@divisor
  1507     034C  3000               	movlw	0
  1508     034D  00F1               	movwf	___awmod@divisor+1
  1509     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1510     034F  1303               	bcf	3,6	;RP1=0, select bank0
  1511     0350  0840               	movf	decimal_to_bcd@number,w
  1512     0351  00FC               	movwf	??_decimal_to_bcd+3
  1513     0352  01FD               	clrf	??_decimal_to_bcd+4
  1514     0353  087C               	movf	??_decimal_to_bcd+3,w
  1515     0354  00F2               	movwf	___awmod@dividend
  1516     0355  087D               	movf	??_decimal_to_bcd+4,w
  1517     0356  00F3               	movwf	___awmod@dividend+1
  1518     0357  120A  118A  2454  120A  118A  	fcall	___awmod
  1519     035C  0870               	movf	?___awmod,w
  1520     035D  077B               	addwf	??_decimal_to_bcd+2,w
  1521     035E                     l115:
  1522     035E  0008               	return
  1523     035F                     __end_of_decimal_to_bcd:
  1524                           
  1525                           	psect	text5
  1526     06A1                     __ptext5:	
  1527 ;; *************** function _RTC_display *****************
  1528 ;; Defined at:
  1529 ;;		line 53 in file "Lab4master.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0
  1545 ;;      Temps:          2       0       0       0       0
  1546 ;;      Totals:         2       0       0       0       0
  1547 ;;Total ram usage:        2 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 3
  1550 ;; This function calls:
  1551 ;;		_Lcd_Set_Cursor
  1552 ;;		_Lcd_Write_String
  1553 ;;		___awdiv
  1554 ;;		___awmod
  1555 ;;		_bcd_to_decimal
  1556 ;; This function is called by:
  1557 ;;		_main
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     06A1                     _RTC_display:	
  1562                           ;psect for function _RTC_display
  1563                           
  1564     06A1                     l1346:	
  1565                           ;incstack = 0
  1566                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1567                           
  1568                           
  1569                           ;Lab4master.c: 55:   static char Time[] = "TIME: 00:00:00";;Lab4master.c: 56:   static c
      +                          har Date[] = "DATE: 00/00/2000";;Lab4master.c: 59:   second = bcd_to_decimal(second);
  1570     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1571     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1572     06A3  0850               	movf	_second,w
  1573     06A4  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1574     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1575     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1576     06AB  00D0               	movwf	_second
  1577                           
  1578                           ;Lab4master.c: 60:   minute = bcd_to_decimal(minute);
  1579     06AC  084F               	movf	_minute,w
  1580     06AD  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1581     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1582     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1583     06B4  00CF               	movwf	_minute
  1584                           
  1585                           ;Lab4master.c: 61:   hour = bcd_to_decimal(hour);
  1586     06B5  084E               	movf	_hour,w
  1587     06B6  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1588     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1589     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1590     06BD  00CE               	movwf	_hour
  1591                           
  1592                           ;Lab4master.c: 62:   m_day = bcd_to_decimal(m_day);
  1593     06BE  084D               	movf	_m_day,w
  1594     06BF  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1595     06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1596     06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1597     06C6  00CD               	movwf	_m_day
  1598                           
  1599                           ;Lab4master.c: 63:   month = bcd_to_decimal(month);
  1600     06C7  084C               	movf	_month,w
  1601     06C8  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1602     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  1603     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  1604     06CF  00CC               	movwf	_month
  1605                           
  1606                           ;Lab4master.c: 64:   year = bcd_to_decimal(year);
  1607     06D0  084B               	movf	_year,w
  1608     06D1  120A  118A  226C  120A  118A  	fcall	_bcd_to_decimal
  1609     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1610     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1611     06D8  00CB               	movwf	_year
  1612                           
  1613                           ;Lab4master.c: 68:   Time[6] = hour / 10 + '0';
  1614     06D9  300A               	movlw	10
  1615     06DA  00F0               	movwf	___awdiv@divisor
  1616     06DB  3000               	movlw	0
  1617     06DC  00F1               	movwf	___awdiv@divisor+1
  1618     06DD  084E               	movf	_hour,w
  1619     06DE  00FC               	movwf	??_RTC_display
  1620     06DF  01FD               	clrf	??_RTC_display+1
  1621     06E0  087C               	movf	??_RTC_display,w
  1622     06E1  00F2               	movwf	___awdiv@dividend
  1623     06E2  087D               	movf	??_RTC_display+1,w
  1624     06E3  00F3               	movwf	___awdiv@dividend+1
  1625     06E4  120A  118A  2570  120A  118A  	fcall	___awdiv
  1626     06E9  0870               	movf	?___awdiv,w
  1627     06EA  3E30               	addlw	48
  1628     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1629     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1630     06ED  00B7               	movwf	RTC_display@Time+6
  1631                           
  1632                           ;Lab4master.c: 69:   Time[7] = hour % 10 + '0';
  1633     06EE  300A               	movlw	10
  1634     06EF  00F0               	movwf	___awmod@divisor
  1635     06F0  3000               	movlw	0
  1636     06F1  00F1               	movwf	___awmod@divisor+1
  1637     06F2  084E               	movf	_hour,w
  1638     06F3  00FC               	movwf	??_RTC_display
  1639     06F4  01FD               	clrf	??_RTC_display+1
  1640     06F5  087C               	movf	??_RTC_display,w
  1641     06F6  00F2               	movwf	___awmod@dividend
  1642     06F7  087D               	movf	??_RTC_display+1,w
  1643     06F8  00F3               	movwf	___awmod@dividend+1
  1644     06F9  120A  118A  2454  120A  118A  	fcall	___awmod
  1645     06FE  0870               	movf	?___awmod,w
  1646     06FF  3E30               	addlw	48
  1647     0700  1283               	bcf	3,5	;RP0=0, select bank0
  1648     0701  1303               	bcf	3,6	;RP1=0, select bank0
  1649     0702  00B8               	movwf	RTC_display@Time+7
  1650                           
  1651                           ;Lab4master.c: 70:   Time[9] = minute / 10 + '0';
  1652     0703  300A               	movlw	10
  1653     0704  00F0               	movwf	___awdiv@divisor
  1654     0705  3000               	movlw	0
  1655     0706  00F1               	movwf	___awdiv@divisor+1
  1656     0707  084F               	movf	_minute,w
  1657     0708  00FC               	movwf	??_RTC_display
  1658     0709  01FD               	clrf	??_RTC_display+1
  1659     070A  087C               	movf	??_RTC_display,w
  1660     070B  00F2               	movwf	___awdiv@dividend
  1661     070C  087D               	movf	??_RTC_display+1,w
  1662     070D  00F3               	movwf	___awdiv@dividend+1
  1663     070E  120A  118A  2570  120A  118A  	fcall	___awdiv
  1664     0713  0870               	movf	?___awdiv,w
  1665     0714  3E30               	addlw	48
  1666     0715  1283               	bcf	3,5	;RP0=0, select bank0
  1667     0716  1303               	bcf	3,6	;RP1=0, select bank0
  1668     0717  00BA               	movwf	RTC_display@Time+9
  1669                           
  1670                           ;Lab4master.c: 71:   Time[10] = minute % 10 + '0';
  1671     0718  300A               	movlw	10
  1672     0719  00F0               	movwf	___awmod@divisor
  1673     071A  3000               	movlw	0
  1674     071B  00F1               	movwf	___awmod@divisor+1
  1675     071C  084F               	movf	_minute,w
  1676     071D  00FC               	movwf	??_RTC_display
  1677     071E  01FD               	clrf	??_RTC_display+1
  1678     071F  087C               	movf	??_RTC_display,w
  1679     0720  00F2               	movwf	___awmod@dividend
  1680     0721  087D               	movf	??_RTC_display+1,w
  1681     0722  00F3               	movwf	___awmod@dividend+1
  1682     0723  120A  118A  2454  120A  118A  	fcall	___awmod
  1683     0728  0870               	movf	?___awmod,w
  1684     0729  3E30               	addlw	48
  1685     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1686     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1687     072C  00BB               	movwf	RTC_display@Time+10
  1688                           
  1689                           ;Lab4master.c: 72:   Time[12] = second / 10 + '0';
  1690     072D  300A               	movlw	10
  1691     072E  00F0               	movwf	___awdiv@divisor
  1692     072F  3000               	movlw	0
  1693     0730  00F1               	movwf	___awdiv@divisor+1
  1694     0731  0850               	movf	_second,w
  1695     0732  00FC               	movwf	??_RTC_display
  1696     0733  01FD               	clrf	??_RTC_display+1
  1697     0734  087C               	movf	??_RTC_display,w
  1698     0735  00F2               	movwf	___awdiv@dividend
  1699     0736  087D               	movf	??_RTC_display+1,w
  1700     0737  00F3               	movwf	___awdiv@dividend+1
  1701     0738  120A  118A  2570  120A  118A  	fcall	___awdiv
  1702     073D  0870               	movf	?___awdiv,w
  1703     073E  3E30               	addlw	48
  1704     073F  1283               	bcf	3,5	;RP0=0, select bank0
  1705     0740  1303               	bcf	3,6	;RP1=0, select bank0
  1706     0741  00BD               	movwf	RTC_display@Time+12
  1707                           
  1708                           ;Lab4master.c: 73:   Time[13] = second % 10 + '0';
  1709     0742  300A               	movlw	10
  1710     0743  00F0               	movwf	___awmod@divisor
  1711     0744  3000               	movlw	0
  1712     0745  00F1               	movwf	___awmod@divisor+1
  1713     0746  0850               	movf	_second,w
  1714     0747  00FC               	movwf	??_RTC_display
  1715     0748  01FD               	clrf	??_RTC_display+1
  1716     0749  087C               	movf	??_RTC_display,w
  1717     074A  00F2               	movwf	___awmod@dividend
  1718     074B  087D               	movf	??_RTC_display+1,w
  1719     074C  00F3               	movwf	___awmod@dividend+1
  1720     074D  120A  118A  2454  120A  118A  	fcall	___awmod
  1721     0752  0870               	movf	?___awmod,w
  1722     0753  3E30               	addlw	48
  1723     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1724     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1725     0756  00BE               	movwf	RTC_display@Time+13
  1726                           
  1727                           ;Lab4master.c: 75:   Date[6] = m_day / 10 + '0';
  1728     0757  300A               	movlw	10
  1729     0758  00F0               	movwf	___awdiv@divisor
  1730     0759  3000               	movlw	0
  1731     075A  00F1               	movwf	___awdiv@divisor+1
  1732     075B  084D               	movf	_m_day,w
  1733     075C  00FC               	movwf	??_RTC_display
  1734     075D  01FD               	clrf	??_RTC_display+1
  1735     075E  087C               	movf	??_RTC_display,w
  1736     075F  00F2               	movwf	___awdiv@dividend
  1737     0760  087D               	movf	??_RTC_display+1,w
  1738     0761  00F3               	movwf	___awdiv@dividend+1
  1739     0762  120A  118A  2570  120A  118A  	fcall	___awdiv
  1740     0767  0870               	movf	?___awdiv,w
  1741     0768  3E30               	addlw	48
  1742     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1743     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1744     076B  00A6               	movwf	RTC_display@Date+6
  1745                           
  1746                           ;Lab4master.c: 76:   Date[7] = m_day % 10 + '0';
  1747     076C  300A               	movlw	10
  1748     076D  00F0               	movwf	___awmod@divisor
  1749     076E  3000               	movlw	0
  1750     076F  00F1               	movwf	___awmod@divisor+1
  1751     0770  084D               	movf	_m_day,w
  1752     0771  00FC               	movwf	??_RTC_display
  1753     0772  01FD               	clrf	??_RTC_display+1
  1754     0773  087C               	movf	??_RTC_display,w
  1755     0774  00F2               	movwf	___awmod@dividend
  1756     0775  087D               	movf	??_RTC_display+1,w
  1757     0776  00F3               	movwf	___awmod@dividend+1
  1758     0777  120A  118A  2454  120A  118A  	fcall	___awmod
  1759     077C  0870               	movf	?___awmod,w
  1760     077D  3E30               	addlw	48
  1761     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1762     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1763     0780  00A7               	movwf	RTC_display@Date+7
  1764                           
  1765                           ;Lab4master.c: 77:   Date[9] = month / 10 + '0';
  1766     0781  300A               	movlw	10
  1767     0782  00F0               	movwf	___awdiv@divisor
  1768     0783  3000               	movlw	0
  1769     0784  00F1               	movwf	___awdiv@divisor+1
  1770     0785  084C               	movf	_month,w
  1771     0786  00FC               	movwf	??_RTC_display
  1772     0787  01FD               	clrf	??_RTC_display+1
  1773     0788  087C               	movf	??_RTC_display,w
  1774     0789  00F2               	movwf	___awdiv@dividend
  1775     078A  087D               	movf	??_RTC_display+1,w
  1776     078B  00F3               	movwf	___awdiv@dividend+1
  1777     078C  120A  118A  2570  120A  118A  	fcall	___awdiv
  1778     0791  0870               	movf	?___awdiv,w
  1779     0792  3E30               	addlw	48
  1780     0793  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0794  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0795  00A9               	movwf	RTC_display@Date+9
  1783                           
  1784                           ;Lab4master.c: 78:   Date[10] = month % 10 + '0';
  1785     0796  300A               	movlw	10
  1786     0797  00F0               	movwf	___awmod@divisor
  1787     0798  3000               	movlw	0
  1788     0799  00F1               	movwf	___awmod@divisor+1
  1789     079A  084C               	movf	_month,w
  1790     079B  00FC               	movwf	??_RTC_display
  1791     079C  01FD               	clrf	??_RTC_display+1
  1792     079D  087C               	movf	??_RTC_display,w
  1793     079E  00F2               	movwf	___awmod@dividend
  1794     079F  087D               	movf	??_RTC_display+1,w
  1795     07A0  00F3               	movwf	___awmod@dividend+1
  1796     07A1  120A  118A  2454  120A  118A  	fcall	___awmod
  1797     07A6  0870               	movf	?___awmod,w
  1798     07A7  3E30               	addlw	48
  1799     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1800     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1801     07AA  00AA               	movwf	RTC_display@Date+10
  1802                           
  1803                           ;Lab4master.c: 79:   Date[14] = year / 10 + '0';
  1804     07AB  300A               	movlw	10
  1805     07AC  00F0               	movwf	___awdiv@divisor
  1806     07AD  3000               	movlw	0
  1807     07AE  00F1               	movwf	___awdiv@divisor+1
  1808     07AF  084B               	movf	_year,w
  1809     07B0  00FC               	movwf	??_RTC_display
  1810     07B1  01FD               	clrf	??_RTC_display+1
  1811     07B2  087C               	movf	??_RTC_display,w
  1812     07B3  00F2               	movwf	___awdiv@dividend
  1813     07B4  087D               	movf	??_RTC_display+1,w
  1814     07B5  00F3               	movwf	___awdiv@dividend+1
  1815     07B6  120A  118A  2570  120A  118A  	fcall	___awdiv
  1816     07BB  0870               	movf	?___awdiv,w
  1817     07BC  3E30               	addlw	48
  1818     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1819     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1820     07BF  00AE               	movwf	RTC_display@Date+14
  1821                           
  1822                           ;Lab4master.c: 80:   Date[15] = year % 10 + '0';
  1823     07C0  300A               	movlw	10
  1824     07C1  00F0               	movwf	___awmod@divisor
  1825     07C2  3000               	movlw	0
  1826     07C3  00F1               	movwf	___awmod@divisor+1
  1827     07C4  084B               	movf	_year,w
  1828     07C5  00FC               	movwf	??_RTC_display
  1829     07C6  01FD               	clrf	??_RTC_display+1
  1830     07C7  087C               	movf	??_RTC_display,w
  1831     07C8  00F2               	movwf	___awmod@dividend
  1832     07C9  087D               	movf	??_RTC_display+1,w
  1833     07CA  00F3               	movwf	___awmod@dividend+1
  1834     07CB  120A  118A  2454  120A  118A  	fcall	___awmod
  1835     07D0  0870               	movf	?___awmod,w
  1836     07D1  3E30               	addlw	48
  1837     07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1838     07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1839     07D4  00AF               	movwf	RTC_display@Date+15
  1840                           
  1841                           ;Lab4master.c: 82:  Lcd_Set_Cursor(1,1);
  1842     07D5  01F4               	clrf	Lcd_Set_Cursor@b
  1843     07D6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1844     07D7  3001               	movlw	1
  1845     07D8  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
  1846     07DD                     l1348:
  1847                           
  1848                           ;Lab4master.c: 84:   Lcd_Write_String(Time);
  1849     07DD  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1850     07DE  00F5               	movwf	Lcd_Write_String@a
  1851     07DF  3000               	movlw	0
  1852     07E0  00F6               	movwf	Lcd_Write_String@a+1
  1853     07E1  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String
  1854     07E6                     l122:
  1855     07E6  0008               	return
  1856     07E7                     __end_of_RTC_display:
  1857                           
  1858                           	psect	text6
  1859     026C                     __ptext6:	
  1860 ;; *************** function _bcd_to_decimal *****************
  1861 ;; Defined at:
  1862 ;;		line 45 in file "Lab4master.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  number          1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  number          1    6[COMMON] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      unsigned char 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         1       0       0       0       0
  1878 ;;      Temps:          2       0       0       0       0
  1879 ;;      Totals:         3       0       0       0       0
  1880 ;;Total ram usage:        3 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 1
  1883 ;; This function calls:
  1884 ;;		___bmul
  1885 ;; This function is called by:
  1886 ;;		_RTC_display
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890     026C                     _bcd_to_decimal:	
  1891                           ;psect for function _bcd_to_decimal
  1892                           
  1893                           
  1894                           ;incstack = 0
  1895                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1896                           ;bcd_to_decimal@number stored from wreg
  1897     026C  00F6               	movwf	bcd_to_decimal@number
  1898     026D                     l1196:
  1899                           
  1900                           ;Lab4master.c: 46:   return((number >> 4) * 10 + (number & 0x0F));
  1901     026D  300F               	movlw	15
  1902     026E  0576               	andwf	bcd_to_decimal@number,w
  1903     026F  00F4               	movwf	??_bcd_to_decimal
  1904     0270  300A               	movlw	10
  1905     0271  00F0               	movwf	___bmul@multiplicand
  1906     0272  0876               	movf	bcd_to_decimal@number,w
  1907     0273  00F5               	movwf	??_bcd_to_decimal+1
  1908     0274  3004               	movlw	4
  1909     0275                     u645:
  1910     0275  1003               	clrc
  1911     0276  0CF5               	rrf	??_bcd_to_decimal+1,f
  1912     0277  3EFF               	addlw	-1
  1913     0278  1D03               	skipz
  1914     0279  2A75               	goto	u645
  1915     027A  0875               	movf	??_bcd_to_decimal+1,w
  1916     027B  120A  118A  2257  120A  118A  	fcall	___bmul
  1917     0280  0774               	addwf	??_bcd_to_decimal,w
  1918     0281                     l112:
  1919     0281  0008               	return
  1920     0282                     __end_of_bcd_to_decimal:
  1921                           
  1922                           	psect	text7
  1923     0257                     __ptext7:	
  1924 ;; *************** function ___bmul *****************
  1925 ;; Defined at:
  1926 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  multiplier      1    wreg     unsigned char 
  1929 ;;  multiplicand    1    0[COMMON] unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  multiplier      1    3[COMMON] unsigned char 
  1932 ;;  product         1    2[COMMON] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         1       0       0       0       0
  1943 ;;      Locals:         2       0       0       0       0
  1944 ;;      Temps:          1       0       0       0       0
  1945 ;;      Totals:         4       0       0       0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_bcd_to_decimal
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955     0257                     ___bmul:	
  1956                           ;psect for function ___bmul
  1957                           
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1961                           ;___bmul@multiplier stored from wreg
  1962     0257  00F3               	movwf	___bmul@multiplier
  1963     0258                     l1142:
  1964     0258  01F2               	clrf	___bmul@product
  1965     0259                     l1144:
  1966     0259  1C73               	btfss	___bmul@multiplier,0
  1967     025A  2A5C               	goto	u521
  1968     025B  2A5D               	goto	u520
  1969     025C                     u521:
  1970     025C  2A61               	goto	l1148
  1971     025D                     u520:
  1972     025D                     l1146:
  1973     025D  0870               	movf	___bmul@multiplicand,w
  1974     025E  00F1               	movwf	??___bmul
  1975     025F  0871               	movf	??___bmul,w
  1976     0260  07F2               	addwf	___bmul@product,f
  1977     0261                     l1148:
  1978     0261  1003               	clrc
  1979     0262  0DF0               	rlf	___bmul@multiplicand,f
  1980     0263                     l1150:
  1981     0263  1003               	clrc
  1982     0264  0CF3               	rrf	___bmul@multiplier,f
  1983     0265  0873               	movf	___bmul@multiplier,w
  1984     0266  1D03               	btfss	3,2
  1985     0267  2A69               	goto	u531
  1986     0268  2A6A               	goto	u530
  1987     0269                     u531:
  1988     0269  2A59               	goto	l1144
  1989     026A                     u530:
  1990     026A                     l1152:
  1991     026A  0872               	movf	___bmul@product,w
  1992     026B                     l300:
  1993     026B  0008               	return
  1994     026C                     __end_of___bmul:
  1995                           
  1996                           	psect	text8
  1997     0454                     __ptext8:	
  1998 ;; *************** function ___awmod *****************
  1999 ;; Defined at:
  2000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  divisor         2    0[COMMON] int 
  2003 ;;  dividend        2    2[COMMON] int 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  sign            1    6[COMMON] unsigned char 
  2006 ;;  counter         1    5[COMMON] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  2    0[COMMON] int 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         4       0       0       0       0
  2017 ;;      Locals:         2       0       0       0       0
  2018 ;;      Temps:          1       0       0       0       0
  2019 ;;      Totals:         7       0       0       0       0
  2020 ;;Total ram usage:        7 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_decimal_to_bcd
  2026 ;;		_RTC_display
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030     0454                     ___awmod:	
  2031                           ;psect for function ___awmod
  2032                           
  2033     0454                     l1272:	
  2034                           ;incstack = 0
  2035                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2036                           
  2037     0454  01F6               	clrf	___awmod@sign
  2038     0455                     l1274:
  2039     0455  1FF3               	btfss	___awmod@dividend+1,7
  2040     0456  2C58               	goto	u821
  2041     0457  2C59               	goto	u820
  2042     0458                     u821:
  2043     0458  2C60               	goto	l1280
  2044     0459                     u820:
  2045     0459                     l1276:
  2046     0459  09F2               	comf	___awmod@dividend,f
  2047     045A  09F3               	comf	___awmod@dividend+1,f
  2048     045B  0AF2               	incf	___awmod@dividend,f
  2049     045C  1903               	skipnz
  2050     045D  0AF3               	incf	___awmod@dividend+1,f
  2051     045E                     l1278:
  2052     045E  01F6               	clrf	___awmod@sign
  2053     045F  0AF6               	incf	___awmod@sign,f
  2054     0460                     l1280:
  2055     0460  1FF1               	btfss	___awmod@divisor+1,7
  2056     0461  2C63               	goto	u831
  2057     0462  2C64               	goto	u830
  2058     0463                     u831:
  2059     0463  2C69               	goto	l1284
  2060     0464                     u830:
  2061     0464                     l1282:
  2062     0464  09F0               	comf	___awmod@divisor,f
  2063     0465  09F1               	comf	___awmod@divisor+1,f
  2064     0466  0AF0               	incf	___awmod@divisor,f
  2065     0467  1903               	skipnz
  2066     0468  0AF1               	incf	___awmod@divisor+1,f
  2067     0469                     l1284:
  2068     0469  0870               	movf	___awmod@divisor,w
  2069     046A  0471               	iorwf	___awmod@divisor+1,w
  2070     046B  1903               	btfsc	3,2
  2071     046C  2C6E               	goto	u841
  2072     046D  2C6F               	goto	u840
  2073     046E                     u841:
  2074     046E  2C9E               	goto	l1302
  2075     046F                     u840:
  2076     046F                     l1286:
  2077     046F  01F5               	clrf	___awmod@counter
  2078     0470  0AF5               	incf	___awmod@counter,f
  2079     0471  2C7D               	goto	l1292
  2080     0472                     l1288:
  2081     0472  3001               	movlw	1
  2082     0473                     u855:
  2083     0473  1003               	clrc
  2084     0474  0DF0               	rlf	___awmod@divisor,f
  2085     0475  0DF1               	rlf	___awmod@divisor+1,f
  2086     0476  3EFF               	addlw	-1
  2087     0477  1D03               	skipz
  2088     0478  2C73               	goto	u855
  2089     0479                     l1290:
  2090     0479  3001               	movlw	1
  2091     047A  00F4               	movwf	??___awmod
  2092     047B  0874               	movf	??___awmod,w
  2093     047C  07F5               	addwf	___awmod@counter,f
  2094     047D                     l1292:
  2095     047D  1FF1               	btfss	___awmod@divisor+1,7
  2096     047E  2C80               	goto	u861
  2097     047F  2C81               	goto	u860
  2098     0480                     u861:
  2099     0480  2C72               	goto	l1288
  2100     0481                     u860:
  2101     0481                     l1294:
  2102     0481  0871               	movf	___awmod@divisor+1,w
  2103     0482  0273               	subwf	___awmod@dividend+1,w
  2104     0483  1D03               	skipz
  2105     0484  2C87               	goto	u875
  2106     0485  0870               	movf	___awmod@divisor,w
  2107     0486  0272               	subwf	___awmod@dividend,w
  2108     0487                     u875:
  2109     0487  1C03               	skipc
  2110     0488  2C8A               	goto	u871
  2111     0489  2C8B               	goto	u870
  2112     048A                     u871:
  2113     048A  2C91               	goto	l1298
  2114     048B                     u870:
  2115     048B                     l1296:
  2116     048B  0870               	movf	___awmod@divisor,w
  2117     048C  02F2               	subwf	___awmod@dividend,f
  2118     048D  0871               	movf	___awmod@divisor+1,w
  2119     048E  1C03               	skipc
  2120     048F  03F3               	decf	___awmod@dividend+1,f
  2121     0490  02F3               	subwf	___awmod@dividend+1,f
  2122     0491                     l1298:
  2123     0491  3001               	movlw	1
  2124     0492                     u885:
  2125     0492  1003               	clrc
  2126     0493  0CF1               	rrf	___awmod@divisor+1,f
  2127     0494  0CF0               	rrf	___awmod@divisor,f
  2128     0495  3EFF               	addlw	-1
  2129     0496  1D03               	skipz
  2130     0497  2C92               	goto	u885
  2131     0498                     l1300:
  2132     0498  3001               	movlw	1
  2133     0499  02F5               	subwf	___awmod@counter,f
  2134     049A  1D03               	btfss	3,2
  2135     049B  2C9D               	goto	u891
  2136     049C  2C9E               	goto	u890
  2137     049D                     u891:
  2138     049D  2C81               	goto	l1294
  2139     049E                     u890:
  2140     049E                     l1302:
  2141     049E  0876               	movf	___awmod@sign,w
  2142     049F  1903               	btfsc	3,2
  2143     04A0  2CA2               	goto	u901
  2144     04A1  2CA3               	goto	u900
  2145     04A2                     u901:
  2146     04A2  2CA8               	goto	l1306
  2147     04A3                     u900:
  2148     04A3                     l1304:
  2149     04A3  09F2               	comf	___awmod@dividend,f
  2150     04A4  09F3               	comf	___awmod@dividend+1,f
  2151     04A5  0AF2               	incf	___awmod@dividend,f
  2152     04A6  1903               	skipnz
  2153     04A7  0AF3               	incf	___awmod@dividend+1,f
  2154     04A8                     l1306:
  2155     04A8  0873               	movf	___awmod@dividend+1,w
  2156     04A9  00F1               	movwf	?___awmod+1
  2157     04AA  0872               	movf	___awmod@dividend,w
  2158     04AB  00F0               	movwf	?___awmod
  2159     04AC                     l440:
  2160     04AC  0008               	return
  2161     04AD                     __end_of___awmod:
  2162                           
  2163                           	psect	text9
  2164     0570                     __ptext9:	
  2165 ;; *************** function ___awdiv *****************
  2166 ;; Defined at:
  2167 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  divisor         2    0[COMMON] int 
  2170 ;;  dividend        2    2[COMMON] int 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  quotient        2    7[COMMON] int 
  2173 ;;  sign            1    6[COMMON] unsigned char 
  2174 ;;  counter         1    5[COMMON] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2    0[COMMON] int 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         4       0       0       0       0
  2185 ;;      Locals:         4       0       0       0       0
  2186 ;;      Temps:          1       0       0       0       0
  2187 ;;      Totals:         9       0       0       0       0
  2188 ;;Total ram usage:        9 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_decimal_to_bcd
  2194 ;;		_RTC_display
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198     0570                     ___awdiv:	
  2199                           ;psect for function ___awdiv
  2200                           
  2201     0570                     l1228:	
  2202                           ;incstack = 0
  2203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2204                           
  2205     0570  01F6               	clrf	___awdiv@sign
  2206     0571                     l1230:
  2207     0571  1FF1               	btfss	___awdiv@divisor+1,7
  2208     0572  2D74               	goto	u721
  2209     0573  2D75               	goto	u720
  2210     0574                     u721:
  2211     0574  2D7C               	goto	l1236
  2212     0575                     u720:
  2213     0575                     l1232:
  2214     0575  09F0               	comf	___awdiv@divisor,f
  2215     0576  09F1               	comf	___awdiv@divisor+1,f
  2216     0577  0AF0               	incf	___awdiv@divisor,f
  2217     0578  1903               	skipnz
  2218     0579  0AF1               	incf	___awdiv@divisor+1,f
  2219     057A                     l1234:
  2220     057A  01F6               	clrf	___awdiv@sign
  2221     057B  0AF6               	incf	___awdiv@sign,f
  2222     057C                     l1236:
  2223     057C  1FF3               	btfss	___awdiv@dividend+1,7
  2224     057D  2D7F               	goto	u731
  2225     057E  2D80               	goto	u730
  2226     057F                     u731:
  2227     057F  2D89               	goto	l1242
  2228     0580                     u730:
  2229     0580                     l1238:
  2230     0580  09F2               	comf	___awdiv@dividend,f
  2231     0581  09F3               	comf	___awdiv@dividend+1,f
  2232     0582  0AF2               	incf	___awdiv@dividend,f
  2233     0583  1903               	skipnz
  2234     0584  0AF3               	incf	___awdiv@dividend+1,f
  2235     0585                     l1240:
  2236     0585  3001               	movlw	1
  2237     0586  00F4               	movwf	??___awdiv
  2238     0587  0874               	movf	??___awdiv,w
  2239     0588  06F6               	xorwf	___awdiv@sign,f
  2240     0589                     l1242:
  2241     0589  01F7               	clrf	___awdiv@quotient
  2242     058A  01F8               	clrf	___awdiv@quotient+1
  2243     058B                     l1244:
  2244     058B  0870               	movf	___awdiv@divisor,w
  2245     058C  0471               	iorwf	___awdiv@divisor+1,w
  2246     058D  1903               	btfsc	3,2
  2247     058E  2D90               	goto	u741
  2248     058F  2D91               	goto	u740
  2249     0590                     u741:
  2250     0590  2DC8               	goto	l1264
  2251     0591                     u740:
  2252     0591                     l1246:
  2253     0591  01F5               	clrf	___awdiv@counter
  2254     0592  0AF5               	incf	___awdiv@counter,f
  2255     0593  2D9F               	goto	l1252
  2256     0594                     l1248:
  2257     0594  3001               	movlw	1
  2258     0595                     u755:
  2259     0595  1003               	clrc
  2260     0596  0DF0               	rlf	___awdiv@divisor,f
  2261     0597  0DF1               	rlf	___awdiv@divisor+1,f
  2262     0598  3EFF               	addlw	-1
  2263     0599  1D03               	skipz
  2264     059A  2D95               	goto	u755
  2265     059B                     l1250:
  2266     059B  3001               	movlw	1
  2267     059C  00F4               	movwf	??___awdiv
  2268     059D  0874               	movf	??___awdiv,w
  2269     059E  07F5               	addwf	___awdiv@counter,f
  2270     059F                     l1252:
  2271     059F  1FF1               	btfss	___awdiv@divisor+1,7
  2272     05A0  2DA2               	goto	u761
  2273     05A1  2DA3               	goto	u760
  2274     05A2                     u761:
  2275     05A2  2D94               	goto	l1248
  2276     05A3                     u760:
  2277     05A3                     l1254:
  2278     05A3  3001               	movlw	1
  2279     05A4                     u775:
  2280     05A4  1003               	clrc
  2281     05A5  0DF7               	rlf	___awdiv@quotient,f
  2282     05A6  0DF8               	rlf	___awdiv@quotient+1,f
  2283     05A7  3EFF               	addlw	-1
  2284     05A8  1D03               	skipz
  2285     05A9  2DA4               	goto	u775
  2286     05AA  0871               	movf	___awdiv@divisor+1,w
  2287     05AB  0273               	subwf	___awdiv@dividend+1,w
  2288     05AC  1D03               	skipz
  2289     05AD  2DB0               	goto	u785
  2290     05AE  0870               	movf	___awdiv@divisor,w
  2291     05AF  0272               	subwf	___awdiv@dividend,w
  2292     05B0                     u785:
  2293     05B0  1C03               	skipc
  2294     05B1  2DB3               	goto	u781
  2295     05B2  2DB4               	goto	u780
  2296     05B3                     u781:
  2297     05B3  2DBB               	goto	l1260
  2298     05B4                     u780:
  2299     05B4                     l1256:
  2300     05B4  0870               	movf	___awdiv@divisor,w
  2301     05B5  02F2               	subwf	___awdiv@dividend,f
  2302     05B6  0871               	movf	___awdiv@divisor+1,w
  2303     05B7  1C03               	skipc
  2304     05B8  03F3               	decf	___awdiv@dividend+1,f
  2305     05B9  02F3               	subwf	___awdiv@dividend+1,f
  2306     05BA                     l1258:
  2307     05BA  1477               	bsf	___awdiv@quotient,0
  2308     05BB                     l1260:
  2309     05BB  3001               	movlw	1
  2310     05BC                     u795:
  2311     05BC  1003               	clrc
  2312     05BD  0CF1               	rrf	___awdiv@divisor+1,f
  2313     05BE  0CF0               	rrf	___awdiv@divisor,f
  2314     05BF  3EFF               	addlw	-1
  2315     05C0  1D03               	skipz
  2316     05C1  2DBC               	goto	u795
  2317     05C2                     l1262:
  2318     05C2  3001               	movlw	1
  2319     05C3  02F5               	subwf	___awdiv@counter,f
  2320     05C4  1D03               	btfss	3,2
  2321     05C5  2DC7               	goto	u801
  2322     05C6  2DC8               	goto	u800
  2323     05C7                     u801:
  2324     05C7  2DA3               	goto	l1254
  2325     05C8                     u800:
  2326     05C8                     l1264:
  2327     05C8  0876               	movf	___awdiv@sign,w
  2328     05C9  1903               	btfsc	3,2
  2329     05CA  2DCC               	goto	u811
  2330     05CB  2DCD               	goto	u810
  2331     05CC                     u811:
  2332     05CC  2DD2               	goto	l1268
  2333     05CD                     u810:
  2334     05CD                     l1266:
  2335     05CD  09F7               	comf	___awdiv@quotient,f
  2336     05CE  09F8               	comf	___awdiv@quotient+1,f
  2337     05CF  0AF7               	incf	___awdiv@quotient,f
  2338     05D0  1903               	skipnz
  2339     05D1  0AF8               	incf	___awdiv@quotient+1,f
  2340     05D2                     l1268:
  2341     05D2  0878               	movf	___awdiv@quotient+1,w
  2342     05D3  00F1               	movwf	?___awdiv+1
  2343     05D4  0877               	movf	___awdiv@quotient,w
  2344     05D5  00F0               	movwf	?___awdiv
  2345     05D6                     l427:
  2346     05D6  0008               	return
  2347     05D7                     __end_of___awdiv:
  2348                           
  2349                           	psect	text10
  2350     03CC                     __ptext10:	
  2351 ;; *************** function _Lcd_Write_String *****************
  2352 ;; Defined at:
  2353 ;;		line 98 in file "LCD.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  a               2    5[COMMON] PTR unsigned char 
  2356 ;;		 -> STR_1(7), RTC_display@Time(15), 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  i               2   10[COMMON] int 
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2368 ;;      Params:         2       0       0       0       0
  2369 ;;      Locals:         2       0       0       0       0
  2370 ;;      Temps:          3       0       0       0       0
  2371 ;;      Totals:         7       0       0       0       0
  2372 ;;Total ram usage:        7 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 2
  2375 ;; This function calls:
  2376 ;;		_Lcd_Write_Char
  2377 ;; This function is called by:
  2378 ;;		_RTC_display
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383     03CC                     _Lcd_Write_String:	
  2384                           ;psect for function _Lcd_Write_String
  2385                           
  2386     03CC                     l1220:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2389                           
  2390                           
  2391                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2392     03CC  01FA               	clrf	Lcd_Write_String@i
  2393     03CD  01FB               	clrf	Lcd_Write_String@i+1
  2394     03CE  2BF1               	goto	l1226
  2395     03CF                     l1222:
  2396                           
  2397                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2398     03CF  087A               	movf	Lcd_Write_String@i,w
  2399     03D0  0775               	addwf	Lcd_Write_String@a,w
  2400     03D1  00F8               	movwf	??_Lcd_Write_String+1
  2401     03D2  0876               	movf	Lcd_Write_String@a+1,w
  2402     03D3  00F7               	movwf	??_Lcd_Write_String
  2403     03D4  1803               	skipnc
  2404     03D5  0AF7               	incf	??_Lcd_Write_String,f
  2405     03D6  1FFA               	btfss	Lcd_Write_String@i,7
  2406     03D7  2BD9               	goto	u690
  2407     03D8  03F7               	decf	??_Lcd_Write_String,f
  2408     03D9                     u690:
  2409     03D9  0877               	movf	??_Lcd_Write_String,w
  2410     03DA  00F9               	movwf	??_Lcd_Write_String+2
  2411     03DB  0879               	movf	??_Lcd_Write_String+2,w
  2412     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2413     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2414     03DE  00FF               	movwf	btemp+1
  2415     03DF  0878               	movf	??_Lcd_Write_String+1,w
  2416     03E0  0084               	movwf	4
  2417     03E1  120A  118A  2003  120A  118A  	fcall	stringtab
  2418     03E6  120A  118A  235F  120A  118A  	fcall	_Lcd_Write_Char
  2419     03EB                     l1224:
  2420     03EB  3001               	movlw	1
  2421     03EC  07FA               	addwf	Lcd_Write_String@i,f
  2422     03ED  1803               	skipnc
  2423     03EE  0AFB               	incf	Lcd_Write_String@i+1,f
  2424     03EF  3000               	movlw	0
  2425     03F0  07FB               	addwf	Lcd_Write_String@i+1,f
  2426     03F1                     l1226:
  2427     03F1  087A               	movf	Lcd_Write_String@i,w
  2428     03F2  0775               	addwf	Lcd_Write_String@a,w
  2429     03F3  00F8               	movwf	??_Lcd_Write_String+1
  2430     03F4  0876               	movf	Lcd_Write_String@a+1,w
  2431     03F5  00F7               	movwf	??_Lcd_Write_String
  2432     03F6  1803               	skipnc
  2433     03F7  0AF7               	incf	??_Lcd_Write_String,f
  2434     03F8  1FFA               	btfss	Lcd_Write_String@i,7
  2435     03F9  2BFB               	goto	u700
  2436     03FA  03F7               	decf	??_Lcd_Write_String,f
  2437     03FB                     u700:
  2438     03FB  0877               	movf	??_Lcd_Write_String,w
  2439     03FC  00F9               	movwf	??_Lcd_Write_String+2
  2440     03FD  0879               	movf	??_Lcd_Write_String+2,w
  2441     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2442     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2443     0400  00FF               	movwf	btemp+1
  2444     0401  0878               	movf	??_Lcd_Write_String+1,w
  2445     0402  0084               	movwf	4
  2446     0403  120A  118A  2003  120A  118A  	fcall	stringtab
  2447     0408  3A00               	xorlw	0
  2448     0409  1D03               	skipz
  2449     040A  2C0C               	goto	u711
  2450     040B  2C0D               	goto	u710
  2451     040C                     u711:
  2452     040C  2BCF               	goto	l1222
  2453     040D                     u710:
  2454     040D                     l182:
  2455     040D  0008               	return
  2456     040E                     __end_of_Lcd_Write_String:
  2457                           
  2458                           	psect	text11
  2459     035F                     __ptext11:	
  2460 ;; *************** function _Lcd_Write_Char *****************
  2461 ;; Defined at:
  2462 ;;		line 83 in file "LCD.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  a               1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  a               1    4[COMMON] unsigned char 
  2467 ;;  y               1    3[COMMON] unsigned char 
  2468 ;;  temp            1    2[COMMON] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, pclath, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2478 ;;      Params:         0       0       0       0       0
  2479 ;;      Locals:         3       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0
  2481 ;;      Totals:         4       0       0       0       0
  2482 ;;Total ram usage:        4 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 1
  2485 ;; This function calls:
  2486 ;;		_Lcd_Port
  2487 ;; This function is called by:
  2488 ;;		_Lcd_Write_String
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     035F                     _Lcd_Write_Char:	
  2493                           ;psect for function _Lcd_Write_Char
  2494                           
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2498                           ;Lcd_Write_Char@a stored from wreg
  2499     035F  00F4               	movwf	Lcd_Write_Char@a
  2500     0360                     l1122:
  2501                           
  2502                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2503     0360  0874               	movf	Lcd_Write_Char@a,w
  2504     0361  390F               	andlw	15
  2505     0362  00F2               	movwf	Lcd_Write_Char@temp
  2506                           
  2507                           ;LCD.c: 86:     y = a & 0xF0;
  2508     0363  0874               	movf	Lcd_Write_Char@a,w
  2509     0364  39F0               	andlw	240
  2510     0365  00F3               	movwf	Lcd_Write_Char@y
  2511     0366                     l1124:
  2512                           
  2513                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2514     0366  1283               	bcf	3,5	;RP0=0, select bank0
  2515     0367  1303               	bcf	3,6	;RP1=0, select bank0
  2516     0368  1707               	bsf	7,6	;volatile
  2517     0369                     l1126:
  2518                           
  2519                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2520     0369  0873               	movf	Lcd_Write_Char@y,w
  2521     036A  00F1               	movwf	??_Lcd_Write_Char
  2522     036B  3004               	movlw	4
  2523     036C                     u515:
  2524     036C  1003               	clrc
  2525     036D  0CF1               	rrf	??_Lcd_Write_Char,f
  2526     036E  3EFF               	addlw	-1
  2527     036F  1D03               	skipz
  2528     0370  2B6C               	goto	u515
  2529     0371  0871               	movf	??_Lcd_Write_Char,w
  2530     0372  120A  118A  22BC  120A  118A  	fcall	_Lcd_Port
  2531     0377                     l1128:
  2532                           
  2533                           ;LCD.c: 89:     RC7 = 1;
  2534     0377  1283               	bcf	3,5	;RP0=0, select bank0
  2535     0378  1303               	bcf	3,6	;RP1=0, select bank0
  2536     0379  1787               	bsf	7,7	;volatile
  2537     037A                     l1130:
  2538                           
  2539                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2540     037A  301A               	movlw	26
  2541     037B  00F1               	movwf	??_Lcd_Write_Char
  2542     037C                     u957:
  2543     037C  0BF1               	decfsz	??_Lcd_Write_Char,f
  2544     037D  2B7C               	goto	u957
  2545     037E  0000               	nop
  2546     037F                     l1132:
  2547                           
  2548                           ;LCD.c: 91:     RC7 = 0;
  2549     037F  1283               	bcf	3,5	;RP0=0, select bank0
  2550     0380  1303               	bcf	3,6	;RP1=0, select bank0
  2551     0381  1387               	bcf	7,7	;volatile
  2552     0382                     l1134:
  2553                           
  2554                           ;LCD.c: 92:     Lcd_Port(temp);
  2555     0382  0872               	movf	Lcd_Write_Char@temp,w
  2556     0383  120A  118A  22BC  120A  118A  	fcall	_Lcd_Port
  2557     0388                     l1136:
  2558                           
  2559                           ;LCD.c: 93:     RC7 = 1;
  2560     0388  1283               	bcf	3,5	;RP0=0, select bank0
  2561     0389  1303               	bcf	3,6	;RP1=0, select bank0
  2562     038A  1787               	bsf	7,7	;volatile
  2563     038B                     l1138:
  2564                           
  2565                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2566     038B  301A               	movlw	26
  2567     038C  00F1               	movwf	??_Lcd_Write_Char
  2568     038D                     u967:
  2569     038D  0BF1               	decfsz	??_Lcd_Write_Char,f
  2570     038E  2B8D               	goto	u967
  2571     038F  0000               	nop
  2572     0390                     l1140:
  2573                           
  2574                           ;LCD.c: 95:     RC7 = 0;
  2575     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2576     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2577     0392  1387               	bcf	7,7	;volatile
  2578     0393                     l176:
  2579     0393  0008               	return
  2580     0394                     __end_of_Lcd_Write_Char:
  2581                           
  2582                           	psect	text12
  2583     040E                     __ptext12:	
  2584 ;; *************** function _Lcd_Set_Cursor *****************
  2585 ;; Defined at:
  2586 ;;		line 48 in file "LCD.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  a               1    wreg     unsigned char 
  2589 ;;  b               1    4[COMMON] unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  a               1    6[COMMON] unsigned char 
  2592 ;;  temp            1    9[COMMON] unsigned char 
  2593 ;;  y               1    8[COMMON] unsigned char 
  2594 ;;  z               1    7[COMMON] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         1       0       0       0       0
  2605 ;;      Locals:         4       0       0       0       0
  2606 ;;      Temps:          1       0       0       0       0
  2607 ;;      Totals:         6       0       0       0       0
  2608 ;;Total ram usage:        6 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 2
  2611 ;; This function calls:
  2612 ;;		_Lcd_Cmd
  2613 ;; This function is called by:
  2614 ;;		_RTC_display
  2615 ;;		_main
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619     040E                     _Lcd_Set_Cursor:	
  2620                           ;psect for function _Lcd_Set_Cursor
  2621                           
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2625                           ;Lcd_Set_Cursor@a stored from wreg
  2626     040E  00F6               	movwf	Lcd_Set_Cursor@a
  2627     040F                     l1200:
  2628                           
  2629                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2630     040F  0376               	decf	Lcd_Set_Cursor@a,w
  2631     0410  1D03               	btfss	3,2
  2632     0411  2C13               	goto	u651
  2633     0412  2C14               	goto	u650
  2634     0413                     u651:
  2635     0413  2C31               	goto	l1210
  2636     0414                     u650:
  2637     0414                     l1202:
  2638                           
  2639                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2640     0414  0874               	movf	Lcd_Set_Cursor@b,w
  2641     0415  3E7F               	addlw	127
  2642     0416  00F9               	movwf	Lcd_Set_Cursor@temp
  2643                           
  2644                           ;LCD.c: 52:         z = temp >> 4;
  2645     0417  0879               	movf	Lcd_Set_Cursor@temp,w
  2646     0418  00F5               	movwf	??_Lcd_Set_Cursor
  2647     0419  3004               	movlw	4
  2648     041A                     u665:
  2649     041A  1003               	clrc
  2650     041B  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2651     041C  3EFF               	addlw	-1
  2652     041D  1D03               	skipz
  2653     041E  2C1A               	goto	u665
  2654     041F  0875               	movf	??_Lcd_Set_Cursor,w
  2655     0420  00F7               	movwf	Lcd_Set_Cursor@z
  2656     0421                     l1204:
  2657                           
  2658                           ;LCD.c: 53:         y = temp & 0x0F;
  2659     0421  0879               	movf	Lcd_Set_Cursor@temp,w
  2660     0422  390F               	andlw	15
  2661     0423  00F8               	movwf	Lcd_Set_Cursor@y
  2662     0424                     l1206:
  2663                           
  2664                           ;LCD.c: 54:         Lcd_Cmd(z);
  2665     0424  0877               	movf	Lcd_Set_Cursor@z,w
  2666     0425  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2667     042A                     l1208:
  2668                           
  2669                           ;LCD.c: 55:         Lcd_Cmd(y);
  2670     042A  0878               	movf	Lcd_Set_Cursor@y,w
  2671     042B  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2672                           
  2673                           ;LCD.c: 56:     } else if (a == 2) {
  2674     0430  2C53               	goto	l170
  2675     0431                     l1210:
  2676     0431  3002               	movlw	2
  2677     0432  0676               	xorwf	Lcd_Set_Cursor@a,w
  2678     0433  1D03               	btfss	3,2
  2679     0434  2C36               	goto	u671
  2680     0435  2C37               	goto	u670
  2681     0436                     u671:
  2682     0436  2C53               	goto	l170
  2683     0437                     u670:
  2684     0437                     l1212:
  2685                           
  2686                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2687     0437  0874               	movf	Lcd_Set_Cursor@b,w
  2688     0438  3EBF               	addlw	191
  2689     0439  00F9               	movwf	Lcd_Set_Cursor@temp
  2690                           
  2691                           ;LCD.c: 58:         z = temp >> 4;
  2692     043A  0879               	movf	Lcd_Set_Cursor@temp,w
  2693     043B  00F5               	movwf	??_Lcd_Set_Cursor
  2694     043C  3004               	movlw	4
  2695     043D                     u685:
  2696     043D  1003               	clrc
  2697     043E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2698     043F  3EFF               	addlw	-1
  2699     0440  1D03               	skipz
  2700     0441  2C3D               	goto	u685
  2701     0442  0875               	movf	??_Lcd_Set_Cursor,w
  2702     0443  00F7               	movwf	Lcd_Set_Cursor@z
  2703     0444                     l1214:
  2704                           
  2705                           ;LCD.c: 59:         y = temp & 0x0F;
  2706     0444  0879               	movf	Lcd_Set_Cursor@temp,w
  2707     0445  390F               	andlw	15
  2708     0446  00F8               	movwf	Lcd_Set_Cursor@y
  2709     0447                     l1216:
  2710                           
  2711                           ;LCD.c: 60:         Lcd_Cmd(z);
  2712     0447  0877               	movf	Lcd_Set_Cursor@z,w
  2713     0448  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2714     044D                     l1218:
  2715                           
  2716                           ;LCD.c: 61:         Lcd_Cmd(y);
  2717     044D  0878               	movf	Lcd_Set_Cursor@y,w
  2718     044E  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2719     0453                     l170:
  2720     0453  0008               	return
  2721     0454                     __end_of_Lcd_Set_Cursor:
  2722                           
  2723                           	psect	text13
  2724     04AD                     __ptext13:	
  2725 ;; *************** function _Lcd_Init *****************
  2726 ;; Defined at:
  2727 ;;		line 65 in file "LCD.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;		None
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2741 ;;      Params:         0       0       0       0       0
  2742 ;;      Locals:         0       0       0       0       0
  2743 ;;      Temps:          2       0       0       0       0
  2744 ;;      Totals:         2       0       0       0       0
  2745 ;;Total ram usage:        2 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; Hardware stack levels required when called: 2
  2748 ;; This function calls:
  2749 ;;		_Lcd_Cmd
  2750 ;;		_Lcd_Port
  2751 ;; This function is called by:
  2752 ;;		_main
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     04AD                     _Lcd_Init:	
  2757                           ;psect for function _Lcd_Init
  2758                           
  2759     04AD                     l1362:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2762                           
  2763                           
  2764                           ;LCD.c: 66:     Lcd_Port(0x00);
  2765     04AD  3000               	movlw	0
  2766     04AE  120A  118A  22BC  120A  118A  	fcall	_Lcd_Port
  2767     04B3                     l1364:
  2768                           
  2769                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2770     04B3  3034               	movlw	52
  2771     04B4  00F5               	movwf	??_Lcd_Init+1
  2772     04B5  30F1               	movlw	241
  2773     04B6  00F4               	movwf	??_Lcd_Init
  2774     04B7                     u977:
  2775     04B7  0BF4               	decfsz	??_Lcd_Init,f
  2776     04B8  2CB7               	goto	u977
  2777     04B9  0BF5               	decfsz	??_Lcd_Init+1,f
  2778     04BA  2CB7               	goto	u977
  2779     04BB  2CBC               	nop2
  2780     04BC                     l1366:
  2781                           
  2782                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2783     04BC  3003               	movlw	3
  2784     04BD  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2785                           
  2786                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2787     04C2  300D               	movlw	13
  2788     04C3  00F5               	movwf	??_Lcd_Init+1
  2789     04C4  30FB               	movlw	251
  2790     04C5  00F4               	movwf	??_Lcd_Init
  2791     04C6                     u987:
  2792     04C6  0BF4               	decfsz	??_Lcd_Init,f
  2793     04C7  2CC6               	goto	u987
  2794     04C8  0BF5               	decfsz	??_Lcd_Init+1,f
  2795     04C9  2CC6               	goto	u987
  2796     04CA  2CCB               	nop2
  2797     04CB                     l1368:
  2798                           
  2799                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2800     04CB  3003               	movlw	3
  2801     04CC  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2802     04D1                     l1370:
  2803                           
  2804                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2805     04D1  301D               	movlw	29
  2806     04D2  00F5               	movwf	??_Lcd_Init+1
  2807     04D3  3091               	movlw	145
  2808     04D4  00F4               	movwf	??_Lcd_Init
  2809     04D5                     u997:
  2810     04D5  0BF4               	decfsz	??_Lcd_Init,f
  2811     04D6  2CD5               	goto	u997
  2812     04D7  0BF5               	decfsz	??_Lcd_Init+1,f
  2813     04D8  2CD5               	goto	u997
  2814                           
  2815                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2816     04D9  3003               	movlw	3
  2817     04DA  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2818                           
  2819                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2820     04DF  3002               	movlw	2
  2821     04E0  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2822                           
  2823                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2824     04E5  3002               	movlw	2
  2825     04E6  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2826                           
  2827                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2828     04EB  3008               	movlw	8
  2829     04EC  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2830                           
  2831                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2832     04F1  3000               	movlw	0
  2833     04F2  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2834                           
  2835                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2836     04F7  300C               	movlw	12
  2837     04F8  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2838                           
  2839                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2840     04FD  3000               	movlw	0
  2841     04FE  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2842                           
  2843                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2844     0503  3006               	movlw	6
  2845     0504  120A  118A  2282  120A  118A  	fcall	_Lcd_Cmd
  2846     0509                     l173:
  2847     0509  0008               	return
  2848     050A                     __end_of_Lcd_Init:
  2849                           
  2850                           	psect	text14
  2851     0282                     __ptext14:	
  2852 ;; *************** function _Lcd_Cmd *****************
  2853 ;; Defined at:
  2854 ;;		line 35 in file "LCD.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  a               1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  a               1    3[COMMON] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, pclath, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       0       0       0       0
  2869 ;;      Locals:         1       0       0       0       0
  2870 ;;      Temps:          2       0       0       0       0
  2871 ;;      Totals:         3       0       0       0       0
  2872 ;;Total ram usage:        3 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 1
  2875 ;; This function calls:
  2876 ;;		_Lcd_Port
  2877 ;; This function is called by:
  2878 ;;		_Lcd_Set_Cursor
  2879 ;;		_Lcd_Init
  2880 ;;		_Lcd_Clear
  2881 ;;		_Lcd_Shift_Right
  2882 ;;		_Lcd_Shift_Left
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886     0282                     _Lcd_Cmd:	
  2887                           ;psect for function _Lcd_Cmd
  2888                           
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2892                           ;Lcd_Cmd@a stored from wreg
  2893     0282  00F3               	movwf	Lcd_Cmd@a
  2894     0283                     l1112:
  2895                           
  2896                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2897     0283  1283               	bcf	3,5	;RP0=0, select bank0
  2898     0284  1303               	bcf	3,6	;RP1=0, select bank0
  2899     0285  1307               	bcf	7,6	;volatile
  2900     0286                     l1114:
  2901                           
  2902                           ;LCD.c: 37:     Lcd_Port(a);
  2903     0286  0873               	movf	Lcd_Cmd@a,w
  2904     0287  120A  118A  22BC  120A  118A  	fcall	_Lcd_Port
  2905     028C                     l1116:
  2906                           
  2907                           ;LCD.c: 38:     RC7 = 1;
  2908     028C  1283               	bcf	3,5	;RP0=0, select bank0
  2909     028D  1303               	bcf	3,6	;RP1=0, select bank0
  2910     028E  1787               	bsf	7,7	;volatile
  2911     028F                     l1118:
  2912                           
  2913                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2914     028F  300B               	movlw	11
  2915     0290  00F2               	movwf	??_Lcd_Cmd+1
  2916     0291  3062               	movlw	98
  2917     0292  00F1               	movwf	??_Lcd_Cmd
  2918     0293                     u1007:
  2919     0293  0BF1               	decfsz	??_Lcd_Cmd,f
  2920     0294  2A93               	goto	u1007
  2921     0295  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2922     0296  2A93               	goto	u1007
  2923     0297  0000               	nop
  2924     0298                     l1120:
  2925                           
  2926                           ;LCD.c: 40:     RC7 = 0;
  2927     0298  1283               	bcf	3,5	;RP0=0, select bank0
  2928     0299  1303               	bcf	3,6	;RP1=0, select bank0
  2929     029A  1387               	bcf	7,7	;volatile
  2930     029B                     l161:
  2931     029B  0008               	return
  2932     029C                     __end_of_Lcd_Cmd:
  2933                           
  2934                           	psect	text15
  2935     02BC                     __ptext15:	
  2936 ;; *************** function _Lcd_Port *****************
  2937 ;; Defined at:
  2938 ;;		line 13 in file "LCD.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  a               1    wreg     unsigned char 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  a               1    0[COMMON] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         1       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         1       0       0       0       0
  2956 ;;Total ram usage:        1 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_Lcd_Cmd
  2962 ;;		_Lcd_Init
  2963 ;;		_Lcd_Write_Char
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967     02BC                     _Lcd_Port:	
  2968                           ;psect for function _Lcd_Port
  2969                           
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _Lcd_Port: [wreg]
  2973                           ;Lcd_Port@a stored from wreg
  2974     02BC  00F0               	movwf	Lcd_Port@a
  2975     02BD                     l1102:
  2976                           
  2977                           ;LCD.c: 14:     if (a & 1)
  2978     02BD  1C70               	btfss	Lcd_Port@a,0
  2979     02BE  2AC0               	goto	u471
  2980     02BF  2AC1               	goto	u470
  2981     02C0                     u471:
  2982     02C0  2AC5               	goto	l150
  2983     02C1                     u470:
  2984     02C1                     l1104:
  2985                           
  2986                           ;LCD.c: 15:         RD4 = 1;
  2987     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2988     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2989     02C3  1608               	bsf	8,4	;volatile
  2990     02C4  2AC8               	goto	l151
  2991     02C5                     l150:	
  2992                           ;LCD.c: 16:     else
  2993                           
  2994                           
  2995                           ;LCD.c: 17:         RD4 = 0;
  2996     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2997     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2998     02C7  1208               	bcf	8,4	;volatile
  2999     02C8                     l151:
  3000                           
  3001                           ;LCD.c: 19:     if (a & 2)
  3002     02C8  1CF0               	btfss	Lcd_Port@a,1
  3003     02C9  2ACB               	goto	u481
  3004     02CA  2ACC               	goto	u480
  3005     02CB                     u481:
  3006     02CB  2ACE               	goto	l152
  3007     02CC                     u480:
  3008     02CC                     l1106:
  3009                           
  3010                           ;LCD.c: 20:         RD5 = 1;
  3011     02CC  1688               	bsf	8,5	;volatile
  3012     02CD  2ACF               	goto	l153
  3013     02CE                     l152:	
  3014                           ;LCD.c: 21:     else
  3015                           
  3016                           
  3017                           ;LCD.c: 22:         RD5 = 0;
  3018     02CE  1288               	bcf	8,5	;volatile
  3019     02CF                     l153:
  3020                           
  3021                           ;LCD.c: 24:     if (a & 4)
  3022     02CF  1D70               	btfss	Lcd_Port@a,2
  3023     02D0  2AD2               	goto	u491
  3024     02D1  2AD3               	goto	u490
  3025     02D2                     u491:
  3026     02D2  2AD5               	goto	l154
  3027     02D3                     u490:
  3028     02D3                     l1108:
  3029                           
  3030                           ;LCD.c: 25:         RD6 = 1;
  3031     02D3  1708               	bsf	8,6	;volatile
  3032     02D4  2AD6               	goto	l155
  3033     02D5                     l154:	
  3034                           ;LCD.c: 26:     else
  3035                           
  3036                           
  3037                           ;LCD.c: 27:         RD6 = 0;
  3038     02D5  1308               	bcf	8,6	;volatile
  3039     02D6                     l155:
  3040                           
  3041                           ;LCD.c: 29:     if (a & 8)
  3042     02D6  1DF0               	btfss	Lcd_Port@a,3
  3043     02D7  2AD9               	goto	u501
  3044     02D8  2ADA               	goto	u500
  3045     02D9                     u501:
  3046     02D9  2ADC               	goto	l156
  3047     02DA                     u500:
  3048     02DA                     l1110:
  3049                           
  3050                           ;LCD.c: 30:         RD7 = 1;
  3051     02DA  1788               	bsf	8,7	;volatile
  3052     02DB  2ADD               	goto	l158
  3053     02DC                     l156:	
  3054                           ;LCD.c: 31:     else
  3055                           
  3056                           
  3057                           ;LCD.c: 32:         RD7 = 0;
  3058     02DC  1388               	bcf	8,7	;volatile
  3059     02DD                     l158:
  3060     02DD  0008               	return
  3061     02DE                     __end_of_Lcd_Port:
  3062                           
  3063                           	psect	text16
  3064     022D                     __ptext16:	
  3065 ;; *************** function _I2C_Master_Write *****************
  3066 ;; Defined at:
  3067 ;;		line 65 in file "I2C.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  d               2    0[COMMON] unsigned int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, pclath, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3081 ;;      Params:         2       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0
  3084 ;;      Totals:         2       0       0       0       0
  3085 ;;Total ram usage:        2 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 1
  3088 ;; This function calls:
  3089 ;;		_I2C_Master_Wait
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095     022D                     _I2C_Master_Write:	
  3096                           ;psect for function _I2C_Master_Write
  3097                           
  3098     022D                     l1322:	
  3099                           ;incstack = 0
  3100                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3101                           
  3102                           
  3103                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3104     022D  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3105     0232                     l1324:
  3106                           
  3107                           ;I2C.c: 68:     SSPBUF = d;
  3108     0232  0870               	movf	I2C_Master_Write@d,w
  3109     0233  1283               	bcf	3,5	;RP0=0, select bank0
  3110     0234  1303               	bcf	3,6	;RP1=0, select bank0
  3111     0235  0093               	movwf	19	;volatile
  3112     0236                     l47:
  3113     0236  0008               	return
  3114     0237                     __end_of_I2C_Master_Write:
  3115                           
  3116                           	psect	text17
  3117     0224                     __ptext17:	
  3118 ;; *************** function _I2C_Master_Stop *****************
  3119 ;; Defined at:
  3120 ;;		line 55 in file "I2C.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, pclath, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		_I2C_Master_Wait
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148     0224                     _I2C_Master_Stop:	
  3149                           ;psect for function _I2C_Master_Stop
  3150                           
  3151     0224                     l1318:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3154                           
  3155                           
  3156                           ;I2C.c: 57:     I2C_Master_Wait();
  3157     0224  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3158     0229                     l1320:
  3159                           
  3160                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3161     0229  1683               	bsf	3,5	;RP0=1, select bank1
  3162     022A  1303               	bcf	3,6	;RP1=0, select bank1
  3163     022B  1511               	bsf	17,2	;volatile
  3164     022C                     l44:
  3165     022C  0008               	return
  3166     022D                     __end_of_I2C_Master_Stop:
  3167                           
  3168                           	psect	text18
  3169     021B                     __ptext18:	
  3170 ;; *************** function _I2C_Master_Start *****************
  3171 ;; Defined at:
  3172 ;;		line 39 in file "I2C.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 1
  3193 ;; This function calls:
  3194 ;;		_I2C_Master_Wait
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     021B                     _I2C_Master_Start:	
  3201                           ;psect for function _I2C_Master_Start
  3202                           
  3203     021B                     l1310:	
  3204                           ;incstack = 0
  3205                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3206                           
  3207                           
  3208                           ;I2C.c: 41:     I2C_Master_Wait();
  3209     021B  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3210     0220                     l1312:
  3211                           
  3212                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3213     0220  1683               	bsf	3,5	;RP0=1, select bank1
  3214     0221  1303               	bcf	3,6	;RP1=0, select bank1
  3215     0222  1411               	bsf	17,0	;volatile
  3216     0223                     l38:
  3217     0223  0008               	return
  3218     0224                     __end_of_I2C_Master_Start:
  3219                           
  3220                           	psect	text19
  3221     0212                     __ptext19:	
  3222 ;; *************** function _I2C_Master_RepeatedStart *****************
  3223 ;; Defined at:
  3224 ;;		line 47 in file "I2C.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, pclath, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3238 ;;      Params:         0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0
  3241 ;;      Totals:         0       0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 1
  3245 ;; This function calls:
  3246 ;;		_I2C_Master_Wait
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252     0212                     _I2C_Master_RepeatedStart:	
  3253                           ;psect for function _I2C_Master_RepeatedStart
  3254                           
  3255     0212                     l1314:	
  3256                           ;incstack = 0
  3257                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3258                           
  3259                           
  3260                           ;I2C.c: 49:     I2C_Master_Wait();
  3261     0212  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3262     0217                     l1316:
  3263                           
  3264                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3265     0217  1683               	bsf	3,5	;RP0=1, select bank1
  3266     0218  1303               	bcf	3,6	;RP1=0, select bank1
  3267     0219  1491               	bsf	17,1	;volatile
  3268     021A                     l41:
  3269     021A  0008               	return
  3270     021B                     __end_of_I2C_Master_RepeatedStart:
  3271                           
  3272                           	psect	text20
  3273     0301                     __ptext20:	
  3274 ;; *************** function _I2C_Master_Read *****************
  3275 ;; Defined at:
  3276 ;;		line 74 in file "I2C.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  a               2    0[COMMON] unsigned short 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  temp            2    4[COMMON] unsigned short 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2    0[COMMON] unsigned short 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, pclath, cstack
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         2       0       0       0       0
  3291 ;;      Locals:         2       0       0       0       0
  3292 ;;      Temps:          2       0       0       0       0
  3293 ;;      Totals:         6       0       0       0       0
  3294 ;;Total ram usage:        6 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 1
  3297 ;; This function calls:
  3298 ;;		_I2C_Master_Wait
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304     0301                     _I2C_Master_Read:	
  3305                           ;psect for function _I2C_Master_Read
  3306                           
  3307     0301                     l1326:	
  3308                           ;incstack = 0
  3309                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3310                           
  3311                           
  3312                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3313     0301  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3314     0306                     l1328:
  3315                           
  3316                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3317     0306  1683               	bsf	3,5	;RP0=1, select bank1
  3318     0307  1303               	bcf	3,6	;RP1=0, select bank1
  3319     0308  1591               	bsf	17,3	;volatile
  3320                           
  3321                           ;I2C.c: 79:     I2C_Master_Wait();
  3322     0309  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3323     030E                     l1330:
  3324                           
  3325                           ;I2C.c: 80:     temp = SSPBUF;
  3326     030E  1283               	bcf	3,5	;RP0=0, select bank0
  3327     030F  1303               	bcf	3,6	;RP1=0, select bank0
  3328     0310  0813               	movf	19,w	;volatile
  3329     0311  00F2               	movwf	??_I2C_Master_Read
  3330     0312  01F3               	clrf	??_I2C_Master_Read+1
  3331     0313  0872               	movf	??_I2C_Master_Read,w
  3332     0314  00F4               	movwf	I2C_Master_Read@temp
  3333     0315  0873               	movf	??_I2C_Master_Read+1,w
  3334     0316  00F5               	movwf	I2C_Master_Read@temp+1
  3335     0317                     l1332:
  3336                           
  3337                           ;I2C.c: 81:     I2C_Master_Wait();
  3338     0317  120A  118A  2237  120A  118A  	fcall	_I2C_Master_Wait
  3339     031C                     l1334:
  3340                           
  3341                           ;I2C.c: 82:     if(a == 1){
  3342     031C  0370               	decf	I2C_Master_Read@a,w
  3343     031D  0471               	iorwf	I2C_Master_Read@a+1,w
  3344     031E  1D03               	btfss	3,2
  3345     031F  2B21               	goto	u911
  3346     0320  2B22               	goto	u910
  3347     0321                     u911:
  3348     0321  2B26               	goto	l50
  3349     0322                     u910:
  3350     0322                     l1336:
  3351                           
  3352                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3353     0322  1683               	bsf	3,5	;RP0=1, select bank1
  3354     0323  1303               	bcf	3,6	;RP1=0, select bank1
  3355     0324  1291               	bcf	17,5	;volatile
  3356                           
  3357                           ;I2C.c: 84:     }else{
  3358     0325  2B29               	goto	l51
  3359     0326                     l50:
  3360                           
  3361                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3362     0326  1683               	bsf	3,5	;RP0=1, select bank1
  3363     0327  1303               	bcf	3,6	;RP1=0, select bank1
  3364     0328  1691               	bsf	17,5	;volatile
  3365     0329                     l51:	
  3366                           ;I2C.c: 86:     }
  3367                           
  3368                           
  3369                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3370     0329  1611               	bsf	17,4	;volatile
  3371     032A                     l1338:
  3372                           
  3373                           ;I2C.c: 88:     return temp;
  3374     032A  0875               	movf	I2C_Master_Read@temp+1,w
  3375     032B  00F1               	movwf	?_I2C_Master_Read+1
  3376     032C  0874               	movf	I2C_Master_Read@temp,w
  3377     032D  00F0               	movwf	?_I2C_Master_Read
  3378     032E                     l52:
  3379     032E  0008               	return
  3380     032F                     __end_of_I2C_Master_Read:
  3381                           
  3382                           	psect	text21
  3383     0237                     __ptext21:	
  3384 ;; *************** function _I2C_Master_Wait *****************
  3385 ;; Defined at:
  3386 ;;		line 32 in file "I2C.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;		None
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3400 ;;      Params:         0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0
  3403 ;;      Totals:         0       0       0       0       0
  3404 ;;Total ram usage:        0 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_I2C_Master_Start
  3410 ;;		_I2C_Master_RepeatedStart
  3411 ;;		_I2C_Master_Stop
  3412 ;;		_I2C_Master_Write
  3413 ;;		_I2C_Master_Read
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417     0237                     _I2C_Master_Wait:	
  3418                           ;psect for function _I2C_Master_Wait
  3419                           
  3420     0237                     l1192:	
  3421                           ;incstack = 0
  3422                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3423                           
  3424     0237                     l32:	
  3425                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3426                           
  3427     0237  1683               	bsf	3,5	;RP0=1, select bank1
  3428     0238  1303               	bcf	3,6	;RP1=0, select bank1
  3429     0239  1914               	btfsc	20,2	;volatile
  3430     023A  2A3C               	goto	u621
  3431     023B  2A3D               	goto	u620
  3432     023C                     u621:
  3433     023C  2A37               	goto	l32
  3434     023D                     u620:
  3435     023D                     l1194:
  3436     023D  0811               	movf	17,w	;volatile
  3437     023E  391F               	andlw	31
  3438     023F  1D03               	btfss	3,2
  3439     0240  2A42               	goto	u631
  3440     0241  2A43               	goto	u630
  3441     0242                     u631:
  3442     0242  2A37               	goto	l32
  3443     0243                     u630:
  3444     0243                     l35:
  3445     0243  0008               	return
  3446     0244                     __end_of_I2C_Master_Wait:
  3447     007E                     btemp	set	126	;btemp
  3448     007E                     wtemp0	set	126
  3449                           
  3450                           	psect	idloc
  3451                           
  3452                           ;Config register IDLOC0 @ 0x2000
  3453                           ;	unspecified, using default values
  3454     2000                     	org	8192
  3455     2000  3FFF               	dw	16383
  3456                           
  3457                           ;Config register IDLOC1 @ 0x2001
  3458                           ;	unspecified, using default values
  3459     2001                     	org	8193
  3460     2001  3FFF               	dw	16383
  3461                           
  3462                           ;Config register IDLOC2 @ 0x2002
  3463                           ;	unspecified, using default values
  3464     2002                     	org	8194
  3465     2002  3FFF               	dw	16383
  3466                           
  3467                           ;Config register IDLOC3 @ 0x2003
  3468                           ;	unspecified, using default values
  3469     2003                     	org	8195
  3470     2003  3FFF               	dw	16383
  3471                           
  3472                           	psect	config
  3473                           
  3474                           ;Config register CONFIG1 @ 0x2007
  3475                           ;	Oscillator Selection bits
  3476                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3477                           ;	Watchdog Timer Enable bit
  3478                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3479                           ;	Power-up Timer Enable bit
  3480                           ;	PWRTE = OFF, PWRT disabled
  3481                           ;	RE3/MCLR pin function select bit
  3482                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3483                           ;	Code Protection bit
  3484                           ;	CP = OFF, Program memory code protection is disabled
  3485                           ;	Data Code Protection bit
  3486                           ;	CPD = OFF, Data memory code protection is disabled
  3487                           ;	Brown Out Reset Selection bits
  3488                           ;	BOREN = OFF, BOR disabled
  3489                           ;	Internal External Switchover bit
  3490                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3491                           ;	Fail-Safe Clock Monitor Enabled bit
  3492                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3493                           ;	Low Voltage Programming Enable bit
  3494                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3495                           ;	In-Circuit Debugger Mode bit
  3496                           ;	DEBUG = 0x1, unprogrammed default
  3497     2007                     	org	8199
  3498     2007  20D5               	dw	8405
  3499                           
  3500                           ;Config register CONFIG2 @ 0x2008
  3501                           ;	Brown-out Reset Selection bit
  3502                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3503                           ;	Flash Program Memory Self Write Enable bits
  3504                           ;	WRT = OFF, Write protection off
  3505     2008                     	org	8200
  3506     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[7]), RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_RTC_display
    _main->_decimal_to_bcd
    _I2C_Master_Init->___lldiv
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Write_String
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9045
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3888
                                             12 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     420
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     706
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
     _Lcd_Write_String
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 03 18:31:55 2023

                               _i 0051                                 pc 0002                    ___bmul@product 0072  
                              l32 0237                                l41 021A                                l50 0326  
                              l35 0243                                l51 0329                                l52 032E  
                              l44 022C                                l29 03CB                                l38 0223  
                              l47 0236                      ___awdiv@sign 0076                                fsr 0004  
                  _decimal_to_bcd 032F                       _RTC_display 06A1                               l112 0281  
                             l122 07E6                               l115 035E                               l300 026B  
                             l133 0300                               l150 02C5                               l310 056F  
                             l151 02C8                               l152 02CE                               l153 02CF  
                             l161 029B                               l154 02D5                               l170 0453  
                             l155 02D6                               l156 02DC                               l173 0509  
                             l158 02DD                               l182 040D                               l176 0393  
                             l440 04AC                               l427 05D6                               _GIE 005F  
                             _RD4 0044                               _RD5 0045                               _RC7 003F  
                             _RD6 0046                               _RD7 0047                               u500 02DA  
                             u501 02D9                               u520 025D                               u600 0567  
                             u521 025C                               u601 0566                               u530 026A  
                             u610 03AB                               u515 036C                               u531 0269  
                             u620 023D                               u700 03FB                               u540 051A  
                             u621 023C                               u541 0519                               u630 0243  
                             u470 02C1                               u710 040D                               u631 0242  
                             u471 02C0                               u711 040C                               u615 03A6  
                             u480 02CC                               u800 05C8                               u720 0575  
                             u560 052E                               u481 02CB                               u801 05C7  
                             u721 0574                               u561 052D                               u490 02D3  
                             u650 0414                               u810 05CD                               u730 0580  
                             u491 02D2                               u651 0413                               u811 05CC  
                             u731 057F                               u555 051F                               u740 0591  
                             u900 04A3                               u820 0459                               u580 0549  
                             u741 0590                               u901 04A2                               u821 0458  
                             u645 0275                               u581 0548                               u910 0322  
                             u670 0437                               u830 0464                               u911 0321  
                             u671 0436                               u831 0463                               u575 0530  
                             u760 05A3                               u840 046F                               u665 041A  
                             u761 05A2                               u841 046E                               u585 0545  
                             u690 03D9                               u755 0595                               u595 0559  
                             u780 05B4                               u860 0481                               u685 043D  
                             u781 05B3                               u861 0480                               u925 0345  
                             u870 048B                               u775 05A4                               u871 048A  
                             u855 0473                               u785 05B0                               u937 061C  
                             u890 049E                               u795 05BC                               u891 049D  
                             u875 0487                               u947 0680                               u957 037C  
                             u885 0492                               u967 038D                               u977 04B7  
                             u987 04C6                               u997 04D5                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0076                              l1110 02DA  
                            l1102 02BD                              l1104 02C1                              l1120 0298  
                            l1112 0283                              l1200 040F                              l1106 02CC  
                            l1114 0286                              l1202 0414                              l1210 0431  
                            l1130 037A                              l1122 0360                              l1108 02D3  
                            l1116 028C                              l1212 0437                              l1204 0421  
                            l1140 0390                              l1132 037F                              l1124 0366  
                            l1220 03CC                              l1300 0498                              l1310 021B  
                            l1118 028F                              l1214 0444                              l1206 0424  
                            l1134 0382                              l1126 0369                              l1222 03CF  
                            l1230 0571                              l1302 049E                              l1150 0263  
                            l1142 0258                              l1312 0220                              l1320 0229  
                            l1216 0447                              l1208 042A                              l1136 0388  
                            l1128 0377                              l1224 03EB                              l1240 0585  
                            l1232 0575                              l1304 04A3                              l1152 026A  
                            l1144 0259                              l1160 051D                              l1400 068C  
                            l1330 030E                              l1314 0212                              l1322 022D  
                            l1218 044D                              l1138 038B                              l1226 03F1  
                            l1250 059B                              l1242 0589                              l1234 057A  
                            l1306 04A8                              l1146 025D                              l1170 0557  
                            l1162 052A                              l1402 0694                              l1332 0317  
                            l1316 0217                              l1324 0232                              l1260 05BB  
                            l1252 059F                              l1244 058B                              l1236 057C  
                            l1228 0570                              l1148 0261                              l1172 0558  
                            l1164 052E                              l1156 050A                              l1180 0394  
                            l1334 031C                              l1326 0301                              l1318 0224  
                            l1262 05C2                              l1254 05A3                              l1246 0591  
                            l1238 0580                              l1342 0332                              l1174 0561  
                            l1166 0537                              l1158 051A                              l1190 03CA  
                            l1182 0398                              l1350 02DE                              l1192 0237  
                            l1336 0322                              l1328 0306                              l1256 05B4  
                            l1248 0594                              l1264 05C8                              l1280 0460  
                            l1272 0454                              l1168 0549                              l1176 0567  
                            l1184 039B                              l1360 02F1                              l1352 02E5  
                            l1194 023D                              l1338 032A                              l1370 04D1  
                            l1362 04AD                              l1266 05CD                              l1258 05BA  
                            l1290 0479                              l1282 0464                              l1274 0455  
                            l1346 06A1                              l1186 03C8                              l1354 02E6  
                            l1364 04B3                              l1268 05D2                              l1292 047D  
                            l1284 0469                              l1276 0459                              l1196 026D  
                            l1348 07DD                              l1188 03C9                              l1356 02EC  
                            l1380 0631                              l1372 05D7                              l1366 04BC  
                            l1294 0481                              l1286 046F                              l1278 045E  
                            l1358 02F0                              l1390 065C                              l1382 0639  
                            l1374 0614                              l1368 04CB                              l1296 048B  
                            l1288 0472                              l1392 0661                              l1384 063E  
                            l1376 0623                              l1298 0491                              l1394 066A  
                            l1386 0647                              l1378 0628                              l1396 0673  
                            l1388 064F                              l1398 0687                              STR_1 0013  
                            u1007 0293                              _PEIE 005E                 ?_Lcd_Write_String 0075  
__end_of_I2C_Master_RepeatedStart 021B                              _main 05D7                              _hour 004E  
                            _year 004B                              btemp 007E                              start 0000  
              ??_Lcd_Write_String 0077                   __end_of_Lcd_Cmd 029C                 ___bmul@multiplier 0073  
          __end_of_decimal_to_bcd 035F                  ?_I2C_Master_Init 0040                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
                 __end_of___awdiv 05D7                   __end_of___awmod 04AD                             _ANSEL 0188  
                 __end_of___lldiv 0570                   ___awdiv@divisor 0070                   ___awdiv@counter 0075  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _m_day 004D                             _month 004C                             _setup 02DE  
                           pclath 000A                             status 0003                             wtemp0 007E  
                __end_of_Lcd_Init 050A                  __end_of_Lcd_Port 02DE                   __initialization 07E7  
                    __end_of_main 06A1                   ?_decimal_to_bcd 0070                            ??_main 0048  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070  
              ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072                            ?_setup 0070  
                          _ANSELH 0189                         ??_Lcd_Cmd 0071                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _TRISC6 043E  
                          _TRISC7 043F                            _SSPCON 0014                            _SSPBUF 0013  
        _I2C_Master_RepeatedStart 0212                            ___bmul 0257                         ??___awdiv 0074  
                       ??___awmod 0074                         ??___lldiv 0078                  ___awdiv@quotient 0077  
                          _minute 004F                            _second 0050                   ___awmod@divisor 0070  
                 ___awmod@counter 0075                   Lcd_Set_Cursor@a 0076                   Lcd_Set_Cursor@b 0074  
                 Lcd_Set_Cursor@y 0078                   Lcd_Set_Cursor@z 0077           __end_of__initialization 07FC  
             ___bmul@multiplicand 0070                    __pcstackCOMMON 0070                      __pidataBANK0 029C  
                   __end_of_setup 0301                      ?_RTC_display 0070                    _Lcd_Set_Cursor 040E  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 007E  
                      __pbssBANK0 004B                        __pmaintext 05D7                           ?___bmul 0070  
          __end_of_Lcd_Set_Cursor 0454                        ??_Lcd_Init 0074                        ??_Lcd_Port 0070  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
                  _Lcd_Write_Char 035F                           _Lcd_Cmd 0282                  ??_decimal_to_bcd 0079  
                         ___awdiv 0570                           ___awmod 0454                           ___lldiv 050A  
                 ?_Lcd_Set_Cursor 0074                           __ptext1 02DE                           __ptext2 0394  
                         __ptext3 050A                           __ptext4 032F                           __ptext5 06A1  
                         __ptext6 026C                           __ptext7 0257                           __ptext8 0454  
                         __ptext9 0570                  ___awmod@dividend 0072            __end_of_Lcd_Write_Char 0394  
            end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0040                  I2C_Master_Read@a 0070  
                       Lcd_Port@a 0070                         _PORTCbits 0007                         _TRISCbits 0087  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0075                 Lcd_Write_String@i 007A  
                  __end_of___bmul 026C                  _Lcd_Write_String 03CC               start_initialization 07E7  
                  _bcd_to_decimal 026C                 ??_I2C_Master_Init 0044                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                          ??___bmul 0071  
                      init_fetch0 0244                       __pdataBANK0 0020                   Lcd_Write_Char@a 0074  
                 Lcd_Write_Char@y 0073            __end_of_bcd_to_decimal 0282                         ___latbits 0002  
                   __pcstackBANK0 0040                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 021B  
                _I2C_Master_Write 022D                  ??_Lcd_Set_Cursor 0075                          ?___awdiv 0070  
                        ?___awmod 0070                          ?___lldiv 0070                         __pstrings 0003  
                 ?_bcd_to_decimal 0070              bcd_to_decimal@number 0076                   RTC_display@Date 0020  
                 RTC_display@Time 0031                          Lcd_Cmd@a 0073                       __stringbase 0012  
                ??_Lcd_Write_Char 0071                          _Lcd_Init 04AD                          _Lcd_Port 02BC  
             I2C_Master_Read@temp 0074          __end_of_Lcd_Write_String 040E         ?_I2C_Master_RepeatedStart 0070  
                   ??_RTC_display 007C                __end_of__stringtab 0013                   _I2C_Master_Init 0394  
                 _I2C_Master_Read 0301                   _I2C_Master_Wait 0237                   _I2C_Master_Stop 0224  
                        __ptext10 03CC                          __ptext11 035F                          __ptext20 0301  
                        __ptext12 040E                          __ptext21 0237                          __ptext13 04AD  
                        __ptext14 0282                          __ptext15 02BC                          __ptext16 022D  
                        __ptext17 0224                          __ptext18 021B                          __ptext19 0212  
            decimal_to_bcd@number 0040          __end_of_I2C_Master_Start 0224          __end_of_I2C_Master_Write 0237  
                        init_ram0 0248               __end_of_RTC_display 07E7                Lcd_Write_Char@temp 0072  
                ___lldiv@dividend 0074                         stringcode 000D                        _OSCCONbits 008F  
                ??_bcd_to_decimal 0074           __end_of_I2C_Master_Init 03CC           __end_of_I2C_Master_Read 032F  
         __end_of_I2C_Master_Wait 0244           __end_of_I2C_Master_Stop 022D                Lcd_Set_Cursor@temp 0079  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                          stringdir 000D  
                        stringtab 0003                       _SSPCON2bits 0091  
