

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 10 00:18:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383                           
   384                           	psect	idataBANK0
   385     02DA                     __pidataBANK0:
   386                           
   387                           ;initializer for RTC_display@Date
   388     02DA  3444               	retlw	68
   389     02DB  3441               	retlw	65
   390     02DC  3454               	retlw	84
   391     02DD  3445               	retlw	69
   392     02DE  343A               	retlw	58
   393     02DF  3420               	retlw	32
   394     02E0  3430               	retlw	48
   395     02E1  3430               	retlw	48
   396     02E2  342F               	retlw	47
   397     02E3  3430               	retlw	48
   398     02E4  3430               	retlw	48
   399     02E5  342F               	retlw	47
   400     02E6  3432               	retlw	50
   401     02E7  3430               	retlw	48
   402     02E8  3430               	retlw	48
   403     02E9  3430               	retlw	48
   404     02EA  3400               	retlw	0
   405                           
   406                           ;initializer for RTC_display@Time
   407     02EB  3454               	retlw	84
   408     02EC  3449               	retlw	73
   409     02ED  344D               	retlw	77
   410     02EE  3445               	retlw	69
   411     02EF  343A               	retlw	58
   412     02F0  3420               	retlw	32
   413     02F1  3430               	retlw	48
   414     02F2  3430               	retlw	48
   415     02F3  343A               	retlw	58
   416     02F4  3430               	retlw	48
   417     02F5  3430               	retlw	48
   418     02F6  343A               	retlw	58
   419     02F7  3430               	retlw	48
   420     02F8  3430               	retlw	48
   421     02F9  3400               	retlw	0
   422     0008                     _PORTD	set	8
   423     0005                     _PORTA	set	5
   424     0006                     _PORTB	set	6
   425     0007                     _PORTCbits	set	7
   426     0013                     _SSPBUF	set	19
   427     0014                     _SSPCON	set	20
   428     003F                     _RC7	set	63
   429     0047                     _RD7	set	71
   430     0046                     _RD6	set	70
   431     0045                     _RD5	set	69
   432     0044                     _RD4	set	68
   433     0063                     _SSPIF	set	99
   434     005E                     _PEIE	set	94
   435     005F                     _GIE	set	95
   436     008F                     _OSCCONbits	set	143
   437     0088                     _TRISD	set	136
   438     0086                     _TRISB	set	134
   439     0085                     _TRISA	set	133
   440     0091                     _SSPCON2bits	set	145
   441     0087                     _TRISCbits	set	135
   442     0094                     _SSPSTAT	set	148
   443     0093                     _SSPADD	set	147
   444     0091                     _SSPCON2	set	145
   445     043F                     _TRISC7	set	1087
   446     043E                     _TRISC6	set	1086
   447     0463                     _SSPIE	set	1123
   448     043C                     _TRISC4	set	1084
   449     043B                     _TRISC3	set	1083
   450     0189                     _ANSELH	set	393
   451     0188                     _ANSEL	set	392
   452                           
   453                           	psect	cinit
   454     07E7                     start_initialization:	
   455                           ; #config settings
   456                           
   457     07E7                     __initialization:
   458                           
   459                           ; Initialize objects allocated to BANK0
   460     07E7  1383               	bcf	3,7	;select IRP bank0
   461     07E8  3040               	movlw	low (__pdataBANK0+32)
   462     07E9  00FD               	movwf	btemp+-1
   463     07EA  3002               	movlw	high __pidataBANK0
   464     07EB  00FE               	movwf	btemp
   465     07EC  30DA               	movlw	low __pidataBANK0
   466     07ED  00FF               	movwf	btemp+1
   467     07EE  3020               	movlw	low __pdataBANK0
   468     07EF  0084               	movwf	4
   469     07F0  120A  118A  2270  120A  118A  	fcall	init_ram0
   470                           
   471                           ; Clear objects allocated to BANK0
   472     07F5  01CB               	clrf	__pbssBANK0& (0+127)
   473     07F6  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   474     07F7  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   475     07F8  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   476     07F9  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   477     07FA  01D0               	clrf	(__pbssBANK0+5)& (0+127)
   478     07FB  01D1               	clrf	(__pbssBANK0+6)& (0+127)
   479     07FC                     end_of_initialization:	
   480                           ;End of C runtime variable initialization code
   481                           
   482     07FC                     __end_of__initialization:
   483     07FC  0183               	clrf	3
   484     07FD  120A  118A  2DD1   	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssBANK0
   487     004B                     __pbssBANK0:
   488     004B                     _year:
   489     004B                     	ds	1
   490     004C                     _month:
   491     004C                     	ds	1
   492     004D                     _m_day:
   493     004D                     	ds	1
   494     004E                     _hour:
   495     004E                     	ds	1
   496     004F                     _minute:
   497     004F                     	ds	1
   498     0050                     _second:
   499     0050                     	ds	1
   500     0051                     _i:
   501     0051                     	ds	1
   502                           
   503                           	psect	dataBANK0
   504     0020                     __pdataBANK0:
   505     0020                     RTC_display@Date:
   506     0020                     	ds	17
   507     0031                     RTC_display@Time:
   508     0031                     	ds	15
   509                           
   510                           	psect	inittext
   511     026C                     init_fetch0:	
   512                           ;	Called with low address in FSR and high address in W
   513                           
   514     026C  087E               	movf	btemp,w
   515     026D  008A               	movwf	10
   516     026E  087F               	movf	btemp+1,w
   517     026F  0082               	movwf	2
   518     0270                     init_ram0:	
   519                           ;Called with:
   520                           ;	high address of idata address in btemp 
   521                           ;	low address of idata address in btemp+1 
   522                           ;	low address of data in FSR
   523                           ;	high address + 1 of data in btemp-1
   524                           
   525     0270  120A  118A  226C  120A  118A  	fcall	init_fetch0
   526     0275  0080               	movwf	0
   527     0276  0A84               	incf	4,f
   528     0277  0804               	movf	4,w
   529     0278  067D               	xorwf	btemp+-1,w
   530     0279  1903               	btfsc	3,2
   531     027A  3400               	retlw	0
   532     027B  0AFF               	incf	btemp+1,f
   533     027C  1903               	btfsc	3,2
   534     027D  0AFE               	incf	btemp,f
   535     027E  2A70               	goto	init_ram0
   536                           
   537                           	psect	cstackCOMMON
   538     0070                     __pcstackCOMMON:
   539     0070                     ?_setup:
   540     0070                     ??_setup:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_I2C_Master_Wait:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ??_I2C_Master_Wait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ?_I2C_Master_Start:	
   550                           ; 1 bytes @ 0x0
   551                           
   552     0070                     ??_I2C_Master_Start:	
   553                           ; 1 bytes @ 0x0
   554                           
   555     0070                     ?_I2C_Master_Stop:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ??_I2C_Master_Stop:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_I2C_Master_Write:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_Lcd_Port:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_Lcd_Port:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_Lcd_Cmd:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_Lcd_Init:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_Lcd_Write_Char:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_Lcd_Write_String:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_bcd_to_decimal:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_decimal_to_bcd:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_RTC_display:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?___bmul:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_I2C_Master_Read:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?___awdiv:	
   601                           ; 2 bytes @ 0x0
   602                           
   603     0070                     ?___awmod:	
   604                           ; 2 bytes @ 0x0
   605                           
   606     0070                     ?___lldiv:	
   607                           ; 2 bytes @ 0x0
   608                           
   609     0070                     Lcd_Port@a:	
   610                           ; 4 bytes @ 0x0
   611                           
   612     0070                     ___bmul@multiplicand:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     I2C_Master_Write@d:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     I2C_Master_Read@a:	
   619                           ; 2 bytes @ 0x0
   620                           
   621     0070                     ___awdiv@divisor:	
   622                           ; 2 bytes @ 0x0
   623                           
   624     0070                     ___awmod@divisor:	
   625                           ; 2 bytes @ 0x0
   626                           
   627     0070                     ___lldiv@divisor:	
   628                           ; 2 bytes @ 0x0
   629                           
   630                           
   631                           ; 4 bytes @ 0x0
   632     0070                     	ds	1
   633     0071                     ??_Lcd_Cmd:
   634     0071                     ??_Lcd_Write_Char:	
   635                           ; 1 bytes @ 0x1
   636                           
   637     0071                     ??___bmul:	
   638                           ; 1 bytes @ 0x1
   639                           
   640                           
   641                           ; 1 bytes @ 0x1
   642     0071                     	ds	1
   643     0072                     ??_I2C_Master_Write:
   644     0072                     ??_I2C_Master_Read:	
   645                           ; 1 bytes @ 0x2
   646                           
   647     0072                     Lcd_Write_Char@temp:	
   648                           ; 1 bytes @ 0x2
   649                           
   650     0072                     ___bmul@product:	
   651                           ; 1 bytes @ 0x2
   652                           
   653     0072                     ___awdiv@dividend:	
   654                           ; 1 bytes @ 0x2
   655                           
   656     0072                     ___awmod@dividend:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 2 bytes @ 0x2
   661     0072                     	ds	1
   662     0073                     Lcd_Cmd@a:
   663     0073                     Lcd_Write_Char@y:	
   664                           ; 1 bytes @ 0x3
   665                           
   666     0073                     ___bmul@multiplier:	
   667                           ; 1 bytes @ 0x3
   668                           
   669                           
   670                           ; 1 bytes @ 0x3
   671     0073                     	ds	1
   672     0074                     ?_Lcd_Set_Cursor:
   673     0074                     ??_Lcd_Init:	
   674                           ; 1 bytes @ 0x4
   675                           
   676     0074                     ??_bcd_to_decimal:	
   677                           ; 1 bytes @ 0x4
   678                           
   679     0074                     ??___awdiv:	
   680                           ; 1 bytes @ 0x4
   681                           
   682     0074                     ??___awmod:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     Lcd_Set_Cursor@b:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     Lcd_Write_Char@a:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     I2C_Master_Read@temp:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ___lldiv@dividend:	
   695                           ; 2 bytes @ 0x4
   696                           
   697                           
   698                           ; 4 bytes @ 0x4
   699     0074                     	ds	1
   700     0075                     ??_Lcd_Set_Cursor:
   701     0075                     ??_Lcd_Write_String:	
   702                           ; 1 bytes @ 0x5
   703                           
   704     0075                     ___awdiv@counter:	
   705                           ; 1 bytes @ 0x5
   706                           
   707     0075                     ___awmod@counter:	
   708                           ; 1 bytes @ 0x5
   709                           
   710                           
   711                           ; 1 bytes @ 0x5
   712     0075                     	ds	1
   713     0076                     Lcd_Set_Cursor@a:
   714     0076                     bcd_to_decimal@number:	
   715                           ; 1 bytes @ 0x6
   716                           
   717     0076                     ___awdiv@sign:	
   718                           ; 1 bytes @ 0x6
   719                           
   720     0076                     ___awmod@sign:	
   721                           ; 1 bytes @ 0x6
   722                           
   723     0076                     Lcd_Write_String@i:	
   724                           ; 1 bytes @ 0x6
   725                           
   726                           
   727                           ; 2 bytes @ 0x6
   728     0076                     	ds	1
   729     0077                     Lcd_Set_Cursor@z:
   730     0077                     ___awdiv@quotient:	
   731                           ; 1 bytes @ 0x7
   732                           
   733                           
   734                           ; 2 bytes @ 0x7
   735     0077                     	ds	1
   736     0078                     ??___lldiv:
   737     0078                     Lcd_Set_Cursor@y:	
   738                           ; 1 bytes @ 0x8
   739                           
   740     0078                     Lcd_Write_String@a:	
   741                           ; 1 bytes @ 0x8
   742                           
   743                           
   744                           ; 1 bytes @ 0x8
   745     0078                     	ds	1
   746     0079                     ??_decimal_to_bcd:
   747     0079                     Lcd_Set_Cursor@temp:	
   748                           ; 1 bytes @ 0x9
   749                           
   750     0079                     ___lldiv@quotient:	
   751                           ; 1 bytes @ 0x9
   752                           
   753                           
   754                           ; 4 bytes @ 0x9
   755     0079                     	ds	1
   756     007A                     ??_RTC_display:
   757                           
   758                           ; 1 bytes @ 0xA
   759     007A                     	ds	3
   760     007D                     ___lldiv@counter:
   761                           
   762                           ; 1 bytes @ 0xD
   763     007D                     	ds	1
   764                           
   765                           	psect	cstackBANK0
   766     0040                     __pcstackBANK0:
   767     0040                     ?_I2C_Master_Init:
   768     0040                     decimal_to_bcd@number:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0040                     I2C_Master_Init@c:	
   772                           ; 1 bytes @ 0x0
   773                           
   774                           
   775                           ; 4 bytes @ 0x0
   776     0040                     	ds	4
   777     0044                     ??_I2C_Master_Init:
   778                           
   779                           ; 1 bytes @ 0x4
   780     0044                     	ds	4
   781     0048                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x8
   784     0048                     	ds	3
   785                           
   786                           	psect	maintext
   787     05D1                     __pmaintext:	
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 98 in file "Postlab4master.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : B00/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       3       0       0       0
   810 ;;      Totals:         0       3       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels required when called: 4
   813 ;; This function calls:
   814 ;;		_I2C_Master_Init
   815 ;;		_I2C_Master_Read
   816 ;;		_I2C_Master_Start
   817 ;;		_I2C_Master_Stop
   818 ;;		_I2C_Master_Write
   819 ;;		_Lcd_Init
   820 ;;		_RTC_display
   821 ;;		_decimal_to_bcd
   822 ;;		_setup
   823 ;; This function is called by:
   824 ;;		Startup code after reset
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828     05D1                     _main:	
   829                           ;psect for function _main
   830                           
   831     05D1                     l1387:	
   832                           ;incstack = 0
   833                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834                           
   835                           
   836                           ;Postlab4master.c: 99:     setup();
   837     05D1  120A  118A  22AA  120A  118A  	fcall	_setup
   838                           
   839                           ;Postlab4master.c: 100:     Lcd_Init();
   840     05D6  120A  118A  24A7  120A  118A  	fcall	_Lcd_Init
   841                           
   842                           ;Postlab4master.c: 102:      I2C_Master_Init(100000);
   843     05DB  3000               	movlw	0
   844     05DC  1283               	bcf	3,5	;RP0=0, select bank0
   845     05DD  1303               	bcf	3,6	;RP1=0, select bank0
   846     05DE  00C3               	movwf	I2C_Master_Init@c+3
   847     05DF  3001               	movlw	1
   848     05E0  00C2               	movwf	I2C_Master_Init@c+2
   849     05E1  3086               	movlw	134
   850     05E2  00C1               	movwf	I2C_Master_Init@c+1
   851     05E3  30A0               	movlw	160
   852     05E4  00C0               	movwf	I2C_Master_Init@c
   853     05E5  120A  118A  23D0  120A  118A  	fcall	_I2C_Master_Init
   854                           
   855                           ;Postlab4master.c: 103:     minute = decimal_to_bcd(0);
   856     05EA  3000               	movlw	0
   857     05EB  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   858     05F0  1283               	bcf	3,5	;RP0=0, select bank0
   859     05F1  1303               	bcf	3,6	;RP1=0, select bank0
   860     05F2  00CF               	movwf	_minute
   861                           
   862                           ;Postlab4master.c: 104:     second = decimal_to_bcd(0);
   863     05F3  3000               	movlw	0
   864     05F4  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   865     05F9  1283               	bcf	3,5	;RP0=0, select bank0
   866     05FA  1303               	bcf	3,6	;RP1=0, select bank0
   867     05FB  00D0               	movwf	_second
   868                           
   869                           ;Postlab4master.c: 105:     hour = decimal_to_bcd(0);
   870     05FC  3000               	movlw	0
   871     05FD  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   872     0602  1283               	bcf	3,5	;RP0=0, select bank0
   873     0603  1303               	bcf	3,6	;RP1=0, select bank0
   874     0604  00CE               	movwf	_hour
   875                           
   876                           ;Postlab4master.c: 106:     m_day = decimal_to_bcd(6);
   877     0605  3006               	movlw	6
   878     0606  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   879     060B  1283               	bcf	3,5	;RP0=0, select bank0
   880     060C  1303               	bcf	3,6	;RP1=0, select bank0
   881     060D  00CD               	movwf	_m_day
   882                           
   883                           ;Postlab4master.c: 107:     month= decimal_to_bcd(8);
   884     060E  3008               	movlw	8
   885     060F  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   886     0614  1283               	bcf	3,5	;RP0=0, select bank0
   887     0615  1303               	bcf	3,6	;RP1=0, select bank0
   888     0616  00CC               	movwf	_month
   889                           
   890                           ;Postlab4master.c: 108:     year= decimal_to_bcd(23);
   891     0617  3017               	movlw	23
   892     0618  120A  118A  236B  120A  118A  	fcall	_decimal_to_bcd
   893     061D  1283               	bcf	3,5	;RP0=0, select bank0
   894     061E  1303               	bcf	3,6	;RP1=0, select bank0
   895     061F  00CB               	movwf	_year
   896     0620                     l193:	
   897                           ;Postlab4master.c: 138:     while(1){
   898                           
   899                           
   900                           ;Postlab4master.c: 139:        I2C_Master_Start();
   901     0620  120A  118A  2243  120A  118A  	fcall	_I2C_Master_Start
   902                           
   903                           ;Postlab4master.c: 140:         I2C_Master_Write(0x24);
   904     0625  3024               	movlw	36
   905     0626  00F0               	movwf	I2C_Master_Write@d
   906     0627  3000               	movlw	0
   907     0628  00F1               	movwf	I2C_Master_Write@d+1
   908     0629  120A  118A  2255  120A  118A  	fcall	_I2C_Master_Write
   909                           
   910                           ;Postlab4master.c: 141:         I2C_Master_Write(PORTB);
   911     062E  1283               	bcf	3,5	;RP0=0, select bank0
   912     062F  1303               	bcf	3,6	;RP1=0, select bank0
   913     0630  0806               	movf	6,w	;volatile
   914     0631  00C8               	movwf	??_main
   915     0632  01C9               	clrf	??_main+1
   916     0633  0848               	movf	??_main,w
   917     0634  00F0               	movwf	I2C_Master_Write@d
   918     0635  0849               	movf	??_main+1,w
   919     0636  00F1               	movwf	I2C_Master_Write@d+1
   920     0637  120A  118A  2255  120A  118A  	fcall	_I2C_Master_Write
   921                           
   922                           ;Postlab4master.c: 142:         I2C_Master_Stop();
   923     063C  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Stop
   924     0641                     l1389:
   925                           
   926                           ;Postlab4master.c: 143:         _delay((unsigned long)((200)*(8000000/4000.0)));
   927     0641  3003               	movlw	3
   928     0642  1283               	bcf	3,5	;RP0=0, select bank0
   929     0643  1303               	bcf	3,6	;RP1=0, select bank0
   930     0644  00CA               	movwf	??_main+2
   931     0645  3008               	movlw	8
   932     0646  00C9               	movwf	??_main+1
   933     0647  3076               	movlw	118
   934     0648  00C8               	movwf	??_main
   935     0649                     u917:
   936     0649  0BC8               	decfsz	??_main,f
   937     064A  2E49               	goto	u917
   938     064B  0BC9               	decfsz	??_main+1,f
   939     064C  2E49               	goto	u917
   940     064D  0BCA               	decfsz	??_main+2,f
   941     064E  2E49               	goto	u917
   942     064F  0000               	nop
   943     0650                     l1391:
   944                           
   945                           ;Postlab4master.c: 145:         I2C_Master_Start();
   946     0650  120A  118A  2243  120A  118A  	fcall	_I2C_Master_Start
   947     0655                     l1393:
   948                           
   949                           ;Postlab4master.c: 146:         I2C_Master_Write(0x25);
   950     0655  3025               	movlw	37
   951     0656  00F0               	movwf	I2C_Master_Write@d
   952     0657  3000               	movlw	0
   953     0658  00F1               	movwf	I2C_Master_Write@d+1
   954     0659  120A  118A  2255  120A  118A  	fcall	_I2C_Master_Write
   955     065E                     l1395:
   956                           
   957                           ;Postlab4master.c: 147:         PORTA = I2C_Master_Read(0);
   958     065E  3000               	movlw	0
   959     065F  00F0               	movwf	I2C_Master_Read@a
   960     0660  00F1               	movwf	I2C_Master_Read@a+1
   961     0661  120A  118A  233D  120A  118A  	fcall	_I2C_Master_Read
   962     0666  0870               	movf	?_I2C_Master_Read,w
   963     0667  1283               	bcf	3,5	;RP0=0, select bank0
   964     0668  1303               	bcf	3,6	;RP1=0, select bank0
   965     0669  0085               	movwf	5	;volatile
   966     066A                     l1397:
   967                           
   968                           ;Postlab4master.c: 148:         I2C_Master_Stop();
   969     066A  120A  118A  224C  120A  118A  	fcall	_I2C_Master_Stop
   970     066F                     l1399:
   971                           
   972                           ;Postlab4master.c: 149:         _delay((unsigned long)((200)*(8000000/4000.0)));
   973     066F  3003               	movlw	3
   974     0670  1283               	bcf	3,5	;RP0=0, select bank0
   975     0671  1303               	bcf	3,6	;RP1=0, select bank0
   976     0672  00CA               	movwf	??_main+2
   977     0673  3008               	movlw	8
   978     0674  00C9               	movwf	??_main+1
   979     0675  3076               	movlw	118
   980     0676  00C8               	movwf	??_main
   981     0677                     u927:
   982     0677  0BC8               	decfsz	??_main,f
   983     0678  2E77               	goto	u927
   984     0679  0BC9               	decfsz	??_main+1,f
   985     067A  2E77               	goto	u927
   986     067B  0BCA               	decfsz	??_main+2,f
   987     067C  2E77               	goto	u927
   988     067D  0000               	nop
   989     067E                     l1401:
   990                           
   991                           ;Postlab4master.c: 187:         _delay((unsigned long)((200)*(8000000/4000.0)));
   992     067E  3003               	movlw	3
   993     067F  1283               	bcf	3,5	;RP0=0, select bank0
   994     0680  1303               	bcf	3,6	;RP1=0, select bank0
   995     0681  00CA               	movwf	??_main+2
   996     0682  3008               	movlw	8
   997     0683  00C9               	movwf	??_main+1
   998     0684  3076               	movlw	118
   999     0685  00C8               	movwf	??_main
  1000     0686                     u937:
  1001     0686  0BC8               	decfsz	??_main,f
  1002     0687  2E86               	goto	u937
  1003     0688  0BC9               	decfsz	??_main+1,f
  1004     0689  2E86               	goto	u937
  1005     068A  0BCA               	decfsz	??_main+2,f
  1006     068B  2E86               	goto	u937
  1007     068C  0000               	nop
  1008     068D                     l1403:
  1009                           
  1010                           ;Postlab4master.c: 191:         RTC_display();
  1011     068D  120A  118A  2696  120A  118A  	fcall	_RTC_display
  1012     0692  2E20               	goto	l193
  1013     0693  120A  118A  2800   	ljmp	start
  1014     0696                     __end_of_main:
  1015                           
  1016                           	psect	text1
  1017     02AA                     __ptext1:	
  1018 ;; *************** function _setup *****************
  1019 ;; Defined at:
  1020 ;;		line 200 in file "Postlab4master.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047     02AA                     _setup:	
  1048                           ;psect for function _setup
  1049                           
  1050     02AA                     l1361:	
  1051                           ;incstack = 0
  1052                           ; Regs used in _setup: [wreg+status,2+status,0]
  1053                           
  1054                           
  1055                           ;Postlab4master.c: 201:     ANSEL = 0;
  1056     02AA  1683               	bsf	3,5	;RP0=1, select bank3
  1057     02AB  1703               	bsf	3,6	;RP1=1, select bank3
  1058     02AC  0188               	clrf	8	;volatile
  1059                           
  1060                           ;Postlab4master.c: 202:     ANSELH = 0;
  1061     02AD  0189               	clrf	9	;volatile
  1062     02AE                     l1363:
  1063                           
  1064                           ;Postlab4master.c: 203:     TRISC6 = 0;
  1065     02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1066     02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1067     02B0  1307               	bcf	7,6	;volatile
  1068     02B1                     l1365:
  1069                           
  1070                           ;Postlab4master.c: 204:     TRISC7 = 0;
  1071     02B1  1387               	bcf	7,7	;volatile
  1072                           
  1073                           ;Postlab4master.c: 205:     TRISA =0;
  1074     02B2  0185               	clrf	5	;volatile
  1075                           
  1076                           ;Postlab4master.c: 206:     TRISB = 0;
  1077     02B3  0186               	clrf	6	;volatile
  1078                           
  1079                           ;Postlab4master.c: 207:     TRISD = 0;
  1080     02B4  0188               	clrf	8	;volatile
  1081                           
  1082                           ;Postlab4master.c: 208:     PORTA = 0;
  1083     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1084     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1085     02B7  0185               	clrf	5	;volatile
  1086                           
  1087                           ;Postlab4master.c: 209:     PORTB = 0;
  1088     02B8  0186               	clrf	6	;volatile
  1089                           
  1090                           ;Postlab4master.c: 210:     PORTD = 0;
  1091     02B9  0188               	clrf	8	;volatile
  1092     02BA                     l1367:
  1093                           
  1094                           ;Postlab4master.c: 214:     OSCCONbits.IRCF = 0b0111;
  1095     02BA  3070               	movlw	112
  1096     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  1097     02BC  1303               	bcf	3,6	;RP1=0, select bank1
  1098     02BD  048F               	iorwf	15,f	;volatile
  1099     02BE                     l1369:
  1100                           
  1101                           ;Postlab4master.c: 215:     OSCCONbits.SCS = 1;
  1102     02BE  140F               	bsf	15,0	;volatile
  1103     02BF                     l199:
  1104     02BF  0008               	return
  1105     02C0                     __end_of_setup:
  1106                           
  1107                           	psect	text2
  1108     036B                     __ptext2:	
  1109 ;; *************** function _decimal_to_bcd *****************
  1110 ;; Defined at:
  1111 ;;		line 57 in file "Postlab4master.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  number          1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  number          1    0[BANK0 ] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      unsigned char 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       1       0       0       0
  1127 ;;      Temps:          5       0       0       0       0
  1128 ;;      Totals:         5       1       0       0       0
  1129 ;;Total ram usage:        6 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 1
  1132 ;; This function calls:
  1133 ;;		___awdiv
  1134 ;;		___awmod
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140     036B                     _decimal_to_bcd:	
  1141                           ;psect for function _decimal_to_bcd
  1142                           
  1143                           
  1144                           ;incstack = 0
  1145                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  1146                           ;decimal_to_bcd@number stored from wreg
  1147     036B  1283               	bcf	3,5	;RP0=0, select bank0
  1148     036C  1303               	bcf	3,6	;RP1=0, select bank0
  1149     036D  00C0               	movwf	decimal_to_bcd@number
  1150     036E                     l1351:
  1151                           
  1152                           ;Postlab4master.c: 58:   return(((number / 10) << 4) + (number % 10));
  1153     036E  300A               	movlw	10
  1154     036F  00F0               	movwf	___awdiv@divisor
  1155     0370  3000               	movlw	0
  1156     0371  00F1               	movwf	___awdiv@divisor+1
  1157     0372  0840               	movf	decimal_to_bcd@number,w
  1158     0373  00F9               	movwf	??_decimal_to_bcd
  1159     0374  01FA               	clrf	??_decimal_to_bcd+1
  1160     0375  0879               	movf	??_decimal_to_bcd,w
  1161     0376  00F2               	movwf	___awdiv@dividend
  1162     0377  087A               	movf	??_decimal_to_bcd+1,w
  1163     0378  00F3               	movwf	___awdiv@dividend+1
  1164     0379  120A  118A  256A  120A  118A  	fcall	___awdiv
  1165     037E  0870               	movf	?___awdiv,w
  1166     037F  00FB               	movwf	??_decimal_to_bcd+2
  1167     0380  3004               	movlw	4
  1168     0381                     u895:
  1169     0381  1003               	clrc
  1170     0382  0DFB               	rlf	??_decimal_to_bcd+2,f
  1171     0383  3EFF               	addlw	-1
  1172     0384  1D03               	skipz
  1173     0385  2B81               	goto	u895
  1174     0386  300A               	movlw	10
  1175     0387  00F0               	movwf	___awmod@divisor
  1176     0388  3000               	movlw	0
  1177     0389  00F1               	movwf	___awmod@divisor+1
  1178     038A  1283               	bcf	3,5	;RP0=0, select bank0
  1179     038B  1303               	bcf	3,6	;RP1=0, select bank0
  1180     038C  0840               	movf	decimal_to_bcd@number,w
  1181     038D  00FC               	movwf	??_decimal_to_bcd+3
  1182     038E  01FD               	clrf	??_decimal_to_bcd+4
  1183     038F  087C               	movf	??_decimal_to_bcd+3,w
  1184     0390  00F2               	movwf	___awmod@dividend
  1185     0391  087D               	movf	??_decimal_to_bcd+4,w
  1186     0392  00F3               	movwf	___awmod@dividend+1
  1187     0393  120A  118A  244E  120A  118A  	fcall	___awmod
  1188     0398  0870               	movf	?___awmod,w
  1189     0399  077B               	addwf	??_decimal_to_bcd+2,w
  1190     039A                     l181:
  1191     039A  0008               	return
  1192     039B                     __end_of_decimal_to_bcd:
  1193                           
  1194                           	psect	text3
  1195     0696                     __ptext3:	
  1196 ;; *************** function _RTC_display *****************
  1197 ;; Defined at:
  1198 ;;		line 60 in file "Postlab4master.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 3
  1219 ;; This function calls:
  1220 ;;		_Lcd_Set_Cursor
  1221 ;;		_Lcd_Write_String
  1222 ;;		___awdiv
  1223 ;;		___awmod
  1224 ;;		_bcd_to_decimal
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230     0696                     _RTC_display:	
  1231                           ;psect for function _RTC_display
  1232                           
  1233     0696                     l1355:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1236                           
  1237                           
  1238                           ;Postlab4master.c: 62:   static char Time[] = "TIME: 00:00:00";;Postlab4master.c: 63:   
      +                          static char Date[] = "DATE: 00/00/2000";;Postlab4master.c: 66:   second = bcd_to_decimal
      +                          (second);
  1239     0696  1283               	bcf	3,5	;RP0=0, select bank0
  1240     0697  1303               	bcf	3,6	;RP1=0, select bank0
  1241     0698  0850               	movf	_second,w
  1242     0699  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1243     069E  1283               	bcf	3,5	;RP0=0, select bank0
  1244     069F  1303               	bcf	3,6	;RP1=0, select bank0
  1245     06A0  00D0               	movwf	_second
  1246                           
  1247                           ;Postlab4master.c: 67:   minute = bcd_to_decimal(minute);
  1248     06A1  084F               	movf	_minute,w
  1249     06A2  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1250     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1251     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1252     06A9  00CF               	movwf	_minute
  1253                           
  1254                           ;Postlab4master.c: 68:   hour = bcd_to_decimal(hour);
  1255     06AA  084E               	movf	_hour,w
  1256     06AB  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1257     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1258     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1259     06B2  00CE               	movwf	_hour
  1260                           
  1261                           ;Postlab4master.c: 69:   m_day = bcd_to_decimal(m_day);
  1262     06B3  084D               	movf	_m_day,w
  1263     06B4  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1264     06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1265     06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1266     06BB  00CD               	movwf	_m_day
  1267                           
  1268                           ;Postlab4master.c: 70:   month = bcd_to_decimal(month);
  1269     06BC  084C               	movf	_month,w
  1270     06BD  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1271     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1272     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1273     06C4  00CC               	movwf	_month
  1274                           
  1275                           ;Postlab4master.c: 71:   year = bcd_to_decimal(year);
  1276     06C5  084B               	movf	_year,w
  1277     06C6  120A  118A  2294  120A  118A  	fcall	_bcd_to_decimal
  1278     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1279     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1280     06CD  00CB               	movwf	_year
  1281                           
  1282                           ;Postlab4master.c: 75:   Time[6] = hour / 10 + '0';
  1283     06CE  300A               	movlw	10
  1284     06CF  00F0               	movwf	___awdiv@divisor
  1285     06D0  3000               	movlw	0
  1286     06D1  00F1               	movwf	___awdiv@divisor+1
  1287     06D2  084E               	movf	_hour,w
  1288     06D3  00FA               	movwf	??_RTC_display
  1289     06D4  01FB               	clrf	??_RTC_display+1
  1290     06D5  087A               	movf	??_RTC_display,w
  1291     06D6  00F2               	movwf	___awdiv@dividend
  1292     06D7  087B               	movf	??_RTC_display+1,w
  1293     06D8  00F3               	movwf	___awdiv@dividend+1
  1294     06D9  120A  118A  256A  120A  118A  	fcall	___awdiv
  1295     06DE  0870               	movf	?___awdiv,w
  1296     06DF  3E30               	addlw	48
  1297     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1298     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1299     06E2  00B7               	movwf	RTC_display@Time+6
  1300                           
  1301                           ;Postlab4master.c: 76:   Time[7] = hour % 10 + '0';
  1302     06E3  300A               	movlw	10
  1303     06E4  00F0               	movwf	___awmod@divisor
  1304     06E5  3000               	movlw	0
  1305     06E6  00F1               	movwf	___awmod@divisor+1
  1306     06E7  084E               	movf	_hour,w
  1307     06E8  00FA               	movwf	??_RTC_display
  1308     06E9  01FB               	clrf	??_RTC_display+1
  1309     06EA  087A               	movf	??_RTC_display,w
  1310     06EB  00F2               	movwf	___awmod@dividend
  1311     06EC  087B               	movf	??_RTC_display+1,w
  1312     06ED  00F3               	movwf	___awmod@dividend+1
  1313     06EE  120A  118A  244E  120A  118A  	fcall	___awmod
  1314     06F3  0870               	movf	?___awmod,w
  1315     06F4  3E30               	addlw	48
  1316     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1317     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1318     06F7  00B8               	movwf	RTC_display@Time+7
  1319                           
  1320                           ;Postlab4master.c: 77:   Time[9] = minute / 10 + '0';
  1321     06F8  300A               	movlw	10
  1322     06F9  00F0               	movwf	___awdiv@divisor
  1323     06FA  3000               	movlw	0
  1324     06FB  00F1               	movwf	___awdiv@divisor+1
  1325     06FC  084F               	movf	_minute,w
  1326     06FD  00FA               	movwf	??_RTC_display
  1327     06FE  01FB               	clrf	??_RTC_display+1
  1328     06FF  087A               	movf	??_RTC_display,w
  1329     0700  00F2               	movwf	___awdiv@dividend
  1330     0701  087B               	movf	??_RTC_display+1,w
  1331     0702  00F3               	movwf	___awdiv@dividend+1
  1332     0703  120A  118A  256A  120A  118A  	fcall	___awdiv
  1333     0708  0870               	movf	?___awdiv,w
  1334     0709  3E30               	addlw	48
  1335     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1336     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1337     070C  00BA               	movwf	RTC_display@Time+9
  1338                           
  1339                           ;Postlab4master.c: 78:   Time[10] = minute % 10 + '0';
  1340     070D  300A               	movlw	10
  1341     070E  00F0               	movwf	___awmod@divisor
  1342     070F  3000               	movlw	0
  1343     0710  00F1               	movwf	___awmod@divisor+1
  1344     0711  084F               	movf	_minute,w
  1345     0712  00FA               	movwf	??_RTC_display
  1346     0713  01FB               	clrf	??_RTC_display+1
  1347     0714  087A               	movf	??_RTC_display,w
  1348     0715  00F2               	movwf	___awmod@dividend
  1349     0716  087B               	movf	??_RTC_display+1,w
  1350     0717  00F3               	movwf	___awmod@dividend+1
  1351     0718  120A  118A  244E  120A  118A  	fcall	___awmod
  1352     071D  0870               	movf	?___awmod,w
  1353     071E  3E30               	addlw	48
  1354     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1355     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1356     0721  00BB               	movwf	RTC_display@Time+10
  1357                           
  1358                           ;Postlab4master.c: 79:   Time[12] = second / 10 + '0';
  1359     0722  300A               	movlw	10
  1360     0723  00F0               	movwf	___awdiv@divisor
  1361     0724  3000               	movlw	0
  1362     0725  00F1               	movwf	___awdiv@divisor+1
  1363     0726  0850               	movf	_second,w
  1364     0727  00FA               	movwf	??_RTC_display
  1365     0728  01FB               	clrf	??_RTC_display+1
  1366     0729  087A               	movf	??_RTC_display,w
  1367     072A  00F2               	movwf	___awdiv@dividend
  1368     072B  087B               	movf	??_RTC_display+1,w
  1369     072C  00F3               	movwf	___awdiv@dividend+1
  1370     072D  120A  118A  256A  120A  118A  	fcall	___awdiv
  1371     0732  0870               	movf	?___awdiv,w
  1372     0733  3E30               	addlw	48
  1373     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1374     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1375     0736  00BD               	movwf	RTC_display@Time+12
  1376                           
  1377                           ;Postlab4master.c: 80:   Time[13] = second % 10 + '0';
  1378     0737  300A               	movlw	10
  1379     0738  00F0               	movwf	___awmod@divisor
  1380     0739  3000               	movlw	0
  1381     073A  00F1               	movwf	___awmod@divisor+1
  1382     073B  0850               	movf	_second,w
  1383     073C  00FA               	movwf	??_RTC_display
  1384     073D  01FB               	clrf	??_RTC_display+1
  1385     073E  087A               	movf	??_RTC_display,w
  1386     073F  00F2               	movwf	___awmod@dividend
  1387     0740  087B               	movf	??_RTC_display+1,w
  1388     0741  00F3               	movwf	___awmod@dividend+1
  1389     0742  120A  118A  244E  120A  118A  	fcall	___awmod
  1390     0747  0870               	movf	?___awmod,w
  1391     0748  3E30               	addlw	48
  1392     0749  1283               	bcf	3,5	;RP0=0, select bank0
  1393     074A  1303               	bcf	3,6	;RP1=0, select bank0
  1394     074B  00BE               	movwf	RTC_display@Time+13
  1395                           
  1396                           ;Postlab4master.c: 82:   Date[6] = m_day / 10 + '0';
  1397     074C  300A               	movlw	10
  1398     074D  00F0               	movwf	___awdiv@divisor
  1399     074E  3000               	movlw	0
  1400     074F  00F1               	movwf	___awdiv@divisor+1
  1401     0750  084D               	movf	_m_day,w
  1402     0751  00FA               	movwf	??_RTC_display
  1403     0752  01FB               	clrf	??_RTC_display+1
  1404     0753  087A               	movf	??_RTC_display,w
  1405     0754  00F2               	movwf	___awdiv@dividend
  1406     0755  087B               	movf	??_RTC_display+1,w
  1407     0756  00F3               	movwf	___awdiv@dividend+1
  1408     0757  120A  118A  256A  120A  118A  	fcall	___awdiv
  1409     075C  0870               	movf	?___awdiv,w
  1410     075D  3E30               	addlw	48
  1411     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1412     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1413     0760  00A6               	movwf	RTC_display@Date+6
  1414                           
  1415                           ;Postlab4master.c: 83:   Date[7] = m_day % 10 + '0';
  1416     0761  300A               	movlw	10
  1417     0762  00F0               	movwf	___awmod@divisor
  1418     0763  3000               	movlw	0
  1419     0764  00F1               	movwf	___awmod@divisor+1
  1420     0765  084D               	movf	_m_day,w
  1421     0766  00FA               	movwf	??_RTC_display
  1422     0767  01FB               	clrf	??_RTC_display+1
  1423     0768  087A               	movf	??_RTC_display,w
  1424     0769  00F2               	movwf	___awmod@dividend
  1425     076A  087B               	movf	??_RTC_display+1,w
  1426     076B  00F3               	movwf	___awmod@dividend+1
  1427     076C  120A  118A  244E  120A  118A  	fcall	___awmod
  1428     0771  0870               	movf	?___awmod,w
  1429     0772  3E30               	addlw	48
  1430     0773  1283               	bcf	3,5	;RP0=0, select bank0
  1431     0774  1303               	bcf	3,6	;RP1=0, select bank0
  1432     0775  00A7               	movwf	RTC_display@Date+7
  1433                           
  1434                           ;Postlab4master.c: 84:   Date[9] = month / 10 + '0';
  1435     0776  300A               	movlw	10
  1436     0777  00F0               	movwf	___awdiv@divisor
  1437     0778  3000               	movlw	0
  1438     0779  00F1               	movwf	___awdiv@divisor+1
  1439     077A  084C               	movf	_month,w
  1440     077B  00FA               	movwf	??_RTC_display
  1441     077C  01FB               	clrf	??_RTC_display+1
  1442     077D  087A               	movf	??_RTC_display,w
  1443     077E  00F2               	movwf	___awdiv@dividend
  1444     077F  087B               	movf	??_RTC_display+1,w
  1445     0780  00F3               	movwf	___awdiv@dividend+1
  1446     0781  120A  118A  256A  120A  118A  	fcall	___awdiv
  1447     0786  0870               	movf	?___awdiv,w
  1448     0787  3E30               	addlw	48
  1449     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1450     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1451     078A  00A9               	movwf	RTC_display@Date+9
  1452                           
  1453                           ;Postlab4master.c: 85:   Date[10] = month % 10 + '0';
  1454     078B  300A               	movlw	10
  1455     078C  00F0               	movwf	___awmod@divisor
  1456     078D  3000               	movlw	0
  1457     078E  00F1               	movwf	___awmod@divisor+1
  1458     078F  084C               	movf	_month,w
  1459     0790  00FA               	movwf	??_RTC_display
  1460     0791  01FB               	clrf	??_RTC_display+1
  1461     0792  087A               	movf	??_RTC_display,w
  1462     0793  00F2               	movwf	___awmod@dividend
  1463     0794  087B               	movf	??_RTC_display+1,w
  1464     0795  00F3               	movwf	___awmod@dividend+1
  1465     0796  120A  118A  244E  120A  118A  	fcall	___awmod
  1466     079B  0870               	movf	?___awmod,w
  1467     079C  3E30               	addlw	48
  1468     079D  1283               	bcf	3,5	;RP0=0, select bank0
  1469     079E  1303               	bcf	3,6	;RP1=0, select bank0
  1470     079F  00AA               	movwf	RTC_display@Date+10
  1471                           
  1472                           ;Postlab4master.c: 86:   Date[14] = year / 10 + '0';
  1473     07A0  300A               	movlw	10
  1474     07A1  00F0               	movwf	___awdiv@divisor
  1475     07A2  3000               	movlw	0
  1476     07A3  00F1               	movwf	___awdiv@divisor+1
  1477     07A4  084B               	movf	_year,w
  1478     07A5  00FA               	movwf	??_RTC_display
  1479     07A6  01FB               	clrf	??_RTC_display+1
  1480     07A7  087A               	movf	??_RTC_display,w
  1481     07A8  00F2               	movwf	___awdiv@dividend
  1482     07A9  087B               	movf	??_RTC_display+1,w
  1483     07AA  00F3               	movwf	___awdiv@dividend+1
  1484     07AB  120A  118A  256A  120A  118A  	fcall	___awdiv
  1485     07B0  0870               	movf	?___awdiv,w
  1486     07B1  3E30               	addlw	48
  1487     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1488     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1489     07B4  00AE               	movwf	RTC_display@Date+14
  1490                           
  1491                           ;Postlab4master.c: 87:   Date[15] = year % 10 + '0';
  1492     07B5  300A               	movlw	10
  1493     07B6  00F0               	movwf	___awmod@divisor
  1494     07B7  3000               	movlw	0
  1495     07B8  00F1               	movwf	___awmod@divisor+1
  1496     07B9  084B               	movf	_year,w
  1497     07BA  00FA               	movwf	??_RTC_display
  1498     07BB  01FB               	clrf	??_RTC_display+1
  1499     07BC  087A               	movf	??_RTC_display,w
  1500     07BD  00F2               	movwf	___awmod@dividend
  1501     07BE  087B               	movf	??_RTC_display+1,w
  1502     07BF  00F3               	movwf	___awmod@dividend+1
  1503     07C0  120A  118A  244E  120A  118A  	fcall	___awmod
  1504     07C5  0870               	movf	?___awmod,w
  1505     07C6  3E30               	addlw	48
  1506     07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1507     07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1508     07C9  00AF               	movwf	RTC_display@Date+15
  1509                           
  1510                           ;Postlab4master.c: 89:  Lcd_Set_Cursor(1,1);
  1511     07CA  01F4               	clrf	Lcd_Set_Cursor@b
  1512     07CB  0AF4               	incf	Lcd_Set_Cursor@b,f
  1513     07CC  3001               	movlw	1
  1514     07CD  120A  118A  2408  120A  118A  	fcall	_Lcd_Set_Cursor
  1515     07D2                     l1357:
  1516                           
  1517                           ;Postlab4master.c: 90:   Lcd_Write_String(Time);
  1518     07D2  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  1519     07D3  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  1520     07D8                     l1359:
  1521                           
  1522                           ;Postlab4master.c: 91:   Lcd_Set_Cursor(2,1);
  1523     07D8  01F4               	clrf	Lcd_Set_Cursor@b
  1524     07D9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1525     07DA  3002               	movlw	2
  1526     07DB  120A  118A  2408  120A  118A  	fcall	_Lcd_Set_Cursor
  1527                           
  1528                           ;Postlab4master.c: 92:   Lcd_Write_String(Date);
  1529     07E0  3020               	movlw	(low (RTC_display@Date| 0))& (0+255)
  1530     07E1  120A  118A  22FA  120A  118A  	fcall	_Lcd_Write_String
  1531     07E6                     l188:
  1532     07E6  0008               	return
  1533     07E7                     __end_of_RTC_display:
  1534                           
  1535                           	psect	text4
  1536     0294                     __ptext4:	
  1537 ;; *************** function _bcd_to_decimal *****************
  1538 ;; Defined at:
  1539 ;;		line 52 in file "Postlab4master.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  number          1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  number          1    6[COMMON] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      unsigned char 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0
  1555 ;;      Temps:          2       0       0       0       0
  1556 ;;      Totals:         3       0       0       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used: 1
  1559 ;; Hardware stack levels required when called: 1
  1560 ;; This function calls:
  1561 ;;		___bmul
  1562 ;; This function is called by:
  1563 ;;		_RTC_display
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567     0294                     _bcd_to_decimal:	
  1568                           ;psect for function _bcd_to_decimal
  1569                           
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  1573                           ;bcd_to_decimal@number stored from wreg
  1574     0294  00F6               	movwf	bcd_to_decimal@number
  1575     0295                     l1191:
  1576                           
  1577                           ;Postlab4master.c: 53:   return((number >> 4) * 10 + (number & 0x0F));
  1578     0295  300F               	movlw	15
  1579     0296  0576               	andwf	bcd_to_decimal@number,w
  1580     0297  00F4               	movwf	??_bcd_to_decimal
  1581     0298  300A               	movlw	10
  1582     0299  00F0               	movwf	___bmul@multiplicand
  1583     029A  0876               	movf	bcd_to_decimal@number,w
  1584     029B  00F5               	movwf	??_bcd_to_decimal+1
  1585     029C  3004               	movlw	4
  1586     029D                     u605:
  1587     029D  1003               	clrc
  1588     029E  0CF5               	rrf	??_bcd_to_decimal+1,f
  1589     029F  3EFF               	addlw	-1
  1590     02A0  1D03               	skipz
  1591     02A1  2A9D               	goto	u605
  1592     02A2  0875               	movf	??_bcd_to_decimal+1,w
  1593     02A3  120A  118A  227F  120A  118A  	fcall	___bmul
  1594     02A8  0774               	addwf	??_bcd_to_decimal,w
  1595     02A9                     l178:
  1596     02A9  0008               	return
  1597     02AA                     __end_of_bcd_to_decimal:
  1598                           
  1599                           	psect	text5
  1600     027F                     __ptext5:	
  1601 ;; *************** function ___bmul *****************
  1602 ;; Defined at:
  1603 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  multiplier      1    wreg     unsigned char 
  1606 ;;  multiplicand    1    0[COMMON] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  multiplier      1    3[COMMON] unsigned char 
  1609 ;;  product         1    2[COMMON] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         1       0       0       0       0
  1620 ;;      Locals:         2       0       0       0       0
  1621 ;;      Temps:          1       0       0       0       0
  1622 ;;      Totals:         4       0       0       0       0
  1623 ;;Total ram usage:        4 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_bcd_to_decimal
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632     027F                     ___bmul:	
  1633                           ;psect for function ___bmul
  1634                           
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1638                           ;___bmul@multiplier stored from wreg
  1639     027F  00F3               	movwf	___bmul@multiplier
  1640     0280                     l1145:
  1641     0280  01F2               	clrf	___bmul@product
  1642     0281                     l1147:
  1643     0281  1C73               	btfss	___bmul@multiplier,0
  1644     0282  2A84               	goto	u511
  1645     0283  2A85               	goto	u510
  1646     0284                     u511:
  1647     0284  2A89               	goto	l1151
  1648     0285                     u510:
  1649     0285                     l1149:
  1650     0285  0870               	movf	___bmul@multiplicand,w
  1651     0286  00F1               	movwf	??___bmul
  1652     0287  0871               	movf	??___bmul,w
  1653     0288  07F2               	addwf	___bmul@product,f
  1654     0289                     l1151:
  1655     0289  1003               	clrc
  1656     028A  0DF0               	rlf	___bmul@multiplicand,f
  1657     028B                     l1153:
  1658     028B  1003               	clrc
  1659     028C  0CF3               	rrf	___bmul@multiplier,f
  1660     028D  0873               	movf	___bmul@multiplier,w
  1661     028E  1D03               	btfss	3,2
  1662     028F  2A91               	goto	u521
  1663     0290  2A92               	goto	u520
  1664     0291                     u521:
  1665     0291  2A81               	goto	l1147
  1666     0292                     u520:
  1667     0292                     l1155:
  1668     0292  0872               	movf	___bmul@product,w
  1669     0293                     l311:
  1670     0293  0008               	return
  1671     0294                     __end_of___bmul:
  1672                           
  1673                           	psect	text6
  1674     044E                     __ptext6:	
  1675 ;; *************** function ___awmod *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  divisor         2    0[COMMON] int 
  1680 ;;  dividend        2    2[COMMON] int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  sign            1    6[COMMON] unsigned char 
  1683 ;;  counter         1    5[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    0[COMMON] int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         4       0       0       0       0
  1694 ;;      Locals:         2       0       0       0       0
  1695 ;;      Temps:          1       0       0       0       0
  1696 ;;      Totals:         7       0       0       0       0
  1697 ;;Total ram usage:        7 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_decimal_to_bcd
  1703 ;;		_RTC_display
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707     044E                     ___awmod:	
  1708                           ;psect for function ___awmod
  1709                           
  1710     044E                     l1263:	
  1711                           ;incstack = 0
  1712                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1713                           
  1714     044E  01F6               	clrf	___awmod@sign
  1715     044F                     l1265:
  1716     044F  1FF3               	btfss	___awmod@dividend+1,7
  1717     0450  2C52               	goto	u781
  1718     0451  2C53               	goto	u780
  1719     0452                     u781:
  1720     0452  2C5A               	goto	l1271
  1721     0453                     u780:
  1722     0453                     l1267:
  1723     0453  09F2               	comf	___awmod@dividend,f
  1724     0454  09F3               	comf	___awmod@dividend+1,f
  1725     0455  0AF2               	incf	___awmod@dividend,f
  1726     0456  1903               	skipnz
  1727     0457  0AF3               	incf	___awmod@dividend+1,f
  1728     0458                     l1269:
  1729     0458  01F6               	clrf	___awmod@sign
  1730     0459  0AF6               	incf	___awmod@sign,f
  1731     045A                     l1271:
  1732     045A  1FF1               	btfss	___awmod@divisor+1,7
  1733     045B  2C5D               	goto	u791
  1734     045C  2C5E               	goto	u790
  1735     045D                     u791:
  1736     045D  2C63               	goto	l1275
  1737     045E                     u790:
  1738     045E                     l1273:
  1739     045E  09F0               	comf	___awmod@divisor,f
  1740     045F  09F1               	comf	___awmod@divisor+1,f
  1741     0460  0AF0               	incf	___awmod@divisor,f
  1742     0461  1903               	skipnz
  1743     0462  0AF1               	incf	___awmod@divisor+1,f
  1744     0463                     l1275:
  1745     0463  0870               	movf	___awmod@divisor,w
  1746     0464  0471               	iorwf	___awmod@divisor+1,w
  1747     0465  1903               	btfsc	3,2
  1748     0466  2C68               	goto	u801
  1749     0467  2C69               	goto	u800
  1750     0468                     u801:
  1751     0468  2C98               	goto	l1293
  1752     0469                     u800:
  1753     0469                     l1277:
  1754     0469  01F5               	clrf	___awmod@counter
  1755     046A  0AF5               	incf	___awmod@counter,f
  1756     046B  2C77               	goto	l1283
  1757     046C                     l1279:
  1758     046C  3001               	movlw	1
  1759     046D                     u815:
  1760     046D  1003               	clrc
  1761     046E  0DF0               	rlf	___awmod@divisor,f
  1762     046F  0DF1               	rlf	___awmod@divisor+1,f
  1763     0470  3EFF               	addlw	-1
  1764     0471  1D03               	skipz
  1765     0472  2C6D               	goto	u815
  1766     0473                     l1281:
  1767     0473  3001               	movlw	1
  1768     0474  00F4               	movwf	??___awmod
  1769     0475  0874               	movf	??___awmod,w
  1770     0476  07F5               	addwf	___awmod@counter,f
  1771     0477                     l1283:
  1772     0477  1FF1               	btfss	___awmod@divisor+1,7
  1773     0478  2C7A               	goto	u821
  1774     0479  2C7B               	goto	u820
  1775     047A                     u821:
  1776     047A  2C6C               	goto	l1279
  1777     047B                     u820:
  1778     047B                     l1285:
  1779     047B  0871               	movf	___awmod@divisor+1,w
  1780     047C  0273               	subwf	___awmod@dividend+1,w
  1781     047D  1D03               	skipz
  1782     047E  2C81               	goto	u835
  1783     047F  0870               	movf	___awmod@divisor,w
  1784     0480  0272               	subwf	___awmod@dividend,w
  1785     0481                     u835:
  1786     0481  1C03               	skipc
  1787     0482  2C84               	goto	u831
  1788     0483  2C85               	goto	u830
  1789     0484                     u831:
  1790     0484  2C8B               	goto	l1289
  1791     0485                     u830:
  1792     0485                     l1287:
  1793     0485  0870               	movf	___awmod@divisor,w
  1794     0486  02F2               	subwf	___awmod@dividend,f
  1795     0487  0871               	movf	___awmod@divisor+1,w
  1796     0488  1C03               	skipc
  1797     0489  03F3               	decf	___awmod@dividend+1,f
  1798     048A  02F3               	subwf	___awmod@dividend+1,f
  1799     048B                     l1289:
  1800     048B  3001               	movlw	1
  1801     048C                     u845:
  1802     048C  1003               	clrc
  1803     048D  0CF1               	rrf	___awmod@divisor+1,f
  1804     048E  0CF0               	rrf	___awmod@divisor,f
  1805     048F  3EFF               	addlw	-1
  1806     0490  1D03               	skipz
  1807     0491  2C8C               	goto	u845
  1808     0492                     l1291:
  1809     0492  3001               	movlw	1
  1810     0493  02F5               	subwf	___awmod@counter,f
  1811     0494  1D03               	btfss	3,2
  1812     0495  2C97               	goto	u851
  1813     0496  2C98               	goto	u850
  1814     0497                     u851:
  1815     0497  2C7B               	goto	l1285
  1816     0498                     u850:
  1817     0498                     l1293:
  1818     0498  0876               	movf	___awmod@sign,w
  1819     0499  1903               	btfsc	3,2
  1820     049A  2C9C               	goto	u861
  1821     049B  2C9D               	goto	u860
  1822     049C                     u861:
  1823     049C  2CA2               	goto	l1297
  1824     049D                     u860:
  1825     049D                     l1295:
  1826     049D  09F2               	comf	___awmod@dividend,f
  1827     049E  09F3               	comf	___awmod@dividend+1,f
  1828     049F  0AF2               	incf	___awmod@dividend,f
  1829     04A0  1903               	skipnz
  1830     04A1  0AF3               	incf	___awmod@dividend+1,f
  1831     04A2                     l1297:
  1832     04A2  0873               	movf	___awmod@dividend+1,w
  1833     04A3  00F1               	movwf	?___awmod+1
  1834     04A4  0872               	movf	___awmod@dividend,w
  1835     04A5  00F0               	movwf	?___awmod
  1836     04A6                     l451:
  1837     04A6  0008               	return
  1838     04A7                     __end_of___awmod:
  1839                           
  1840                           	psect	text7
  1841     056A                     __ptext7:	
  1842 ;; *************** function ___awdiv *****************
  1843 ;; Defined at:
  1844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  divisor         2    0[COMMON] int 
  1847 ;;  dividend        2    2[COMMON] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  quotient        2    7[COMMON] int 
  1850 ;;  sign            1    6[COMMON] unsigned char 
  1851 ;;  counter         1    5[COMMON] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    0[COMMON] int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         4       0       0       0       0
  1862 ;;      Locals:         4       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         9       0       0       0       0
  1865 ;;Total ram usage:        9 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_decimal_to_bcd
  1871 ;;		_RTC_display
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875     056A                     ___awdiv:	
  1876                           ;psect for function ___awdiv
  1877                           
  1878     056A                     l1219:	
  1879                           ;incstack = 0
  1880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1881                           
  1882     056A  01F6               	clrf	___awdiv@sign
  1883     056B                     l1221:
  1884     056B  1FF1               	btfss	___awdiv@divisor+1,7
  1885     056C  2D6E               	goto	u681
  1886     056D  2D6F               	goto	u680
  1887     056E                     u681:
  1888     056E  2D76               	goto	l1227
  1889     056F                     u680:
  1890     056F                     l1223:
  1891     056F  09F0               	comf	___awdiv@divisor,f
  1892     0570  09F1               	comf	___awdiv@divisor+1,f
  1893     0571  0AF0               	incf	___awdiv@divisor,f
  1894     0572  1903               	skipnz
  1895     0573  0AF1               	incf	___awdiv@divisor+1,f
  1896     0574                     l1225:
  1897     0574  01F6               	clrf	___awdiv@sign
  1898     0575  0AF6               	incf	___awdiv@sign,f
  1899     0576                     l1227:
  1900     0576  1FF3               	btfss	___awdiv@dividend+1,7
  1901     0577  2D79               	goto	u691
  1902     0578  2D7A               	goto	u690
  1903     0579                     u691:
  1904     0579  2D83               	goto	l1233
  1905     057A                     u690:
  1906     057A                     l1229:
  1907     057A  09F2               	comf	___awdiv@dividend,f
  1908     057B  09F3               	comf	___awdiv@dividend+1,f
  1909     057C  0AF2               	incf	___awdiv@dividend,f
  1910     057D  1903               	skipnz
  1911     057E  0AF3               	incf	___awdiv@dividend+1,f
  1912     057F                     l1231:
  1913     057F  3001               	movlw	1
  1914     0580  00F4               	movwf	??___awdiv
  1915     0581  0874               	movf	??___awdiv,w
  1916     0582  06F6               	xorwf	___awdiv@sign,f
  1917     0583                     l1233:
  1918     0583  01F7               	clrf	___awdiv@quotient
  1919     0584  01F8               	clrf	___awdiv@quotient+1
  1920     0585                     l1235:
  1921     0585  0870               	movf	___awdiv@divisor,w
  1922     0586  0471               	iorwf	___awdiv@divisor+1,w
  1923     0587  1903               	btfsc	3,2
  1924     0588  2D8A               	goto	u701
  1925     0589  2D8B               	goto	u700
  1926     058A                     u701:
  1927     058A  2DC2               	goto	l1255
  1928     058B                     u700:
  1929     058B                     l1237:
  1930     058B  01F5               	clrf	___awdiv@counter
  1931     058C  0AF5               	incf	___awdiv@counter,f
  1932     058D  2D99               	goto	l1243
  1933     058E                     l1239:
  1934     058E  3001               	movlw	1
  1935     058F                     u715:
  1936     058F  1003               	clrc
  1937     0590  0DF0               	rlf	___awdiv@divisor,f
  1938     0591  0DF1               	rlf	___awdiv@divisor+1,f
  1939     0592  3EFF               	addlw	-1
  1940     0593  1D03               	skipz
  1941     0594  2D8F               	goto	u715
  1942     0595                     l1241:
  1943     0595  3001               	movlw	1
  1944     0596  00F4               	movwf	??___awdiv
  1945     0597  0874               	movf	??___awdiv,w
  1946     0598  07F5               	addwf	___awdiv@counter,f
  1947     0599                     l1243:
  1948     0599  1FF1               	btfss	___awdiv@divisor+1,7
  1949     059A  2D9C               	goto	u721
  1950     059B  2D9D               	goto	u720
  1951     059C                     u721:
  1952     059C  2D8E               	goto	l1239
  1953     059D                     u720:
  1954     059D                     l1245:
  1955     059D  3001               	movlw	1
  1956     059E                     u735:
  1957     059E  1003               	clrc
  1958     059F  0DF7               	rlf	___awdiv@quotient,f
  1959     05A0  0DF8               	rlf	___awdiv@quotient+1,f
  1960     05A1  3EFF               	addlw	-1
  1961     05A2  1D03               	skipz
  1962     05A3  2D9E               	goto	u735
  1963     05A4  0871               	movf	___awdiv@divisor+1,w
  1964     05A5  0273               	subwf	___awdiv@dividend+1,w
  1965     05A6  1D03               	skipz
  1966     05A7  2DAA               	goto	u745
  1967     05A8  0870               	movf	___awdiv@divisor,w
  1968     05A9  0272               	subwf	___awdiv@dividend,w
  1969     05AA                     u745:
  1970     05AA  1C03               	skipc
  1971     05AB  2DAD               	goto	u741
  1972     05AC  2DAE               	goto	u740
  1973     05AD                     u741:
  1974     05AD  2DB5               	goto	l1251
  1975     05AE                     u740:
  1976     05AE                     l1247:
  1977     05AE  0870               	movf	___awdiv@divisor,w
  1978     05AF  02F2               	subwf	___awdiv@dividend,f
  1979     05B0  0871               	movf	___awdiv@divisor+1,w
  1980     05B1  1C03               	skipc
  1981     05B2  03F3               	decf	___awdiv@dividend+1,f
  1982     05B3  02F3               	subwf	___awdiv@dividend+1,f
  1983     05B4                     l1249:
  1984     05B4  1477               	bsf	___awdiv@quotient,0
  1985     05B5                     l1251:
  1986     05B5  3001               	movlw	1
  1987     05B6                     u755:
  1988     05B6  1003               	clrc
  1989     05B7  0CF1               	rrf	___awdiv@divisor+1,f
  1990     05B8  0CF0               	rrf	___awdiv@divisor,f
  1991     05B9  3EFF               	addlw	-1
  1992     05BA  1D03               	skipz
  1993     05BB  2DB6               	goto	u755
  1994     05BC                     l1253:
  1995     05BC  3001               	movlw	1
  1996     05BD  02F5               	subwf	___awdiv@counter,f
  1997     05BE  1D03               	btfss	3,2
  1998     05BF  2DC1               	goto	u761
  1999     05C0  2DC2               	goto	u760
  2000     05C1                     u761:
  2001     05C1  2D9D               	goto	l1245
  2002     05C2                     u760:
  2003     05C2                     l1255:
  2004     05C2  0876               	movf	___awdiv@sign,w
  2005     05C3  1903               	btfsc	3,2
  2006     05C4  2DC6               	goto	u771
  2007     05C5  2DC7               	goto	u770
  2008     05C6                     u771:
  2009     05C6  2DCC               	goto	l1259
  2010     05C7                     u770:
  2011     05C7                     l1257:
  2012     05C7  09F7               	comf	___awdiv@quotient,f
  2013     05C8  09F8               	comf	___awdiv@quotient+1,f
  2014     05C9  0AF7               	incf	___awdiv@quotient,f
  2015     05CA  1903               	skipnz
  2016     05CB  0AF8               	incf	___awdiv@quotient+1,f
  2017     05CC                     l1259:
  2018     05CC  0878               	movf	___awdiv@quotient+1,w
  2019     05CD  00F1               	movwf	?___awdiv+1
  2020     05CE  0877               	movf	___awdiv@quotient,w
  2021     05CF  00F0               	movwf	?___awdiv
  2022     05D0                     l438:
  2023     05D0  0008               	return
  2024     05D1                     __end_of___awdiv:
  2025                           
  2026                           	psect	text8
  2027     02FA                     __ptext8:	
  2028 ;; *************** function _Lcd_Write_String *****************
  2029 ;; Defined at:
  2030 ;;		line 98 in file "LCD.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  a               1    wreg     PTR unsigned char 
  2033 ;;		 -> RTC_display@Date(17), RTC_display@Time(15), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  a               1    8[COMMON] PTR unsigned char 
  2036 ;;		 -> RTC_display@Date(17), RTC_display@Time(15), 
  2037 ;;  i               2    6[COMMON] int 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         0       0       0       0       0
  2048 ;;      Locals:         3       0       0       0       0
  2049 ;;      Temps:          1       0       0       0       0
  2050 ;;      Totals:         4       0       0       0       0
  2051 ;;Total ram usage:        4 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 2
  2054 ;; This function calls:
  2055 ;;		_Lcd_Write_Char
  2056 ;; This function is called by:
  2057 ;;		_RTC_display
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061     02FA                     _Lcd_Write_String:	
  2062                           ;psect for function _Lcd_Write_String
  2063                           
  2064                           
  2065                           ;incstack = 0
  2066                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2067                           ;Lcd_Write_String@a stored from wreg
  2068     02FA  00F8               	movwf	Lcd_Write_String@a
  2069     02FB                     l1183:
  2070                           
  2071                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2072     02FB  01F6               	clrf	Lcd_Write_String@i
  2073     02FC  01F7               	clrf	Lcd_Write_String@i+1
  2074     02FD  2B0F               	goto	l1189
  2075     02FE                     l1185:
  2076                           
  2077                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2078     02FE  0876               	movf	Lcd_Write_String@i,w
  2079     02FF  0778               	addwf	Lcd_Write_String@a,w
  2080     0300  00F5               	movwf	??_Lcd_Write_String
  2081     0301  0875               	movf	??_Lcd_Write_String,w
  2082     0302  0084               	movwf	4
  2083     0303  0800               	movf	0,w
  2084     0304  120A  118A  239B  120A  118A  	fcall	_Lcd_Write_Char
  2085     0309                     l1187:
  2086     0309  3001               	movlw	1
  2087     030A  07F6               	addwf	Lcd_Write_String@i,f
  2088     030B  1803               	skipnc
  2089     030C  0AF7               	incf	Lcd_Write_String@i+1,f
  2090     030D  3000               	movlw	0
  2091     030E  07F7               	addwf	Lcd_Write_String@i+1,f
  2092     030F                     l1189:
  2093     030F  0876               	movf	Lcd_Write_String@i,w
  2094     0310  0778               	addwf	Lcd_Write_String@a,w
  2095     0311  00F5               	movwf	??_Lcd_Write_String
  2096     0312  0875               	movf	??_Lcd_Write_String,w
  2097     0313  0084               	movwf	4
  2098     0314  1383               	bcf	3,7	;select IRP bank0
  2099     0315  0800               	movf	0,w
  2100     0316  1D03               	btfss	3,2
  2101     0317  2B19               	goto	u591
  2102     0318  2B1A               	goto	u590
  2103     0319                     u591:
  2104     0319  2AFE               	goto	l1185
  2105     031A                     u590:
  2106     031A                     l104:
  2107     031A  0008               	return
  2108     031B                     __end_of_Lcd_Write_String:
  2109                           
  2110                           	psect	text9
  2111     039B                     __ptext9:	
  2112 ;; *************** function _Lcd_Write_Char *****************
  2113 ;; Defined at:
  2114 ;;		line 83 in file "LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  a               1    wreg     unsigned char 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  a               1    4[COMMON] unsigned char 
  2119 ;;  y               1    3[COMMON] unsigned char 
  2120 ;;  temp            1    2[COMMON] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         3       0       0       0       0
  2132 ;;      Temps:          1       0       0       0       0
  2133 ;;      Totals:         4       0       0       0       0
  2134 ;;Total ram usage:        4 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 1
  2137 ;; This function calls:
  2138 ;;		_Lcd_Port
  2139 ;; This function is called by:
  2140 ;;		_Lcd_Write_String
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     039B                     _Lcd_Write_Char:	
  2145                           ;psect for function _Lcd_Write_Char
  2146                           
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;Lcd_Write_Char@a stored from wreg
  2151     039B  00F4               	movwf	Lcd_Write_Char@a
  2152     039C                     l1125:
  2153                           
  2154                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2155     039C  0874               	movf	Lcd_Write_Char@a,w
  2156     039D  390F               	andlw	15
  2157     039E  00F2               	movwf	Lcd_Write_Char@temp
  2158                           
  2159                           ;LCD.c: 86:     y = a & 0xF0;
  2160     039F  0874               	movf	Lcd_Write_Char@a,w
  2161     03A0  39F0               	andlw	240
  2162     03A1  00F3               	movwf	Lcd_Write_Char@y
  2163     03A2                     l1127:
  2164                           
  2165                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2166     03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2167     03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2168     03A4  1707               	bsf	7,6	;volatile
  2169     03A5                     l1129:
  2170                           
  2171                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2172     03A5  0873               	movf	Lcd_Write_Char@y,w
  2173     03A6  00F1               	movwf	??_Lcd_Write_Char
  2174     03A7  3004               	movlw	4
  2175     03A8                     u505:
  2176     03A8  1003               	clrc
  2177     03A9  0CF1               	rrf	??_Lcd_Write_Char,f
  2178     03AA  3EFF               	addlw	-1
  2179     03AB  1D03               	skipz
  2180     03AC  2BA8               	goto	u505
  2181     03AD  0871               	movf	??_Lcd_Write_Char,w
  2182     03AE  120A  118A  231B  120A  118A  	fcall	_Lcd_Port
  2183     03B3                     l1131:
  2184                           
  2185                           ;LCD.c: 89:     RC7 = 1;
  2186     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2187     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2188     03B5  1787               	bsf	7,7	;volatile
  2189     03B6                     l1133:
  2190                           
  2191                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2192     03B6  301A               	movlw	26
  2193     03B7  00F1               	movwf	??_Lcd_Write_Char
  2194     03B8                     u947:
  2195     03B8  0BF1               	decfsz	??_Lcd_Write_Char,f
  2196     03B9  2BB8               	goto	u947
  2197     03BA  0000               	nop
  2198     03BB                     l1135:
  2199                           
  2200                           ;LCD.c: 91:     RC7 = 0;
  2201     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2202     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2203     03BD  1387               	bcf	7,7	;volatile
  2204     03BE                     l1137:
  2205                           
  2206                           ;LCD.c: 92:     Lcd_Port(temp);
  2207     03BE  0872               	movf	Lcd_Write_Char@temp,w
  2208     03BF  120A  118A  231B  120A  118A  	fcall	_Lcd_Port
  2209     03C4                     l1139:
  2210                           
  2211                           ;LCD.c: 93:     RC7 = 1;
  2212     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2213     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2214     03C6  1787               	bsf	7,7	;volatile
  2215     03C7                     l1141:
  2216                           
  2217                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2218     03C7  301A               	movlw	26
  2219     03C8  00F1               	movwf	??_Lcd_Write_Char
  2220     03C9                     u957:
  2221     03C9  0BF1               	decfsz	??_Lcd_Write_Char,f
  2222     03CA  2BC9               	goto	u957
  2223     03CB  0000               	nop
  2224     03CC                     l1143:
  2225                           
  2226                           ;LCD.c: 95:     RC7 = 0;
  2227     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2228     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2229     03CE  1387               	bcf	7,7	;volatile
  2230     03CF                     l98:
  2231     03CF  0008               	return
  2232     03D0                     __end_of_Lcd_Write_Char:
  2233                           
  2234                           	psect	text10
  2235     0408                     __ptext10:	
  2236 ;; *************** function _Lcd_Set_Cursor *****************
  2237 ;; Defined at:
  2238 ;;		line 48 in file "LCD.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  a               1    wreg     unsigned char 
  2241 ;;  b               1    4[COMMON] unsigned char 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  a               1    6[COMMON] unsigned char 
  2244 ;;  temp            1    9[COMMON] unsigned char 
  2245 ;;  y               1    8[COMMON] unsigned char 
  2246 ;;  z               1    7[COMMON] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         1       0       0       0       0
  2257 ;;      Locals:         4       0       0       0       0
  2258 ;;      Temps:          1       0       0       0       0
  2259 ;;      Totals:         6       0       0       0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; Hardware stack levels required when called: 2
  2263 ;; This function calls:
  2264 ;;		_Lcd_Cmd
  2265 ;; This function is called by:
  2266 ;;		_RTC_display
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270     0408                     _Lcd_Set_Cursor:	
  2271                           ;psect for function _Lcd_Set_Cursor
  2272                           
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2276                           ;Lcd_Set_Cursor@a stored from wreg
  2277     0408  00F6               	movwf	Lcd_Set_Cursor@a
  2278     0409                     l1163:
  2279                           
  2280                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2281     0409  0376               	decf	Lcd_Set_Cursor@a,w
  2282     040A  1D03               	btfss	3,2
  2283     040B  2C0D               	goto	u551
  2284     040C  2C0E               	goto	u550
  2285     040D                     u551:
  2286     040D  2C2B               	goto	l1173
  2287     040E                     u550:
  2288     040E                     l1165:
  2289                           
  2290                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2291     040E  0874               	movf	Lcd_Set_Cursor@b,w
  2292     040F  3E7F               	addlw	127
  2293     0410  00F9               	movwf	Lcd_Set_Cursor@temp
  2294                           
  2295                           ;LCD.c: 52:         z = temp >> 4;
  2296     0411  0879               	movf	Lcd_Set_Cursor@temp,w
  2297     0412  00F5               	movwf	??_Lcd_Set_Cursor
  2298     0413  3004               	movlw	4
  2299     0414                     u565:
  2300     0414  1003               	clrc
  2301     0415  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2302     0416  3EFF               	addlw	-1
  2303     0417  1D03               	skipz
  2304     0418  2C14               	goto	u565
  2305     0419  0875               	movf	??_Lcd_Set_Cursor,w
  2306     041A  00F7               	movwf	Lcd_Set_Cursor@z
  2307     041B                     l1167:
  2308                           
  2309                           ;LCD.c: 53:         y = temp & 0x0F;
  2310     041B  0879               	movf	Lcd_Set_Cursor@temp,w
  2311     041C  390F               	andlw	15
  2312     041D  00F8               	movwf	Lcd_Set_Cursor@y
  2313     041E                     l1169:
  2314                           
  2315                           ;LCD.c: 54:         Lcd_Cmd(z);
  2316     041E  0877               	movf	Lcd_Set_Cursor@z,w
  2317     041F  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2318     0424                     l1171:
  2319                           
  2320                           ;LCD.c: 55:         Lcd_Cmd(y);
  2321     0424  0878               	movf	Lcd_Set_Cursor@y,w
  2322     0425  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2323                           
  2324                           ;LCD.c: 56:     } else if (a == 2) {
  2325     042A  2C4D               	goto	l92
  2326     042B                     l1173:
  2327     042B  3002               	movlw	2
  2328     042C  0676               	xorwf	Lcd_Set_Cursor@a,w
  2329     042D  1D03               	btfss	3,2
  2330     042E  2C30               	goto	u571
  2331     042F  2C31               	goto	u570
  2332     0430                     u571:
  2333     0430  2C4D               	goto	l92
  2334     0431                     u570:
  2335     0431                     l1175:
  2336                           
  2337                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2338     0431  0874               	movf	Lcd_Set_Cursor@b,w
  2339     0432  3EBF               	addlw	191
  2340     0433  00F9               	movwf	Lcd_Set_Cursor@temp
  2341                           
  2342                           ;LCD.c: 58:         z = temp >> 4;
  2343     0434  0879               	movf	Lcd_Set_Cursor@temp,w
  2344     0435  00F5               	movwf	??_Lcd_Set_Cursor
  2345     0436  3004               	movlw	4
  2346     0437                     u585:
  2347     0437  1003               	clrc
  2348     0438  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2349     0439  3EFF               	addlw	-1
  2350     043A  1D03               	skipz
  2351     043B  2C37               	goto	u585
  2352     043C  0875               	movf	??_Lcd_Set_Cursor,w
  2353     043D  00F7               	movwf	Lcd_Set_Cursor@z
  2354     043E                     l1177:
  2355                           
  2356                           ;LCD.c: 59:         y = temp & 0x0F;
  2357     043E  0879               	movf	Lcd_Set_Cursor@temp,w
  2358     043F  390F               	andlw	15
  2359     0440  00F8               	movwf	Lcd_Set_Cursor@y
  2360     0441                     l1179:
  2361                           
  2362                           ;LCD.c: 60:         Lcd_Cmd(z);
  2363     0441  0877               	movf	Lcd_Set_Cursor@z,w
  2364     0442  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2365     0447                     l1181:
  2366                           
  2367                           ;LCD.c: 61:         Lcd_Cmd(y);
  2368     0447  0878               	movf	Lcd_Set_Cursor@y,w
  2369     0448  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2370     044D                     l92:
  2371     044D  0008               	return
  2372     044E                     __end_of_Lcd_Set_Cursor:
  2373                           
  2374                           	psect	text11
  2375     04A7                     __ptext11:	
  2376 ;; *************** function _Lcd_Init *****************
  2377 ;; Defined at:
  2378 ;;		line 65 in file "LCD.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2392 ;;      Params:         0       0       0       0       0
  2393 ;;      Locals:         0       0       0       0       0
  2394 ;;      Temps:          2       0       0       0       0
  2395 ;;      Totals:         2       0       0       0       0
  2396 ;;Total ram usage:        2 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 2
  2399 ;; This function calls:
  2400 ;;		_Lcd_Cmd
  2401 ;;		_Lcd_Port
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407     04A7                     _Lcd_Init:	
  2408                           ;psect for function _Lcd_Init
  2409                           
  2410     04A7                     l1341:	
  2411                           ;incstack = 0
  2412                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2413                           
  2414                           
  2415                           ;LCD.c: 66:     Lcd_Port(0x00);
  2416     04A7  3000               	movlw	0
  2417     04A8  120A  118A  231B  120A  118A  	fcall	_Lcd_Port
  2418     04AD                     l1343:
  2419                           
  2420                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2421     04AD  3034               	movlw	52
  2422     04AE  00F5               	movwf	??_Lcd_Init+1
  2423     04AF  30F1               	movlw	241
  2424     04B0  00F4               	movwf	??_Lcd_Init
  2425     04B1                     u967:
  2426     04B1  0BF4               	decfsz	??_Lcd_Init,f
  2427     04B2  2CB1               	goto	u967
  2428     04B3  0BF5               	decfsz	??_Lcd_Init+1,f
  2429     04B4  2CB1               	goto	u967
  2430     04B5  2CB6               	nop2
  2431     04B6                     l1345:
  2432                           
  2433                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2434     04B6  3003               	movlw	3
  2435     04B7  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2436                           
  2437                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2438     04BC  300D               	movlw	13
  2439     04BD  00F5               	movwf	??_Lcd_Init+1
  2440     04BE  30FB               	movlw	251
  2441     04BF  00F4               	movwf	??_Lcd_Init
  2442     04C0                     u977:
  2443     04C0  0BF4               	decfsz	??_Lcd_Init,f
  2444     04C1  2CC0               	goto	u977
  2445     04C2  0BF5               	decfsz	??_Lcd_Init+1,f
  2446     04C3  2CC0               	goto	u977
  2447     04C4  2CC5               	nop2
  2448     04C5                     l1347:
  2449                           
  2450                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2451     04C5  3003               	movlw	3
  2452     04C6  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2453     04CB                     l1349:
  2454                           
  2455                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2456     04CB  301D               	movlw	29
  2457     04CC  00F5               	movwf	??_Lcd_Init+1
  2458     04CD  3091               	movlw	145
  2459     04CE  00F4               	movwf	??_Lcd_Init
  2460     04CF                     u987:
  2461     04CF  0BF4               	decfsz	??_Lcd_Init,f
  2462     04D0  2CCF               	goto	u987
  2463     04D1  0BF5               	decfsz	??_Lcd_Init+1,f
  2464     04D2  2CCF               	goto	u987
  2465                           
  2466                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2467     04D3  3003               	movlw	3
  2468     04D4  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2469                           
  2470                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2471     04D9  3002               	movlw	2
  2472     04DA  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2473                           
  2474                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2475     04DF  3002               	movlw	2
  2476     04E0  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2477                           
  2478                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2479     04E5  3008               	movlw	8
  2480     04E6  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2481                           
  2482                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2483     04EB  3000               	movlw	0
  2484     04EC  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2485                           
  2486                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2487     04F1  300C               	movlw	12
  2488     04F2  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2489                           
  2490                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2491     04F7  3000               	movlw	0
  2492     04F8  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2493                           
  2494                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2495     04FD  3006               	movlw	6
  2496     04FE  120A  118A  22C0  120A  118A  	fcall	_Lcd_Cmd
  2497     0503                     l95:
  2498     0503  0008               	return
  2499     0504                     __end_of_Lcd_Init:
  2500                           
  2501                           	psect	text12
  2502     02C0                     __ptext12:	
  2503 ;; *************** function _Lcd_Cmd *****************
  2504 ;; Defined at:
  2505 ;;		line 35 in file "LCD.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  a               1    wreg     unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  a               1    3[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0
  2521 ;;      Temps:          2       0       0       0       0
  2522 ;;      Totals:         3       0       0       0       0
  2523 ;;Total ram usage:        3 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 1
  2526 ;; This function calls:
  2527 ;;		_Lcd_Port
  2528 ;; This function is called by:
  2529 ;;		_Lcd_Set_Cursor
  2530 ;;		_Lcd_Init
  2531 ;;		_Lcd_Clear
  2532 ;;		_Lcd_Shift_Right
  2533 ;;		_Lcd_Shift_Left
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537     02C0                     _Lcd_Cmd:	
  2538                           ;psect for function _Lcd_Cmd
  2539                           
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2543                           ;Lcd_Cmd@a stored from wreg
  2544     02C0  00F3               	movwf	Lcd_Cmd@a
  2545     02C1                     l1115:
  2546                           
  2547                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2548     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2549     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2550     02C3  1307               	bcf	7,6	;volatile
  2551     02C4                     l1117:
  2552                           
  2553                           ;LCD.c: 37:     Lcd_Port(a);
  2554     02C4  0873               	movf	Lcd_Cmd@a,w
  2555     02C5  120A  118A  231B  120A  118A  	fcall	_Lcd_Port
  2556     02CA                     l1119:
  2557                           
  2558                           ;LCD.c: 38:     RC7 = 1;
  2559     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2560     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2561     02CC  1787               	bsf	7,7	;volatile
  2562     02CD                     l1121:
  2563                           
  2564                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2565     02CD  300B               	movlw	11
  2566     02CE  00F2               	movwf	??_Lcd_Cmd+1
  2567     02CF  3062               	movlw	98
  2568     02D0  00F1               	movwf	??_Lcd_Cmd
  2569     02D1                     u997:
  2570     02D1  0BF1               	decfsz	??_Lcd_Cmd,f
  2571     02D2  2AD1               	goto	u997
  2572     02D3  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2573     02D4  2AD1               	goto	u997
  2574     02D5  0000               	nop
  2575     02D6                     l1123:
  2576                           
  2577                           ;LCD.c: 40:     RC7 = 0;
  2578     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2579     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2580     02D8  1387               	bcf	7,7	;volatile
  2581     02D9                     l83:
  2582     02D9  0008               	return
  2583     02DA                     __end_of_Lcd_Cmd:
  2584                           
  2585                           	psect	text13
  2586     031B                     __ptext13:	
  2587 ;; *************** function _Lcd_Port *****************
  2588 ;; Defined at:
  2589 ;;		line 13 in file "LCD.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  a               1    wreg     unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  a               1    0[COMMON] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       0       0       0       0
  2604 ;;      Locals:         1       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0
  2606 ;;      Totals:         1       0       0       0       0
  2607 ;;Total ram usage:        1 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_Lcd_Cmd
  2613 ;;		_Lcd_Init
  2614 ;;		_Lcd_Write_Char
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618     031B                     _Lcd_Port:	
  2619                           ;psect for function _Lcd_Port
  2620                           
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _Lcd_Port: [wreg]
  2624                           ;Lcd_Port@a stored from wreg
  2625     031B  00F0               	movwf	Lcd_Port@a
  2626     031C                     l1105:
  2627                           
  2628                           ;LCD.c: 14:     if (a & 1)
  2629     031C  1C70               	btfss	Lcd_Port@a,0
  2630     031D  2B1F               	goto	u461
  2631     031E  2B20               	goto	u460
  2632     031F                     u461:
  2633     031F  2B24               	goto	l72
  2634     0320                     u460:
  2635     0320                     l1107:
  2636                           
  2637                           ;LCD.c: 15:         RD4 = 1;
  2638     0320  1283               	bcf	3,5	;RP0=0, select bank0
  2639     0321  1303               	bcf	3,6	;RP1=0, select bank0
  2640     0322  1608               	bsf	8,4	;volatile
  2641     0323  2B27               	goto	l73
  2642     0324                     l72:	
  2643                           ;LCD.c: 16:     else
  2644                           
  2645                           
  2646                           ;LCD.c: 17:         RD4 = 0;
  2647     0324  1283               	bcf	3,5	;RP0=0, select bank0
  2648     0325  1303               	bcf	3,6	;RP1=0, select bank0
  2649     0326  1208               	bcf	8,4	;volatile
  2650     0327                     l73:
  2651                           
  2652                           ;LCD.c: 19:     if (a & 2)
  2653     0327  1CF0               	btfss	Lcd_Port@a,1
  2654     0328  2B2A               	goto	u471
  2655     0329  2B2B               	goto	u470
  2656     032A                     u471:
  2657     032A  2B2D               	goto	l74
  2658     032B                     u470:
  2659     032B                     l1109:
  2660                           
  2661                           ;LCD.c: 20:         RD5 = 1;
  2662     032B  1688               	bsf	8,5	;volatile
  2663     032C  2B2E               	goto	l75
  2664     032D                     l74:	
  2665                           ;LCD.c: 21:     else
  2666                           
  2667                           
  2668                           ;LCD.c: 22:         RD5 = 0;
  2669     032D  1288               	bcf	8,5	;volatile
  2670     032E                     l75:
  2671                           
  2672                           ;LCD.c: 24:     if (a & 4)
  2673     032E  1D70               	btfss	Lcd_Port@a,2
  2674     032F  2B31               	goto	u481
  2675     0330  2B32               	goto	u480
  2676     0331                     u481:
  2677     0331  2B34               	goto	l76
  2678     0332                     u480:
  2679     0332                     l1111:
  2680                           
  2681                           ;LCD.c: 25:         RD6 = 1;
  2682     0332  1708               	bsf	8,6	;volatile
  2683     0333  2B35               	goto	l77
  2684     0334                     l76:	
  2685                           ;LCD.c: 26:     else
  2686                           
  2687                           
  2688                           ;LCD.c: 27:         RD6 = 0;
  2689     0334  1308               	bcf	8,6	;volatile
  2690     0335                     l77:
  2691                           
  2692                           ;LCD.c: 29:     if (a & 8)
  2693     0335  1DF0               	btfss	Lcd_Port@a,3
  2694     0336  2B38               	goto	u491
  2695     0337  2B39               	goto	u490
  2696     0338                     u491:
  2697     0338  2B3B               	goto	l78
  2698     0339                     u490:
  2699     0339                     l1113:
  2700                           
  2701                           ;LCD.c: 30:         RD7 = 1;
  2702     0339  1788               	bsf	8,7	;volatile
  2703     033A  2B3C               	goto	l80
  2704     033B                     l78:	
  2705                           ;LCD.c: 31:     else
  2706                           
  2707                           
  2708                           ;LCD.c: 32:         RD7 = 0;
  2709     033B  1388               	bcf	8,7	;volatile
  2710     033C                     l80:
  2711     033C  0008               	return
  2712     033D                     __end_of_Lcd_Port:
  2713                           
  2714                           	psect	text14
  2715     0255                     __ptext14:	
  2716 ;; *************** function _I2C_Master_Write *****************
  2717 ;; Defined at:
  2718 ;;		line 65 in file "I2C.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  d               2    0[COMMON] unsigned int 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         2       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0
  2735 ;;      Totals:         2       0       0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 1
  2739 ;; This function calls:
  2740 ;;		_I2C_Master_Wait
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746     0255                     _I2C_Master_Write:	
  2747                           ;psect for function _I2C_Master_Write
  2748                           
  2749     0255                     l1321:	
  2750                           ;incstack = 0
  2751                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2752                           
  2753                           
  2754                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2755     0255  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2756     025A                     l1323:
  2757                           
  2758                           ;I2C.c: 68:     SSPBUF = d;
  2759     025A  0870               	movf	I2C_Master_Write@d,w
  2760     025B  1283               	bcf	3,5	;RP0=0, select bank0
  2761     025C  1303               	bcf	3,6	;RP1=0, select bank0
  2762     025D  0093               	movwf	19	;volatile
  2763     025E                     l47:
  2764     025E  0008               	return
  2765     025F                     __end_of_I2C_Master_Write:
  2766                           
  2767                           	psect	text15
  2768     024C                     __ptext15:	
  2769 ;; *************** function _I2C_Master_Stop *****************
  2770 ;; Defined at:
  2771 ;;		line 55 in file "I2C.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       0       0       0
  2789 ;;Total ram usage:        0 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 1
  2792 ;; This function calls:
  2793 ;;		_I2C_Master_Wait
  2794 ;; This function is called by:
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799     024C                     _I2C_Master_Stop:	
  2800                           ;psect for function _I2C_Master_Stop
  2801                           
  2802     024C                     l1317:	
  2803                           ;incstack = 0
  2804                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2805                           
  2806                           
  2807                           ;I2C.c: 57:     I2C_Master_Wait();
  2808     024C  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2809     0251                     l1319:
  2810                           
  2811                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2812     0251  1683               	bsf	3,5	;RP0=1, select bank1
  2813     0252  1303               	bcf	3,6	;RP1=0, select bank1
  2814     0253  1511               	bsf	17,2	;volatile
  2815     0254                     l44:
  2816     0254  0008               	return
  2817     0255                     __end_of_I2C_Master_Stop:
  2818                           
  2819                           	psect	text16
  2820     0243                     __ptext16:	
  2821 ;; *************** function _I2C_Master_Start *****************
  2822 ;; Defined at:
  2823 ;;		line 39 in file "I2C.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 1
  2844 ;; This function calls:
  2845 ;;		_I2C_Master_Wait
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     0243                     _I2C_Master_Start:	
  2852                           ;psect for function _I2C_Master_Start
  2853                           
  2854     0243                     l1313:	
  2855                           ;incstack = 0
  2856                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2857                           
  2858                           
  2859                           ;I2C.c: 41:     I2C_Master_Wait();
  2860     0243  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2861     0248                     l1315:
  2862                           
  2863                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2864     0248  1683               	bsf	3,5	;RP0=1, select bank1
  2865     0249  1303               	bcf	3,6	;RP1=0, select bank1
  2866     024A  1411               	bsf	17,0	;volatile
  2867     024B                     l38:
  2868     024B  0008               	return
  2869     024C                     __end_of_I2C_Master_Start:
  2870                           
  2871                           	psect	text17
  2872     033D                     __ptext17:	
  2873 ;; *************** function _I2C_Master_Read *****************
  2874 ;; Defined at:
  2875 ;;		line 74 in file "I2C.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               2    0[COMMON] unsigned short 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  temp            2    4[COMMON] unsigned short 
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2    0[COMMON] unsigned short 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         2       0       0       0       0
  2890 ;;      Locals:         2       0       0       0       0
  2891 ;;      Temps:          2       0       0       0       0
  2892 ;;      Totals:         6       0       0       0       0
  2893 ;;Total ram usage:        6 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 1
  2896 ;; This function calls:
  2897 ;;		_I2C_Master_Wait
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903     033D                     _I2C_Master_Read:	
  2904                           ;psect for function _I2C_Master_Read
  2905                           
  2906     033D                     l1325:	
  2907                           ;incstack = 0
  2908                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2909                           
  2910                           
  2911                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2912     033D  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2913     0342                     l1327:
  2914                           
  2915                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2916     0342  1683               	bsf	3,5	;RP0=1, select bank1
  2917     0343  1303               	bcf	3,6	;RP1=0, select bank1
  2918     0344  1591               	bsf	17,3	;volatile
  2919                           
  2920                           ;I2C.c: 79:     I2C_Master_Wait();
  2921     0345  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2922     034A                     l1329:
  2923                           
  2924                           ;I2C.c: 80:     temp = SSPBUF;
  2925     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2926     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2927     034C  0813               	movf	19,w	;volatile
  2928     034D  00F2               	movwf	??_I2C_Master_Read
  2929     034E  01F3               	clrf	??_I2C_Master_Read+1
  2930     034F  0872               	movf	??_I2C_Master_Read,w
  2931     0350  00F4               	movwf	I2C_Master_Read@temp
  2932     0351  0873               	movf	??_I2C_Master_Read+1,w
  2933     0352  00F5               	movwf	I2C_Master_Read@temp+1
  2934     0353                     l1331:
  2935                           
  2936                           ;I2C.c: 81:     I2C_Master_Wait();
  2937     0353  120A  118A  225F  120A  118A  	fcall	_I2C_Master_Wait
  2938     0358                     l1333:
  2939                           
  2940                           ;I2C.c: 82:     if(a == 1){
  2941     0358  0370               	decf	I2C_Master_Read@a,w
  2942     0359  0471               	iorwf	I2C_Master_Read@a+1,w
  2943     035A  1D03               	btfss	3,2
  2944     035B  2B5D               	goto	u881
  2945     035C  2B5E               	goto	u880
  2946     035D                     u881:
  2947     035D  2B62               	goto	l50
  2948     035E                     u880:
  2949     035E                     l1335:
  2950                           
  2951                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2952     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2953     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2954     0360  1291               	bcf	17,5	;volatile
  2955                           
  2956                           ;I2C.c: 84:     }else{
  2957     0361  2B65               	goto	l51
  2958     0362                     l50:
  2959                           
  2960                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2961     0362  1683               	bsf	3,5	;RP0=1, select bank1
  2962     0363  1303               	bcf	3,6	;RP1=0, select bank1
  2963     0364  1691               	bsf	17,5	;volatile
  2964     0365                     l51:	
  2965                           ;I2C.c: 86:     }
  2966                           
  2967                           
  2968                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2969     0365  1611               	bsf	17,4	;volatile
  2970     0366                     l1337:
  2971                           
  2972                           ;I2C.c: 88:     return temp;
  2973     0366  0875               	movf	I2C_Master_Read@temp+1,w
  2974     0367  00F1               	movwf	?_I2C_Master_Read+1
  2975     0368  0874               	movf	I2C_Master_Read@temp,w
  2976     0369  00F0               	movwf	?_I2C_Master_Read
  2977     036A                     l52:
  2978     036A  0008               	return
  2979     036B                     __end_of_I2C_Master_Read:
  2980                           
  2981                           	psect	text18
  2982     025F                     __ptext18:	
  2983 ;; *************** function _I2C_Master_Wait *****************
  2984 ;; Defined at:
  2985 ;;		line 32 in file "I2C.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0
  3002 ;;      Totals:         0       0       0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_I2C_Master_Start
  3009 ;;		_I2C_Master_Stop
  3010 ;;		_I2C_Master_Write
  3011 ;;		_I2C_Master_Read
  3012 ;;		_I2C_Master_RepeatedStart
  3013 ;; This function uses a non-reentrant model
  3014 ;;
  3015                           
  3016     025F                     _I2C_Master_Wait:	
  3017                           ;psect for function _I2C_Master_Wait
  3018                           
  3019     025F                     l1159:	
  3020                           ;incstack = 0
  3021                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3022                           
  3023     025F                     l32:	
  3024                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3025                           
  3026     025F  1683               	bsf	3,5	;RP0=1, select bank1
  3027     0260  1303               	bcf	3,6	;RP1=0, select bank1
  3028     0261  1914               	btfsc	20,2	;volatile
  3029     0262  2A64               	goto	u531
  3030     0263  2A65               	goto	u530
  3031     0264                     u531:
  3032     0264  2A5F               	goto	l32
  3033     0265                     u530:
  3034     0265                     l1161:
  3035     0265  0811               	movf	17,w	;volatile
  3036     0266  391F               	andlw	31
  3037     0267  1D03               	btfss	3,2
  3038     0268  2A6A               	goto	u541
  3039     0269  2A6B               	goto	u540
  3040     026A                     u541:
  3041     026A  2A5F               	goto	l32
  3042     026B                     u540:
  3043     026B                     l35:
  3044     026B  0008               	return
  3045     026C                     __end_of_I2C_Master_Wait:
  3046                           
  3047                           	psect	text19
  3048     03D0                     __ptext19:	
  3049 ;; *************** function _I2C_Master_Init *****************
  3050 ;; Defined at:
  3051 ;;		line 16 in file "I2C.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  c               4    0[BANK0 ] const unsigned long 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;		None
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3065 ;;      Params:         0       4       0       0       0
  3066 ;;      Locals:         0       0       0       0       0
  3067 ;;      Temps:          0       4       0       0       0
  3068 ;;      Totals:         0       8       0       0       0
  3069 ;;Total ram usage:        8 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 1
  3072 ;; This function calls:
  3073 ;;		___lldiv
  3074 ;; This function is called by:
  3075 ;;		_main
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079     03D0                     _I2C_Master_Init:	
  3080                           ;psect for function _I2C_Master_Init
  3081                           
  3082     03D0                     l1301:	
  3083                           ;incstack = 0
  3084                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3085                           
  3086                           
  3087                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3088     03D0  3028               	movlw	40
  3089     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3090     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3091     03D3  0094               	movwf	20	;volatile
  3092     03D4                     l1303:
  3093                           
  3094                           ;I2C.c: 19:     SSPCON2 = 0;
  3095     03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3096     03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3097     03D6  0191               	clrf	17	;volatile
  3098     03D7                     l1305:
  3099                           
  3100                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3101     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3102     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3103     03D9  0840               	movf	I2C_Master_Init@c,w
  3104     03DA  00C4               	movwf	??_I2C_Master_Init
  3105     03DB  0841               	movf	I2C_Master_Init@c+1,w
  3106     03DC  00C5               	movwf	??_I2C_Master_Init+1
  3107     03DD  0842               	movf	I2C_Master_Init@c+2,w
  3108     03DE  00C6               	movwf	??_I2C_Master_Init+2
  3109     03DF  0843               	movf	I2C_Master_Init@c+3,w
  3110     03E0  00C7               	movwf	??_I2C_Master_Init+3
  3111     03E1  3002               	movlw	2
  3112     03E2                     u875:
  3113     03E2  1003               	clrc
  3114     03E3  0DC4               	rlf	??_I2C_Master_Init,f
  3115     03E4  0DC5               	rlf	??_I2C_Master_Init+1,f
  3116     03E5  0DC6               	rlf	??_I2C_Master_Init+2,f
  3117     03E6  0DC7               	rlf	??_I2C_Master_Init+3,f
  3118     03E7                     u870:
  3119     03E7  3EFF               	addlw	-1
  3120     03E8  1D03               	skipz
  3121     03E9  2BE2               	goto	u875
  3122     03EA  0847               	movf	??_I2C_Master_Init+3,w
  3123     03EB  00F3               	movwf	___lldiv@divisor+3
  3124     03EC  0846               	movf	??_I2C_Master_Init+2,w
  3125     03ED  00F2               	movwf	___lldiv@divisor+2
  3126     03EE  0845               	movf	??_I2C_Master_Init+1,w
  3127     03EF  00F1               	movwf	___lldiv@divisor+1
  3128     03F0  0844               	movf	??_I2C_Master_Init,w
  3129     03F1  00F0               	movwf	___lldiv@divisor
  3130     03F2  3000               	movlw	0
  3131     03F3  00F7               	movwf	___lldiv@dividend+3
  3132     03F4  307A               	movlw	122
  3133     03F5  00F6               	movwf	___lldiv@dividend+2
  3134     03F6  3012               	movlw	18
  3135     03F7  00F5               	movwf	___lldiv@dividend+1
  3136     03F8  3000               	movlw	0
  3137     03F9  00F4               	movwf	___lldiv@dividend
  3138     03FA  120A  118A  2504  120A  118A  	fcall	___lldiv
  3139     03FF  0870               	movf	?___lldiv,w
  3140     0400  3EFF               	addlw	255
  3141     0401  1683               	bsf	3,5	;RP0=1, select bank1
  3142     0402  1303               	bcf	3,6	;RP1=0, select bank1
  3143     0403  0093               	movwf	19	;volatile
  3144     0404                     l1307:
  3145                           
  3146                           ;I2C.c: 21:     SSPSTAT = 0;
  3147     0404  0194               	clrf	20	;volatile
  3148     0405                     l1309:
  3149                           
  3150                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3151     0405  1587               	bsf	7,3	;volatile
  3152     0406                     l1311:
  3153                           
  3154                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3155     0406  1607               	bsf	7,4	;volatile
  3156     0407                     l29:
  3157     0407  0008               	return
  3158     0408                     __end_of_I2C_Master_Init:
  3159                           
  3160                           	psect	text20
  3161     0504                     __ptext20:	
  3162 ;; *************** function ___lldiv *****************
  3163 ;; Defined at:
  3164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  divisor         4    0[COMMON] unsigned long 
  3167 ;;  dividend        4    4[COMMON] unsigned long 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  quotient        4    9[COMMON] unsigned long 
  3170 ;;  counter         1   13[COMMON] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  4    0[COMMON] unsigned long 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         8       0       0       0       0
  3181 ;;      Locals:         5       0       0       0       0
  3182 ;;      Temps:          1       0       0       0       0
  3183 ;;      Totals:        14       0       0       0       0
  3184 ;;Total ram usage:       14 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_I2C_Master_Init
  3190 ;;		_I2C_Init
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     0504                     ___lldiv:	
  3195                           ;psect for function ___lldiv
  3196                           
  3197     0504                     l1195:	
  3198                           ;incstack = 0
  3199                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3200                           
  3201     0504  3000               	movlw	0
  3202     0505  00FC               	movwf	___lldiv@quotient+3
  3203     0506  3000               	movlw	0
  3204     0507  00FB               	movwf	___lldiv@quotient+2
  3205     0508  3000               	movlw	0
  3206     0509  00FA               	movwf	___lldiv@quotient+1
  3207     050A  3000               	movlw	0
  3208     050B  00F9               	movwf	___lldiv@quotient
  3209     050C  0873               	movf	___lldiv@divisor+3,w
  3210     050D  0472               	iorwf	___lldiv@divisor+2,w
  3211     050E  0471               	iorwf	___lldiv@divisor+1,w
  3212     050F  0470               	iorwf	___lldiv@divisor,w
  3213     0510  1903               	skipnz
  3214     0511  2D13               	goto	u611
  3215     0512  2D14               	goto	u610
  3216     0513                     u611:
  3217     0513  2D61               	goto	l1215
  3218     0514                     u610:
  3219     0514                     l1197:
  3220     0514  01FD               	clrf	___lldiv@counter
  3221     0515  0AFD               	incf	___lldiv@counter,f
  3222     0516  2D24               	goto	l1201
  3223     0517                     l1199:
  3224     0517  3001               	movlw	1
  3225     0518  00F8               	movwf	??___lldiv
  3226     0519                     u625:
  3227     0519  1003               	clrc
  3228     051A  0DF0               	rlf	___lldiv@divisor,f
  3229     051B  0DF1               	rlf	___lldiv@divisor+1,f
  3230     051C  0DF2               	rlf	___lldiv@divisor+2,f
  3231     051D  0DF3               	rlf	___lldiv@divisor+3,f
  3232     051E  0BF8               	decfsz	??___lldiv,f
  3233     051F  2D19               	goto	u625
  3234     0520  3001               	movlw	1
  3235     0521  00F8               	movwf	??___lldiv
  3236     0522  0878               	movf	??___lldiv,w
  3237     0523  07FD               	addwf	___lldiv@counter,f
  3238     0524                     l1201:
  3239     0524  1FF3               	btfss	___lldiv@divisor+3,7
  3240     0525  2D27               	goto	u631
  3241     0526  2D28               	goto	u630
  3242     0527                     u631:
  3243     0527  2D17               	goto	l1199
  3244     0528                     u630:
  3245     0528                     l1203:
  3246     0528  3001               	movlw	1
  3247     0529  00F8               	movwf	??___lldiv
  3248     052A                     u645:
  3249     052A  1003               	clrc
  3250     052B  0DF9               	rlf	___lldiv@quotient,f
  3251     052C  0DFA               	rlf	___lldiv@quotient+1,f
  3252     052D  0DFB               	rlf	___lldiv@quotient+2,f
  3253     052E  0DFC               	rlf	___lldiv@quotient+3,f
  3254     052F  0BF8               	decfsz	??___lldiv,f
  3255     0530  2D2A               	goto	u645
  3256     0531                     l1205:
  3257     0531  0873               	movf	___lldiv@divisor+3,w
  3258     0532  0277               	subwf	___lldiv@dividend+3,w
  3259     0533  1D03               	skipz
  3260     0534  2D3F               	goto	u655
  3261     0535  0872               	movf	___lldiv@divisor+2,w
  3262     0536  0276               	subwf	___lldiv@dividend+2,w
  3263     0537  1D03               	skipz
  3264     0538  2D3F               	goto	u655
  3265     0539  0871               	movf	___lldiv@divisor+1,w
  3266     053A  0275               	subwf	___lldiv@dividend+1,w
  3267     053B  1D03               	skipz
  3268     053C  2D3F               	goto	u655
  3269     053D  0870               	movf	___lldiv@divisor,w
  3270     053E  0274               	subwf	___lldiv@dividend,w
  3271     053F                     u655:
  3272     053F  1C03               	skipc
  3273     0540  2D42               	goto	u651
  3274     0541  2D43               	goto	u650
  3275     0542                     u651:
  3276     0542  2D52               	goto	l1211
  3277     0543                     u650:
  3278     0543                     l1207:
  3279     0543  0870               	movf	___lldiv@divisor,w
  3280     0544  02F4               	subwf	___lldiv@dividend,f
  3281     0545  0871               	movf	___lldiv@divisor+1,w
  3282     0546  1C03               	skipc
  3283     0547  0F71               	incfsz	___lldiv@divisor+1,w
  3284     0548  02F5               	subwf	___lldiv@dividend+1,f
  3285     0549  0872               	movf	___lldiv@divisor+2,w
  3286     054A  1C03               	skipc
  3287     054B  0F72               	incfsz	___lldiv@divisor+2,w
  3288     054C  02F6               	subwf	___lldiv@dividend+2,f
  3289     054D  0873               	movf	___lldiv@divisor+3,w
  3290     054E  1C03               	skipc
  3291     054F  0F73               	incfsz	___lldiv@divisor+3,w
  3292     0550  02F7               	subwf	___lldiv@dividend+3,f
  3293     0551                     l1209:
  3294     0551  1479               	bsf	___lldiv@quotient,0
  3295     0552                     l1211:
  3296     0552  3001               	movlw	1
  3297     0553                     u665:
  3298     0553  1003               	clrc
  3299     0554  0CF3               	rrf	___lldiv@divisor+3,f
  3300     0555  0CF2               	rrf	___lldiv@divisor+2,f
  3301     0556  0CF1               	rrf	___lldiv@divisor+1,f
  3302     0557  0CF0               	rrf	___lldiv@divisor,f
  3303     0558  3EFF               	addlw	-1
  3304     0559  1D03               	skipz
  3305     055A  2D53               	goto	u665
  3306     055B                     l1213:
  3307     055B  3001               	movlw	1
  3308     055C  02FD               	subwf	___lldiv@counter,f
  3309     055D  1D03               	btfss	3,2
  3310     055E  2D60               	goto	u671
  3311     055F  2D61               	goto	u670
  3312     0560                     u671:
  3313     0560  2D28               	goto	l1203
  3314     0561                     u670:
  3315     0561                     l1215:
  3316     0561  087C               	movf	___lldiv@quotient+3,w
  3317     0562  00F3               	movwf	?___lldiv+3
  3318     0563  087B               	movf	___lldiv@quotient+2,w
  3319     0564  00F2               	movwf	?___lldiv+2
  3320     0565  087A               	movf	___lldiv@quotient+1,w
  3321     0566  00F1               	movwf	?___lldiv+1
  3322     0567  0879               	movf	___lldiv@quotient,w
  3323     0568  00F0               	movwf	?___lldiv
  3324     0569                     l321:
  3325     0569  0008               	return
  3326     056A                     __end_of___lldiv:
  3327     007E                     btemp	set	126	;btemp
  3328     007E                     wtemp0	set	126
  3329                           
  3330                           	psect	idloc
  3331                           
  3332                           ;Config register IDLOC0 @ 0x2000
  3333                           ;	unspecified, using default values
  3334     2000                     	org	8192
  3335     2000  3FFF               	dw	16383
  3336                           
  3337                           ;Config register IDLOC1 @ 0x2001
  3338                           ;	unspecified, using default values
  3339     2001                     	org	8193
  3340     2001  3FFF               	dw	16383
  3341                           
  3342                           ;Config register IDLOC2 @ 0x2002
  3343                           ;	unspecified, using default values
  3344     2002                     	org	8194
  3345     2002  3FFF               	dw	16383
  3346                           
  3347                           ;Config register IDLOC3 @ 0x2003
  3348                           ;	unspecified, using default values
  3349     2003                     	org	8195
  3350     2003  3FFF               	dw	16383
  3351                           
  3352                           	psect	config
  3353                           
  3354                           ;Config register CONFIG1 @ 0x2007
  3355                           ;	Oscillator Selection bits
  3356                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3357                           ;	Watchdog Timer Enable bit
  3358                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3359                           ;	Power-up Timer Enable bit
  3360                           ;	PWRTE = OFF, PWRT disabled
  3361                           ;	RE3/MCLR pin function select bit
  3362                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3363                           ;	Code Protection bit
  3364                           ;	CP = OFF, Program memory code protection is disabled
  3365                           ;	Data Code Protection bit
  3366                           ;	CPD = OFF, Data memory code protection is disabled
  3367                           ;	Brown Out Reset Selection bits
  3368                           ;	BOREN = OFF, BOR disabled
  3369                           ;	Internal External Switchover bit
  3370                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3371                           ;	Fail-Safe Clock Monitor Enabled bit
  3372                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3373                           ;	Low Voltage Programming Enable bit
  3374                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3375                           ;	In-Circuit Debugger Mode bit
  3376                           ;	DEBUG = 0x1, unprogrammed default
  3377     2007                     	org	8199
  3378     2007  20D5               	dw	8405
  3379                           
  3380                           ;Config register CONFIG2 @ 0x2008
  3381                           ;	Brown-out Reset Selection bit
  3382                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3383                           ;	Flash Program Memory Self Write Enable bits
  3384                           ;	WRT = OFF, Write protection off
  3385     2008                     	org	8200
  3386     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> RTC_display@Date(BANK0[17]), RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _RTC_display->_Lcd_Set_Cursor
    _bcd_to_decimal->___bmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7703
                                              8 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _Lcd_Init
                        _RTC_display
                     _decimal_to_bcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    2768
                                              9 COMMON     5     5      0
                                              0 BANK0      1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RTC_display                                          2     2      0    3802
                                             10 COMMON     2     2      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       3     3      0     212
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     532
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     564
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _RTC_display
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 10 00:18:29 2023

                       _i 0051                         pc 0002            ___bmul@product 0072  
                      l32 025F                        l50 0362                        l35 026B  
                      l51 0365                        l52 036A                        l44 0254  
                      l29 0407                        l38 024B                        l47 025E  
                      l80 033C                        l72 0324                        l73 0327  
                      l74 032D                        l75 032E                        l83 02D9  
                      l76 0334                        l92 044D                        l77 0335  
                      l78 033B                        l95 0503                        l98 03CF  
            ___awdiv@sign 0076                        fsr 0004            _decimal_to_bcd 036B  
             _RTC_display 0696                       l104 031A                       l311 0293  
                     l321 0569                       l181 039A                       l193 0620  
                     l178 02A9                       l451 04A6                       l188 07E6  
                     l438 05D0                       l199 02BF                       _GIE 005F  
                     _RD4 0044                       _RD5 0045                       _RC7 003F  
                     _RD6 0046                       _RD7 0047                       u510 0285  
                     u511 0284                       u520 0292                       u505 03A8  
                     u521 0291                       u610 0514                       u530 0265  
                     u611 0513                       u531 0264                       u540 026B  
                     u460 0320                       u700 058B                       u541 026A  
                     u461 031F                       u701 058A                       u605 029D  
                     u630 0528                       u470 032B                       u550 040E  
                     u631 0527                       u471 032A                       u551 040D  
                     u480 0332                       u720 059D                       u800 0469  
                     u625 0519                       u481 0331                       u721 059C  
                     u801 0468                       u650 0543                       u490 0339  
                     u570 0431                       u651 0542                       u491 0338  
                     u571 0430                       u715 058F                       u740 05AE  
                     u820 047B                       u645 052A                       u565 0414  
                     u741 05AD                       u821 047A                       u670 0561  
                     u590 031A                       u830 0485                       u671 0560  
                     u655 053F                       u591 0319                       u735 059E  
                     u831 0484                       u815 046D                       u760 05C2  
                     u680 056F                       u665 0553                       u585 0437  
                     u761 05C1                       u745 05AA                       u681 056E  
                     u770 05C7                       u690 057A                       u850 0498  
                     u771 05C6                       u755 05B6                       u691 0579  
                     u851 0497                       u835 0481                       u860 049D  
                     u780 0453                       u861 049C                       u845 048C  
                     u781 0452                       u917 0649                       u870 03E7  
                     u790 045E                       u791 045D                       u927 0677  
                     u880 035E                       u881 035D                       u937 0686  
                     u875 03E2                       u947 03B8                       u957 03C9  
                     u967 04B1                       u895 0381                       u977 04C0  
                     u987 04CF                       u997 02D1                       fsr0 0004  
                     indf 0000              ___awmod@sign 0076                      l1111 0332  
                    l1201 0524                      l1113 0339                      l1105 031C  
                    l1121 02CD                      l1211 0552                      l1203 0528  
                    l1107 0320                      l1123 02D6                      l1115 02C1  
                    l1131 03B3                      l1213 055B                      l1205 0531  
                    l1301 03D0                      l1109 032B                      l1117 02C4  
                    l1141 03C7                      l1133 03B6                      l1125 039C  
                    l1221 056B                      l1207 0543                      l1215 0561  
                    l1311 0406                      l1303 03D4                      l1119 02CA  
                    l1143 03CC                      l1135 03BB                      l1127 03A2  
                    l1231 057F                      l1223 056F                      l1151 0289  
                    l1209 0551                      l1305 03D7                      l1161 0265  
                    l1313 0243                      l1321 0255                      l1137 03BE  
                    l1129 03A5                      l1241 0595                      l1233 0583  
                    l1225 0574                      l1153 028B                      l1145 0280  
                    l1401 067E                      l1307 0404                      l1331 0353  
                    l1315 0248                      l1323 025A                      l1171 0424  
                    l1163 0409                      l1139 03C4                      l1251 05B5  
                    l1243 0599                      l1235 0585                      l1227 0576  
                    l1219 056A                      l1155 0292                      l1147 0281  
                    l1403 068D                      l1309 0405                      l1333 0358  
                    l1325 033D                      l1317 024C                      l1341 04A7  
                    l1181 0447                      l1165 040E                      l1173 042B  
                    l1253 05BC                      l1245 059D                      l1237 058B  
                    l1229 057A                      l1149 0285                      l1159 025F  
                    l1335 035E                      l1327 0342                      l1319 0251  
                    l1343 04AD                      l1175 0431                      l1167 041B  
                    l1183 02FB                      l1247 05AE                      l1239 058E  
                    l1255 05C2                      l1271 045A                      l1263 044E  
                    l1191 0295                      l1351 036E                      l1337 0366  
                    l1329 034A                      l1345 04B6                      l1177 043E  
                    l1169 041E                      l1185 02FE                      l1257 05C7  
                    l1249 05B4                      l1281 0473                      l1273 045E  
                    l1265 044F                      l1361 02AA                      l1195 0504  
                    l1347 04C5                      l1179 0441                      l1187 0309  
                    l1259 05CC                      l1291 0492                      l1283 0477  
                    l1275 0463                      l1267 0453                      l1355 0696  
                    l1363 02AE                      l1197 0514                      l1349 04CB  
                    l1189 030F                      l1285 047B                      l1277 0469  
                    l1293 0498                      l1269 0458                      l1357 07D2  
                    l1365 02B1                      l1199 0517                      l1295 049D  
                    l1287 0485                      l1279 046C                      l1359 07D8  
                    l1367 02BA                      l1391 0650                      l1297 04A2  
                    l1289 048B                      l1369 02BE                      l1393 0655  
                    l1395 065E                      l1387 05D1                      l1397 066A  
                    l1389 0641                      l1399 066F                      _PEIE 005E  
       ?_Lcd_Write_String 0070                      _main 05D1                      _hour 004E  
                    _year 004B                      btemp 007E                      start 0000  
      ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 02DA         ___bmul@multiplier 0073  
  __end_of_decimal_to_bcd 039B          ?_I2C_Master_Init 0040          ?_I2C_Master_Read 0070  
        ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070                     ?_main 0070  
         __end_of___awdiv 05D1           __end_of___awmod 04A7                     _ANSEL 0188  
         __end_of___lldiv 056A           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063                     _m_day 004D  
                   _month 004C                     _setup 02AA                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 0504  
        __end_of_Lcd_Port 033D           __initialization 07E7              __end_of_main 0696  
         ?_decimal_to_bcd 0070                    ??_main 0048         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0070        ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0072  
        ___awdiv@dividend 0072                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013                    ___bmul 027F  
               ??___awdiv 0074                 ??___awmod 0074                 ??___lldiv 0078  
        ___awdiv@quotient 0077                    _minute 004F                    _second 0050  
         ___awmod@divisor 0070           ___awmod@counter 0075           Lcd_Set_Cursor@a 0076  
         Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077  
 __end_of__initialization 07FC       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
            __pidataBANK0 02DA             __end_of_setup 02C0              ?_RTC_display 0070  
          _Lcd_Set_Cursor 0408                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0070                __pbssBANK0 004B                __pmaintext 05D1  
                 ?___bmul 0070    __end_of_Lcd_Set_Cursor 044E                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
          _Lcd_Write_Char 039B                   _Lcd_Cmd 02C0          ??_decimal_to_bcd 0079  
                 ___awdiv 056A                   ___awmod 044E                   ___lldiv 0504  
         ?_Lcd_Set_Cursor 0074                   __ptext1 02AA                   __ptext2 036B  
                 __ptext3 0696                   __ptext4 0294                   __ptext5 027F  
                 __ptext6 044E                   __ptext7 056A                   __ptext8 02FA  
                 __ptext9 039B          ___awmod@dividend 0072    __end_of_Lcd_Write_Char 03D0  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
        I2C_Master_Init@c 0040          I2C_Master_Read@a 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0078         Lcd_Write_String@i 0076            __end_of___bmul 0294  
        _Lcd_Write_String 02FA       start_initialization 07E7            _bcd_to_decimal 0294  
       ??_I2C_Master_Init 0044         ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070  
       ??_I2C_Master_Stop 0070                  ??___bmul 0071                init_fetch0 026C  
             __pdataBANK0 0020           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
  __end_of_bcd_to_decimal 02AA                 ___latbits 0002             __pcstackBANK0 0040  
                ?_Lcd_Cmd 0070          _I2C_Master_Start 0243          _I2C_Master_Write 0255  
        ??_Lcd_Set_Cursor 0075                  ?___awdiv 0070                  ?___awmod 0070  
                ?___lldiv 0070           ?_bcd_to_decimal 0070      bcd_to_decimal@number 0076  
         RTC_display@Date 0020           RTC_display@Time 0031                  Lcd_Cmd@a 0073  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 04A7                  _Lcd_Port 031B  
     I2C_Master_Read@temp 0074  __end_of_Lcd_Write_String 031B             ??_RTC_display 007A  
         _I2C_Master_Init 03D0           _I2C_Master_Read 033D           _I2C_Master_Wait 025F  
         _I2C_Master_Stop 024C                  __ptext10 0408                  __ptext11 04A7  
                __ptext20 0504                  __ptext12 02C0                  __ptext13 031B  
                __ptext14 0255                  __ptext15 024C                  __ptext16 0243  
                __ptext17 033D                  __ptext18 025F                  __ptext19 03D0  
    decimal_to_bcd@number 0040  __end_of_I2C_Master_Start 024C  __end_of_I2C_Master_Write 025F  
                init_ram0 0270       __end_of_RTC_display 07E7        Lcd_Write_Char@temp 0072  
        ___lldiv@dividend 0074                _OSCCONbits 008F          ??_bcd_to_decimal 0074  
 __end_of_I2C_Master_Init 0408   __end_of_I2C_Master_Read 036B   __end_of_I2C_Master_Wait 026C  
 __end_of_I2C_Master_Stop 0255        Lcd_Set_Cursor@temp 0079          ___lldiv@quotient 0079  
       I2C_Master_Write@d 0070               _SSPCON2bits 0091  
