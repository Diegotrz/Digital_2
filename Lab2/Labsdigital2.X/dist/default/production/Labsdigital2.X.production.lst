

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jul 26 12:02:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459                           
   460                           	psect	strings
   461     0549                     __pstrings:
   462     0549                     stringtab:
   463     0549                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466     0549  1BFF               	btfsc	btemp+1,7
   467     054A  2D53               	ljmp	stringcode
   468     054B  1383               	bcf	3,7
   469     054C  187F               	btfsc	btemp+1,0
   470     054D  1783               	bsf	3,7
   471     054E  0800               	movf	0,w
   472     054F  0A84               	incf	4,f
   473     0550  1903               	skipnz
   474     0551  0AFF               	incf	btemp+1,f
   475     0552  0008               	return
   476     0553                     stringcode:
   477     0553                     stringdir:
   478     0553  3005               	movlw	high stringdir
   479     0554  008A               	movwf	10
   480     0555  0804               	movf	4,w
   481     0556  0A84               	incf	4,f
   482     0557  0782               	addwf	2,f
   483     0558                     __stringbase:
   484     0558  3400               	retlw	0
   485     0559                     __end_of__stringtab:
   486     0559                     _dpowers:
   487     0559  3401               	retlw	1
   488     055A  3400               	retlw	0
   489     055B  340A               	retlw	10
   490     055C  3400               	retlw	0
   491     055D  3464               	retlw	100
   492     055E  3400               	retlw	0
   493     055F  34E8               	retlw	232
   494     0560  3403               	retlw	3
   495     0561  3410               	retlw	16
   496     0562  3427               	retlw	39
   497     0563                     __end_of_dpowers:
   498     0563                     _message:
   499     0563  3432               	retlw	50
   500     0564  342E               	retlw	46
   501     0565  3445               	retlw	69
   502     0566  346E               	retlw	110
   503     0567  3476               	retlw	118
   504     0568  3469               	retlw	105
   505     0569  3461               	retlw	97
   506     056A  3472               	retlw	114
   507     056B  3420               	retlw	32
   508     056C  3441               	retlw	65
   509     056D  3473               	retlw	115
   510     056E  3463               	retlw	99
   511     056F  3469               	retlw	105
   512     0570  3469               	retlw	105
   513     0571  3400               	retlw	0
   514     0572                     __end_of_message:
   515     0019                     _TXREG	set	25
   516     0018                     _RCSTA	set	24
   517     000B                     _INTCONbits	set	11
   518     001A                     _RCREG	set	26
   519     0018                     _RCSTAbits	set	24
   520     001E                     _ADRESH	set	30
   521     001F                     _ADCON0bits	set	31
   522     000C                     _PIR1bits	set	12
   523     0008                     _PORTD	set	8
   524     0008                     _PORTDbits	set	8
   525     00C4                     _CREN	set	196
   526     00C1                     _OERR	set	193
   527     0065                     _RCIF	set	101
   528     003E                     _RC6	set	62
   529     003F                     _RC7	set	63
   530     0043                     _RD3	set	67
   531     0047                     _RD7	set	71
   532     0046                     _RD6	set	70
   533     0045                     _RD5	set	69
   534     0044                     _RD4	set	68
   535     0098                     _TXSTA	set	152
   536     0099                     _SPBRG	set	153
   537     008C                     _PIE1bits	set	140
   538     009F                     _ADCON1bits	set	159
   539     0085                     _TRISA	set	133
   540     008F                     _OSCCON	set	143
   541     0088                     _TRISD	set	136
   542     04C1                     _TRMT	set	1217
   543     043E                     _TRISC6	set	1086
   544     043F                     _TRISC7	set	1087
   545     0189                     _ANSELH	set	393
   546     0188                     _ANSEL	set	392
   547     0572                     STR_1:
   548     0572  3431               	retlw	49	;'1'
   549     0573  342E               	retlw	46	;'.'
   550     0574  344C               	retlw	76	;'L'
   551     0575  3465               	retlw	101	;'e'
   552     0576  3465               	retlw	101	;'e'
   553     0577  3472               	retlw	114	;'r'
   554     0578  3420               	retlw	32	;' '
   555     0579  3470               	retlw	112	;'p'
   556     057A  346F               	retlw	111	;'o'
   557     057B  3474               	retlw	116	;'t'
   558     057C  3465               	retlw	101	;'e'
   559     057D  346E               	retlw	110	;'n'
   560     057E  3463               	retlw	99	;'c'
   561     057F  3469               	retlw	105	;'i'
   562     0580  346F               	retlw	111	;'o'
   563     0581  346D               	retlw	109	;'m'
   564     0582  3465               	retlw	101	;'e'
   565     0583  3474               	retlw	116	;'t'
   566     0584  3472               	retlw	114	;'r'
   567     0585  346F               	retlw	111	;'o'
   568     0586  340D               	retlw	13
   569     0587  340A               	retlw	10
   570     0588  3400               	retlw	0
   571     0589                     STR_4:
   572     0589  3425               	retlw	37	;'%'
   573     058A  3430               	retlw	48	;'0'
   574     058B  3433               	retlw	51	;'3'
   575     058C  3475               	retlw	117	;'u'
   576     058D  340D               	retlw	13
   577     058E  340A               	retlw	10
   578     058F  3400               	retlw	0
   579     0586                     
   580                           	psect	cinit
   581     000F                     start_initialization:	
   582                           ; #config settings
   583                           
   584     000F                     __initialization:
   585                           
   586                           ; Clear objects allocated to COMMON
   587     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   588     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK0
   591     0011  1283               	bcf	3,5	;RP0=0, select bank0
   592     0012  1303               	bcf	3,6	;RP1=0, select bank0
   593     0013  01D9               	clrf	__pbssBANK0& (0+127)
   594     0014                     end_of_initialization:	
   595                           ;End of C runtime variable initialization code
   596                           
   597     0014                     __end_of__initialization:
   598     0014  0183               	clrf	3
   599     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   600                           
   601                           	psect	bssCOMMON
   602     0079                     __pbssCOMMON:
   603     0079                     _CMCON:
   604     0079                     	ds	2
   605                           
   606                           	psect	bssBANK0
   607     0059                     __pbssBANK0:
   608     0059                     _valpot:
   609     0059                     	ds	1
   610                           
   611                           	psect	cstackCOMMON
   612     0070                     __pcstackCOMMON:
   613     0070                     ?_UART_Data_Ready:
   614     0070                     ?_isdigit:	
   615                           ; 1 bit 
   616                           
   617     0070                     ?_setup:	
   618                           ; 1 bit 
   619                           
   620     0070                     ?_preguntas:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_UART_GetC:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_UART_PutC:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_isr:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ??_isr:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_uart_read:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_main:	
   639                           ; 1 bytes @ 0x0
   640                           
   641                           
   642                           ; 1 bytes @ 0x0
   643     0070                     	ds	3
   644     0073                     ??_setup:
   645     0073                     ??_UART_Data_Ready:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     ??_UART_GetC:	
   649                           ; 1 bytes @ 0x3
   650                           
   651     0073                     ??_UART_PutC:	
   652                           ; 1 bytes @ 0x3
   653                           
   654     0073                     ??_isdigit:	
   655                           ; 1 bytes @ 0x3
   656                           
   657     0073                     ??_uart_read:	
   658                           ; 1 bytes @ 0x3
   659                           
   660     0073                     ??___lldiv:	
   661                           ; 1 bytes @ 0x3
   662                           
   663     0073                     ?___wmul:	
   664                           ; 1 bytes @ 0x3
   665                           
   666     0073                     ?___fltol:	
   667                           ; 2 bytes @ 0x3
   668                           
   669     0073                     UART_PutC@data:	
   670                           ; 4 bytes @ 0x3
   671                           
   672     0073                     _isdigit$892:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ___wmul@multiplier:	
   676                           ; 1 bytes @ 0x3
   677                           
   678     0073                     ___fltol@f1:	
   679                           ; 2 bytes @ 0x3
   680                           
   681                           
   682                           ; 4 bytes @ 0x3
   683     0073                     	ds	1
   684     0074                     ?_UART_Print:
   685     0074                     isdigit@c:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     UART_Print@data:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     ___lldiv@quotient:	
   692                           ; 2 bytes @ 0x4
   693                           
   694                           
   695                           ; 4 bytes @ 0x4
   696     0074                     	ds	1
   697     0075                     ___wmul@multiplicand:
   698                           
   699                           ; 2 bytes @ 0x5
   700     0075                     	ds	1
   701     0076                     ??_UART_Print:
   702                           
   703                           ; 1 bytes @ 0x6
   704     0076                     	ds	1
   705     0077                     ??___wmul:
   706     0077                     UART_Print@i:	
   707                           ; 1 bytes @ 0x7
   708                           
   709     0077                     ___fltol@sign1:	
   710                           ; 1 bytes @ 0x7
   711                           
   712     0077                     ___wmul@product:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 2 bytes @ 0x7
   717     0077                     	ds	1
   718     0078                     ??_preguntas:
   719     0078                     ___lldiv@counter:	
   720                           ; 1 bytes @ 0x8
   721                           
   722     0078                     ___fltol@exp1:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 1 bytes @ 0x8
   727     0078                     	ds	1
   728                           
   729                           	psect	cstackBANK0
   730     0020                     __pcstackBANK0:
   731     0020                     ??___fltol:
   732     0020                     ?___lwdiv:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0020                     ?___lldiv:	
   736                           ; 2 bytes @ 0x0
   737                           
   738     0020                     ___lwdiv@divisor:	
   739                           ; 4 bytes @ 0x0
   740                           
   741     0020                     ___lldiv@divisor:	
   742                           ; 2 bytes @ 0x0
   743                           
   744                           
   745                           ; 4 bytes @ 0x0
   746     0020                     	ds	2
   747     0022                     ___lwdiv@dividend:
   748                           
   749                           ; 2 bytes @ 0x2
   750     0022                     	ds	2
   751     0024                     ??___lwdiv:
   752     0024                     ___lldiv@dividend:	
   753                           ; 1 bytes @ 0x4
   754                           
   755                           
   756                           ; 4 bytes @ 0x4
   757     0024                     	ds	1
   758     0025                     ___lwdiv@counter:
   759                           
   760                           ; 1 bytes @ 0x5
   761     0025                     	ds	1
   762     0026                     ___lwdiv@quotient:
   763                           
   764                           ; 2 bytes @ 0x6
   765     0026                     	ds	2
   766     0028                     ?_UART_Init:
   767     0028                     ?___lwmod:	
   768                           ; 1 bytes @ 0x8
   769                           
   770     0028                     ?___xxtofl:	
   771                           ; 2 bytes @ 0x8
   772                           
   773     0028                     ___lwmod@divisor:	
   774                           ; 4 bytes @ 0x8
   775                           
   776     0028                     UART_Init@baud_rate:	
   777                           ; 2 bytes @ 0x8
   778                           
   779     0028                     ___xxtofl@val:	
   780                           ; 4 bytes @ 0x8
   781                           
   782                           
   783                           ; 4 bytes @ 0x8
   784     0028                     	ds	2
   785     002A                     ___lwmod@dividend:
   786                           
   787                           ; 2 bytes @ 0xA
   788     002A                     	ds	2
   789     002C                     ??_UART_Init:
   790     002C                     ??___lwmod:	
   791                           ; 1 bytes @ 0xC
   792                           
   793     002C                     ??___xxtofl:	
   794                           ; 1 bytes @ 0xC
   795                           
   796                           
   797                           ; 1 bytes @ 0xC
   798     002C                     	ds	1
   799     002D                     ___lwmod@counter:
   800                           
   801                           ; 1 bytes @ 0xD
   802     002D                     	ds	1
   803     002E                     ?_sprintf:
   804     002E                     sprintf@f:	
   805                           ; 2 bytes @ 0xE
   806                           
   807                           
   808                           ; 1 bytes @ 0xE
   809     002E                     	ds	2
   810     0030                     ___xxtofl@sign:
   811     0030                     UART_Init@n:	
   812                           ; 1 bytes @ 0x10
   813                           
   814                           
   815                           ; 2 bytes @ 0x10
   816     0030                     	ds	1
   817     0031                     ??_sprintf:
   818     0031                     ___xxtofl@exp:	
   819                           ; 1 bytes @ 0x11
   820                           
   821                           
   822                           ; 1 bytes @ 0x11
   823     0031                     	ds	1
   824     0032                     ___xxtofl@arg:
   825                           
   826                           ; 4 bytes @ 0x12
   827     0032                     	ds	2
   828     0034                     sprintf@ap:
   829                           
   830                           ; 1 bytes @ 0x14
   831     0034                     	ds	1
   832     0035                     sprintf@flag:
   833                           
   834                           ; 1 bytes @ 0x15
   835     0035                     	ds	1
   836     0036                     ?_map:
   837     0036                     map@varmap:	
   838                           ; 2 bytes @ 0x16
   839                           
   840     0036                     sprintf@val:	
   841                           ; 2 bytes @ 0x16
   842                           
   843                           
   844                           ; 2 bytes @ 0x16
   845     0036                     	ds	2
   846     0038                     sprintf@prec:
   847     0038                     map@minval:	
   848                           ; 1 bytes @ 0x18
   849                           
   850                           
   851                           ; 2 bytes @ 0x18
   852     0038                     	ds	1
   853     0039                     sprintf@sp:
   854                           
   855                           ; 1 bytes @ 0x19
   856     0039                     	ds	1
   857     003A                     map@maxval:
   858     003A                     sprintf@width:	
   859                           ; 2 bytes @ 0x1A
   860                           
   861                           
   862                           ; 2 bytes @ 0x1A
   863     003A                     	ds	2
   864     003C                     sprintf@c:
   865     003C                     map@minsal:	
   866                           ; 1 bytes @ 0x1C
   867                           
   868                           
   869                           ; 2 bytes @ 0x1C
   870     003C                     	ds	2
   871     003E                     map@maxsal:
   872                           
   873                           ; 2 bytes @ 0x1E
   874     003E                     	ds	2
   875     0040                     ??_map:
   876                           
   877                           ; 1 bytes @ 0x20
   878     0040                     	ds	6
   879     0046                     map@valmap:
   880                           
   881                           ; 4 bytes @ 0x26
   882     0046                     	ds	4
   883     004A                     ??_main:
   884                           
   885                           ; 1 bytes @ 0x2A
   886     004A                     	ds	3
   887     004D                     main@text:
   888                           
   889                           ; 9 bytes @ 0x2D
   890     004D                     	ds	9
   891     0056                     main@varvolt2:
   892                           
   893                           ; 2 bytes @ 0x36
   894     0056                     	ds	2
   895     0058                     main@c:
   896                           
   897                           ; 1 bytes @ 0x38
   898     0058                     	ds	1
   899                           
   900                           	psect	maintext
   901     019E                     __pmaintext:	
   902 ;;
   903 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   904 ;;
   905 ;; *************** function _main *****************
   906 ;; Defined at:
   907 ;;		line 63 in file "postlab2.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  c               1   56[BANK0 ] unsigned char 
   912 ;;  varvolt2        2   54[BANK0 ] unsigned int 
   913 ;;  text            9   45[BANK0 ] unsigned char [9]
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : B00/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       0       0       0       0
   924 ;;      Locals:         0      12       0       0       0
   925 ;;      Temps:          0       3       0       0       0
   926 ;;      Totals:         0      15       0       0       0
   927 ;;Total ram usage:       15 bytes
   928 ;; Hardware stack levels required when called: 4
   929 ;; This function calls:
   930 ;;		_UART_Data_Ready
   931 ;;		_UART_GetC
   932 ;;		_UART_Init
   933 ;;		_UART_Print
   934 ;;		_UART_PutC
   935 ;;		_map
   936 ;;		_preguntas
   937 ;;		_setup
   938 ;;		_sprintf
   939 ;;		_uart_read
   940 ;; This function is called by:
   941 ;;		Startup code after reset
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945     019E                     _main:	
   946                           ;psect for function _main
   947                           
   948     019E                     l2237:	
   949                           ;incstack = 0
   950                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   951                           
   952                           
   953                           ;postlab2.c: 65:     setup();
   954     019E  120A  118A  2662  120A  118A  	fcall	_setup
   955     01A3                     l2239:
   956                           
   957                           ;postlab2.c: 66:   OSCCON = 0x70;
   958     01A3  3070               	movlw	112
   959     01A4  1683               	bsf	3,5	;RP0=1, select bank1
   960     01A5  1303               	bcf	3,6	;RP1=0, select bank1
   961     01A6  008F               	movwf	15	;volatile
   962     01A7                     l2241:
   963                           
   964                           ;postlab2.c: 68:   UART_Init(9600);
   965     01A7  3000               	movlw	0
   966     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   967     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   968     01AA  00AB               	movwf	UART_Init@baud_rate+3
   969     01AB  3000               	movlw	0
   970     01AC  00AA               	movwf	UART_Init@baud_rate+2
   971     01AD  3025               	movlw	37
   972     01AE  00A9               	movwf	UART_Init@baud_rate+1
   973     01AF  3080               	movlw	128
   974     01B0  00A8               	movwf	UART_Init@baud_rate
   975     01B1  120A  118A  2363  120A  118A  	fcall	_UART_Init
   976     01B6                     l2243:
   977                           
   978                           ;postlab2.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   979     01B6  3015               	movlw	21
   980     01B7  1283               	bcf	3,5	;RP0=0, select bank0
   981     01B8  1303               	bcf	3,6	;RP1=0, select bank0
   982     01B9  00CC               	movwf	??_main+2
   983     01BA  304B               	movlw	75
   984     01BB  00CB               	movwf	??_main+1
   985     01BC  30BD               	movlw	189
   986     01BD  00CA               	movwf	??_main
   987     01BE                     u2207:
   988     01BE  0BCA               	decfsz	??_main,f
   989     01BF  29BE               	goto	u2207
   990     01C0  0BCB               	decfsz	??_main+1,f
   991     01C1  29BE               	goto	u2207
   992     01C2  0BCC               	decfsz	??_main+2,f
   993     01C3  29BE               	goto	u2207
   994     01C4  29C5               	nop2
   995     01C5                     l2245:
   996                           
   997                           ;postlab2.c: 72:   UART_Print("1.Leer potenciometro\r\n");
   998     01C5  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   999     01C6  00F4               	movwf	UART_Print@data
  1000     01C7  3080               	movlw	128
  1001     01C8  00F5               	movwf	UART_Print@data+1
  1002     01C9  120A  118A  2612  120A  118A  	fcall	_UART_Print
  1003     01CE                     l2247:
  1004                           
  1005                           ;postlab2.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1006     01CE  300B               	movlw	11
  1007     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1008     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1009     01D1  00CC               	movwf	??_main+2
  1010     01D2  3026               	movlw	38
  1011     01D3  00CB               	movwf	??_main+1
  1012     01D4  305D               	movlw	93
  1013     01D5  00CA               	movwf	??_main
  1014     01D6                     u2217:
  1015     01D6  0BCA               	decfsz	??_main,f
  1016     01D7  29D6               	goto	u2217
  1017     01D8  0BCB               	decfsz	??_main+1,f
  1018     01D9  29D6               	goto	u2217
  1019     01DA  0BCC               	decfsz	??_main+2,f
  1020     01DB  29D6               	goto	u2217
  1021     01DC                     l2249:
  1022                           
  1023                           ;postlab2.c: 76:   UART_Print(message);
  1024     01DC  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1025     01DD  00F4               	movwf	UART_Print@data
  1026     01DE  3080               	movlw	128
  1027     01DF  00F5               	movwf	UART_Print@data+1
  1028     01E0  120A  118A  2612  120A  118A  	fcall	_UART_Print
  1029     01E5                     l2251:
  1030                           
  1031                           ;postlab2.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1032     01E5  300B               	movlw	11
  1033     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1034     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1035     01E8  00CC               	movwf	??_main+2
  1036     01E9  3026               	movlw	38
  1037     01EA  00CB               	movwf	??_main+1
  1038     01EB  305D               	movlw	93
  1039     01EC  00CA               	movwf	??_main
  1040     01ED                     u2227:
  1041     01ED  0BCA               	decfsz	??_main,f
  1042     01EE  29ED               	goto	u2227
  1043     01EF  0BCB               	decfsz	??_main+1,f
  1044     01F0  29ED               	goto	u2227
  1045     01F1  0BCC               	decfsz	??_main+2,f
  1046     01F2  29ED               	goto	u2227
  1047     01F3                     l2253:
  1048                           
  1049                           ;postlab2.c: 80:   UART_Print("\r\n");
  1050     01F3  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1051     01F4  00F4               	movwf	UART_Print@data
  1052     01F5  3080               	movlw	128
  1053     01F6  00F5               	movwf	UART_Print@data+1
  1054     01F7  120A  118A  2612  120A  118A  	fcall	_UART_Print
  1055     01FC                     l2255:
  1056                           
  1057                           ;postlab2.c: 81:  ADCON0bits.GO =1;
  1058     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1059     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1060     01FE  149F               	bsf	31,1	;volatile
  1061     01FF                     l2257:
  1062                           
  1063                           ;postlab2.c: 84:   {;postlab2.c: 85:        if (ADCON0bits.GO ==0)
  1064     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1065     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1066     0201  189F               	btfsc	31,1	;volatile
  1067     0202  2A04               	goto	u2181
  1068     0203  2A05               	goto	u2180
  1069     0204                     u2181:
  1070     0204  2A75               	goto	l2289
  1071     0205                     u2180:
  1072     0205                     l2259:
  1073                           
  1074                           ;postlab2.c: 86:      ADCON0bits.GO =1;
  1075     0205  149F               	bsf	31,1	;volatile
  1076     0206  2A75               	goto	l2289
  1077     0207                     l2261:
  1078                           
  1079                           ;postlab2.c: 104:                valpot = ADRESH;
  1080     0207  081E               	movf	30,w	;volatile
  1081     0208  00D9               	movwf	_valpot
  1082     0209                     l2263:
  1083                           
  1084                           ;postlab2.c: 105:               uint16_t varvolt2 = map(valpot,0,255,0,5);
  1085     0209  0859               	movf	_valpot,w
  1086     020A  00CA               	movwf	??_main
  1087     020B  01CB               	clrf	??_main+1
  1088     020C  084A               	movf	??_main,w
  1089     020D  00B6               	movwf	map@varmap
  1090     020E  084B               	movf	??_main+1,w
  1091     020F  00B7               	movwf	map@varmap+1
  1092     0210  3000               	movlw	0
  1093     0211  00B8               	movwf	map@minval
  1094     0212  00B9               	movwf	map@minval+1
  1095     0213  30FF               	movlw	255
  1096     0214  00BA               	movwf	map@maxval
  1097     0215  3000               	movlw	0
  1098     0216  00BB               	movwf	map@maxval+1
  1099     0217  3000               	movlw	0
  1100     0218  00BC               	movwf	map@minsal
  1101     0219  00BD               	movwf	map@minsal+1
  1102     021A  3005               	movlw	5
  1103     021B  00BE               	movwf	map@maxsal
  1104     021C  3000               	movlw	0
  1105     021D  00BF               	movwf	map@maxsal+1
  1106     021E  120A  118A  24E3  120A  118A  	fcall	_map
  1107     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1108     0224  1303               	bcf	3,6	;RP1=0, select bank0
  1109     0225  0837               	movf	?_map+1,w
  1110     0226  00D7               	movwf	main@varvolt2+1
  1111     0227  0836               	movf	?_map,w
  1112     0228  00D6               	movwf	main@varvolt2
  1113     0229                     l2265:
  1114                           
  1115                           ;postlab2.c: 107:               UART_Print ("\r\n");
  1116     0229  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1117     022A  00F4               	movwf	UART_Print@data
  1118     022B  3080               	movlw	128
  1119     022C  00F5               	movwf	UART_Print@data+1
  1120     022D  120A  118A  2612  120A  118A  	fcall	_UART_Print
  1121     0232                     l2267:
  1122                           
  1123                           ;postlab2.c: 108:             sprintf(text, "%03u\r\n", varvolt2);
  1124     0232  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1125     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0235  00AE               	movwf	sprintf@f
  1128     0236  0857               	movf	main@varvolt2+1,w
  1129     0237  00B0               	movwf	?_sprintf+2
  1130     0238  0856               	movf	main@varvolt2,w
  1131     0239  00AF               	movwf	?_sprintf+1
  1132     023A  304D               	movlw	(low (main@text| 0))& (0+255)
  1133     023B  120A  118A  2018  120A  118A  	fcall	_sprintf
  1134     0240                     l2269:
  1135                           
  1136                           ;postlab2.c: 109:             UART_Print(text);
  1137     0240  304D               	movlw	(low (main@text| 0))& (0+255)
  1138     0241  00F4               	movwf	UART_Print@data
  1139     0242  3000               	movlw	0
  1140     0243  00F5               	movwf	UART_Print@data+1
  1141     0244  120A  118A  2612  120A  118A  	fcall	_UART_Print
  1142     0249                     l2271:
  1143                           
  1144                           ;postlab2.c: 112:               preguntas();
  1145     0249  120A  118A  26B0  120A  118A  	fcall	_preguntas
  1146     024E                     l2273:
  1147                           
  1148                           ;postlab2.c: 113:              RCREG ='0';
  1149     024E  3030               	movlw	48
  1150     024F  1283               	bcf	3,5	;RP0=0, select bank0
  1151     0250  1303               	bcf	3,6	;RP1=0, select bank0
  1152     0251  009A               	movwf	26	;volatile
  1153                           
  1154                           ;postlab2.c: 115:              break;
  1155     0252  2A8E               	goto	l2291
  1156     0253                     l2275:
  1157                           
  1158                           ;postlab2.c: 117:                _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1159     0253  3006               	movlw	6
  1160     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1161     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1162     0256  00CB               	movwf	??_main+1
  1163     0257  302F               	movlw	47
  1164     0258  00CA               	movwf	??_main
  1165     0259                     u2237:
  1166     0259  0BCA               	decfsz	??_main,f
  1167     025A  2A59               	goto	u2237
  1168     025B  0BCB               	decfsz	??_main+1,f
  1169     025C  2A59               	goto	u2237
  1170     025D  2A5E               	nop2
  1171     025E                     l2277:
  1172                           
  1173                           ;postlab2.c: 118:                PORTD ++;
  1174     025E  3001               	movlw	1
  1175     025F  1283               	bcf	3,5	;RP0=0, select bank0
  1176     0260  1303               	bcf	3,6	;RP1=0, select bank0
  1177     0261  00CA               	movwf	??_main
  1178     0262  084A               	movf	??_main,w
  1179     0263  0788               	addwf	8,f	;volatile
  1180     0264  2A4E               	goto	l2273
  1181     0265                     l2281:
  1182                           
  1183                           ;postlab2.c: 123:                _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1184     0265  3006               	movlw	6
  1185     0266  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0267  1303               	bcf	3,6	;RP1=0, select bank0
  1187     0268  00CB               	movwf	??_main+1
  1188     0269  302F               	movlw	47
  1189     026A  00CA               	movwf	??_main
  1190     026B                     u2247:
  1191     026B  0BCA               	decfsz	??_main,f
  1192     026C  2A6B               	goto	u2247
  1193     026D  0BCB               	decfsz	??_main+1,f
  1194     026E  2A6B               	goto	u2247
  1195     026F  2A70               	nop2
  1196     0270                     l2283:
  1197                           
  1198                           ;postlab2.c: 124:                PORTD --;
  1199     0270  3001               	movlw	1
  1200     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1201     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1202     0273  0288               	subwf	8,f	;volatile
  1203     0274  2A4E               	goto	l2273
  1204     0275                     l2289:
  1205     0275  120A  118A  269D  120A  118A  	fcall	_uart_read
  1206     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1207     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1208     027C  00CA               	movwf	??_main
  1209     027D  01CB               	clrf	??_main+1
  1210                           
  1211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1212                           ; Switch size 1, requested type "simple"
  1213                           ; Number of cases is 1, Range of values is 0 to 0
  1214                           ; switch strategies available:
  1215                           ; Name         Instructions Cycles
  1216                           ; simple_byte            4     3 (average)
  1217                           ; direct_byte           11     8 (fixed)
  1218                           ; jumptable            260     6 (fixed)
  1219                           ;	Chosen strategy is simple_byte
  1220     027E  084B               	movf	??_main+1,w
  1221     027F  3A00               	xorlw	0	; case 0
  1222     0280  1903               	skipnz
  1223     0281  2A83               	goto	l2361
  1224     0282  2A8E               	goto	l2291
  1225     0283                     l2361:
  1226                           
  1227                           ; Switch size 1, requested type "simple"
  1228                           ; Number of cases is 3, Range of values is 43 to 49
  1229                           ; switch strategies available:
  1230                           ; Name         Instructions Cycles
  1231                           ; simple_byte           10     6 (average)
  1232                           ; direct_byte           32    11 (fixed)
  1233                           ; jumptable            263     9 (fixed)
  1234                           ;	Chosen strategy is simple_byte
  1235     0283  084A               	movf	??_main,w
  1236     0284  3A2B               	xorlw	43	; case 43
  1237     0285  1903               	skipnz
  1238     0286  2A53               	goto	l2275
  1239     0287  3A06               	xorlw	6	; case 45
  1240     0288  1903               	skipnz
  1241     0289  2A65               	goto	l2281
  1242     028A  3A1C               	xorlw	28	; case 49
  1243     028B  1903               	skipnz
  1244     028C  2A07               	goto	l2261
  1245     028D  2A8E               	goto	l2291
  1246     028E                     l2291:
  1247                           
  1248                           ;postlab2.c: 131:     if ( UART_Data_Ready() )
  1249     028E  120A  118A  26EF  120A  118A  	fcall	_UART_Data_Ready
  1250     0293  1C03               	btfss	3,0
  1251     0294  2A96               	goto	u2191
  1252     0295  2A97               	goto	u2190
  1253     0296                     u2191:
  1254     0296  29FF               	goto	l2257
  1255     0297                     u2190:
  1256     0297                     l2293:
  1257                           
  1258                           ;postlab2.c: 132:     {;postlab2.c: 133:       uint8_t c = UART_GetC();
  1259     0297  120A  118A  26D5  120A  118A  	fcall	_UART_GetC
  1260     029C  1283               	bcf	3,5	;RP0=0, select bank0
  1261     029D  1303               	bcf	3,6	;RP1=0, select bank0
  1262     029E  00D8               	movwf	main@c
  1263     029F                     l2295:
  1264                           
  1265                           ;postlab2.c: 134:       UART_PutC(c);
  1266     029F  0858               	movf	main@c,w
  1267     02A0  120A  118A  26E3  120A  118A  	fcall	_UART_PutC
  1268     02A5  29FF               	goto	l2257
  1269     02A6  120A  118A  280C   	ljmp	start
  1270     02A9                     __end_of_main:
  1271                           
  1272                           	psect	text1
  1273     069D                     __ptext1:	
  1274 ;; *************** function _uart_read *****************
  1275 ;; Defined at:
  1276 ;;		line 50 in file "postlab2.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 1
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304     069D                     _uart_read:	
  1305                           ;psect for function _uart_read
  1306                           
  1307     069D                     l1699:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _uart_read: [wreg]
  1310                           
  1311                           
  1312                           ;postlab2.c: 51:  if(PIR1bits.RCIF== 0){
  1313     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1314     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1315     069F  1A8C               	btfsc	12,5	;volatile
  1316     06A0  2EA2               	goto	u1431
  1317     06A1  2EA3               	goto	u1430
  1318     06A2                     u1431:
  1319     06A2  2EAE               	goto	l1711
  1320     06A3                     u1430:
  1321     06A3                     l1701:
  1322                           
  1323                           ;postlab2.c: 52:      if (RCSTAbits.OERR){
  1324     06A3  1C98               	btfss	24,1	;volatile
  1325     06A4  2EA6               	goto	u1441
  1326     06A5  2EA7               	goto	u1440
  1327     06A6                     u1441:
  1328     06A6  2EAC               	goto	l1705
  1329     06A7                     u1440:
  1330     06A7                     l1703:
  1331                           
  1332                           ;postlab2.c: 53:          RCSTAbits.CREN =0;
  1333     06A7  1218               	bcf	24,4	;volatile
  1334                           
  1335                           ;postlab2.c: 54:          __nop();
  1336     06A8  0000               	nop
  1337                           
  1338                           ;postlab2.c: 55:          RCSTAbits.CREN =1;
  1339     06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1340     06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1341     06AB  1618               	bsf	24,4	;volatile
  1342     06AC                     l1705:
  1343                           
  1344                           ;postlab2.c: 57:      return RCREG;
  1345     06AC  081A               	movf	26,w	;volatile
  1346     06AD  2EAF               	goto	l156
  1347     06AE                     l1711:
  1348                           
  1349                           ;postlab2.c: 60:      return 0;
  1350     06AE  3000               	movlw	0
  1351     06AF                     l156:
  1352     06AF  0008               	return
  1353     06B0                     __end_of_uart_read:
  1354                           
  1355                           	psect	text2
  1356     0018                     __ptext2:	
  1357 ;; *************** function _sprintf *****************
  1358 ;; Defined at:
  1359 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  sp              1    wreg     PTR unsigned char 
  1362 ;;		 -> main@text(9), 
  1363 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1364 ;;		 -> STR_4(7), 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1367 ;;		 -> main@text(9), 
  1368 ;;  tmpval          4    0        struct .
  1369 ;;  width           2   26[BANK0 ] int 
  1370 ;;  val             2   22[BANK0 ] unsigned int 
  1371 ;;  cp              2    0        PTR const unsigned char 
  1372 ;;  len             2    0        unsigned int 
  1373 ;;  c               1   28[BANK0 ] unsigned char 
  1374 ;;  prec            1   24[BANK0 ] char 
  1375 ;;  flag            1   21[BANK0 ] unsigned char 
  1376 ;;  ap              1   20[BANK0 ] PTR void [1]
  1377 ;;		 -> ?_sprintf(2), 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  2   14[BANK0 ] int 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       3       0       0       0
  1388 ;;      Locals:         0       9       0       0       0
  1389 ;;      Temps:          0       3       0       0       0
  1390 ;;      Totals:         0      15       0       0       0
  1391 ;;Total ram usage:       15 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 2
  1394 ;; This function calls:
  1395 ;;		___lwdiv
  1396 ;;		___lwmod
  1397 ;;		___wmul
  1398 ;;		_isdigit
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404     0018                     _sprintf:	
  1405                           ;psect for function _sprintf
  1406                           
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1410                           ;sprintf@sp stored from wreg
  1411     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1412     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1413     001A  00B9               	movwf	sprintf@sp
  1414     001B                     l2139:
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1417     001B  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1418     001C  00B4               	movwf	sprintf@ap
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1421     001D  2989               	goto	l2223
  1422     001E                     l2141:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1425     001E  3025               	movlw	37
  1426     001F  063C               	xorwf	sprintf@c,w
  1427     0020  1903               	btfsc	3,2
  1428     0021  2823               	goto	u2051
  1429     0022  2824               	goto	u2050
  1430     0023                     u2051:
  1431     0023  282E               	goto	l2147
  1432     0024                     u2050:
  1433     0024                     l2143:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1436     0024  0839               	movf	sprintf@sp,w
  1437     0025  0084               	movwf	4
  1438     0026  083C               	movf	sprintf@c,w
  1439     0027  1383               	bcf	3,7	;select IRP bank0
  1440     0028  0080               	movwf	0
  1441     0029                     l2145:
  1442     0029  3001               	movlw	1
  1443     002A  00B1               	movwf	??_sprintf
  1444     002B  0831               	movf	??_sprintf,w
  1445     002C  07B9               	addwf	sprintf@sp,f
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1448     002D  2989               	goto	l2223
  1449     002E                     l2147:
  1450                           
  1451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1452     002E  01BA               	clrf	sprintf@width
  1453     002F  01BB               	clrf	sprintf@width+1
  1454                           
  1455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1456     0030  01B5               	clrf	sprintf@flag
  1457     0031  2837               	goto	l2153
  1458     0032                     l332:	
  1459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1460                           
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1463     0032  1535               	bsf	sprintf@flag,2
  1464     0033                     l2149:
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1467     0033  3001               	movlw	1
  1468     0034  00B1               	movwf	??_sprintf
  1469     0035  0831               	movf	??_sprintf,w
  1470     0036  07AE               	addwf	sprintf@f,f
  1471     0037                     l2153:	
  1472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1473                           
  1474     0037  082E               	movf	sprintf@f,w
  1475     0038  0084               	movwf	4
  1476     0039  120A  118A  2553  120A  118A  	fcall	stringdir
  1477     003E  00B1               	movwf	??_sprintf
  1478     003F  01B2               	clrf	??_sprintf+1
  1479                           
  1480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 1, Range of values is 0 to 0
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte            4     3 (average)
  1486                           ; direct_byte           11     8 (fixed)
  1487                           ; jumptable            260     6 (fixed)
  1488                           ;	Chosen strategy is simple_byte
  1489     0040  0832               	movf	??_sprintf+1,w
  1490     0041  3A00               	xorlw	0	; case 0
  1491     0042  1903               	skipnz
  1492     0043  2845               	goto	l2363
  1493     0044  284A               	goto	l2155
  1494     0045                     l2363:
  1495                           
  1496                           ; Switch size 1, requested type "simple"
  1497                           ; Number of cases is 1, Range of values is 48 to 48
  1498                           ; switch strategies available:
  1499                           ; Name         Instructions Cycles
  1500                           ; simple_byte            4     3 (average)
  1501                           ; direct_byte           14    11 (fixed)
  1502                           ; jumptable            263     9 (fixed)
  1503                           ;	Chosen strategy is simple_byte
  1504     0045  0831               	movf	??_sprintf,w
  1505     0046  3A30               	xorlw	48	; case 48
  1506     0047  1903               	skipnz
  1507     0048  2832               	goto	l332
  1508     0049  284A               	goto	l2155
  1509     004A                     l2155:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1512     004A  082E               	movf	sprintf@f,w
  1513     004B  0084               	movwf	4
  1514     004C  120A  118A  2553  120A  118A  	fcall	stringdir
  1515     0051  120A  118A  26C3  120A  118A  	fcall	_isdigit
  1516     0056  1C03               	btfss	3,0
  1517     0057  2859               	goto	u2061
  1518     0058  285A               	goto	u2060
  1519     0059                     u2061:
  1520     0059  28A0               	goto	l2171
  1521     005A                     u2060:
  1522     005A                     l2157:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1525     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1526     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1527     005C  01BA               	clrf	sprintf@width
  1528     005D  01BB               	clrf	sprintf@width+1
  1529     005E                     l2159:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1532     005E  300A               	movlw	10
  1533     005F  00F3               	movwf	___wmul@multiplier
  1534     0060  3000               	movlw	0
  1535     0061  00F4               	movwf	___wmul@multiplier+1
  1536     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1537     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1538     0064  083B               	movf	sprintf@width+1,w
  1539     0065  00F6               	movwf	___wmul@multiplicand+1
  1540     0066  083A               	movf	sprintf@width,w
  1541     0067  00F5               	movwf	___wmul@multiplicand
  1542     0068  120A  118A  263D  120A  118A  	fcall	___wmul
  1543     006D  0874               	movf	?___wmul+1,w
  1544     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1545     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0070  00BB               	movwf	sprintf@width+1
  1547     0071  0873               	movf	?___wmul,w
  1548     0072  00BA               	movwf	sprintf@width
  1549     0073                     l2161:
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1552     0073  082E               	movf	sprintf@f,w
  1553     0074  0084               	movwf	4
  1554     0075  120A  118A  2553  120A  118A  	fcall	stringdir
  1555     007A  3ED0               	addlw	208
  1556     007B  00B1               	movwf	??_sprintf
  1557     007C  30FF               	movlw	255
  1558     007D  1803               	skipnc
  1559     007E  3000               	movlw	0
  1560     007F  00B2               	movwf	??_sprintf+1
  1561     0080  0831               	movf	??_sprintf,w
  1562     0081  07BA               	addwf	sprintf@width,f
  1563     0082  1803               	skipnc
  1564     0083  0ABB               	incf	sprintf@width+1,f
  1565     0084  0832               	movf	??_sprintf+1,w
  1566     0085  07BB               	addwf	sprintf@width+1,f
  1567     0086                     l2163:
  1568     0086  3001               	movlw	1
  1569     0087  00B1               	movwf	??_sprintf
  1570     0088  0831               	movf	??_sprintf,w
  1571     0089  07AE               	addwf	sprintf@f,f
  1572     008A                     l2165:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1575     008A  082E               	movf	sprintf@f,w
  1576     008B  0084               	movwf	4
  1577     008C  120A  118A  2553  120A  118A  	fcall	stringdir
  1578     0091  120A  118A  26C3  120A  118A  	fcall	_isdigit
  1579     0096  1803               	btfsc	3,0
  1580     0097  2899               	goto	u2071
  1581     0098  289A               	goto	u2070
  1582     0099                     u2071:
  1583     0099  285E               	goto	l2159
  1584     009A                     u2070:
  1585     009A  28A0               	goto	l2171
  1586     009B                     l2167:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1589     009B  30C0               	movlw	192
  1590     009C  00B1               	movwf	??_sprintf
  1591     009D  0831               	movf	??_sprintf,w
  1592     009E  04B5               	iorwf	sprintf@flag,f
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1595     009F  28BC               	goto	l2173
  1596     00A0                     l2171:
  1597     00A0  3001               	movlw	1
  1598     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1599     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1600     00A3  07AE               	addwf	sprintf@f,f
  1601     00A4  30FF               	movlw	-1
  1602     00A5  072E               	addwf	sprintf@f,w
  1603     00A6  0084               	movwf	4
  1604     00A7  120A  118A  2553  120A  118A  	fcall	stringdir
  1605     00AC  00BC               	movwf	sprintf@c
  1606     00AD  00B1               	movwf	??_sprintf
  1607     00AE  01B2               	clrf	??_sprintf+1
  1608                           
  1609                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1610                           ; Switch size 1, requested type "simple"
  1611                           ; Number of cases is 1, Range of values is 0 to 0
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte            4     3 (average)
  1615                           ; direct_byte           11     8 (fixed)
  1616                           ; jumptable            260     6 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618     00AF  0832               	movf	??_sprintf+1,w
  1619     00B0  3A00               	xorlw	0	; case 0
  1620     00B1  1903               	skipnz
  1621     00B2  28B4               	goto	l2365
  1622     00B3  2989               	goto	l2223
  1623     00B4                     l2365:
  1624                           
  1625                           ; Switch size 1, requested type "simple"
  1626                           ; Number of cases is 2, Range of values is 0 to 117
  1627                           ; switch strategies available:
  1628                           ; Name         Instructions Cycles
  1629                           ; simple_byte            7     4 (average)
  1630                           ; jumptable            260     6 (fixed)
  1631                           ;	Chosen strategy is simple_byte
  1632     00B4  0831               	movf	??_sprintf,w
  1633     00B5  3A00               	xorlw	0	; case 0
  1634     00B6  1903               	skipnz
  1635     00B7  2999               	goto	l2225
  1636     00B8  3A75               	xorlw	117	; case 117
  1637     00B9  1903               	skipnz
  1638     00BA  289B               	goto	l2167
  1639     00BB  2989               	goto	l2223
  1640     00BC                     l2173:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1643     00BC  0834               	movf	sprintf@ap,w
  1644     00BD  0084               	movwf	4
  1645     00BE  1383               	bcf	3,7	;select IRP bank0
  1646     00BF  0800               	movf	0,w
  1647     00C0  00B6               	movwf	sprintf@val
  1648     00C1  0A84               	incf	4,f
  1649     00C2  0800               	movf	0,w
  1650     00C3  00B7               	movwf	sprintf@val+1
  1651     00C4                     l2175:
  1652     00C4  3002               	movlw	2
  1653     00C5  00B1               	movwf	??_sprintf
  1654     00C6  0831               	movf	??_sprintf,w
  1655     00C7  07B4               	addwf	sprintf@ap,f
  1656     00C8                     l2177:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1659     00C8  01BC               	clrf	sprintf@c
  1660     00C9  0ABC               	incf	sprintf@c,f
  1661     00CA                     l2183:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1664     00CA  083C               	movf	sprintf@c,w
  1665     00CB  00B1               	movwf	??_sprintf
  1666     00CC  0731               	addwf	??_sprintf,w
  1667     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1668     00CE  0084               	movwf	4
  1669     00CF  120A  118A  2553  120A  118A  	fcall	stringdir
  1670     00D4  00B2               	movwf	??_sprintf+1
  1671     00D5  120A  118A  2553  120A  118A  	fcall	stringdir
  1672     00DA  00B3               	movwf	??_sprintf+2
  1673     00DB  0833               	movf	??_sprintf+2,w
  1674     00DC  0237               	subwf	sprintf@val+1,w
  1675     00DD  1D03               	skipz
  1676     00DE  28E1               	goto	u2085
  1677     00DF  0832               	movf	??_sprintf+1,w
  1678     00E0  0236               	subwf	sprintf@val,w
  1679     00E1                     u2085:
  1680     00E1  1803               	skipnc
  1681     00E2  28E4               	goto	u2081
  1682     00E3  28E5               	goto	u2080
  1683     00E4                     u2081:
  1684     00E4  28E6               	goto	l2187
  1685     00E5                     u2080:
  1686     00E5  28F0               	goto	l2189
  1687     00E6                     l2187:
  1688     00E6  3001               	movlw	1
  1689     00E7  00B1               	movwf	??_sprintf
  1690     00E8  0831               	movf	??_sprintf,w
  1691     00E9  07BC               	addwf	sprintf@c,f
  1692     00EA  3005               	movlw	5
  1693     00EB  063C               	xorwf	sprintf@c,w
  1694     00EC  1D03               	btfss	3,2
  1695     00ED  28EF               	goto	u2091
  1696     00EE  28F0               	goto	u2090
  1697     00EF                     u2091:
  1698     00EF  28CA               	goto	l2183
  1699     00F0                     u2090:
  1700     00F0                     l2189:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1703     00F0  083B               	movf	sprintf@width+1,w
  1704     00F1  3A80               	xorlw	128
  1705     00F2  3C80               	sublw	128
  1706     00F3  1D03               	skipz
  1707     00F4  28F7               	goto	u2105
  1708     00F5  083A               	movf	sprintf@width,w
  1709     00F6  023C               	subwf	sprintf@c,w
  1710     00F7                     u2105:
  1711     00F7  1803               	skipnc
  1712     00F8  28FA               	goto	u2101
  1713     00F9  28FB               	goto	u2100
  1714     00FA                     u2101:
  1715     00FA  2907               	goto	l2193
  1716     00FB                     u2100:
  1717     00FB                     l2191:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1720     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1721     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1722     00FD  083C               	movf	sprintf@c,w
  1723     00FE  00B1               	movwf	??_sprintf
  1724     00FF  01B2               	clrf	??_sprintf+1
  1725     0100  0831               	movf	??_sprintf,w
  1726     0101  02BA               	subwf	sprintf@width,f
  1727     0102  0832               	movf	??_sprintf+1,w
  1728     0103  1C03               	skipc
  1729     0104  03BB               	decf	sprintf@width+1,f
  1730     0105  02BB               	subwf	sprintf@width+1,f
  1731     0106  290B               	goto	l2195
  1732     0107                     l2193:
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1735     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1736     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0109  01BA               	clrf	sprintf@width
  1738     010A  01BB               	clrf	sprintf@width+1
  1739     010B                     l2195:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1742     010B  1D35               	btfss	sprintf@flag,2
  1743     010C  290E               	goto	u2111
  1744     010D  290F               	goto	u2110
  1745     010E                     u2111:
  1746     010E  292B               	goto	l2205
  1747     010F                     u2110:
  1748     010F                     l2197:
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1751     010F  083A               	movf	sprintf@width,w
  1752     0110  043B               	iorwf	sprintf@width+1,w
  1753     0111  1903               	btfsc	3,2
  1754     0112  2914               	goto	u2121
  1755     0113  2915               	goto	u2120
  1756     0114                     u2121:
  1757     0114  2946               	goto	l2213
  1758     0115                     u2120:
  1759     0115                     l2199:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1762     0115  0839               	movf	sprintf@sp,w
  1763     0116  0084               	movwf	4
  1764     0117  3030               	movlw	48
  1765     0118  1383               	bcf	3,7	;select IRP bank0
  1766     0119  0080               	movwf	0
  1767     011A                     l2201:
  1768     011A  3001               	movlw	1
  1769     011B  00B1               	movwf	??_sprintf
  1770     011C  0831               	movf	??_sprintf,w
  1771     011D  07B9               	addwf	sprintf@sp,f
  1772     011E                     l2203:
  1773     011E  30FF               	movlw	255
  1774     011F  07BA               	addwf	sprintf@width,f
  1775     0120  1803               	skipnc
  1776     0121  0ABB               	incf	sprintf@width+1,f
  1777     0122  30FF               	movlw	255
  1778     0123  07BB               	addwf	sprintf@width+1,f
  1779     0124  083A               	movf	sprintf@width,w
  1780     0125  043B               	iorwf	sprintf@width+1,w
  1781     0126  1D03               	btfss	3,2
  1782     0127  2929               	goto	u2131
  1783     0128  292A               	goto	u2130
  1784     0129                     u2131:
  1785     0129  2915               	goto	l2199
  1786     012A                     u2130:
  1787     012A  2946               	goto	l2213
  1788     012B                     l2205:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1791     012B  083A               	movf	sprintf@width,w
  1792     012C  043B               	iorwf	sprintf@width+1,w
  1793     012D  1903               	btfsc	3,2
  1794     012E  2930               	goto	u2141
  1795     012F  2931               	goto	u2140
  1796     0130                     u2141:
  1797     0130  2946               	goto	l2213
  1798     0131                     u2140:
  1799     0131                     l2207:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1802     0131  0839               	movf	sprintf@sp,w
  1803     0132  0084               	movwf	4
  1804     0133  3020               	movlw	32
  1805     0134  1383               	bcf	3,7	;select IRP bank0
  1806     0135  0080               	movwf	0
  1807     0136                     l2209:
  1808     0136  3001               	movlw	1
  1809     0137  00B1               	movwf	??_sprintf
  1810     0138  0831               	movf	??_sprintf,w
  1811     0139  07B9               	addwf	sprintf@sp,f
  1812     013A                     l2211:
  1813     013A  30FF               	movlw	255
  1814     013B  07BA               	addwf	sprintf@width,f
  1815     013C  1803               	skipnc
  1816     013D  0ABB               	incf	sprintf@width+1,f
  1817     013E  30FF               	movlw	255
  1818     013F  07BB               	addwf	sprintf@width+1,f
  1819     0140  083A               	movf	sprintf@width,w
  1820     0141  043B               	iorwf	sprintf@width+1,w
  1821     0142  1D03               	btfss	3,2
  1822     0143  2945               	goto	u2151
  1823     0144  2946               	goto	u2150
  1824     0145                     u2151:
  1825     0145  2931               	goto	l2207
  1826     0146                     u2150:
  1827     0146                     l2213:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1830     0146  083C               	movf	sprintf@c,w
  1831     0147  00B8               	movwf	sprintf@prec
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1834     0148  2980               	goto	l2221
  1835     0149                     l2215:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1838     0149  300A               	movlw	10
  1839     014A  00A8               	movwf	___lwmod@divisor
  1840     014B  3000               	movlw	0
  1841     014C  00A9               	movwf	___lwmod@divisor+1
  1842     014D  0838               	movf	sprintf@prec,w
  1843     014E  00B1               	movwf	??_sprintf
  1844     014F  0731               	addwf	??_sprintf,w
  1845     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1846     0151  0084               	movwf	4
  1847     0152  120A  118A  2553  120A  118A  	fcall	stringdir
  1848     0157  00A0               	movwf	___lwdiv@divisor
  1849     0158  120A  118A  2553  120A  118A  	fcall	stringdir
  1850     015D  00A1               	movwf	___lwdiv@divisor+1
  1851     015E  0837               	movf	sprintf@val+1,w
  1852     015F  00A3               	movwf	___lwdiv@dividend+1
  1853     0160  0836               	movf	sprintf@val,w
  1854     0161  00A2               	movwf	___lwdiv@dividend
  1855     0162  120A  118A  2590  120A  118A  	fcall	___lwdiv
  1856     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1857     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1858     0169  0821               	movf	?___lwdiv+1,w
  1859     016A  00AB               	movwf	___lwmod@dividend+1
  1860     016B  0820               	movf	?___lwdiv,w
  1861     016C  00AA               	movwf	___lwmod@dividend
  1862     016D  120A  118A  25D6  120A  118A  	fcall	___lwmod
  1863     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1864     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0174  0828               	movf	?___lwmod,w
  1866     0175  3E30               	addlw	48
  1867     0176  00BC               	movwf	sprintf@c
  1868     0177                     l2217:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1871     0177  0839               	movf	sprintf@sp,w
  1872     0178  0084               	movwf	4
  1873     0179  083C               	movf	sprintf@c,w
  1874     017A  1383               	bcf	3,7	;select IRP bank0
  1875     017B  0080               	movwf	0
  1876     017C                     l2219:
  1877     017C  3001               	movlw	1
  1878     017D  00B1               	movwf	??_sprintf
  1879     017E  0831               	movf	??_sprintf,w
  1880     017F  07B9               	addwf	sprintf@sp,f
  1881     0180                     l2221:
  1882                           
  1883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1884     0180  30FF               	movlw	255
  1885     0181  00B1               	movwf	??_sprintf
  1886     0182  0831               	movf	??_sprintf,w
  1887     0183  07B8               	addwf	sprintf@prec,f
  1888     0184  0A38               	incf	sprintf@prec,w
  1889     0185  1D03               	btfss	3,2
  1890     0186  2988               	goto	u2161
  1891     0187  2989               	goto	u2160
  1892     0188                     u2161:
  1893     0188  2949               	goto	l2215
  1894     0189                     u2160:
  1895     0189                     l2223:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1898     0189  3001               	movlw	1
  1899     018A  07AE               	addwf	sprintf@f,f
  1900     018B  30FF               	movlw	-1
  1901     018C  072E               	addwf	sprintf@f,w
  1902     018D  0084               	movwf	4
  1903     018E  120A  118A  2553  120A  118A  	fcall	stringdir
  1904     0193  00BC               	movwf	sprintf@c
  1905     0194  083C               	movf	sprintf@c,w
  1906     0195  1D03               	btfss	3,2
  1907     0196  2998               	goto	u2171
  1908     0197  2999               	goto	u2170
  1909     0198                     u2171:
  1910     0198  281E               	goto	l2141
  1911     0199                     u2170:
  1912     0199                     l2225:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1915     0199  0839               	movf	sprintf@sp,w
  1916     019A  0084               	movwf	4
  1917     019B  1383               	bcf	3,7	;select IRP bank0
  1918     019C  0180               	clrf	0
  1919     019D                     l362:
  1920     019D  0008               	return
  1921     019E                     __end_of_sprintf:
  1922                           
  1923                           	psect	text3
  1924     06C3                     __ptext3:	
  1925 ;; *************** function _isdigit *****************
  1926 ;; Defined at:
  1927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  c               1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  c               1    4[COMMON] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;		None               void
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         2       0       0       0       0
  1945 ;;Total ram usage:        2 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; Hardware stack levels required when called: 1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_sprintf
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955     06C3                     _isdigit:	
  1956                           ;psect for function _isdigit
  1957                           
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1961                           ;isdigit@c stored from wreg
  1962     06C3  00F4               	movwf	isdigit@c
  1963     06C4                     l1521:
  1964     06C4  01F3               	clrf	_isdigit$892
  1965     06C5                     l1523:
  1966     06C5  303A               	movlw	58
  1967     06C6  0274               	subwf	isdigit@c,w
  1968     06C7  1803               	skipnc
  1969     06C8  2ECA               	goto	u931
  1970     06C9  2ECB               	goto	u930
  1971     06CA                     u931:
  1972     06CA  2ED3               	goto	l1529
  1973     06CB                     u930:
  1974     06CB                     l1525:
  1975     06CB  3030               	movlw	48
  1976     06CC  0274               	subwf	isdigit@c,w
  1977     06CD  1C03               	skipc
  1978     06CE  2ED0               	goto	u941
  1979     06CF  2ED1               	goto	u940
  1980     06D0                     u941:
  1981     06D0  2ED3               	goto	l1529
  1982     06D1                     u940:
  1983     06D1                     l1527:
  1984     06D1  01F3               	clrf	_isdigit$892
  1985     06D2  0AF3               	incf	_isdigit$892,f
  1986     06D3                     l1529:
  1987     06D3  0C73               	rrf	_isdigit$892,w
  1988     06D4                     l819:
  1989     06D4  0008               	return
  1990     06D5                     __end_of_isdigit:
  1991                           
  1992                           	psect	text4
  1993     05D6                     __ptext4:	
  1994 ;; *************** function ___lwmod *****************
  1995 ;; Defined at:
  1996 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  divisor         2    8[BANK0 ] unsigned int 
  1999 ;;  dividend        2   10[BANK0 ] unsigned int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  counter         1   13[BANK0 ] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  2    8[BANK0 ] unsigned int 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       4       0       0       0
  2012 ;;      Locals:         0       1       0       0       0
  2013 ;;      Temps:          0       1       0       0       0
  2014 ;;      Totals:         0       6       0       0       0
  2015 ;;Total ram usage:        6 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_sprintf
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025     05D6                     ___lwmod:	
  2026                           ;psect for function ___lwmod
  2027                           
  2028     05D6                     l2097:	
  2029                           ;incstack = 0
  2030                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2031                           
  2032     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2033     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2034     05D8  0828               	movf	___lwmod@divisor,w
  2035     05D9  0429               	iorwf	___lwmod@divisor+1,w
  2036     05DA  1903               	btfsc	3,2
  2037     05DB  2DDD               	goto	u1941
  2038     05DC  2DDE               	goto	u1940
  2039     05DD                     u1941:
  2040     05DD  2E0D               	goto	l2115
  2041     05DE                     u1940:
  2042     05DE                     l2099:
  2043     05DE  01AD               	clrf	___lwmod@counter
  2044     05DF  0AAD               	incf	___lwmod@counter,f
  2045     05E0  2DEC               	goto	l2105
  2046     05E1                     l2101:
  2047     05E1  3001               	movlw	1
  2048     05E2                     u1955:
  2049     05E2  1003               	clrc
  2050     05E3  0DA8               	rlf	___lwmod@divisor,f
  2051     05E4  0DA9               	rlf	___lwmod@divisor+1,f
  2052     05E5  3EFF               	addlw	-1
  2053     05E6  1D03               	skipz
  2054     05E7  2DE2               	goto	u1955
  2055     05E8                     l2103:
  2056     05E8  3001               	movlw	1
  2057     05E9  00AC               	movwf	??___lwmod
  2058     05EA  082C               	movf	??___lwmod,w
  2059     05EB  07AD               	addwf	___lwmod@counter,f
  2060     05EC                     l2105:
  2061     05EC  1FA9               	btfss	___lwmod@divisor+1,7
  2062     05ED  2DEF               	goto	u1961
  2063     05EE  2DF0               	goto	u1960
  2064     05EF                     u1961:
  2065     05EF  2DE1               	goto	l2101
  2066     05F0                     u1960:
  2067     05F0                     l2107:
  2068     05F0  0829               	movf	___lwmod@divisor+1,w
  2069     05F1  022B               	subwf	___lwmod@dividend+1,w
  2070     05F2  1D03               	skipz
  2071     05F3  2DF6               	goto	u1975
  2072     05F4  0828               	movf	___lwmod@divisor,w
  2073     05F5  022A               	subwf	___lwmod@dividend,w
  2074     05F6                     u1975:
  2075     05F6  1C03               	skipc
  2076     05F7  2DF9               	goto	u1971
  2077     05F8  2DFA               	goto	u1970
  2078     05F9                     u1971:
  2079     05F9  2E00               	goto	l2111
  2080     05FA                     u1970:
  2081     05FA                     l2109:
  2082     05FA  0828               	movf	___lwmod@divisor,w
  2083     05FB  02AA               	subwf	___lwmod@dividend,f
  2084     05FC  0829               	movf	___lwmod@divisor+1,w
  2085     05FD  1C03               	skipc
  2086     05FE  03AB               	decf	___lwmod@dividend+1,f
  2087     05FF  02AB               	subwf	___lwmod@dividend+1,f
  2088     0600                     l2111:
  2089     0600  3001               	movlw	1
  2090     0601                     u1985:
  2091     0601  1003               	clrc
  2092     0602  0CA9               	rrf	___lwmod@divisor+1,f
  2093     0603  0CA8               	rrf	___lwmod@divisor,f
  2094     0604  3EFF               	addlw	-1
  2095     0605  1D03               	skipz
  2096     0606  2E01               	goto	u1985
  2097     0607                     l2113:
  2098     0607  3001               	movlw	1
  2099     0608  02AD               	subwf	___lwmod@counter,f
  2100     0609  1D03               	btfss	3,2
  2101     060A  2E0C               	goto	u1991
  2102     060B  2E0D               	goto	u1990
  2103     060C                     u1991:
  2104     060C  2DF0               	goto	l2107
  2105     060D                     u1990:
  2106     060D                     l2115:
  2107     060D  082B               	movf	___lwmod@dividend+1,w
  2108     060E  00A9               	movwf	?___lwmod+1
  2109     060F  082A               	movf	___lwmod@dividend,w
  2110     0610  00A8               	movwf	?___lwmod
  2111     0611                     l648:
  2112     0611  0008               	return
  2113     0612                     __end_of___lwmod:
  2114                           
  2115                           	psect	text5
  2116     0662                     __ptext5:	
  2117 ;; *************** function _setup *****************
  2118 ;; Defined at:
  2119 ;;		line 140 in file "postlab2.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          1       0       0       0       0
  2136 ;;      Totals:         1       0       0       0       0
  2137 ;;Total ram usage:        1 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 1
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147     0662                     _setup:	
  2148                           ;psect for function _setup
  2149                           
  2150     0662                     l1715:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _setup: [wreg+status,2+status,0]
  2153                           
  2154                           
  2155                           ;postlab2.c: 141:     ANSEL = 0b00000011;
  2156     0662  3003               	movlw	3
  2157     0663  1683               	bsf	3,5	;RP0=1, select bank3
  2158     0664  1703               	bsf	3,6	;RP1=1, select bank3
  2159     0665  0088               	movwf	8	;volatile
  2160     0666                     l1717:
  2161                           
  2162                           ;postlab2.c: 142:     ANSELH = 0;
  2163     0666  0189               	clrf	9	;volatile
  2164     0667                     l1719:
  2165                           
  2166                           ;postlab2.c: 144:     TRISA = 0xFF;
  2167     0667  30FF               	movlw	255
  2168     0668  1683               	bsf	3,5	;RP0=1, select bank1
  2169     0669  1303               	bcf	3,6	;RP1=0, select bank1
  2170     066A  0085               	movwf	5	;volatile
  2171     066B                     l1721:
  2172                           
  2173                           ;postlab2.c: 148:     ADCON1bits.ADFM = 0;
  2174     066B  139F               	bcf	31,7	;volatile
  2175     066C                     l1723:
  2176                           
  2177                           ;postlab2.c: 149:     ADCON1bits.VCFG0 = 0;
  2178     066C  121F               	bcf	31,4	;volatile
  2179     066D                     l1725:
  2180                           
  2181                           ;postlab2.c: 150:     ADCON1bits.VCFG1 = 0;
  2182     066D  129F               	bcf	31,5	;volatile
  2183     066E                     l1727:
  2184                           
  2185                           ;postlab2.c: 152:     ADCON0bits.ADCS = 0b01;
  2186     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2187     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2188     0670  081F               	movf	31,w	;volatile
  2189     0671  393F               	andlw	-193
  2190     0672  3840               	iorlw	64
  2191     0673  009F               	movwf	31	;volatile
  2192     0674                     l1729:
  2193                           
  2194                           ;postlab2.c: 153:     ADCON0bits.CHS = 0;
  2195     0674  30C3               	movlw	-61
  2196     0675  059F               	andwf	31,f	;volatile
  2197     0676                     l1731:
  2198                           
  2199                           ;postlab2.c: 154:     ADCON0bits.ADON= 1;
  2200     0676  141F               	bsf	31,0	;volatile
  2201     0677                     l1733:
  2202                           
  2203                           ;postlab2.c: 155:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2204     0677  3021               	movlw	33
  2205     0678  00F3               	movwf	??_setup
  2206     0679                     u2257:
  2207     0679  0BF3               	decfsz	??_setup,f
  2208     067A  2E79               	goto	u2257
  2209     067B                     l1735:
  2210                           
  2211                           ;postlab2.c: 157:     PIR1bits.ADIF = 0;
  2212     067B  1283               	bcf	3,5	;RP0=0, select bank0
  2213     067C  1303               	bcf	3,6	;RP1=0, select bank0
  2214     067D  130C               	bcf	12,6	;volatile
  2215     067E                     l1737:
  2216                           
  2217                           ;postlab2.c: 158:     PIE1bits.ADIE = 1;
  2218     067E  1683               	bsf	3,5	;RP0=1, select bank1
  2219     067F  1303               	bcf	3,6	;RP1=0, select bank1
  2220     0680  170C               	bsf	12,6	;volatile
  2221     0681                     l1739:
  2222                           
  2223                           ;postlab2.c: 159:     INTCONbits.PEIE = 1;
  2224     0681  170B               	bsf	11,6	;volatile
  2225     0682                     l1741:
  2226                           
  2227                           ;postlab2.c: 160:     INTCONbits.GIE = 1;
  2228     0682  178B               	bsf	11,7	;volatile
  2229     0683                     l175:
  2230     0683  0008               	return
  2231     0684                     __end_of_setup:
  2232                           
  2233                           	psect	text6
  2234     06B0                     __ptext6:	
  2235 ;; *************** function _preguntas *****************
  2236 ;; Defined at:
  2237 ;;		line 163 in file "postlab2.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 3
  2258 ;; This function calls:
  2259 ;;		_UART_Print
  2260 ;; This function is called by:
  2261 ;;		_main
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265     06B0                     _preguntas:	
  2266                           ;psect for function _preguntas
  2267                           
  2268     06B0                     l1861:	
  2269                           ;incstack = 0
  2270                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2271                           
  2272                           
  2273                           ;postlab2.c: 165:     UART_Print ("1.Leer potenciometro\r\n");
  2274     06B0  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2275     06B1  00F4               	movwf	UART_Print@data
  2276     06B2  3080               	movlw	128
  2277     06B3  00F5               	movwf	UART_Print@data+1
  2278     06B4  120A  118A  2612  120A  118A  	fcall	_UART_Print
  2279                           
  2280                           ;postlab2.c: 166:     UART_Print (message);
  2281     06B9  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2282     06BA  00F4               	movwf	UART_Print@data
  2283     06BB  3080               	movlw	128
  2284     06BC  00F5               	movwf	UART_Print@data+1
  2285     06BD  120A  118A  2612  120A  118A  	fcall	_UART_Print
  2286     06C2                     l178:
  2287     06C2  0008               	return
  2288     06C3                     __end_of_preguntas:
  2289                           
  2290                           	psect	text7
  2291     0612                     __ptext7:	
  2292 ;; *************** function _UART_Print *****************
  2293 ;; Defined at:
  2294 ;;		line 65 in file "USARTmodl.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  data            2    4[COMMON] PTR const unsigned char 
  2297 ;;		 -> STR_5(23), main@text(9), STR_3(3), STR_2(3), 
  2298 ;;		 -> message(15), STR_1(23), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  i               1    7[COMMON] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         2       0       0       0       0
  2311 ;;      Locals:         1       0       0       0       0
  2312 ;;      Temps:          1       0       0       0       0
  2313 ;;      Totals:         4       0       0       0       0
  2314 ;;Total ram usage:        4 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 2
  2317 ;; This function calls:
  2318 ;;		_UART_PutC
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;;		_preguntas
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325     0612                     _UART_Print:	
  2326                           ;psect for function _UART_Print
  2327                           
  2328     0612                     l1513:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2331                           
  2332                           
  2333                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2334     0612  01F7               	clrf	UART_Print@i
  2335                           
  2336                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2337     0613  2E29               	goto	l1519
  2338     0614                     l1515:
  2339                           
  2340                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2341     0614  0877               	movf	UART_Print@i,w
  2342     0615  0774               	addwf	UART_Print@data,w
  2343     0616  0084               	movwf	4
  2344     0617  0875               	movf	UART_Print@data+1,w
  2345     0618  1803               	skipnc
  2346     0619  0A75               	incf	UART_Print@data+1,w
  2347     061A  00FF               	movwf	btemp+1
  2348     061B  120A  118A  2549  120A  118A  	fcall	stringtab
  2349     0620  120A  118A  26E3  120A  118A  	fcall	_UART_PutC
  2350     0625                     l1517:
  2351     0625  3001               	movlw	1
  2352     0626  00F6               	movwf	??_UART_Print
  2353     0627  0876               	movf	??_UART_Print,w
  2354     0628  07F7               	addwf	UART_Print@i,f
  2355     0629                     l1519:
  2356                           
  2357                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2358     0629  0877               	movf	UART_Print@i,w
  2359     062A  0774               	addwf	UART_Print@data,w
  2360     062B  0084               	movwf	4
  2361     062C  0875               	movf	UART_Print@data+1,w
  2362     062D  1803               	skipnc
  2363     062E  0A75               	incf	UART_Print@data+1,w
  2364     062F  1283               	bcf	3,5	;RP0=0, select bank0
  2365     0630  1303               	bcf	3,6	;RP1=0, select bank0
  2366     0631  00FF               	movwf	btemp+1
  2367     0632  120A  118A  2549  120A  118A  	fcall	stringtab
  2368     0637  3A00               	xorlw	0
  2369     0638  1D03               	skipz
  2370     0639  2E3B               	goto	u921
  2371     063A  2E3C               	goto	u920
  2372     063B                     u921:
  2373     063B  2E14               	goto	l1515
  2374     063C                     u920:
  2375     063C                     l234:
  2376     063C  0008               	return
  2377     063D                     __end_of_UART_Print:
  2378                           
  2379                           	psect	text8
  2380     06E3                     __ptext8:	
  2381 ;; *************** function _UART_PutC *****************
  2382 ;; Defined at:
  2383 ;;		line 59 in file "USARTmodl.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  data            1    wreg     const unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  data            1    3[COMMON] const unsigned char 
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         1       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0
  2400 ;;      Totals:         1       0       0       0       0
  2401 ;;Total ram usage:        1 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;;		_UART_Print
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412     06E3                     _UART_PutC:	
  2413                           ;psect for function _UART_PutC
  2414                           
  2415                           
  2416                           ;incstack = 0
  2417                           ; Regs used in _UART_PutC: [wreg]
  2418                           ;UART_PutC@data stored from wreg
  2419     06E3  00F3               	movwf	UART_PutC@data
  2420     06E4                     l1509:
  2421     06E4                     l225:	
  2422                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2423                           
  2424     06E4  1683               	bsf	3,5	;RP0=1, select bank1
  2425     06E5  1303               	bcf	3,6	;RP1=0, select bank1
  2426     06E6  1C98               	btfss	24,1	;volatile
  2427     06E7  2EE9               	goto	u911
  2428     06E8  2EEA               	goto	u910
  2429     06E9                     u911:
  2430     06E9  2EE4               	goto	l225
  2431     06EA                     u910:
  2432     06EA                     l1511:
  2433                           
  2434                           ;USARTmodl.c: 62:   TXREG = data;
  2435     06EA  0873               	movf	UART_PutC@data,w
  2436     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2437     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2438     06ED  0099               	movwf	25	;volatile
  2439     06EE                     l228:
  2440     06EE  0008               	return
  2441     06EF                     __end_of_UART_PutC:
  2442                           
  2443                           	psect	text9
  2444     04E3                     __ptext9:	
  2445 ;; *************** function _map *****************
  2446 ;; Defined at:
  2447 ;;		line 168 in file "postlab2.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  varmap          2   22[BANK0 ] unsigned int 
  2450 ;;  minval          2   24[BANK0 ] unsigned int 
  2451 ;;  maxval          2   26[BANK0 ] unsigned int 
  2452 ;;  minsal          2   28[BANK0 ] unsigned int 
  2453 ;;  maxsal          2   30[BANK0 ] unsigned int 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  valmap          4   38[BANK0 ] float 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2   22[BANK0 ] unsigned int 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0      10       0       0       0
  2466 ;;      Locals:         0       4       0       0       0
  2467 ;;      Temps:          0       6       0       0       0
  2468 ;;      Totals:         0      20       0       0       0
  2469 ;;Total ram usage:       20 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		___fltol
  2474 ;;		___lwdiv
  2475 ;;		___wmul
  2476 ;;		___xxtofl
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482     04E3                     _map:	
  2483                           ;psect for function _map
  2484                           
  2485     04E3                     l2135:	
  2486                           ;incstack = 0
  2487                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2488                           
  2489                           
  2490                           ;postlab2.c: 169:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval - mi
      +                          nval) + minsal;
  2491     04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2492     04E4  1303               	bcf	3,6	;RP1=0, select bank0
  2493     04E5  083C               	movf	map@minsal,w
  2494     04E6  023E               	subwf	map@maxsal,w
  2495     04E7  00F5               	movwf	___wmul@multiplicand
  2496     04E8  083D               	movf	map@minsal+1,w
  2497     04E9  1C03               	skipc
  2498     04EA  0A3D               	incf	map@minsal+1,w
  2499     04EB  023F               	subwf	map@maxsal+1,w
  2500     04EC  00F6               	movwf	___wmul@multiplicand+1
  2501     04ED  0838               	movf	map@minval,w
  2502     04EE  0236               	subwf	map@varmap,w
  2503     04EF  00F3               	movwf	___wmul@multiplier
  2504     04F0  0839               	movf	map@minval+1,w
  2505     04F1  1C03               	skipc
  2506     04F2  0A39               	incf	map@minval+1,w
  2507     04F3  0237               	subwf	map@varmap+1,w
  2508     04F4  00F4               	movwf	___wmul@multiplier+1
  2509     04F5  120A  118A  263D  120A  118A  	fcall	___wmul
  2510     04FA  0874               	movf	?___wmul+1,w
  2511     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2512     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2513     04FD  00A3               	movwf	___lwdiv@dividend+1
  2514     04FE  0873               	movf	?___wmul,w
  2515     04FF  00A2               	movwf	___lwdiv@dividend
  2516     0500  0838               	movf	map@minval,w
  2517     0501  023A               	subwf	map@maxval,w
  2518     0502  00A0               	movwf	___lwdiv@divisor
  2519     0503  0839               	movf	map@minval+1,w
  2520     0504  1C03               	skipc
  2521     0505  0A39               	incf	map@minval+1,w
  2522     0506  023B               	subwf	map@maxval+1,w
  2523     0507  00A1               	movwf	___lwdiv@divisor+1
  2524     0508  120A  118A  2590  120A  118A  	fcall	___lwdiv
  2525     050D  1283               	bcf	3,5	;RP0=0, select bank0
  2526     050E  1303               	bcf	3,6	;RP1=0, select bank0
  2527     050F  083C               	movf	map@minsal,w
  2528     0510  0720               	addwf	?___lwdiv,w
  2529     0511  00C0               	movwf	??_map
  2530     0512  083D               	movf	map@minsal+1,w
  2531     0513  1803               	skipnc
  2532     0514  0A3D               	incf	map@minsal+1,w
  2533     0515  0721               	addwf	?___lwdiv+1,w
  2534     0516  00C1               	movwf	??_map+1
  2535     0517  0840               	movf	??_map,w
  2536     0518  00C2               	movwf	??_map+2
  2537     0519  0841               	movf	??_map+1,w
  2538     051A  00C3               	movwf	??_map+3
  2539     051B  01C4               	clrf	??_map+4
  2540     051C  01C5               	clrf	??_map+5
  2541     051D  0845               	movf	??_map+5,w
  2542     051E  00AB               	movwf	___xxtofl@val+3
  2543     051F  0844               	movf	??_map+4,w
  2544     0520  00AA               	movwf	___xxtofl@val+2
  2545     0521  0843               	movf	??_map+3,w
  2546     0522  00A9               	movwf	___xxtofl@val+1
  2547     0523  0842               	movf	??_map+2,w
  2548     0524  00A8               	movwf	___xxtofl@val
  2549     0525  3000               	movlw	0
  2550     0526  120A  118A  22A9  120A  118A  	fcall	___xxtofl
  2551     052B  1283               	bcf	3,5	;RP0=0, select bank0
  2552     052C  1303               	bcf	3,6	;RP1=0, select bank0
  2553     052D  082B               	movf	?___xxtofl+3,w
  2554     052E  00C9               	movwf	map@valmap+3
  2555     052F  082A               	movf	?___xxtofl+2,w
  2556     0530  00C8               	movwf	map@valmap+2
  2557     0531  0829               	movf	?___xxtofl+1,w
  2558     0532  00C7               	movwf	map@valmap+1
  2559     0533  0828               	movf	?___xxtofl,w
  2560     0534  00C6               	movwf	map@valmap
  2561                           
  2562                           ;postlab2.c: 170:   return valmap;
  2563     0535  0849               	movf	map@valmap+3,w
  2564     0536  00F6               	movwf	___fltol@f1+3
  2565     0537  0848               	movf	map@valmap+2,w
  2566     0538  00F5               	movwf	___fltol@f1+2
  2567     0539  0847               	movf	map@valmap+1,w
  2568     053A  00F4               	movwf	___fltol@f1+1
  2569     053B  0846               	movf	map@valmap,w
  2570     053C  00F3               	movwf	___fltol@f1
  2571     053D  120A  118A  2403  120A  118A  	fcall	___fltol
  2572     0542  0874               	movf	?___fltol+1,w
  2573     0543  1283               	bcf	3,5	;RP0=0, select bank0
  2574     0544  1303               	bcf	3,6	;RP1=0, select bank0
  2575     0545  00B7               	movwf	?_map+1
  2576     0546  0873               	movf	?___fltol,w
  2577     0547  00B6               	movwf	?_map
  2578     0548                     l181:
  2579     0548  0008               	return
  2580     0549                     __end_of_map:
  2581                           
  2582                           	psect	text10
  2583     02A9                     __ptext10:	
  2584 ;; *************** function ___xxtofl *****************
  2585 ;; Defined at:
  2586 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  sign            1    wreg     unsigned char 
  2589 ;;  val             4    8[BANK0 ] long 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  sign            1   16[BANK0 ] unsigned char 
  2592 ;;  arg             4   18[BANK0 ] unsigned long 
  2593 ;;  exp             1   17[BANK0 ] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  4    8[BANK0 ] unsigned char 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       4       0       0       0
  2604 ;;      Locals:         0       6       0       0       0
  2605 ;;      Temps:          0       4       0       0       0
  2606 ;;      Totals:         0      14       0       0       0
  2607 ;;Total ram usage:       14 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 1
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_map
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617     02A9                     ___xxtofl:	
  2618                           ;psect for function ___xxtofl
  2619                           
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2623                           ;___xxtofl@sign stored from wreg
  2624     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  2625     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  2626     02AB  00B0               	movwf	___xxtofl@sign
  2627     02AC                     l1655:
  2628     02AC  0830               	movf	___xxtofl@sign,w
  2629     02AD  1903               	btfsc	3,2
  2630     02AE  2AB0               	goto	u1291
  2631     02AF  2AB1               	goto	u1290
  2632     02B0                     u1291:
  2633     02B0  2AC5               	goto	l1661
  2634     02B1                     u1290:
  2635     02B1                     l1657:
  2636     02B1  1FAB               	btfss	___xxtofl@val+3,7
  2637     02B2  2AB4               	goto	u1301
  2638     02B3  2AB5               	goto	u1300
  2639     02B4                     u1301:
  2640     02B4  2AC5               	goto	l1661
  2641     02B5                     u1300:
  2642     02B5                     l1659:
  2643     02B5  0928               	comf	___xxtofl@val,w
  2644     02B6  00B2               	movwf	___xxtofl@arg
  2645     02B7  0929               	comf	___xxtofl@val+1,w
  2646     02B8  00B3               	movwf	___xxtofl@arg+1
  2647     02B9  092A               	comf	___xxtofl@val+2,w
  2648     02BA  00B4               	movwf	___xxtofl@arg+2
  2649     02BB  092B               	comf	___xxtofl@val+3,w
  2650     02BC  00B5               	movwf	___xxtofl@arg+3
  2651     02BD  0AB2               	incf	___xxtofl@arg,f
  2652     02BE  1903               	skipnz
  2653     02BF  0AB3               	incf	___xxtofl@arg+1,f
  2654     02C0  1903               	skipnz
  2655     02C1  0AB4               	incf	___xxtofl@arg+2,f
  2656     02C2  1903               	skipnz
  2657     02C3  0AB5               	incf	___xxtofl@arg+3,f
  2658     02C4  2ACD               	goto	l799
  2659     02C5                     l1661:
  2660     02C5  082B               	movf	___xxtofl@val+3,w
  2661     02C6  00B5               	movwf	___xxtofl@arg+3
  2662     02C7  082A               	movf	___xxtofl@val+2,w
  2663     02C8  00B4               	movwf	___xxtofl@arg+2
  2664     02C9  0829               	movf	___xxtofl@val+1,w
  2665     02CA  00B3               	movwf	___xxtofl@arg+1
  2666     02CB  0828               	movf	___xxtofl@val,w
  2667     02CC  00B2               	movwf	___xxtofl@arg
  2668     02CD                     l799:
  2669     02CD  082B               	movf	___xxtofl@val+3,w
  2670     02CE  042A               	iorwf	___xxtofl@val+2,w
  2671     02CF  0429               	iorwf	___xxtofl@val+1,w
  2672     02D0  0428               	iorwf	___xxtofl@val,w
  2673     02D1  1D03               	skipz
  2674     02D2  2AD4               	goto	u1311
  2675     02D3  2AD5               	goto	u1310
  2676     02D4                     u1311:
  2677     02D4  2ADE               	goto	l1667
  2678     02D5                     u1310:
  2679     02D5                     l1663:
  2680     02D5  3000               	movlw	0
  2681     02D6  00AB               	movwf	?___xxtofl+3
  2682     02D7  3000               	movlw	0
  2683     02D8  00AA               	movwf	?___xxtofl+2
  2684     02D9  3000               	movlw	0
  2685     02DA  00A9               	movwf	?___xxtofl+1
  2686     02DB  3000               	movlw	0
  2687     02DC  00A8               	movwf	?___xxtofl
  2688     02DD  2B62               	goto	l801
  2689     02DE                     l1667:
  2690     02DE  3096               	movlw	150
  2691     02DF  00B1               	movwf	___xxtofl@exp
  2692     02E0  2AEE               	goto	l1671
  2693     02E1                     l1669:
  2694     02E1  3001               	movlw	1
  2695     02E2  00AC               	movwf	??___xxtofl
  2696     02E3  082C               	movf	??___xxtofl,w
  2697     02E4  07B1               	addwf	___xxtofl@exp,f
  2698     02E5  3001               	movlw	1
  2699     02E6                     u1325:
  2700     02E6  1003               	clrc
  2701     02E7  0CB5               	rrf	___xxtofl@arg+3,f
  2702     02E8  0CB4               	rrf	___xxtofl@arg+2,f
  2703     02E9  0CB3               	rrf	___xxtofl@arg+1,f
  2704     02EA  0CB2               	rrf	___xxtofl@arg,f
  2705     02EB  3EFF               	addlw	-1
  2706     02EC  1D03               	skipz
  2707     02ED  2AE6               	goto	u1325
  2708     02EE                     l1671:
  2709     02EE  30FE               	movlw	254
  2710     02EF  0535               	andwf	___xxtofl@arg+3,w
  2711     02F0  1D03               	btfss	3,2
  2712     02F1  2AF3               	goto	u1331
  2713     02F2  2AF4               	goto	u1330
  2714     02F3                     u1331:
  2715     02F3  2AE1               	goto	l1669
  2716     02F4                     u1330:
  2717     02F4  2B10               	goto	l805
  2718     02F5                     l1673:
  2719     02F5  3001               	movlw	1
  2720     02F6  00AC               	movwf	??___xxtofl
  2721     02F7  082C               	movf	??___xxtofl,w
  2722     02F8  07B1               	addwf	___xxtofl@exp,f
  2723     02F9                     l1675:
  2724     02F9  3001               	movlw	1
  2725     02FA  07B2               	addwf	___xxtofl@arg,f
  2726     02FB  3000               	movlw	0
  2727     02FC  1803               	skipnc
  2728     02FD  3001               	movlw	1
  2729     02FE  07B3               	addwf	___xxtofl@arg+1,f
  2730     02FF  3000               	movlw	0
  2731     0300  1803               	skipnc
  2732     0301  3001               	movlw	1
  2733     0302  07B4               	addwf	___xxtofl@arg+2,f
  2734     0303  3000               	movlw	0
  2735     0304  1803               	skipnc
  2736     0305  3001               	movlw	1
  2737     0306  07B5               	addwf	___xxtofl@arg+3,f
  2738     0307                     l1677:
  2739     0307  3001               	movlw	1
  2740     0308                     u1345:
  2741     0308  1003               	clrc
  2742     0309  0CB5               	rrf	___xxtofl@arg+3,f
  2743     030A  0CB4               	rrf	___xxtofl@arg+2,f
  2744     030B  0CB3               	rrf	___xxtofl@arg+1,f
  2745     030C  0CB2               	rrf	___xxtofl@arg,f
  2746     030D  3EFF               	addlw	-1
  2747     030E  1D03               	skipz
  2748     030F  2B08               	goto	u1345
  2749     0310                     l805:
  2750     0310  30FF               	movlw	255
  2751     0311  0535               	andwf	___xxtofl@arg+3,w
  2752     0312  1D03               	btfss	3,2
  2753     0313  2B15               	goto	u1351
  2754     0314  2B16               	goto	u1350
  2755     0315                     u1351:
  2756     0315  2AF5               	goto	l1673
  2757     0316                     u1350:
  2758     0316  2B22               	goto	l1681
  2759     0317                     l1679:
  2760     0317  3001               	movlw	1
  2761     0318  02B1               	subwf	___xxtofl@exp,f
  2762     0319  3001               	movlw	1
  2763     031A  00AC               	movwf	??___xxtofl
  2764     031B                     u1365:
  2765     031B  1003               	clrc
  2766     031C  0DB2               	rlf	___xxtofl@arg,f
  2767     031D  0DB3               	rlf	___xxtofl@arg+1,f
  2768     031E  0DB4               	rlf	___xxtofl@arg+2,f
  2769     031F  0DB5               	rlf	___xxtofl@arg+3,f
  2770     0320  0BAC               	decfsz	??___xxtofl,f
  2771     0321  2B1B               	goto	u1365
  2772     0322                     l1681:
  2773     0322  1BB4               	btfsc	___xxtofl@arg+2,7
  2774     0323  2B25               	goto	u1371
  2775     0324  2B26               	goto	u1370
  2776     0325                     u1371:
  2777     0325  2B2C               	goto	l812
  2778     0326                     u1370:
  2779     0326                     l1683:
  2780     0326  3002               	movlw	2
  2781     0327  0231               	subwf	___xxtofl@exp,w
  2782     0328  1803               	skipnc
  2783     0329  2B2B               	goto	u1381
  2784     032A  2B2C               	goto	u1380
  2785     032B                     u1381:
  2786     032B  2B17               	goto	l1679
  2787     032C                     u1380:
  2788     032C                     l812:
  2789     032C  1831               	btfsc	___xxtofl@exp,0
  2790     032D  2B2F               	goto	u1391
  2791     032E  2B30               	goto	u1390
  2792     032F                     u1391:
  2793     032F  2B38               	goto	l813
  2794     0330                     u1390:
  2795     0330                     l1685:
  2796     0330  30FF               	movlw	255
  2797     0331  05B2               	andwf	___xxtofl@arg,f
  2798     0332  30FF               	movlw	255
  2799     0333  05B3               	andwf	___xxtofl@arg+1,f
  2800     0334  307F               	movlw	127
  2801     0335  05B4               	andwf	___xxtofl@arg+2,f
  2802     0336  30FF               	movlw	255
  2803     0337  05B5               	andwf	___xxtofl@arg+3,f
  2804     0338                     l813:
  2805     0338  1003               	clrc
  2806     0339  0CB1               	rrf	___xxtofl@exp,f
  2807     033A                     l1687:
  2808     033A  0831               	movf	___xxtofl@exp,w
  2809     033B  00AC               	movwf	??___xxtofl
  2810     033C  01AD               	clrf	??___xxtofl+1
  2811     033D  01AE               	clrf	??___xxtofl+2
  2812     033E  01AF               	clrf	??___xxtofl+3
  2813     033F  3018               	movlw	24
  2814     0340                     u1405:
  2815     0340  1003               	clrc
  2816     0341  0DAC               	rlf	??___xxtofl,f
  2817     0342  0DAD               	rlf	??___xxtofl+1,f
  2818     0343  0DAE               	rlf	??___xxtofl+2,f
  2819     0344  0DAF               	rlf	??___xxtofl+3,f
  2820     0345                     u1400:
  2821     0345  3EFF               	addlw	-1
  2822     0346  1D03               	skipz
  2823     0347  2B40               	goto	u1405
  2824     0348  082C               	movf	??___xxtofl,w
  2825     0349  04B2               	iorwf	___xxtofl@arg,f
  2826     034A  082D               	movf	??___xxtofl+1,w
  2827     034B  04B3               	iorwf	___xxtofl@arg+1,f
  2828     034C  082E               	movf	??___xxtofl+2,w
  2829     034D  04B4               	iorwf	___xxtofl@arg+2,f
  2830     034E  082F               	movf	??___xxtofl+3,w
  2831     034F  04B5               	iorwf	___xxtofl@arg+3,f
  2832     0350                     l1689:
  2833     0350  0830               	movf	___xxtofl@sign,w
  2834     0351  1903               	btfsc	3,2
  2835     0352  2B54               	goto	u1411
  2836     0353  2B55               	goto	u1410
  2837     0354                     u1411:
  2838     0354  2B5A               	goto	l1695
  2839     0355                     u1410:
  2840     0355                     l1691:
  2841     0355  1FAB               	btfss	___xxtofl@val+3,7
  2842     0356  2B58               	goto	u1421
  2843     0357  2B59               	goto	u1420
  2844     0358                     u1421:
  2845     0358  2B5A               	goto	l1695
  2846     0359                     u1420:
  2847     0359                     l1693:
  2848     0359  17B5               	bsf	___xxtofl@arg+3,7
  2849     035A                     l1695:
  2850     035A  0835               	movf	___xxtofl@arg+3,w
  2851     035B  00AB               	movwf	?___xxtofl+3
  2852     035C  0834               	movf	___xxtofl@arg+2,w
  2853     035D  00AA               	movwf	?___xxtofl+2
  2854     035E  0833               	movf	___xxtofl@arg+1,w
  2855     035F  00A9               	movwf	?___xxtofl+1
  2856     0360  0832               	movf	___xxtofl@arg,w
  2857     0361  00A8               	movwf	?___xxtofl
  2858     0362                     l801:
  2859     0362  0008               	return
  2860     0363                     __end_of___xxtofl:
  2861                           
  2862                           	psect	text11
  2863     063D                     __ptext11:	
  2864 ;; *************** function ___wmul *****************
  2865 ;; Defined at:
  2866 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  multiplier      2    3[COMMON] unsigned int 
  2869 ;;  multiplicand    2    5[COMMON] unsigned int 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  product         2    7[COMMON] unsigned int 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  2    3[COMMON] unsigned int 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         4       0       0       0       0
  2882 ;;      Locals:         2       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         6       0       0       0       0
  2885 ;;Total ram usage:        6 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_map
  2892 ;;		_sprintf
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896     063D                     ___wmul:	
  2897                           ;psect for function ___wmul
  2898                           
  2899     063D                     l1533:	
  2900                           ;incstack = 0
  2901                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2902                           
  2903     063D  01F7               	clrf	___wmul@product
  2904     063E  01F8               	clrf	___wmul@product+1
  2905     063F                     l1535:
  2906     063F  1C73               	btfss	___wmul@multiplier,0
  2907     0640  2E42               	goto	u951
  2908     0641  2E43               	goto	u950
  2909     0642                     u951:
  2910     0642  2E49               	goto	l366
  2911     0643                     u950:
  2912     0643                     l1537:
  2913     0643  0875               	movf	___wmul@multiplicand,w
  2914     0644  07F7               	addwf	___wmul@product,f
  2915     0645  1803               	skipnc
  2916     0646  0AF8               	incf	___wmul@product+1,f
  2917     0647  0876               	movf	___wmul@multiplicand+1,w
  2918     0648  07F8               	addwf	___wmul@product+1,f
  2919     0649                     l366:
  2920     0649  3001               	movlw	1
  2921     064A                     u965:
  2922     064A  1003               	clrc
  2923     064B  0DF5               	rlf	___wmul@multiplicand,f
  2924     064C  0DF6               	rlf	___wmul@multiplicand+1,f
  2925     064D  3EFF               	addlw	-1
  2926     064E  1D03               	skipz
  2927     064F  2E4A               	goto	u965
  2928     0650                     l1539:
  2929     0650  3001               	movlw	1
  2930     0651                     u975:
  2931     0651  1003               	clrc
  2932     0652  0CF4               	rrf	___wmul@multiplier+1,f
  2933     0653  0CF3               	rrf	___wmul@multiplier,f
  2934     0654  3EFF               	addlw	-1
  2935     0655  1D03               	skipz
  2936     0656  2E51               	goto	u975
  2937     0657                     l1541:
  2938     0657  0873               	movf	___wmul@multiplier,w
  2939     0658  0474               	iorwf	___wmul@multiplier+1,w
  2940     0659  1D03               	btfss	3,2
  2941     065A  2E5C               	goto	u981
  2942     065B  2E5D               	goto	u980
  2943     065C                     u981:
  2944     065C  2E3F               	goto	l1535
  2945     065D                     u980:
  2946     065D                     l1543:
  2947     065D  0878               	movf	___wmul@product+1,w
  2948     065E  00F4               	movwf	?___wmul+1
  2949     065F  0877               	movf	___wmul@product,w
  2950     0660  00F3               	movwf	?___wmul
  2951     0661                     l368:
  2952     0661  0008               	return
  2953     0662                     __end_of___wmul:
  2954                           
  2955                           	psect	text12
  2956     0590                     __ptext12:	
  2957 ;; *************** function ___lwdiv *****************
  2958 ;; Defined at:
  2959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  divisor         2    0[BANK0 ] unsigned int 
  2962 ;;  dividend        2    2[BANK0 ] unsigned int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  quotient        2    6[BANK0 ] unsigned int 
  2965 ;;  counter         1    5[BANK0 ] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2    0[BANK0 ] unsigned int 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       4       0       0       0
  2976 ;;      Locals:         0       3       0       0       0
  2977 ;;      Temps:          0       1       0       0       0
  2978 ;;      Totals:         0       8       0       0       0
  2979 ;;Total ram usage:        8 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_map
  2986 ;;		_sprintf
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990     0590                     ___lwdiv:	
  2991                           ;psect for function ___lwdiv
  2992                           
  2993     0590                     l2071:	
  2994                           ;incstack = 0
  2995                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2996                           
  2997     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2998     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2999     0592  01A6               	clrf	___lwdiv@quotient
  3000     0593  01A7               	clrf	___lwdiv@quotient+1
  3001     0594                     l2073:
  3002     0594  0820               	movf	___lwdiv@divisor,w
  3003     0595  0421               	iorwf	___lwdiv@divisor+1,w
  3004     0596  1903               	btfsc	3,2
  3005     0597  2D99               	goto	u1871
  3006     0598  2D9A               	goto	u1870
  3007     0599                     u1871:
  3008     0599  2DD1               	goto	l2093
  3009     059A                     u1870:
  3010     059A                     l2075:
  3011     059A  01A5               	clrf	___lwdiv@counter
  3012     059B  0AA5               	incf	___lwdiv@counter,f
  3013     059C  2DA8               	goto	l2081
  3014     059D                     l2077:
  3015     059D  3001               	movlw	1
  3016     059E                     u1885:
  3017     059E  1003               	clrc
  3018     059F  0DA0               	rlf	___lwdiv@divisor,f
  3019     05A0  0DA1               	rlf	___lwdiv@divisor+1,f
  3020     05A1  3EFF               	addlw	-1
  3021     05A2  1D03               	skipz
  3022     05A3  2D9E               	goto	u1885
  3023     05A4                     l2079:
  3024     05A4  3001               	movlw	1
  3025     05A5  00A4               	movwf	??___lwdiv
  3026     05A6  0824               	movf	??___lwdiv,w
  3027     05A7  07A5               	addwf	___lwdiv@counter,f
  3028     05A8                     l2081:
  3029     05A8  1FA1               	btfss	___lwdiv@divisor+1,7
  3030     05A9  2DAB               	goto	u1891
  3031     05AA  2DAC               	goto	u1890
  3032     05AB                     u1891:
  3033     05AB  2D9D               	goto	l2077
  3034     05AC                     u1890:
  3035     05AC                     l2083:
  3036     05AC  3001               	movlw	1
  3037     05AD                     u1905:
  3038     05AD  1003               	clrc
  3039     05AE  0DA6               	rlf	___lwdiv@quotient,f
  3040     05AF  0DA7               	rlf	___lwdiv@quotient+1,f
  3041     05B0  3EFF               	addlw	-1
  3042     05B1  1D03               	skipz
  3043     05B2  2DAD               	goto	u1905
  3044     05B3  0821               	movf	___lwdiv@divisor+1,w
  3045     05B4  0223               	subwf	___lwdiv@dividend+1,w
  3046     05B5  1D03               	skipz
  3047     05B6  2DB9               	goto	u1915
  3048     05B7  0820               	movf	___lwdiv@divisor,w
  3049     05B8  0222               	subwf	___lwdiv@dividend,w
  3050     05B9                     u1915:
  3051     05B9  1C03               	skipc
  3052     05BA  2DBC               	goto	u1911
  3053     05BB  2DBD               	goto	u1910
  3054     05BC                     u1911:
  3055     05BC  2DC4               	goto	l2089
  3056     05BD                     u1910:
  3057     05BD                     l2085:
  3058     05BD  0820               	movf	___lwdiv@divisor,w
  3059     05BE  02A2               	subwf	___lwdiv@dividend,f
  3060     05BF  0821               	movf	___lwdiv@divisor+1,w
  3061     05C0  1C03               	skipc
  3062     05C1  03A3               	decf	___lwdiv@dividend+1,f
  3063     05C2  02A3               	subwf	___lwdiv@dividend+1,f
  3064     05C3                     l2087:
  3065     05C3  1426               	bsf	___lwdiv@quotient,0
  3066     05C4                     l2089:
  3067     05C4  3001               	movlw	1
  3068     05C5                     u1925:
  3069     05C5  1003               	clrc
  3070     05C6  0CA1               	rrf	___lwdiv@divisor+1,f
  3071     05C7  0CA0               	rrf	___lwdiv@divisor,f
  3072     05C8  3EFF               	addlw	-1
  3073     05C9  1D03               	skipz
  3074     05CA  2DC5               	goto	u1925
  3075     05CB                     l2091:
  3076     05CB  3001               	movlw	1
  3077     05CC  02A5               	subwf	___lwdiv@counter,f
  3078     05CD  1D03               	btfss	3,2
  3079     05CE  2DD0               	goto	u1931
  3080     05CF  2DD1               	goto	u1930
  3081     05D0                     u1931:
  3082     05D0  2DAC               	goto	l2083
  3083     05D1                     u1930:
  3084     05D1                     l2093:
  3085     05D1  0827               	movf	___lwdiv@quotient+1,w
  3086     05D2  00A1               	movwf	?___lwdiv+1
  3087     05D3  0826               	movf	___lwdiv@quotient,w
  3088     05D4  00A0               	movwf	?___lwdiv
  3089     05D5                     l638:
  3090     05D5  0008               	return
  3091     05D6                     __end_of___lwdiv:
  3092                           
  3093                           	psect	text13
  3094     0403                     __ptext13:	
  3095 ;; *************** function ___fltol *****************
  3096 ;; Defined at:
  3097 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  f1              4    3[COMMON] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  exp1            1    8[COMMON] unsigned char 
  3102 ;;  sign1           1    7[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  4    3[COMMON] long 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         4       0       0       0       0
  3113 ;;      Locals:         2       0       0       0       0
  3114 ;;      Temps:          0       4       0       0       0
  3115 ;;      Totals:         6       4       0       0       0
  3116 ;;Total ram usage:       10 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_map
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126     0403                     ___fltol:	
  3127                           ;psect for function ___fltol
  3128                           
  3129     0403                     l2035:	
  3130                           ;incstack = 0
  3131                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3132                           
  3133     0403  1003               	clrc
  3134     0404  0D75               	rlf	___fltol@f1+2,w
  3135     0405  0D76               	rlf	___fltol@f1+3,w
  3136     0406  00F8               	movwf	___fltol@exp1
  3137     0407  0878               	movf	___fltol@exp1,w
  3138     0408  1D03               	btfss	3,2
  3139     0409  2C0B               	goto	u1771
  3140     040A  2C0C               	goto	u1770
  3141     040B                     u1771:
  3142     040B  2C15               	goto	l2041
  3143     040C                     u1770:
  3144     040C                     l2037:
  3145     040C  3000               	movlw	0
  3146     040D  00F6               	movwf	?___fltol+3
  3147     040E  3000               	movlw	0
  3148     040F  00F5               	movwf	?___fltol+2
  3149     0410  3000               	movlw	0
  3150     0411  00F4               	movwf	?___fltol+1
  3151     0412  3000               	movlw	0
  3152     0413  00F3               	movwf	?___fltol
  3153     0414  2C7A               	goto	l552
  3154     0415                     l2041:
  3155     0415  0873               	movf	___fltol@f1,w
  3156     0416  1283               	bcf	3,5	;RP0=0, select bank0
  3157     0417  1303               	bcf	3,6	;RP1=0, select bank0
  3158     0418  00A0               	movwf	??___fltol
  3159     0419  0874               	movf	___fltol@f1+1,w
  3160     041A  00A1               	movwf	??___fltol+1
  3161     041B  0875               	movf	___fltol@f1+2,w
  3162     041C  00A2               	movwf	??___fltol+2
  3163     041D  0876               	movf	___fltol@f1+3,w
  3164     041E  00A3               	movwf	??___fltol+3
  3165     041F  301F               	movlw	31
  3166     0420                     u1785:
  3167     0420  1003               	clrc
  3168     0421  0CA3               	rrf	??___fltol+3,f
  3169     0422  0CA2               	rrf	??___fltol+2,f
  3170     0423  0CA1               	rrf	??___fltol+1,f
  3171     0424  0CA0               	rrf	??___fltol,f
  3172     0425                     u1780:
  3173     0425  3EFF               	addlw	-1
  3174     0426  1D03               	skipz
  3175     0427  2C20               	goto	u1785
  3176     0428  0820               	movf	??___fltol,w
  3177     0429  00F7               	movwf	___fltol@sign1
  3178     042A                     l2043:
  3179     042A  17F5               	bsf	___fltol@f1+2,7
  3180     042B                     l2045:
  3181     042B  30FF               	movlw	255
  3182     042C  05F3               	andwf	___fltol@f1,f
  3183     042D  30FF               	movlw	255
  3184     042E  05F4               	andwf	___fltol@f1+1,f
  3185     042F  30FF               	movlw	255
  3186     0430  05F5               	andwf	___fltol@f1+2,f
  3187     0431  3000               	movlw	0
  3188     0432  05F6               	andwf	___fltol@f1+3,f
  3189     0433                     l2047:
  3190     0433  3096               	movlw	150
  3191     0434  02F8               	subwf	___fltol@exp1,f
  3192     0435                     l2049:
  3193     0435  1FF8               	btfss	___fltol@exp1,7
  3194     0436  2C38               	goto	u1791
  3195     0437  2C39               	goto	u1790
  3196     0438                     u1791:
  3197     0438  2C53               	goto	l2059
  3198     0439                     u1790:
  3199     0439                     l2051:
  3200     0439  0878               	movf	___fltol@exp1,w
  3201     043A  3A80               	xorlw	128
  3202     043B  3E97               	addlw	151
  3203     043C  1803               	skipnc
  3204     043D  2C3F               	goto	u1801
  3205     043E  2C40               	goto	u1800
  3206     043F                     u1801:
  3207     043F  2C41               	goto	l2057
  3208     0440                     u1800:
  3209     0440  2C0C               	goto	l2037
  3210     0441                     l2057:
  3211     0441  3001               	movlw	1
  3212     0442                     u1815:
  3213     0442  1003               	clrc
  3214     0443  0CF6               	rrf	___fltol@f1+3,f
  3215     0444  0CF5               	rrf	___fltol@f1+2,f
  3216     0445  0CF4               	rrf	___fltol@f1+1,f
  3217     0446  0CF3               	rrf	___fltol@f1,f
  3218     0447  3EFF               	addlw	-1
  3219     0448  1D03               	skipz
  3220     0449  2C42               	goto	u1815
  3221     044A  3001               	movlw	1
  3222     044B  00A0               	movwf	??___fltol
  3223     044C  0820               	movf	??___fltol,w
  3224     044D  07F8               	addwf	___fltol@exp1,f
  3225     044E  1D03               	btfss	3,2
  3226     044F  2C51               	goto	u1821
  3227     0450  2C52               	goto	u1820
  3228     0451                     u1821:
  3229     0451  2C41               	goto	l2057
  3230     0452                     u1820:
  3231     0452  2C6A               	goto	l2067
  3232     0453                     l2059:
  3233     0453  3020               	movlw	32
  3234     0454  0278               	subwf	___fltol@exp1,w
  3235     0455  1C03               	skipc
  3236     0456  2C58               	goto	u1831
  3237     0457  2C59               	goto	u1830
  3238     0458                     u1831:
  3239     0458  2C65               	goto	l559
  3240     0459                     u1830:
  3241     0459  2C0C               	goto	l2037
  3242     045A                     l2065:
  3243     045A  3001               	movlw	1
  3244     045B  00A0               	movwf	??___fltol
  3245     045C                     u1845:
  3246     045C  1003               	clrc
  3247     045D  0DF3               	rlf	___fltol@f1,f
  3248     045E  0DF4               	rlf	___fltol@f1+1,f
  3249     045F  0DF5               	rlf	___fltol@f1+2,f
  3250     0460  0DF6               	rlf	___fltol@f1+3,f
  3251     0461  0BA0               	decfsz	??___fltol,f
  3252     0462  2C5C               	goto	u1845
  3253     0463  3001               	movlw	1
  3254     0464  02F8               	subwf	___fltol@exp1,f
  3255     0465                     l559:
  3256     0465  0878               	movf	___fltol@exp1,w
  3257     0466  1D03               	btfss	3,2
  3258     0467  2C69               	goto	u1851
  3259     0468  2C6A               	goto	u1850
  3260     0469                     u1851:
  3261     0469  2C5A               	goto	l2065
  3262     046A                     u1850:
  3263     046A                     l2067:
  3264     046A  0877               	movf	___fltol@sign1,w
  3265     046B  1903               	btfsc	3,2
  3266     046C  2C6E               	goto	u1861
  3267     046D  2C6F               	goto	u1860
  3268     046E                     u1861:
  3269     046E  2C7A               	goto	l562
  3270     046F                     u1860:
  3271     046F                     l2069:
  3272     046F  09F3               	comf	___fltol@f1,f
  3273     0470  09F4               	comf	___fltol@f1+1,f
  3274     0471  09F5               	comf	___fltol@f1+2,f
  3275     0472  09F6               	comf	___fltol@f1+3,f
  3276     0473  0AF3               	incf	___fltol@f1,f
  3277     0474  1903               	skipnz
  3278     0475  0AF4               	incf	___fltol@f1+1,f
  3279     0476  1903               	skipnz
  3280     0477  0AF5               	incf	___fltol@f1+2,f
  3281     0478  1903               	skipnz
  3282     0479  0AF6               	incf	___fltol@f1+3,f
  3283     047A                     l562:
  3284     047A                     l552:
  3285     047A  0008               	return
  3286     047B                     __end_of___fltol:
  3287                           
  3288                           	psect	text14
  3289     0363                     __ptext14:	
  3290 ;; *************** function _UART_Init *****************
  3291 ;; Defined at:
  3292 ;;		line 14 in file "USARTmodl.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  n               2   16[BANK0 ] int 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       4       0       0       0
  3307 ;;      Locals:         0       2       0       0       0
  3308 ;;      Temps:          0       4       0       0       0
  3309 ;;      Totals:         0      10       0       0       0
  3310 ;;Total ram usage:       10 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 2
  3313 ;; This function calls:
  3314 ;;		___lldiv
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320     0363                     _UART_Init:	
  3321                           ;psect for function _UART_Init
  3322                           
  3323     0363                     l2119:	
  3324                           ;incstack = 0
  3325                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3326                           
  3327                           
  3328                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3329     0363  1283               	bcf	3,5	;RP0=0, select bank0
  3330     0364  1303               	bcf	3,6	;RP1=0, select bank0
  3331     0365  0828               	movf	UART_Init@baud_rate,w
  3332     0366  00AC               	movwf	??_UART_Init
  3333     0367  0829               	movf	UART_Init@baud_rate+1,w
  3334     0368  00AD               	movwf	??_UART_Init+1
  3335     0369  082A               	movf	UART_Init@baud_rate+2,w
  3336     036A  00AE               	movwf	??_UART_Init+2
  3337     036B  082B               	movf	UART_Init@baud_rate+3,w
  3338     036C  00AF               	movwf	??_UART_Init+3
  3339     036D  3004               	movlw	4
  3340     036E                     u2005:
  3341     036E  1003               	clrc
  3342     036F  0DAC               	rlf	??_UART_Init,f
  3343     0370  0DAD               	rlf	??_UART_Init+1,f
  3344     0371  0DAE               	rlf	??_UART_Init+2,f
  3345     0372  0DAF               	rlf	??_UART_Init+3,f
  3346     0373                     u2000:
  3347     0373  3EFF               	addlw	-1
  3348     0374  1D03               	skipz
  3349     0375  2B6E               	goto	u2005
  3350     0376  082F               	movf	??_UART_Init+3,w
  3351     0377  00A3               	movwf	___lldiv@divisor+3
  3352     0378  082E               	movf	??_UART_Init+2,w
  3353     0379  00A2               	movwf	___lldiv@divisor+2
  3354     037A  082D               	movf	??_UART_Init+1,w
  3355     037B  00A1               	movwf	___lldiv@divisor+1
  3356     037C  082C               	movf	??_UART_Init,w
  3357     037D  00A0               	movwf	___lldiv@divisor
  3358     037E  3000               	movlw	0
  3359     037F  00A7               	movwf	___lldiv@dividend+3
  3360     0380  307A               	movlw	122
  3361     0381  00A6               	movwf	___lldiv@dividend+2
  3362     0382  3012               	movlw	18
  3363     0383  00A5               	movwf	___lldiv@dividend+1
  3364     0384  3000               	movlw	0
  3365     0385  00A4               	movwf	___lldiv@dividend
  3366     0386  120A  118A  247B  120A  118A  	fcall	___lldiv
  3367     038B  1283               	bcf	3,5	;RP0=0, select bank0
  3368     038C  1303               	bcf	3,6	;RP1=0, select bank0
  3369     038D  0820               	movf	?___lldiv,w
  3370     038E  3EFF               	addlw	255
  3371     038F  00B0               	movwf	UART_Init@n
  3372     0390  0821               	movf	?___lldiv+1,w
  3373     0391  1803               	skipnc
  3374     0392  3E01               	addlw	1
  3375     0393  3EFF               	addlw	255
  3376     0394  00B1               	movwf	UART_Init@n+1
  3377     0395                     l2121:
  3378                           
  3379                           ;USARTmodl.c: 18:   if (n < 0)
  3380     0395  1FB1               	btfss	UART_Init@n+1,7
  3381     0396  2B98               	goto	u2011
  3382     0397  2B99               	goto	u2010
  3383     0398                     u2011:
  3384     0398  2B9B               	goto	l2125
  3385     0399                     u2010:
  3386     0399                     l2123:
  3387                           
  3388                           ;USARTmodl.c: 19:     n = 0;
  3389     0399  01B0               	clrf	UART_Init@n
  3390     039A  01B1               	clrf	UART_Init@n+1
  3391     039B                     l2125:
  3392                           
  3393                           ;USARTmodl.c: 21:   if (n > 255)
  3394     039B  0831               	movf	UART_Init@n+1,w
  3395     039C  3A80               	xorlw	128
  3396     039D  00FF               	movwf	btemp+1
  3397     039E  3081               	movlw	129
  3398     039F  027F               	subwf	btemp+1,w
  3399     03A0  1D03               	skipz
  3400     03A1  2BA4               	goto	u2025
  3401     03A2  3000               	movlw	0
  3402     03A3  0230               	subwf	UART_Init@n,w
  3403     03A4                     u2025:
  3404     03A4  1C03               	skipc
  3405     03A5  2BA7               	goto	u2021
  3406     03A6  2BA8               	goto	u2020
  3407     03A7                     u2021:
  3408     03A7  2BF6               	goto	l2133
  3409     03A8                     u2020:
  3410     03A8                     l2127:
  3411                           
  3412                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3413     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  3414     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  3415     03AA  0828               	movf	UART_Init@baud_rate,w
  3416     03AB  00AC               	movwf	??_UART_Init
  3417     03AC  0829               	movf	UART_Init@baud_rate+1,w
  3418     03AD  00AD               	movwf	??_UART_Init+1
  3419     03AE  082A               	movf	UART_Init@baud_rate+2,w
  3420     03AF  00AE               	movwf	??_UART_Init+2
  3421     03B0  082B               	movf	UART_Init@baud_rate+3,w
  3422     03B1  00AF               	movwf	??_UART_Init+3
  3423     03B2  3006               	movlw	6
  3424     03B3                     u2035:
  3425     03B3  1003               	clrc
  3426     03B4  0DAC               	rlf	??_UART_Init,f
  3427     03B5  0DAD               	rlf	??_UART_Init+1,f
  3428     03B6  0DAE               	rlf	??_UART_Init+2,f
  3429     03B7  0DAF               	rlf	??_UART_Init+3,f
  3430     03B8                     u2030:
  3431     03B8  3EFF               	addlw	-1
  3432     03B9  1D03               	skipz
  3433     03BA  2BB3               	goto	u2035
  3434     03BB  082F               	movf	??_UART_Init+3,w
  3435     03BC  00A3               	movwf	___lldiv@divisor+3
  3436     03BD  082E               	movf	??_UART_Init+2,w
  3437     03BE  00A2               	movwf	___lldiv@divisor+2
  3438     03BF  082D               	movf	??_UART_Init+1,w
  3439     03C0  00A1               	movwf	___lldiv@divisor+1
  3440     03C1  082C               	movf	??_UART_Init,w
  3441     03C2  00A0               	movwf	___lldiv@divisor
  3442     03C3  3000               	movlw	0
  3443     03C4  00A7               	movwf	___lldiv@dividend+3
  3444     03C5  307A               	movlw	122
  3445     03C6  00A6               	movwf	___lldiv@dividend+2
  3446     03C7  3012               	movlw	18
  3447     03C8  00A5               	movwf	___lldiv@dividend+1
  3448     03C9  3000               	movlw	0
  3449     03CA  00A4               	movwf	___lldiv@dividend
  3450     03CB  120A  118A  247B  120A  118A  	fcall	___lldiv
  3451     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3452     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3453     03D2  0820               	movf	?___lldiv,w
  3454     03D3  3EFF               	addlw	255
  3455     03D4  00B0               	movwf	UART_Init@n
  3456     03D5  0821               	movf	?___lldiv+1,w
  3457     03D6  1803               	skipnc
  3458     03D7  3E01               	addlw	1
  3459     03D8  3EFF               	addlw	255
  3460     03D9  00B1               	movwf	UART_Init@n+1
  3461     03DA                     l2129:
  3462                           
  3463                           ;USARTmodl.c: 24:     if (n > 255)
  3464     03DA  0831               	movf	UART_Init@n+1,w
  3465     03DB  3A80               	xorlw	128
  3466     03DC  00FF               	movwf	btemp+1
  3467     03DD  3081               	movlw	129
  3468     03DE  027F               	subwf	btemp+1,w
  3469     03DF  1D03               	skipz
  3470     03E0  2BE3               	goto	u2045
  3471     03E1  3000               	movlw	0
  3472     03E2  0230               	subwf	UART_Init@n,w
  3473     03E3                     u2045:
  3474     03E3  1C03               	skipc
  3475     03E4  2BE6               	goto	u2041
  3476     03E5  2BE7               	goto	u2040
  3477     03E6                     u2041:
  3478     03E6  2BED               	goto	l206
  3479     03E7                     u2040:
  3480     03E7                     l2131:
  3481                           
  3482                           ;USARTmodl.c: 25:       n = 255;
  3483     03E7  30FF               	movlw	255
  3484     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3485     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3486     03EA  00B0               	movwf	UART_Init@n
  3487     03EB  3000               	movlw	0
  3488     03EC  00B1               	movwf	UART_Init@n+1
  3489     03ED                     l206:
  3490                           
  3491                           ;USARTmodl.c: 26:     SPBRG = n;
  3492     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3493     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3494     03EF  0830               	movf	UART_Init@n,w
  3495     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  3496     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  3497     03F2  0099               	movwf	25	;volatile
  3498                           
  3499                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3500     03F3  3020               	movlw	32
  3501     03F4  0098               	movwf	24	;volatile
  3502                           
  3503                           ;USARTmodl.c: 28:   }
  3504     03F5  2BFE               	goto	l207
  3505     03F6                     l2133:
  3506                           
  3507                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3508     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3509     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3510     03F8  0830               	movf	UART_Init@n,w
  3511     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3512     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3513     03FB  0099               	movwf	25	;volatile
  3514                           
  3515                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3516     03FC  3024               	movlw	36
  3517     03FD  0098               	movwf	24	;volatile
  3518     03FE                     l207:	
  3519                           ;USARTmodl.c: 34:   }
  3520                           
  3521                           
  3522                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3523     03FE  3090               	movlw	144
  3524     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3525     0400  1303               	bcf	3,6	;RP1=0, select bank0
  3526     0401  0098               	movwf	24	;volatile
  3527     0402                     l208:
  3528     0402  0008               	return
  3529     0403                     __end_of_UART_Init:
  3530                           
  3531                           	psect	text15
  3532     047B                     __ptext15:	
  3533 ;; *************** function ___lldiv *****************
  3534 ;; Defined at:
  3535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  divisor         4    0[BANK0 ] unsigned long 
  3538 ;;  dividend        4    4[BANK0 ] unsigned long 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  quotient        4    4[COMMON] unsigned long 
  3541 ;;  counter         1    8[COMMON] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  4    0[BANK0 ] unsigned long 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       8       0       0       0
  3552 ;;      Locals:         5       0       0       0       0
  3553 ;;      Temps:          1       0       0       0       0
  3554 ;;      Totals:         6       8       0       0       0
  3555 ;;Total ram usage:       14 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 1
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_UART_Init
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565     047B                     ___lldiv:	
  3566                           ;psect for function ___lldiv
  3567                           
  3568     047B                     l2011:	
  3569                           ;incstack = 0
  3570                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3571                           
  3572     047B  3000               	movlw	0
  3573     047C  00F7               	movwf	___lldiv@quotient+3
  3574     047D  3000               	movlw	0
  3575     047E  00F6               	movwf	___lldiv@quotient+2
  3576     047F  3000               	movlw	0
  3577     0480  00F5               	movwf	___lldiv@quotient+1
  3578     0481  3000               	movlw	0
  3579     0482  00F4               	movwf	___lldiv@quotient
  3580     0483  1283               	bcf	3,5	;RP0=0, select bank0
  3581     0484  1303               	bcf	3,6	;RP1=0, select bank0
  3582     0485  0823               	movf	___lldiv@divisor+3,w
  3583     0486  0422               	iorwf	___lldiv@divisor+2,w
  3584     0487  0421               	iorwf	___lldiv@divisor+1,w
  3585     0488  0420               	iorwf	___lldiv@divisor,w
  3586     0489  1903               	skipnz
  3587     048A  2C8C               	goto	u1701
  3588     048B  2C8D               	goto	u1700
  3589     048C                     u1701:
  3590     048C  2CDA               	goto	l2031
  3591     048D                     u1700:
  3592     048D                     l2013:
  3593     048D  01F8               	clrf	___lldiv@counter
  3594     048E  0AF8               	incf	___lldiv@counter,f
  3595     048F  2C9D               	goto	l2017
  3596     0490                     l2015:
  3597     0490  3001               	movlw	1
  3598     0491  00F3               	movwf	??___lldiv
  3599     0492                     u1715:
  3600     0492  1003               	clrc
  3601     0493  0DA0               	rlf	___lldiv@divisor,f
  3602     0494  0DA1               	rlf	___lldiv@divisor+1,f
  3603     0495  0DA2               	rlf	___lldiv@divisor+2,f
  3604     0496  0DA3               	rlf	___lldiv@divisor+3,f
  3605     0497  0BF3               	decfsz	??___lldiv,f
  3606     0498  2C92               	goto	u1715
  3607     0499  3001               	movlw	1
  3608     049A  00F3               	movwf	??___lldiv
  3609     049B  0873               	movf	??___lldiv,w
  3610     049C  07F8               	addwf	___lldiv@counter,f
  3611     049D                     l2017:
  3612     049D  1FA3               	btfss	___lldiv@divisor+3,7
  3613     049E  2CA0               	goto	u1721
  3614     049F  2CA1               	goto	u1720
  3615     04A0                     u1721:
  3616     04A0  2C90               	goto	l2015
  3617     04A1                     u1720:
  3618     04A1                     l2019:
  3619     04A1  3001               	movlw	1
  3620     04A2  00F3               	movwf	??___lldiv
  3621     04A3                     u1735:
  3622     04A3  1003               	clrc
  3623     04A4  0DF4               	rlf	___lldiv@quotient,f
  3624     04A5  0DF5               	rlf	___lldiv@quotient+1,f
  3625     04A6  0DF6               	rlf	___lldiv@quotient+2,f
  3626     04A7  0DF7               	rlf	___lldiv@quotient+3,f
  3627     04A8  0BF3               	decfsz	??___lldiv,f
  3628     04A9  2CA3               	goto	u1735
  3629     04AA                     l2021:
  3630     04AA  0823               	movf	___lldiv@divisor+3,w
  3631     04AB  0227               	subwf	___lldiv@dividend+3,w
  3632     04AC  1D03               	skipz
  3633     04AD  2CB8               	goto	u1745
  3634     04AE  0822               	movf	___lldiv@divisor+2,w
  3635     04AF  0226               	subwf	___lldiv@dividend+2,w
  3636     04B0  1D03               	skipz
  3637     04B1  2CB8               	goto	u1745
  3638     04B2  0821               	movf	___lldiv@divisor+1,w
  3639     04B3  0225               	subwf	___lldiv@dividend+1,w
  3640     04B4  1D03               	skipz
  3641     04B5  2CB8               	goto	u1745
  3642     04B6  0820               	movf	___lldiv@divisor,w
  3643     04B7  0224               	subwf	___lldiv@dividend,w
  3644     04B8                     u1745:
  3645     04B8  1C03               	skipc
  3646     04B9  2CBB               	goto	u1741
  3647     04BA  2CBC               	goto	u1740
  3648     04BB                     u1741:
  3649     04BB  2CCB               	goto	l2027
  3650     04BC                     u1740:
  3651     04BC                     l2023:
  3652     04BC  0820               	movf	___lldiv@divisor,w
  3653     04BD  02A4               	subwf	___lldiv@dividend,f
  3654     04BE  0821               	movf	___lldiv@divisor+1,w
  3655     04BF  1C03               	skipc
  3656     04C0  0F21               	incfsz	___lldiv@divisor+1,w
  3657     04C1  02A5               	subwf	___lldiv@dividend+1,f
  3658     04C2  0822               	movf	___lldiv@divisor+2,w
  3659     04C3  1C03               	skipc
  3660     04C4  0F22               	incfsz	___lldiv@divisor+2,w
  3661     04C5  02A6               	subwf	___lldiv@dividend+2,f
  3662     04C6  0823               	movf	___lldiv@divisor+3,w
  3663     04C7  1C03               	skipc
  3664     04C8  0F23               	incfsz	___lldiv@divisor+3,w
  3665     04C9  02A7               	subwf	___lldiv@dividend+3,f
  3666     04CA                     l2025:
  3667     04CA  1474               	bsf	___lldiv@quotient,0
  3668     04CB                     l2027:
  3669     04CB  3001               	movlw	1
  3670     04CC                     u1755:
  3671     04CC  1003               	clrc
  3672     04CD  0CA3               	rrf	___lldiv@divisor+3,f
  3673     04CE  0CA2               	rrf	___lldiv@divisor+2,f
  3674     04CF  0CA1               	rrf	___lldiv@divisor+1,f
  3675     04D0  0CA0               	rrf	___lldiv@divisor,f
  3676     04D1  3EFF               	addlw	-1
  3677     04D2  1D03               	skipz
  3678     04D3  2CCC               	goto	u1755
  3679     04D4                     l2029:
  3680     04D4  3001               	movlw	1
  3681     04D5  02F8               	subwf	___lldiv@counter,f
  3682     04D6  1D03               	btfss	3,2
  3683     04D7  2CD9               	goto	u1761
  3684     04D8  2CDA               	goto	u1760
  3685     04D9                     u1761:
  3686     04D9  2CA1               	goto	l2019
  3687     04DA                     u1760:
  3688     04DA                     l2031:
  3689     04DA  0877               	movf	___lldiv@quotient+3,w
  3690     04DB  00A3               	movwf	?___lldiv+3
  3691     04DC  0876               	movf	___lldiv@quotient+2,w
  3692     04DD  00A2               	movwf	?___lldiv+2
  3693     04DE  0875               	movf	___lldiv@quotient+1,w
  3694     04DF  00A1               	movwf	?___lldiv+1
  3695     04E0  0874               	movf	___lldiv@quotient,w
  3696     04E1  00A0               	movwf	?___lldiv
  3697     04E2                     l402:
  3698     04E2  0008               	return
  3699     04E3                     __end_of___lldiv:
  3700                           
  3701                           	psect	text16
  3702     06D5                     __ptext16:	
  3703 ;; *************** function _UART_GetC *****************
  3704 ;; Defined at:
  3705 ;;		line 46 in file "USARTmodl.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3719 ;;      Params:         0       0       0       0       0
  3720 ;;      Locals:         0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0
  3722 ;;      Totals:         0       0       0       0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; Hardware stack levels required when called: 1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_main
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733     06D5                     _UART_GetC:	
  3734                           ;psect for function _UART_GetC
  3735                           
  3736     06D5                     l1871:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _UART_GetC: [wreg]
  3739                           
  3740     06D5                     l218:	
  3741                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3742                           
  3743     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  3744     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  3745     06D7  1E8C               	btfss	12,5	;volatile
  3746     06D8  2EDA               	goto	u1641
  3747     06D9  2EDB               	goto	u1640
  3748     06DA                     u1641:
  3749     06DA  2ED5               	goto	l218
  3750     06DB                     u1640:
  3751     06DB                     l220:
  3752                           
  3753                           ;USARTmodl.c: 49:   if (OERR)
  3754     06DB  1C98               	btfss	24,1	;volatile
  3755     06DC  2EDE               	goto	u1651
  3756     06DD  2EDF               	goto	u1650
  3757     06DE                     u1651:
  3758     06DE  2EE1               	goto	l1875
  3759     06DF                     u1650:
  3760     06DF                     l1873:
  3761                           
  3762                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3763     06DF  1218               	bcf	24,4	;volatile
  3764                           
  3765                           ;USARTmodl.c: 52:     CREN = 1;
  3766     06E0  1618               	bsf	24,4	;volatile
  3767     06E1                     l1875:
  3768                           
  3769                           ;USARTmodl.c: 54:   return RCREG;
  3770     06E1  081A               	movf	26,w	;volatile
  3771     06E2                     l222:
  3772     06E2  0008               	return
  3773     06E3                     __end_of_UART_GetC:
  3774                           
  3775                           	psect	text17
  3776     06EF                     __ptext17:	
  3777 ;; *************** function _UART_Data_Ready *****************
  3778 ;; Defined at:
  3779 ;;		line 41 in file "USARTmodl.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;		None               void
  3786 ;; Registers used:
  3787 ;;		status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_main
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807     06EF                     _UART_Data_Ready:	
  3808                           ;psect for function _UART_Data_Ready
  3809                           
  3810     06EF                     l1863:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _UART_Data_Ready: [status]
  3813                           
  3814                           
  3815                           ;USARTmodl.c: 43:   return RCIF;
  3816     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3817     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3818     06F1  1A8C               	btfsc	12,5	;volatile
  3819     06F2  2EF4               	goto	u1631
  3820     06F3  2EF5               	goto	u1630
  3821     06F4                     u1631:
  3822     06F4  2EF7               	goto	l1867
  3823     06F5                     u1630:
  3824     06F5                     l1865:
  3825     06F5  1003               	clrc
  3826     06F6  2EF8               	goto	l215
  3827     06F7                     l1867:
  3828     06F7  1403               	setc
  3829     06F8                     l215:
  3830     06F8  0008               	return
  3831     06F9                     __end_of_UART_Data_Ready:
  3832                           
  3833                           	psect	text18
  3834     0684                     __ptext18:	
  3835 ;; *************** function _isr *****************
  3836 ;; Defined at:
  3837 ;;		line 34 in file "postlab2.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0
  3853 ;;      Temps:          3       0       0       0       0
  3854 ;;      Totals:         3       0       0       0       0
  3855 ;;Total ram usage:        3 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		Interrupt level 1
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0684                     _isr:	
  3865                           ;psect for function _isr
  3866                           
  3867     0684                     i1l1879:
  3868                           
  3869                           ;postlab2.c: 36:     if(PIR1bits.ADIF){
  3870     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3871     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3872     0686  1F0C               	btfss	12,6	;volatile
  3873     0687  2E89               	goto	u166_21
  3874     0688  2E8A               	goto	u166_20
  3875     0689                     u166_21:
  3876     0689  2E96               	goto	i1l151
  3877     068A                     u166_20:
  3878     068A                     i1l1881:
  3879                           
  3880                           ;postlab2.c: 38:          if (ADCON0bits.CHS ==0)
  3881     068A  0C1F               	rrf	31,w	;volatile
  3882     068B  00F0               	movwf	??_isr
  3883     068C  0C70               	rrf	??_isr,w
  3884     068D  390F               	andlw	15
  3885     068E  3A00               	xorlw	0
  3886     068F  1D03               	skipz
  3887     0690  2E92               	goto	u167_21
  3888     0691  2E93               	goto	u167_20
  3889     0692                     u167_21:
  3890     0692  2E95               	goto	i1l1885
  3891     0693                     u167_20:
  3892     0693                     i1l1883:
  3893                           
  3894                           ;postlab2.c: 39:           valpot = ADRESH;
  3895     0693  081E               	movf	30,w	;volatile
  3896     0694  00D9               	movwf	_valpot
  3897     0695                     i1l1885:
  3898                           
  3899                           ;postlab2.c: 40:          PIR1bits.ADIF =0;
  3900     0695  130C               	bcf	12,6	;volatile
  3901     0696                     i1l151:
  3902     0696  0872               	movf	??_isr+2,w
  3903     0697  008A               	movwf	10
  3904     0698  0E71               	swapf	??_isr+1,w
  3905     0699  0083               	movwf	3
  3906     069A  0EFE               	swapf	btemp,f
  3907     069B  0E7E               	swapf	btemp,w
  3908     069C  0009               	retfie
  3909     069D                     __end_of_isr:
  3910     007E                     btemp	set	126	;btemp
  3911     007E                     wtemp0	set	126
  3912                           
  3913                           	psect	intentry
  3914     0004                     __pintentry:	
  3915                           ;incstack = 0
  3916                           ; Regs used in _isr: [wreg+status,2+status,0]
  3917                           
  3918     0004                     interrupt_function:
  3919     007E                     saved_w	set	btemp
  3920     0004  00FE               	movwf	btemp
  3921     0005  0E03               	swapf	3,w
  3922     0006  00F1               	movwf	??_isr+1
  3923     0007  080A               	movf	10,w
  3924     0008  00F2               	movwf	??_isr+2
  3925     0009  120A  118A  2E84   	ljmp	_isr
  3926                           
  3927                           	psect	idloc
  3928                           
  3929                           ;Config register IDLOC0 @ 0x2000
  3930                           ;	unspecified, using default values
  3931     2000                     	org	8192
  3932     2000  3FFF               	dw	16383
  3933                           
  3934                           ;Config register IDLOC1 @ 0x2001
  3935                           ;	unspecified, using default values
  3936     2001                     	org	8193
  3937     2001  3FFF               	dw	16383
  3938                           
  3939                           ;Config register IDLOC2 @ 0x2002
  3940                           ;	unspecified, using default values
  3941     2002                     	org	8194
  3942     2002  3FFF               	dw	16383
  3943                           
  3944                           ;Config register IDLOC3 @ 0x2003
  3945                           ;	unspecified, using default values
  3946     2003                     	org	8195
  3947     2003  3FFF               	dw	16383
  3948                           
  3949                           	psect	config
  3950                           
  3951                           ;Config register CONFIG1 @ 0x2007
  3952                           ;	Oscillator Selection bits
  3953                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3954                           ;	Watchdog Timer Enable bit
  3955                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3956                           ;	Power-up Timer Enable bit
  3957                           ;	PWRTE = OFF, PWRT disabled
  3958                           ;	RE3/MCLR pin function select bit
  3959                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3960                           ;	Code Protection bit
  3961                           ;	CP = OFF, Program memory code protection is disabled
  3962                           ;	Data Code Protection bit
  3963                           ;	CPD = OFF, Data memory code protection is disabled
  3964                           ;	Brown Out Reset Selection bits
  3965                           ;	BOREN = OFF, BOR disabled
  3966                           ;	Internal External Switchover bit
  3967                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3968                           ;	Fail-Safe Clock Monitor Enabled bit
  3969                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3970                           ;	Low Voltage Programming Enable bit
  3971                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3972                           ;	In-Circuit Debugger Mode bit
  3973                           ;	DEBUG = 0x1, unprogrammed default
  3974     2007                     	org	8199
  3975     2007  38D5               	dw	14549
  3976                           
  3977                           ;Config register CONFIG2 @ 0x2008
  3978                           ;	Brown-out Reset Selection bit
  3979                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3980                           ;	Flash Program Memory Self Write Enable bits
  3981                           ;	WRT = OFF, Write protection off
  3982     2008                     	org	8200
  3983     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     57      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_5(CODE[23]), main@text(BANK0[9]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> message(CODE[15]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___wmul
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _map->___fltol
    _map->___wmul
    ___xxtofl->___wmul
    ___lwdiv->___wmul
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___xxtofl
    ___xxtofl->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    7586
                                             42 BANK0     15    15      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                                _map
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2667
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     644
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           4     2      2     644
                                              4 COMMON     4     2      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    2523
                                             22 BANK0     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              8 BANK0     14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              3 COMMON     6     2      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              8 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _map
     ___fltol
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jul 26 12:02:19 2023

                      pc 0002                       fsr 0004      ___wmul@multiplicand 0075  
                    l220 06DB                      l222 06E2                      l206 03ED  
                    l215 06F8                      l207 03FE                      l208 0402  
                    l225 06E4                      l218 06D5                      l402 04E2  
                    l234 063C                      l228 06EE                      l332 0032  
                    l156 06AF                      l181 0548                      l175 0683  
                    l178 06C2                      l362 019D                      l366 0649  
                    l552 047A                      l368 0661                      l801 0362  
                    l562 047A                      l812 032C                      l813 0338  
                    l805 0310                      l638 05D5                      l559 0465  
                    l648 0611                      l819 06D4                      l799 02CD  
                    _RD3 0043                      _RD4 0044                      _RC6 003E  
                    _RD5 0045                      _RC7 003F                      _RD6 0046  
                    _RD7 0047                      u910 06EA                      u911 06E9  
                    u920 063C                      u921 063B                      u930 06CB  
                    u931 06CA                      u940 06D1                      u941 06D0  
                    u950 0643                      u951 0642                      u980 065D  
                    u981 065C                      u965 064A                      u975 0651  
                    _map 04E3                      _isr 0684                      fsr0 0004  
                    indf 0000             ___fltol@exp1 0078                     l2011 047B  
                   l2021 04AA                     l2013 048D                     l2101 05E1  
                   l2023 04BC                     l2015 0490                     l2031 04DA  
                   l2111 0600                     l2103 05E8                     l2025 04CA  
                   l2017 049D                     l2121 0395                     l2041 0415  
                   l2113 0607                     l2105 05EC                     l2201 011A  
                   l2027 04CB                     l2019 04A1                     l2131 03E7  
                   l2123 0399                     l2051 0439                     l2043 042A  
                   l2035 0403                     l2107 05F0                     l2115 060D  
                   l2211 013A                     l2203 011E                     l2029 04D4  
                   l2133 03F6                     l2125 039B                     l2045 042B  
                   l2037 040C                     l2109 05FA                     l2221 0180  
                   l2213 0146                     l2205 012B                     l2141 001E  
                   l2127 03A8                     l2119 0363                     l2047 0433  
                   l2071 0590                     l2135 04E3                     l1511 06EA  
                   l2215 0149                     l2207 0131                     l2143 0024  
                   l2223 0189                     l2129 03DA                     l2065 045A  
                   l2057 0441                     l2049 0435                     l2081 05A8  
                   l2073 0594                     l1513 0612                     l1521 06C4  
                   l2217 0177                     l2209 0136                     l2225 0199  
                   l2161 0073                     l2153 0037                     l2145 0029  
                   l2241 01A7                     l2067 046A                     l2059 0453  
                   l2091 05CB                     l2083 05AC                     l2075 059A  
                   l1515 0614                     l1523 06C5                     l2219 017C  
                   l2163 0086                     l2171 00A0                     l2155 004A  
                   l2147 002E                     l2139 001B                     l2251 01E5  
                   l2243 01B6                     l2069 046F                     l2085 05BD  
                   l2077 059D                     l2093 05D1                     l1541 0657  
                   l1533 063D                     l1509 06E4                     l1517 0625  
                   l1525 06CB                     l2173 00BC                     l2165 008A  
                   l2157 005A                     l2149 0033                     l1701 06A3  
                   l2261 0207                     l2253 01F3                     l2245 01C5  
                   l2237 019E                     l2087 05C3                     l2079 05A4  
                   l1543 065D                     l1535 063F                     l1519 0629  
                   l1527 06D1                     l2191 00FB                     l2183 00CA  
                   l2175 00C4                     l2167 009B                     l2159 005E  
                   l1703 06A7                     l1711 06AE                     l2271 0249  
                   l2263 0209                     l2255 01FC                     l2247 01CE  
                   l2239 01A3                     l2089 05C4                     l1537 0643  
                   l1721 066B                     l2097 05D6                     l1529 06D3  
                   l2193 0107                     l2177 00C8                     l1705 06AC  
                   l2361 0283                     l2281 0265                     l2273 024E  
                   l2265 0229                     l2257 01FF                     l2249 01DC  
                   l1539 0650                     l1731 0676                     l1723 066C  
                   l1715 0662                     l2099 05DE                     l2195 010B  
                   l2187 00E6                     l2363 0045                     l2283 0270  
                   l2275 0253                     l2291 028E                     l2267 0232  
                   l2259 0205                     l1661 02C5                     l1741 0682  
                   l1733 0677                     l1725 066D                     l1717 0666  
                   l2197 010F                     l2189 00F0                     l2365 00B4  
                   l2293 0297                     l2277 025E                     l2269 0240  
                   l1671 02EE                     l1663 02D5                     l1655 02AC  
                   l1735 067B                     l1727 066E                     l1719 0667  
                   l2199 0115                     l2295 029F                     l1681 0322  
                   l1673 02F5                     l1657 02B1                     l1737 067E  
                   l1729 0674                     l2289 0275                     l1691 0355  
                   l1683 0326                     l1675 02F9                     l1667 02DE  
                   l1659 02B5                     l1739 0681                     l1693 0359  
                   l1685 0330                     l1677 0307                     l1669 02E1  
                   l1861 06B0                     l1863 06EF                     l1871 06D5  
                   l1695 035A                     l1687 033A                     l1679 0317  
                   l1865 06F5                     l1873 06DF                     l1689 0350  
                   l1867 06F7                     l1875 06E1                     l1699 069D  
                   ?_map 0036                     ?_isr 0070                     STR_1 0572  
                   STR_2 0586                     STR_3 0586                     STR_4 0589  
                   STR_5 0572                     _CREN 00C4                     u2000 0373  
                   u2010 0399                     u2011 0398                     u2020 03A8  
                   u1300 02B5                     u2100 00FB                     u2021 03A7  
                   u2005 036E                     u1301 02B4                     u2101 00FA  
                   u2030 03B8                     u1310 02D5                     u2110 010F  
                   u1311 02D4                     u2111 010E                     u2040 03E7  
                   u1400 0345                     u2120 0115                     u2041 03E6  
                   u2025 03A4                     u2121 0114                     u2105 00F7  
                   u1410 0355                     u1330 02F4                     u2130 012A  
                   u2050 0024                     u2035 03B3                     u1411 0354  
                   u1331 02F3                     u2131 0129                     u2051 0023  
                   u1420 0359                     u2140 0131                     u2060 005A  
                   u2045 03E3                     u1421 0358                     u1405 0340  
                   u1325 02E6                     u2141 0130                     u2061 0059  
                   u1350 0316                     u2150 0146                     u2070 009A  
                   u1430 06A3                     u1351 0315                     u2151 0145  
                   u2071 0099                     u1431 06A2                     u2207 01BE  
                   u2160 0189                     u2080 00E5                     u1440 06A7  
                   u1345 0308                     u2161 0188                     u2081 00E4  
                   u1441 06A6                     u2217 01D6                     u1370 0326  
                   u1290 02B1                     u2170 0199                     u2090 00F0  
                   u1371 0325                     u1291 02B0                     u2171 0198  
                   u2091 00EF                     u2227 01ED                     u1700 048D  
                   u1380 032C                     u2180 0205                     u1701 048C  
                   u1381 032B                     u1365 031B                     u2085 00E1  
                   u2237 0259                     u2181 0204                     u1630 06F5  
                   u1390 0330                     u2190 0297                     u1631 06F4  
                   u1391 032F                     u2191 0296                     u2247 026B  
                   u1640 06DB                     u1720 04A1                     u1800 0440  
                   u1641 06DA                     u1721 04A0                     u1801 043F  
                   u2257 0679                     u1650 06DF                     u1651 06DE  
                   u1715 0492                     u1740 04BC                     u1820 0452  
                   u1741 04BB                     u1821 0451                     u1830 0459  
                   u1910 05BD                     u1735 04A3                     u1831 0458  
                   u1815 0442                     u1911 05BC                     u1760 04DA  
                   u1761 04D9                     u1745 04B8                     u1905 05AD  
                   u1850 046A                     u1770 040C                     u1930 05D1  
                   u1755 04CC                     u1851 0469                     u1771 040B  
                   u1931 05D0                     u1915 05B9                     u1860 046F  
                   u1780 0425                     u1940 05DE                     u1861 046E  
                   u1845 045C                     u1925 05C5                     u1941 05DD  
                   u1790 0439                     u1870 059A                     u1791 0438  
                   u1871 0599                     u1960 05F0                     u1785 0420  
                   u1961 05EF                     u1890 05AC                     u1970 05FA  
                   u1891 05AB                     u1971 05F9                     u1955 05E2  
                   u1885 059E                     u1990 060D                     u1991 060C  
                   u1975 05F6                     u1985 0601                     _RCIF 0065  
                   _OERR 00C1                     _TRMT 04C1                     _main 019E  
                   btemp 007E                     start 000C                    ??_map 0040  
                  ??_isr 0070            ___fltol@sign1 0077                    ?_main 0070  
        __end_of___fltol 047B                    _CMCON 0079                    _ANSEL 0188  
        __end_of___lldiv 04E3          __end_of___lwdiv 05D6                    i1l151 0696  
        __end_of___lwmod 0612                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
            ?_UART_Print 0074          __end_of_dpowers 0563          __end_of_isdigit 06D5  
        __end_of_message 0572                    _setup 0662                    main@c 0058  
                  pclath 000A             main@varvolt2 0056                    status 0003  
                  wtemp0 007E          __end_of_sprintf 019E          __initialization 000F  
           __end_of_main 02A9                   ??_main 004A                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1881 068A  
                 i1l1883 0693                   i1l1885 0695                   i1l1879 0684  
                 u166_20 068A                   u166_21 0689                   u167_20 0693  
                 u167_21 0692                   _OSCCON 008F                   _TRISC6 043E  
                 _TRISC7 043F         __end_of___xxtofl 0363        __end_of_UART_GetC 06E3  
      __end_of_UART_Init 0403        __end_of_UART_PutC 06EF                   ___wmul 063D  
              ??___fltol 0020                ??___lldiv 0073                ??___lwdiv 0024  
              ??___lwmod 002C                   _valpot 0059                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 0031             ___xxtofl@arg 0032  
           ___xxtofl@exp 0031             ___xxtofl@val 0028  __end_of__initialization 0014  
             ___fltol@f1 0073           __pcstackCOMMON 0070            __end_of_setup 0684  
           sprintf@width 003A                  ??_setup 0073               __pbssBANK0 0059  
             __pmaintext 019E                  ?___wmul 0073               __pintentry 0004  
              ?___xxtofl 0028             ??_UART_Print 0076               __stringtab 0549  
     __end_of_UART_Print 063D                  ___fltol 0403                  ___lldiv 047B  
                ___lwdiv 0590                  ___lwmod 05D6                  __ptext1 069D  
                __ptext2 0018                  __ptext3 06C3                  __ptext4 05D6  
                __ptext5 0662                  __ptext6 06B0                  __ptext7 0612  
                __ptext8 06E3                  __ptext9 04E3                  _dpowers 0559  
                _isdigit 06C3               ??___xxtofl 002C                  _message 0563  
            UART_Print@i 0077           UART_Print@data 0074                  _sprintf 0018  
   end_of_initialization 0014        __end_of_uart_read 06B0        __end_of_preguntas 06C3  
        ___lldiv@divisor 0020          ___lldiv@counter 0078                _RCSTAbits 0018  
      ??_UART_Data_Ready 0073                _UART_GetC 06D5                _UART_Init 0363  
              _UART_PutC 06E3                _PORTDbits 0008       UART_Init@baud_rate 0028  
          ___xxtofl@sign 0030           __end_of___wmul 0662               ?_UART_GetC 0070  
             ?_UART_Init 0028               ?_UART_PutC 0070      start_initialization 000F  
            __end_of_map 0549              __end_of_isr 069D                 ??___wmul 0077  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
            sprintf@flag 0035              sprintf@prec 0038         ___lwdiv@dividend 0022  
               ?___fltol 0073                 ?___lldiv 0020                 ?___lwdiv 0020  
               ?___lwmod 0028              ??_UART_GetC 0073              ??_UART_Init 002C  
            ??_UART_PutC 0073                __pstrings 0549                 ?_isdigit 0070  
          UART_PutC@data 0073         ___lwdiv@quotient 0026                 ?_sprintf 002E  
             UART_Init@n 0030        interrupt_function 0004           ___wmul@product 0077  
        _UART_Data_Ready 06EF                 _PIE1bits 008C                 _PIR1bits 000C  
              _uart_read 069D                _preguntas 06B0                map@maxsal 003E  
              map@maxval 003A                map@minsal 003C                map@minval 0038  
             _ADCON0bits 001F              __stringbase 0558               _ADCON1bits 009F  
      ___wmul@multiplier 0073                map@valmap 0046                map@varmap 0036  
             ?_uart_read 0070               ?_preguntas 0070       __end_of__stringtab 0559  
            _isdigit$892 0073               sprintf@val 0036                 ___xxtofl 02A9  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0025                 __ptext10 02A9  
               __ptext11 063D                 __ptext12 0590                 __ptext13 0403  
               __ptext14 0363                 __ptext15 047B                 __ptext16 06D5  
               __ptext17 06EF                 __ptext18 0684  __end_of_UART_Data_Ready 06F9  
               main@text 004D               _INTCONbits 000B                 isdigit@c 0074  
               intlevel1 0000                sprintf@ap 0034                sprintf@sp 0039  
       ___lwmod@dividend 002A         ___lldiv@dividend 0024                stringcode 0553  
            ??_uart_read 0073              ??_preguntas 0078                 sprintf@c 003C  
               sprintf@f 002E         ___lldiv@quotient 0074          ___lwmod@divisor 0028  
        ___lwmod@counter 002D                 stringdir 0553                 stringtab 0549  
             _UART_Print 0612         ?_UART_Data_Ready 0070  
