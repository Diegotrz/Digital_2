

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 01 23:10:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0097                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009A                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     0105                     	;# 
   128     0107                     	;# 
   129     0108                     	;# 
   130     0109                     	;# 
   131     010C                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0185                     	;# 
   137     0187                     	;# 
   138     0188                     	;# 
   139     0189                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     008F                     	;# 
   187     0090                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     0105                     	;# 
   206     0107                     	;# 
   207     0108                     	;# 
   208     0109                     	;# 
   209     010C                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     0185                     	;# 
   215     0187                     	;# 
   216     0188                     	;# 
   217     0189                     	;# 
   218     018C                     	;# 
   219     018D                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     000E                     	;# 
   236     000F                     	;# 
   237     0010                     	;# 
   238     0011                     	;# 
   239     0012                     	;# 
   240     0013                     	;# 
   241     0014                     	;# 
   242     0015                     	;# 
   243     0015                     	;# 
   244     0016                     	;# 
   245     0017                     	;# 
   246     0018                     	;# 
   247     0019                     	;# 
   248     001A                     	;# 
   249     001B                     	;# 
   250     001B                     	;# 
   251     001C                     	;# 
   252     001D                     	;# 
   253     001E                     	;# 
   254     001F                     	;# 
   255     0081                     	;# 
   256     0085                     	;# 
   257     0086                     	;# 
   258     0087                     	;# 
   259     0088                     	;# 
   260     0089                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0097                     	;# 
   275     0098                     	;# 
   276     0099                     	;# 
   277     009A                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     009F                     	;# 
   283     0105                     	;# 
   284     0107                     	;# 
   285     0108                     	;# 
   286     0109                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     0185                     	;# 
   293     0187                     	;# 
   294     0188                     	;# 
   295     0189                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0095                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009C                     	;# 
   358     009D                     	;# 
   359     009E                     	;# 
   360     009F                     	;# 
   361     0105                     	;# 
   362     0107                     	;# 
   363     0108                     	;# 
   364     0109                     	;# 
   365     010C                     	;# 
   366     010C                     	;# 
   367     010D                     	;# 
   368     010E                     	;# 
   369     010F                     	;# 
   370     0185                     	;# 
   371     0187                     	;# 
   372     0188                     	;# 
   373     0189                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376                           
   377                           	psect	strings
   378     0003                     __pstrings:
   379     0003                     stringtab:
   380     0003                     __stringtab:
   381                           
   382                           ;	String table - string pointers are 1 byte each
   383     0003  1BFF               	btfsc	btemp+1,7
   384     0004  280D               	ljmp	stringcode
   385     0005  1383               	bcf	3,7
   386     0006  187F               	btfsc	btemp+1,0
   387     0007  1783               	bsf	3,7
   388     0008  0800               	movf	0,w
   389     0009  0A84               	incf	4,f
   390     000A  1903               	skipnz
   391     000B  0AFF               	incf	btemp+1,f
   392     000C  0008               	return
   393     000D                     stringcode:
   394     000D                     stringdir:
   395     000D  3000               	movlw	high stringdir
   396     000E  008A               	movwf	10
   397     000F  0804               	movf	4,w
   398     0010  0A84               	incf	4,f
   399     0011  0782               	addwf	2,f
   400     0012                     __stringbase:
   401     0012  3400               	retlw	0
   402     0013                     __end_of__stringtab:
   403     0013                     _dpowers:
   404     0013  3401               	retlw	1
   405     0014  3400               	retlw	0
   406     0015  340A               	retlw	10
   407     0016  3400               	retlw	0
   408     0017  3464               	retlw	100
   409     0018  3400               	retlw	0
   410     0019  34E8               	retlw	232
   411     001A  3403               	retlw	3
   412     001B  3410               	retlw	16
   413     001C  3427               	retlw	39
   414     001D                     __end_of_dpowers:
   415     0008                     _PORTD	set	8
   416     0006                     _PORTB	set	6
   417     0005                     _PORTA	set	5
   418     0007                     _PORTCbits	set	7
   419     0013                     _SSPBUF	set	19
   420     0014                     _SSPCON	set	20
   421     003F                     _RC7	set	63
   422     0047                     _RD7	set	71
   423     0046                     _RD6	set	70
   424     0045                     _RD5	set	69
   425     0044                     _RD4	set	68
   426     008F                     _OSCCONbits	set	143
   427     0088                     _TRISD	set	136
   428     0086                     _TRISB	set	134
   429     0085                     _TRISA	set	133
   430     0094                     _SSPSTATbits	set	148
   431     0094                     _SSPSTAT	set	148
   432     043F                     _TRISC7	set	1087
   433     043E                     _TRISC6	set	1086
   434     043A                     _TRISC2	set	1082
   435     0439                     _TRISC1	set	1081
   436     043B                     _TRISC3	set	1083
   437     043D                     _TRISC5	set	1085
   438     0189                     _ANSELH	set	393
   439     0188                     _ANSEL	set	392
   440     001D                     STR_1:
   441     001D  3450               	retlw	80	;'P'
   442     001E  346F               	retlw	111	;'o'
   443     001F  3474               	retlw	116	;'t'
   444     0020  3431               	retlw	49	;'1'
   445     0021  3400               	retlw	0
   446     0022                     STR_3:
   447     0022  3450               	retlw	80	;'P'
   448     0023  346F               	retlw	111	;'o'
   449     0024  3474               	retlw	116	;'t'
   450     0025  3432               	retlw	50	;'2'
   451     0026  3400               	retlw	0
   452     0027                     STR_2:
   453     0027  3425               	retlw	37	;'%'
   454     0028  3475               	retlw	117	;'u'
   455     0029  3400               	retlw	0
   456     0027                     
   457                           	psect	cinit
   458     07F8                     start_initialization:	
   459                           ; #config settings
   460                           
   461     07F8                     __initialization:
   462                           
   463                           ; Clear objects allocated to BANK0
   464     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   465     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   466     07FA  01D8               	clrf	__pbssBANK0& (0+127)
   467     07FB  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   468     07FC                     end_of_initialization:	
   469                           ;End of C runtime variable initialization code
   470                           
   471     07FC                     __end_of__initialization:
   472     07FC  0183               	clrf	3
   473     07FD  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   474                           
   475                           	psect	bssBANK0
   476     0058                     __pbssBANK0:
   477     0058                     _pot2:
   478     0058                     	ds	1
   479     0059                     _pot1:
   480     0059                     	ds	1
   481                           
   482                           	psect	cstackCOMMON
   483     0070                     __pcstackCOMMON:
   484     0070                     ?_setup:
   485     0070                     ?_spiInit:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_spiReceiveWait:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ??_spiReceiveWait:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_spiWrite:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_spiWrite:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_spiRead:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ??_spiRead:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_Lcd_Port:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ??_Lcd_Port:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_Lcd_Cmd:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_Lcd_Clear:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_Lcd_Init:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_Lcd_Write_Char:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?___lwdiv:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     spiInit@sDataSample:	
   531                           ; 2 bytes @ 0x0
   532                           
   533     0070                     spiWrite@dat:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     Lcd_Port@a:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ___lwdiv@divisor:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 2 bytes @ 0x0
   544     0070                     	ds	1
   545     0071                     ??_Lcd_Cmd:
   546     0071                     ??_Lcd_Write_Char:	
   547                           ; 1 bytes @ 0x1
   548                           
   549     0071                     spiInit@sClockIdle:	
   550                           ; 1 bytes @ 0x1
   551                           
   552                           
   553                           ; 1 bytes @ 0x1
   554     0071                     	ds	1
   555     0072                     spiInit@sTransmitEdge:
   556     0072                     Lcd_Write_Char@temp:	
   557                           ; 1 bytes @ 0x2
   558                           
   559     0072                     ___lwdiv@dividend:	
   560                           ; 1 bytes @ 0x2
   561                           
   562                           
   563                           ; 2 bytes @ 0x2
   564     0072                     	ds	1
   565     0073                     ??_spiInit:
   566     0073                     spiInit@sType:	
   567                           ; 1 bytes @ 0x3
   568                           
   569     0073                     Lcd_Cmd@a:	
   570                           ; 1 bytes @ 0x3
   571                           
   572     0073                     Lcd_Write_Char@y:	
   573                           ; 1 bytes @ 0x3
   574                           
   575                           
   576                           ; 1 bytes @ 0x3
   577     0073                     	ds	1
   578     0074                     ??_setup:
   579     0074                     ??_Lcd_Clear:	
   580                           ; 1 bytes @ 0x4
   581                           
   582     0074                     ?_Lcd_Set_Cursor:	
   583                           ; 1 bytes @ 0x4
   584                           
   585     0074                     ??_Lcd_Init:	
   586                           ; 1 bytes @ 0x4
   587                           
   588     0074                     ??___lwdiv:	
   589                           ; 1 bytes @ 0x4
   590                           
   591     0074                     Lcd_Set_Cursor@b:	
   592                           ; 1 bytes @ 0x4
   593                           
   594     0074                     Lcd_Write_Char@a:	
   595                           ; 1 bytes @ 0x4
   596                           
   597                           
   598                           ; 1 bytes @ 0x4
   599     0074                     	ds	1
   600     0075                     ??_Lcd_Set_Cursor:
   601     0075                     ?_Lcd_Write_String:	
   602                           ; 1 bytes @ 0x5
   603                           
   604     0075                     Lcd_Write_String@a:	
   605                           ; 1 bytes @ 0x5
   606                           
   607     0075                     ___lwdiv@quotient:	
   608                           ; 2 bytes @ 0x5
   609                           
   610                           
   611                           ; 2 bytes @ 0x5
   612     0075                     	ds	1
   613     0076                     Lcd_Set_Cursor@a:
   614                           
   615                           ; 1 bytes @ 0x6
   616     0076                     	ds	1
   617     0077                     ??_Lcd_Write_String:
   618     0077                     Lcd_Set_Cursor@z:	
   619                           ; 1 bytes @ 0x7
   620                           
   621     0077                     ___lwdiv@counter:	
   622                           ; 1 bytes @ 0x7
   623                           
   624                           
   625                           ; 1 bytes @ 0x7
   626     0077                     	ds	1
   627     0078                     ?___lwmod:
   628     0078                     Lcd_Set_Cursor@y:	
   629                           ; 2 bytes @ 0x8
   630                           
   631     0078                     ___lwmod@divisor:	
   632                           ; 1 bytes @ 0x8
   633                           
   634                           
   635                           ; 2 bytes @ 0x8
   636     0078                     	ds	1
   637     0079                     Lcd_Set_Cursor@temp:
   638                           
   639                           ; 1 bytes @ 0x9
   640     0079                     	ds	1
   641     007A                     Lcd_Write_String@i:
   642     007A                     ___lwmod@dividend:	
   643                           ; 2 bytes @ 0xA
   644                           
   645                           
   646                           ; 2 bytes @ 0xA
   647     007A                     	ds	2
   648     007C                     ??___lwmod:
   649                           
   650                           ; 1 bytes @ 0xC
   651     007C                     	ds	1
   652     007D                     ___lwmod@counter:
   653                           
   654                           ; 1 bytes @ 0xD
   655     007D                     	ds	1
   656                           
   657                           	psect	cstackBANK0
   658     0020                     __pcstackBANK0:
   659     0020                     ?_sprintf:
   660     0020                     sprintf@f:	
   661                           ; 2 bytes @ 0x0
   662                           
   663                           
   664                           ; 1 bytes @ 0x0
   665     0020                     	ds	3
   666     0023                     ??_sprintf:
   667                           
   668                           ; 1 bytes @ 0x3
   669     0023                     	ds	3
   670     0026                     sprintf@flag:
   671                           
   672                           ; 1 bytes @ 0x6
   673     0026                     	ds	1
   674     0027                     sprintf@ap:
   675                           
   676                           ; 1 bytes @ 0x7
   677     0027                     	ds	1
   678     0028                     sprintf@val:
   679                           
   680                           ; 2 bytes @ 0x8
   681     0028                     	ds	2
   682     002A                     sprintf@prec:
   683                           
   684                           ; 1 bytes @ 0xA
   685     002A                     	ds	1
   686     002B                     sprintf@sp:
   687                           
   688                           ; 1 bytes @ 0xB
   689     002B                     	ds	1
   690     002C                     sprintf@c:
   691                           
   692                           ; 1 bytes @ 0xC
   693     002C                     	ds	1
   694     002D                     ??_main:
   695                           
   696                           ; 1 bytes @ 0xD
   697     002D                     	ds	3
   698     0030                     main@s:
   699                           
   700                           ; 20 bytes @ 0x10
   701     0030                     	ds	20
   702     0044                     main@s2:
   703                           
   704                           ; 20 bytes @ 0x24
   705     0044                     	ds	20
   706                           
   707                           	psect	maintext
   708     0705                     __pmaintext:	
   709 ;;
   710 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   711 ;;
   712 ;; *************** function _main *****************
   713 ;; Defined at:
   714 ;;		line 48 in file "Postlab3master.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  s2             20   36[BANK0 ] unsigned char [20]
   719 ;;  s              20   16[BANK0 ] unsigned char [20]
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0      40       0       0       0
   731 ;;      Temps:          0       3       0       0       0
   732 ;;      Totals:         0      43       0       0       0
   733 ;;Total ram usage:       43 bytes
   734 ;; Hardware stack levels required when called: 3
   735 ;; This function calls:
   736 ;;		_Lcd_Clear
   737 ;;		_Lcd_Init
   738 ;;		_Lcd_Set_Cursor
   739 ;;		_Lcd_Write_String
   740 ;;		_setup
   741 ;;		_spiRead
   742 ;;		_spiWrite
   743 ;;		_sprintf
   744 ;; This function is called by:
   745 ;;		Startup code after reset
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749     0705                     _main:	
   750                           ;psect for function _main
   751                           
   752     0705                     l1283:	
   753                           ;incstack = 0
   754                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   755                           
   756                           
   757                           ;Postlab3master.c: 49:     setup();
   758     0705  120A  118A  2489  120A  118A  	fcall	_setup
   759                           
   760                           ;Postlab3master.c: 50:      Lcd_Init();
   761     070A  120A  118A  25E7  120A  118A  	fcall	_Lcd_Init
   762     070F                     l1285:
   763                           
   764                           ;Postlab3master.c: 58:        PORTCbits.RC2 = 0;
   765     070F  1283               	bcf	3,5	;RP0=0, select bank0
   766     0710  1303               	bcf	3,6	;RP1=0, select bank0
   767     0711  1107               	bcf	7,2	;volatile
   768     0712                     l1287:
   769                           
   770                           ;Postlab3master.c: 59:        _delay((unsigned long)((1)*(8000000/4000.0)));
   771     0712  3003               	movlw	3
   772     0713  1283               	bcf	3,5	;RP0=0, select bank0
   773     0714  1303               	bcf	3,6	;RP1=0, select bank0
   774     0715  00AE               	movwf	??_main+1
   775     0716  3097               	movlw	151
   776     0717  00AD               	movwf	??_main
   777     0718                     u657:
   778     0718  0BAD               	decfsz	??_main,f
   779     0719  2F18               	goto	u657
   780     071A  0BAE               	decfsz	??_main+1,f
   781     071B  2F18               	goto	u657
   782     071C                     l1289:
   783                           
   784                           ;Postlab3master.c: 61:        spiWrite(1);
   785     071C  3001               	movlw	1
   786     071D  120A  118A  2414  120A  118A  	fcall	_spiWrite
   787     0722                     l1291:
   788                           
   789                           ;Postlab3master.c: 62:        pot1 = spiRead();
   790     0722  120A  118A  2421  120A  118A  	fcall	_spiRead
   791     0727  1283               	bcf	3,5	;RP0=0, select bank0
   792     0728  1303               	bcf	3,6	;RP1=0, select bank0
   793     0729  00D9               	movwf	_pot1
   794     072A                     l1293:
   795                           
   796                           ;Postlab3master.c: 64:        _delay((unsigned long)((1)*(8000000/4000.0)));
   797     072A  3003               	movlw	3
   798     072B  1283               	bcf	3,5	;RP0=0, select bank0
   799     072C  1303               	bcf	3,6	;RP1=0, select bank0
   800     072D  00AE               	movwf	??_main+1
   801     072E  3097               	movlw	151
   802     072F  00AD               	movwf	??_main
   803     0730                     u667:
   804     0730  0BAD               	decfsz	??_main,f
   805     0731  2F30               	goto	u667
   806     0732  0BAE               	decfsz	??_main+1,f
   807     0733  2F30               	goto	u667
   808     0734                     l1295:
   809                           
   810                           ;Postlab3master.c: 65:        PORTCbits.RC2 = 1;
   811     0734  1283               	bcf	3,5	;RP0=0, select bank0
   812     0735  1303               	bcf	3,6	;RP1=0, select bank0
   813     0736  1507               	bsf	7,2	;volatile
   814     0737                     l1297:
   815                           
   816                           ;Postlab3master.c: 67:        _delay((unsigned long)((250)*(8000000/4000.0)));
   817     0737  3003               	movlw	3
   818     0738  1283               	bcf	3,5	;RP0=0, select bank0
   819     0739  1303               	bcf	3,6	;RP1=0, select bank0
   820     073A  00AF               	movwf	??_main+2
   821     073B  308A               	movlw	138
   822     073C  00AE               	movwf	??_main+1
   823     073D  3055               	movlw	85
   824     073E  00AD               	movwf	??_main
   825     073F                     u677:
   826     073F  0BAD               	decfsz	??_main,f
   827     0740  2F3F               	goto	u677
   828     0741  0BAE               	decfsz	??_main+1,f
   829     0742  2F3F               	goto	u677
   830     0743  0BAF               	decfsz	??_main+2,f
   831     0744  2F3F               	goto	u677
   832     0745                     l1299:
   833                           
   834                           ;Postlab3master.c: 69:        PORTCbits.RC1 = 0;
   835     0745  1283               	bcf	3,5	;RP0=0, select bank0
   836     0746  1303               	bcf	3,6	;RP1=0, select bank0
   837     0747  1087               	bcf	7,1	;volatile
   838     0748                     l1301:
   839                           
   840                           ;Postlab3master.c: 70:        _delay((unsigned long)((5)*(8000000/4000.0)));
   841     0748  300D               	movlw	13
   842     0749  1283               	bcf	3,5	;RP0=0, select bank0
   843     074A  1303               	bcf	3,6	;RP1=0, select bank0
   844     074B  00AE               	movwf	??_main+1
   845     074C  30FB               	movlw	251
   846     074D  00AD               	movwf	??_main
   847     074E                     u687:
   848     074E  0BAD               	decfsz	??_main,f
   849     074F  2F4E               	goto	u687
   850     0750  0BAE               	decfsz	??_main+1,f
   851     0751  2F4E               	goto	u687
   852                           
   853                           ;Postlab3master.c: 72:        spiWrite(1);
   854     0752  3001               	movlw	1
   855     0753  120A  118A  2414  120A  118A  	fcall	_spiWrite
   856                           
   857                           ;Postlab3master.c: 73:        pot2 = spiRead();
   858     0758  120A  118A  2421  120A  118A  	fcall	_spiRead
   859     075D  1283               	bcf	3,5	;RP0=0, select bank0
   860     075E  1303               	bcf	3,6	;RP1=0, select bank0
   861     075F  00D8               	movwf	_pot2
   862     0760                     l1303:
   863                           
   864                           ;Postlab3master.c: 75:        _delay((unsigned long)((1)*(8000000/4000.0)));
   865     0760  3003               	movlw	3
   866     0761  1283               	bcf	3,5	;RP0=0, select bank0
   867     0762  1303               	bcf	3,6	;RP1=0, select bank0
   868     0763  00AE               	movwf	??_main+1
   869     0764  3097               	movlw	151
   870     0765  00AD               	movwf	??_main
   871     0766                     u697:
   872     0766  0BAD               	decfsz	??_main,f
   873     0767  2F66               	goto	u697
   874     0768  0BAE               	decfsz	??_main+1,f
   875     0769  2F66               	goto	u697
   876     076A                     l1305:
   877                           
   878                           ;Postlab3master.c: 76:        PORTCbits.RC1 = 1;
   879     076A  1283               	bcf	3,5	;RP0=0, select bank0
   880     076B  1303               	bcf	3,6	;RP1=0, select bank0
   881     076C  1487               	bsf	7,1	;volatile
   882     076D                     l1307:
   883                           
   884                           ;Postlab3master.c: 78:        _delay((unsigned long)((250)*(8000000/4000.0)));
   885     076D  3003               	movlw	3
   886     076E  1283               	bcf	3,5	;RP0=0, select bank0
   887     076F  1303               	bcf	3,6	;RP1=0, select bank0
   888     0770  00AF               	movwf	??_main+2
   889     0771  308A               	movlw	138
   890     0772  00AE               	movwf	??_main+1
   891     0773  3055               	movlw	85
   892     0774  00AD               	movwf	??_main
   893     0775                     u707:
   894     0775  0BAD               	decfsz	??_main,f
   895     0776  2F75               	goto	u707
   896     0777  0BAE               	decfsz	??_main+1,f
   897     0778  2F75               	goto	u707
   898     0779  0BAF               	decfsz	??_main+2,f
   899     077A  2F75               	goto	u707
   900                           
   901                           ;Postlab3master.c: 80:         char s[20];;Postlab3master.c: 81:         char s2[20];;Po
      +                          stlab3master.c: 82:       Lcd_Clear();
   902     077B  120A  118A  242A  120A  118A  	fcall	_Lcd_Clear
   903                           
   904                           ;Postlab3master.c: 87:     Lcd_Set_Cursor(1,1);
   905     0780  01F4               	clrf	Lcd_Set_Cursor@b
   906     0781  0AF4               	incf	Lcd_Set_Cursor@b,f
   907     0782  3001               	movlw	1
   908     0783  120A  118A  25A1  120A  118A  	fcall	_Lcd_Set_Cursor
   909     0788                     l1309:
   910                           
   911                           ;Postlab3master.c: 88:     Lcd_Write_String("Pot1");
   912     0788  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   913     0789  00F5               	movwf	Lcd_Write_String@a
   914     078A  3080               	movlw	128
   915     078B  00F6               	movwf	Lcd_Write_String@a+1
   916     078C  120A  118A  251B  120A  118A  	fcall	_Lcd_Write_String
   917     0791                     l1311:
   918                           
   919                           ;Postlab3master.c: 90:     sprintf(s, "%u", pot1);
   920     0791  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   921     0792  1283               	bcf	3,5	;RP0=0, select bank0
   922     0793  1303               	bcf	3,6	;RP1=0, select bank0
   923     0794  00A0               	movwf	sprintf@f
   924     0795  0859               	movf	_pot1,w
   925     0796  00AD               	movwf	??_main
   926     0797  01AE               	clrf	??_main+1
   927     0798  082D               	movf	??_main,w
   928     0799  00A1               	movwf	?_sprintf+1
   929     079A  082E               	movf	??_main+1,w
   930     079B  00A2               	movwf	?_sprintf+2
   931     079C  3030               	movlw	(low (main@s| 0))& (0+255)
   932     079D  120A  118A  2644  120A  118A  	fcall	_sprintf
   933                           
   934                           ;Postlab3master.c: 91:     Lcd_Set_Cursor(2,1);
   935     07A2  01F4               	clrf	Lcd_Set_Cursor@b
   936     07A3  0AF4               	incf	Lcd_Set_Cursor@b,f
   937     07A4  3002               	movlw	2
   938     07A5  120A  118A  25A1  120A  118A  	fcall	_Lcd_Set_Cursor
   939     07AA                     l1313:
   940                           
   941                           ;Postlab3master.c: 92:     Lcd_Write_String(s);
   942     07AA  3030               	movlw	(low (main@s| 0))& (0+255)
   943     07AB  00F5               	movwf	Lcd_Write_String@a
   944     07AC  3000               	movlw	0
   945     07AD  00F6               	movwf	Lcd_Write_String@a+1
   946     07AE  120A  118A  251B  120A  118A  	fcall	_Lcd_Write_String
   947     07B3                     l1315:
   948                           
   949                           ;Postlab3master.c: 94:     Lcd_Set_Cursor(1,7);
   950     07B3  3007               	movlw	7
   951     07B4  00F4               	movwf	Lcd_Set_Cursor@b
   952     07B5  3001               	movlw	1
   953     07B6  120A  118A  25A1  120A  118A  	fcall	_Lcd_Set_Cursor
   954                           
   955                           ;Postlab3master.c: 95:     Lcd_Write_String("Pot2");
   956     07BB  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   957     07BC  00F5               	movwf	Lcd_Write_String@a
   958     07BD  3080               	movlw	128
   959     07BE  00F6               	movwf	Lcd_Write_String@a+1
   960     07BF  120A  118A  251B  120A  118A  	fcall	_Lcd_Write_String
   961                           
   962                           ;Postlab3master.c: 97:     sprintf(s2, "%u", pot2);
   963     07C4  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   964     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   965     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   966     07C7  00A0               	movwf	sprintf@f
   967     07C8  0858               	movf	_pot2,w
   968     07C9  00AD               	movwf	??_main
   969     07CA  01AE               	clrf	??_main+1
   970     07CB  082D               	movf	??_main,w
   971     07CC  00A1               	movwf	?_sprintf+1
   972     07CD  082E               	movf	??_main+1,w
   973     07CE  00A2               	movwf	?_sprintf+2
   974     07CF  3044               	movlw	(low (main@s2| 0))& (0+255)
   975     07D0  120A  118A  2644  120A  118A  	fcall	_sprintf
   976     07D5                     l1317:
   977                           
   978                           ;Postlab3master.c: 98:     Lcd_Set_Cursor(2,7);
   979     07D5  3007               	movlw	7
   980     07D6  00F4               	movwf	Lcd_Set_Cursor@b
   981     07D7  3002               	movlw	2
   982     07D8  120A  118A  25A1  120A  118A  	fcall	_Lcd_Set_Cursor
   983     07DD                     l1319:
   984                           
   985                           ;Postlab3master.c: 99:     Lcd_Write_String(s2);
   986     07DD  3044               	movlw	(low (main@s2| 0))& (0+255)
   987     07DE  00F5               	movwf	Lcd_Write_String@a
   988     07DF  3000               	movlw	0
   989     07E0  00F6               	movwf	Lcd_Write_String@a+1
   990     07E1  120A  118A  251B  120A  118A  	fcall	_Lcd_Write_String
   991     07E6                     l1321:
   992                           
   993                           ;Postlab3master.c: 100:     _delay((unsigned long)((500)*(8000000/4000.0)));
   994     07E6  3006               	movlw	6
   995     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   996     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   997     07E9  00AF               	movwf	??_main+2
   998     07EA  3013               	movlw	19
   999     07EB  00AE               	movwf	??_main+1
  1000     07EC  30AD               	movlw	173
  1001     07ED  00AD               	movwf	??_main
  1002     07EE                     u717:
  1003     07EE  0BAD               	decfsz	??_main,f
  1004     07EF  2FEE               	goto	u717
  1005     07F0  0BAE               	decfsz	??_main+1,f
  1006     07F1  2FEE               	goto	u717
  1007     07F2  0BAF               	decfsz	??_main+2,f
  1008     07F3  2FEE               	goto	u717
  1009     07F4  2F0F               	goto	l1285
  1010     07F5  120A  118A  2800   	ljmp	start
  1011     07F8                     __end_of_main:
  1012                           
  1013                           	psect	text1
  1014     0644                     __ptext1:	
  1015 ;; *************** function _sprintf *****************
  1016 ;; Defined at:
  1017 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  sp              1    wreg     PTR unsigned char 
  1020 ;;		 -> main@s2(20), main@s(20), 
  1021 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1022 ;;		 -> STR_4(3), STR_2(3), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1025 ;;		 -> main@s2(20), main@s(20), 
  1026 ;;  tmpval          4    0        struct .
  1027 ;;  val             2    8[BANK0 ] unsigned int 
  1028 ;;  cp              2    0        PTR const unsigned char 
  1029 ;;  len             2    0        unsigned int 
  1030 ;;  c               1   12[BANK0 ] unsigned char 
  1031 ;;  prec            1   10[BANK0 ] char 
  1032 ;;  ap              1    7[BANK0 ] PTR void [1]
  1033 ;;		 -> ?_sprintf(2), 
  1034 ;;  flag            1    6[BANK0 ] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  2    0[BANK0 ] int 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       3       0       0       0
  1045 ;;      Locals:         0       7       0       0       0
  1046 ;;      Temps:          0       3       0       0       0
  1047 ;;      Totals:         0      13       0       0       0
  1048 ;;Total ram usage:       13 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 1
  1051 ;; This function calls:
  1052 ;;		___lwdiv
  1053 ;;		___lwmod
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059     0644                     _sprintf:	
  1060                           ;psect for function _sprintf
  1061                           
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1065                           ;sprintf@sp stored from wreg
  1066     0644  1283               	bcf	3,5	;RP0=0, select bank0
  1067     0645  1303               	bcf	3,6	;RP1=0, select bank0
  1068     0646  00AB               	movwf	sprintf@sp
  1069     0647                     l1227:
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1072     0647  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1073     0648  00A7               	movwf	sprintf@ap
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1076     0649  2EF0               	goto	l1269
  1077     064A                     l1229:
  1078                           
  1079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1080     064A  3025               	movlw	37
  1081     064B  062C               	xorwf	sprintf@c,w
  1082     064C  1903               	btfsc	3,2
  1083     064D  2E4F               	goto	u601
  1084     064E  2E50               	goto	u600
  1085     064F                     u601:
  1086     064F  2E5A               	goto	l1235
  1087     0650                     u600:
  1088     0650                     l1231:
  1089                           
  1090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1091     0650  082B               	movf	sprintf@sp,w
  1092     0651  0084               	movwf	4
  1093     0652  082C               	movf	sprintf@c,w
  1094     0653  1383               	bcf	3,7	;select IRP bank0
  1095     0654  0080               	movwf	0
  1096     0655                     l1233:
  1097     0655  3001               	movlw	1
  1098     0656  00A3               	movwf	??_sprintf
  1099     0657  0823               	movf	??_sprintf,w
  1100     0658  07AB               	addwf	sprintf@sp,f
  1101                           
  1102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1103     0659  2EF0               	goto	l1269
  1104     065A                     l1235:
  1105                           
  1106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1107     065A  01A6               	clrf	sprintf@flag
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1110     065B  2E61               	goto	l1241
  1111     065C                     l1237:
  1112                           
  1113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1114     065C  30C0               	movlw	192
  1115     065D  00A3               	movwf	??_sprintf
  1116     065E  0823               	movf	??_sprintf,w
  1117     065F  04A6               	iorwf	sprintf@flag,f
  1118                           
  1119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1120     0660  2E7B               	goto	l1243
  1121     0661                     l1241:
  1122     0661  3001               	movlw	1
  1123     0662  07A0               	addwf	sprintf@f,f
  1124     0663  30FF               	movlw	-1
  1125     0664  0720               	addwf	sprintf@f,w
  1126     0665  0084               	movwf	4
  1127     0666  120A  118A  200D  120A  118A  	fcall	stringdir
  1128     066B  00AC               	movwf	sprintf@c
  1129     066C  00A3               	movwf	??_sprintf
  1130     066D  01A4               	clrf	??_sprintf+1
  1131                           
  1132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1133                           ; Switch size 1, requested type "simple"
  1134                           ; Number of cases is 1, Range of values is 0 to 0
  1135                           ; switch strategies available:
  1136                           ; Name         Instructions Cycles
  1137                           ; simple_byte            4     3 (average)
  1138                           ; direct_byte           11     8 (fixed)
  1139                           ; jumptable            260     6 (fixed)
  1140                           ;	Chosen strategy is simple_byte
  1141     066E  0824               	movf	??_sprintf+1,w
  1142     066F  3A00               	xorlw	0	; case 0
  1143     0670  1903               	skipnz
  1144     0671  2E73               	goto	l1343
  1145     0672  2EF0               	goto	l1269
  1146     0673                     l1343:
  1147                           
  1148                           ; Switch size 1, requested type "simple"
  1149                           ; Number of cases is 2, Range of values is 0 to 117
  1150                           ; switch strategies available:
  1151                           ; Name         Instructions Cycles
  1152                           ; simple_byte            7     4 (average)
  1153                           ; jumptable            260     6 (fixed)
  1154                           ;	Chosen strategy is simple_byte
  1155     0673  0823               	movf	??_sprintf,w
  1156     0674  3A00               	xorlw	0	; case 0
  1157     0675  1903               	skipnz
  1158     0676  2F00               	goto	l1271
  1159     0677  3A75               	xorlw	117	; case 117
  1160     0678  1903               	skipnz
  1161     0679  2E5C               	goto	l1237
  1162     067A  2EF0               	goto	l1269
  1163     067B                     l1243:
  1164                           
  1165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1166     067B  0827               	movf	sprintf@ap,w
  1167     067C  0084               	movwf	4
  1168     067D  1383               	bcf	3,7	;select IRP bank0
  1169     067E  0800               	movf	0,w
  1170     067F  00A8               	movwf	sprintf@val
  1171     0680  0A84               	incf	4,f
  1172     0681  0800               	movf	0,w
  1173     0682  00A9               	movwf	sprintf@val+1
  1174     0683                     l1245:
  1175     0683  3002               	movlw	2
  1176     0684  00A3               	movwf	??_sprintf
  1177     0685  0823               	movf	??_sprintf,w
  1178     0686  07A7               	addwf	sprintf@ap,f
  1179     0687                     l1247:
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1182     0687  01AC               	clrf	sprintf@c
  1183     0688  0AAC               	incf	sprintf@c,f
  1184     0689                     l1253:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1187     0689  082C               	movf	sprintf@c,w
  1188     068A  00A3               	movwf	??_sprintf
  1189     068B  0723               	addwf	??_sprintf,w
  1190     068C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1191     068D  0084               	movwf	4
  1192     068E  120A  118A  200D  120A  118A  	fcall	stringdir
  1193     0693  00A4               	movwf	??_sprintf+1
  1194     0694  120A  118A  200D  120A  118A  	fcall	stringdir
  1195     0699  00A5               	movwf	??_sprintf+2
  1196     069A  0825               	movf	??_sprintf+2,w
  1197     069B  0229               	subwf	sprintf@val+1,w
  1198     069C  1D03               	skipz
  1199     069D  2EA0               	goto	u615
  1200     069E  0824               	movf	??_sprintf+1,w
  1201     069F  0228               	subwf	sprintf@val,w
  1202     06A0                     u615:
  1203     06A0  1803               	skipnc
  1204     06A1  2EA3               	goto	u611
  1205     06A2  2EA4               	goto	u610
  1206     06A3                     u611:
  1207     06A3  2EA5               	goto	l1257
  1208     06A4                     u610:
  1209     06A4  2EAF               	goto	l1259
  1210     06A5                     l1257:
  1211     06A5  3001               	movlw	1
  1212     06A6  00A3               	movwf	??_sprintf
  1213     06A7  0823               	movf	??_sprintf,w
  1214     06A8  07AC               	addwf	sprintf@c,f
  1215     06A9  3005               	movlw	5
  1216     06AA  062C               	xorwf	sprintf@c,w
  1217     06AB  1D03               	btfss	3,2
  1218     06AC  2EAE               	goto	u621
  1219     06AD  2EAF               	goto	u620
  1220     06AE                     u621:
  1221     06AE  2E89               	goto	l1253
  1222     06AF                     u620:
  1223     06AF                     l1259:
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1226     06AF  082C               	movf	sprintf@c,w
  1227     06B0  00AA               	movwf	sprintf@prec
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1230     06B1  2EE7               	goto	l1267
  1231     06B2                     l1261:
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1234     06B2  300A               	movlw	10
  1235     06B3  00F8               	movwf	___lwmod@divisor
  1236     06B4  3000               	movlw	0
  1237     06B5  00F9               	movwf	___lwmod@divisor+1
  1238     06B6  082A               	movf	sprintf@prec,w
  1239     06B7  00A3               	movwf	??_sprintf
  1240     06B8  0723               	addwf	??_sprintf,w
  1241     06B9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1242     06BA  0084               	movwf	4
  1243     06BB  120A  118A  200D  120A  118A  	fcall	stringdir
  1244     06C0  00F0               	movwf	___lwdiv@divisor
  1245     06C1  120A  118A  200D  120A  118A  	fcall	stringdir
  1246     06C6  00F1               	movwf	___lwdiv@divisor+1
  1247     06C7  0829               	movf	sprintf@val+1,w
  1248     06C8  00F3               	movwf	___lwdiv@dividend+1
  1249     06C9  0828               	movf	sprintf@val,w
  1250     06CA  00F2               	movwf	___lwdiv@dividend
  1251     06CB  120A  118A  255D  120A  118A  	fcall	___lwdiv
  1252     06D0  0871               	movf	?___lwdiv+1,w
  1253     06D1  00FB               	movwf	___lwmod@dividend+1
  1254     06D2  0870               	movf	?___lwdiv,w
  1255     06D3  00FA               	movwf	___lwmod@dividend
  1256     06D4  120A  118A  24E1  120A  118A  	fcall	___lwmod
  1257     06D9  0878               	movf	?___lwmod,w
  1258     06DA  3E30               	addlw	48
  1259     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1260     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1261     06DD  00AC               	movwf	sprintf@c
  1262     06DE                     l1263:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1265     06DE  082B               	movf	sprintf@sp,w
  1266     06DF  0084               	movwf	4
  1267     06E0  082C               	movf	sprintf@c,w
  1268     06E1  1383               	bcf	3,7	;select IRP bank0
  1269     06E2  0080               	movwf	0
  1270     06E3                     l1265:
  1271     06E3  3001               	movlw	1
  1272     06E4  00A3               	movwf	??_sprintf
  1273     06E5  0823               	movf	??_sprintf,w
  1274     06E6  07AB               	addwf	sprintf@sp,f
  1275     06E7                     l1267:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1278     06E7  30FF               	movlw	255
  1279     06E8  00A3               	movwf	??_sprintf
  1280     06E9  0823               	movf	??_sprintf,w
  1281     06EA  07AA               	addwf	sprintf@prec,f
  1282     06EB  0A2A               	incf	sprintf@prec,w
  1283     06EC  1D03               	btfss	3,2
  1284     06ED  2EEF               	goto	u631
  1285     06EE  2EF0               	goto	u630
  1286     06EF                     u631:
  1287     06EF  2EB2               	goto	l1261
  1288     06F0                     u630:
  1289     06F0                     l1269:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1292     06F0  3001               	movlw	1
  1293     06F1  07A0               	addwf	sprintf@f,f
  1294     06F2  30FF               	movlw	-1
  1295     06F3  0720               	addwf	sprintf@f,w
  1296     06F4  0084               	movwf	4
  1297     06F5  120A  118A  200D  120A  118A  	fcall	stringdir
  1298     06FA  00AC               	movwf	sprintf@c
  1299     06FB  082C               	movf	sprintf@c,w
  1300     06FC  1D03               	btfss	3,2
  1301     06FD  2EFF               	goto	u641
  1302     06FE  2F00               	goto	u640
  1303     06FF                     u641:
  1304     06FF  2E4A               	goto	l1229
  1305     0700                     u640:
  1306     0700                     l1271:
  1307                           
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1309     0700  082B               	movf	sprintf@sp,w
  1310     0701  0084               	movwf	4
  1311     0702  1383               	bcf	3,7	;select IRP bank0
  1312     0703  0180               	clrf	0
  1313     0704                     l259:
  1314     0704  0008               	return
  1315     0705                     __end_of_sprintf:
  1316                           
  1317                           	psect	text2
  1318     04E1                     __ptext2:	
  1319 ;; *************** function ___lwmod *****************
  1320 ;; Defined at:
  1321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  divisor         2    8[COMMON] unsigned int 
  1324 ;;  dividend        2   10[COMMON] unsigned int 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  counter         1   13[COMMON] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  2    8[COMMON] unsigned int 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         4       0       0       0       0
  1337 ;;      Locals:         1       0       0       0       0
  1338 ;;      Temps:          1       0       0       0       0
  1339 ;;      Totals:         6       0       0       0       0
  1340 ;;Total ram usage:        6 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_sprintf
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     04E1                     ___lwmod:	
  1350                           ;psect for function ___lwmod
  1351                           
  1352     04E1                     l1137:	
  1353                           ;incstack = 0
  1354                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1355                           
  1356     04E1  0878               	movf	___lwmod@divisor,w
  1357     04E2  0479               	iorwf	___lwmod@divisor+1,w
  1358     04E3  1903               	btfsc	3,2
  1359     04E4  2CE6               	goto	u471
  1360     04E5  2CE7               	goto	u470
  1361     04E6                     u471:
  1362     04E6  2D16               	goto	l1155
  1363     04E7                     u470:
  1364     04E7                     l1139:
  1365     04E7  01FD               	clrf	___lwmod@counter
  1366     04E8  0AFD               	incf	___lwmod@counter,f
  1367     04E9  2CF5               	goto	l1145
  1368     04EA                     l1141:
  1369     04EA  3001               	movlw	1
  1370     04EB                     u485:
  1371     04EB  1003               	clrc
  1372     04EC  0DF8               	rlf	___lwmod@divisor,f
  1373     04ED  0DF9               	rlf	___lwmod@divisor+1,f
  1374     04EE  3EFF               	addlw	-1
  1375     04EF  1D03               	skipz
  1376     04F0  2CEB               	goto	u485
  1377     04F1                     l1143:
  1378     04F1  3001               	movlw	1
  1379     04F2  00FC               	movwf	??___lwmod
  1380     04F3  087C               	movf	??___lwmod,w
  1381     04F4  07FD               	addwf	___lwmod@counter,f
  1382     04F5                     l1145:
  1383     04F5  1FF9               	btfss	___lwmod@divisor+1,7
  1384     04F6  2CF8               	goto	u491
  1385     04F7  2CF9               	goto	u490
  1386     04F8                     u491:
  1387     04F8  2CEA               	goto	l1141
  1388     04F9                     u490:
  1389     04F9                     l1147:
  1390     04F9  0879               	movf	___lwmod@divisor+1,w
  1391     04FA  027B               	subwf	___lwmod@dividend+1,w
  1392     04FB  1D03               	skipz
  1393     04FC  2CFF               	goto	u505
  1394     04FD  0878               	movf	___lwmod@divisor,w
  1395     04FE  027A               	subwf	___lwmod@dividend,w
  1396     04FF                     u505:
  1397     04FF  1C03               	skipc
  1398     0500  2D02               	goto	u501
  1399     0501  2D03               	goto	u500
  1400     0502                     u501:
  1401     0502  2D09               	goto	l1151
  1402     0503                     u500:
  1403     0503                     l1149:
  1404     0503  0878               	movf	___lwmod@divisor,w
  1405     0504  02FA               	subwf	___lwmod@dividend,f
  1406     0505  0879               	movf	___lwmod@divisor+1,w
  1407     0506  1C03               	skipc
  1408     0507  03FB               	decf	___lwmod@dividend+1,f
  1409     0508  02FB               	subwf	___lwmod@dividend+1,f
  1410     0509                     l1151:
  1411     0509  3001               	movlw	1
  1412     050A                     u515:
  1413     050A  1003               	clrc
  1414     050B  0CF9               	rrf	___lwmod@divisor+1,f
  1415     050C  0CF8               	rrf	___lwmod@divisor,f
  1416     050D  3EFF               	addlw	-1
  1417     050E  1D03               	skipz
  1418     050F  2D0A               	goto	u515
  1419     0510                     l1153:
  1420     0510  3001               	movlw	1
  1421     0511  02FD               	subwf	___lwmod@counter,f
  1422     0512  1D03               	btfss	3,2
  1423     0513  2D15               	goto	u521
  1424     0514  2D16               	goto	u520
  1425     0515                     u521:
  1426     0515  2CF9               	goto	l1147
  1427     0516                     u520:
  1428     0516                     l1155:
  1429     0516  087B               	movf	___lwmod@dividend+1,w
  1430     0517  00F9               	movwf	?___lwmod+1
  1431     0518  087A               	movf	___lwmod@dividend,w
  1432     0519  00F8               	movwf	?___lwmod
  1433     051A                     l545:
  1434     051A  0008               	return
  1435     051B                     __end_of___lwmod:
  1436                           
  1437                           	psect	text3
  1438     055D                     __ptext3:	
  1439 ;; *************** function ___lwdiv *****************
  1440 ;; Defined at:
  1441 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  divisor         2    0[COMMON] unsigned int 
  1444 ;;  dividend        2    2[COMMON] unsigned int 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  quotient        2    5[COMMON] unsigned int 
  1447 ;;  counter         1    7[COMMON] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  2    0[COMMON] unsigned int 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2, status,0
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1457 ;;      Params:         4       0       0       0       0
  1458 ;;      Locals:         3       0       0       0       0
  1459 ;;      Temps:          1       0       0       0       0
  1460 ;;      Totals:         8       0       0       0       0
  1461 ;;Total ram usage:        8 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_sprintf
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470     055D                     ___lwdiv:	
  1471                           ;psect for function ___lwdiv
  1472                           
  1473     055D                     l1111:	
  1474                           ;incstack = 0
  1475                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1476                           
  1477     055D  01F5               	clrf	___lwdiv@quotient
  1478     055E  01F6               	clrf	___lwdiv@quotient+1
  1479     055F                     l1113:
  1480     055F  0870               	movf	___lwdiv@divisor,w
  1481     0560  0471               	iorwf	___lwdiv@divisor+1,w
  1482     0561  1903               	btfsc	3,2
  1483     0562  2D64               	goto	u401
  1484     0563  2D65               	goto	u400
  1485     0564                     u401:
  1486     0564  2D9C               	goto	l1133
  1487     0565                     u400:
  1488     0565                     l1115:
  1489     0565  01F7               	clrf	___lwdiv@counter
  1490     0566  0AF7               	incf	___lwdiv@counter,f
  1491     0567  2D73               	goto	l1121
  1492     0568                     l1117:
  1493     0568  3001               	movlw	1
  1494     0569                     u415:
  1495     0569  1003               	clrc
  1496     056A  0DF0               	rlf	___lwdiv@divisor,f
  1497     056B  0DF1               	rlf	___lwdiv@divisor+1,f
  1498     056C  3EFF               	addlw	-1
  1499     056D  1D03               	skipz
  1500     056E  2D69               	goto	u415
  1501     056F                     l1119:
  1502     056F  3001               	movlw	1
  1503     0570  00F4               	movwf	??___lwdiv
  1504     0571  0874               	movf	??___lwdiv,w
  1505     0572  07F7               	addwf	___lwdiv@counter,f
  1506     0573                     l1121:
  1507     0573  1FF1               	btfss	___lwdiv@divisor+1,7
  1508     0574  2D76               	goto	u421
  1509     0575  2D77               	goto	u420
  1510     0576                     u421:
  1511     0576  2D68               	goto	l1117
  1512     0577                     u420:
  1513     0577                     l1123:
  1514     0577  3001               	movlw	1
  1515     0578                     u435:
  1516     0578  1003               	clrc
  1517     0579  0DF5               	rlf	___lwdiv@quotient,f
  1518     057A  0DF6               	rlf	___lwdiv@quotient+1,f
  1519     057B  3EFF               	addlw	-1
  1520     057C  1D03               	skipz
  1521     057D  2D78               	goto	u435
  1522     057E  0871               	movf	___lwdiv@divisor+1,w
  1523     057F  0273               	subwf	___lwdiv@dividend+1,w
  1524     0580  1D03               	skipz
  1525     0581  2D84               	goto	u445
  1526     0582  0870               	movf	___lwdiv@divisor,w
  1527     0583  0272               	subwf	___lwdiv@dividend,w
  1528     0584                     u445:
  1529     0584  1C03               	skipc
  1530     0585  2D87               	goto	u441
  1531     0586  2D88               	goto	u440
  1532     0587                     u441:
  1533     0587  2D8F               	goto	l1129
  1534     0588                     u440:
  1535     0588                     l1125:
  1536     0588  0870               	movf	___lwdiv@divisor,w
  1537     0589  02F2               	subwf	___lwdiv@dividend,f
  1538     058A  0871               	movf	___lwdiv@divisor+1,w
  1539     058B  1C03               	skipc
  1540     058C  03F3               	decf	___lwdiv@dividend+1,f
  1541     058D  02F3               	subwf	___lwdiv@dividend+1,f
  1542     058E                     l1127:
  1543     058E  1475               	bsf	___lwdiv@quotient,0
  1544     058F                     l1129:
  1545     058F  3001               	movlw	1
  1546     0590                     u455:
  1547     0590  1003               	clrc
  1548     0591  0CF1               	rrf	___lwdiv@divisor+1,f
  1549     0592  0CF0               	rrf	___lwdiv@divisor,f
  1550     0593  3EFF               	addlw	-1
  1551     0594  1D03               	skipz
  1552     0595  2D90               	goto	u455
  1553     0596                     l1131:
  1554     0596  3001               	movlw	1
  1555     0597  02F7               	subwf	___lwdiv@counter,f
  1556     0598  1D03               	btfss	3,2
  1557     0599  2D9B               	goto	u461
  1558     059A  2D9C               	goto	u460
  1559     059B                     u461:
  1560     059B  2D77               	goto	l1123
  1561     059C                     u460:
  1562     059C                     l1133:
  1563     059C  0876               	movf	___lwdiv@quotient+1,w
  1564     059D  00F1               	movwf	?___lwdiv+1
  1565     059E  0875               	movf	___lwdiv@quotient,w
  1566     059F  00F0               	movwf	?___lwdiv
  1567     05A0                     l535:
  1568     05A0  0008               	return
  1569     05A1                     __end_of___lwdiv:
  1570                           
  1571                           	psect	text4
  1572     0414                     __ptext4:	
  1573 ;; *************** function _spiWrite *****************
  1574 ;; Defined at:
  1575 ;;		line 34 in file "../Lab3slave.X/SPI.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  dat             1    wreg     unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  dat             1    0[COMMON] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         1       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0
  1592 ;;      Totals:         1       0       0       0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602     0414                     _spiWrite:	
  1603                           ;psect for function _spiWrite
  1604                           
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _spiWrite: [wreg]
  1608                           ;spiWrite@dat stored from wreg
  1609     0414  00F0               	movwf	spiWrite@dat
  1610     0415                     l1159:
  1611                           
  1612                           ;../Lab3slave.X/SPI.c: 34: void spiWrite(char dat);../Lab3slave.X/SPI.c: 35: {;../Lab3sl
      +                          ave.X/SPI.c: 36:     SSPBUF = dat;
  1613     0415  0870               	movf	spiWrite@dat,w
  1614     0416  1283               	bcf	3,5	;RP0=0, select bank0
  1615     0417  1303               	bcf	3,6	;RP1=0, select bank0
  1616     0418  0093               	movwf	19	;volatile
  1617     0419                     l26:
  1618     0419  0008               	return
  1619     041A                     __end_of_spiWrite:
  1620                           
  1621                           	psect	text5
  1622     0421                     __ptext5:	
  1623 ;; *************** function _spiRead *****************
  1624 ;; Defined at:
  1625 ;;		line 47 in file "../Lab3slave.X/SPI.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      unsigned char 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 1
  1646 ;; This function calls:
  1647 ;;		_spiReceiveWait
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653     0421                     _spiRead:	
  1654                           ;psect for function _spiRead
  1655                           
  1656     0421                     l1161:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1659                           
  1660                           
  1661                           ;../Lab3slave.X/SPI.c: 49:     spiReceiveWait();
  1662     0421  120A  118A  241A  120A  118A  	fcall	_spiReceiveWait
  1663     0426                     l1163:
  1664                           
  1665                           ;../Lab3slave.X/SPI.c: 50:     return(SSPBUF);
  1666     0426  1283               	bcf	3,5	;RP0=0, select bank0
  1667     0427  1303               	bcf	3,6	;RP1=0, select bank0
  1668     0428  0813               	movf	19,w	;volatile
  1669     0429                     l34:
  1670     0429  0008               	return
  1671     042A                     __end_of_spiRead:
  1672                           
  1673                           	psect	text6
  1674     041A                     __ptext6:	
  1675 ;; *************** function _spiReceiveWait *****************
  1676 ;; Defined at:
  1677 ;;		line 29 in file "../Lab3slave.X/SPI.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		None
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0
  1694 ;;      Totals:         0       0       0       0       0
  1695 ;;Total ram usage:        0 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_spiRead
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704     041A                     _spiReceiveWait:	
  1705                           ;psect for function _spiReceiveWait
  1706                           
  1707     041A                     l1079:	
  1708                           ;incstack = 0
  1709                           ; Regs used in _spiReceiveWait: []
  1710                           
  1711     041A                     l20:	
  1712                           ;../Lab3slave.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1713                           
  1714     041A  1683               	bsf	3,5	;RP0=1, select bank1
  1715     041B  1303               	bcf	3,6	;RP1=0, select bank1
  1716     041C  1C14               	btfss	20,0	;volatile
  1717     041D  2C1F               	goto	u381
  1718     041E  2C20               	goto	u380
  1719     041F                     u381:
  1720     041F  2C1A               	goto	l20
  1721     0420                     u380:
  1722     0420                     l23:
  1723     0420  0008               	return
  1724     0421                     __end_of_spiReceiveWait:
  1725                           
  1726                           	psect	text7
  1727     0489                     __ptext7:	
  1728 ;; *************** function _setup *****************
  1729 ;; Defined at:
  1730 ;;		line 110 in file "Postlab3master.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 1
  1751 ;; This function calls:
  1752 ;;		_spiInit
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758     0489                     _setup:	
  1759                           ;psect for function _setup
  1760                           
  1761     0489                     l1207:	
  1762                           ;incstack = 0
  1763                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1764                           
  1765                           
  1766                           ;Postlab3master.c: 111:     ANSEL = 0;
  1767     0489  1683               	bsf	3,5	;RP0=1, select bank3
  1768     048A  1703               	bsf	3,6	;RP1=1, select bank3
  1769     048B  0188               	clrf	8	;volatile
  1770                           
  1771                           ;Postlab3master.c: 112:     ANSELH = 0;
  1772     048C  0189               	clrf	9	;volatile
  1773     048D                     l1209:
  1774                           
  1775                           ;Postlab3master.c: 113:     TRISC1 = 0;
  1776     048D  1683               	bsf	3,5	;RP0=1, select bank1
  1777     048E  1303               	bcf	3,6	;RP1=0, select bank1
  1778     048F  1087               	bcf	7,1	;volatile
  1779     0490                     l1211:
  1780                           
  1781                           ;Postlab3master.c: 114:     TRISC2 = 0;
  1782     0490  1107               	bcf	7,2	;volatile
  1783     0491                     l1213:
  1784                           
  1785                           ;Postlab3master.c: 115:     TRISC6 = 0;
  1786     0491  1307               	bcf	7,6	;volatile
  1787     0492                     l1215:
  1788                           
  1789                           ;Postlab3master.c: 116:     TRISC7 = 0;
  1790     0492  1387               	bcf	7,7	;volatile
  1791                           
  1792                           ;Postlab3master.c: 117:     TRISA =0;
  1793     0493  0185               	clrf	5	;volatile
  1794                           
  1795                           ;Postlab3master.c: 118:     TRISB = 0;
  1796     0494  0186               	clrf	6	;volatile
  1797                           
  1798                           ;Postlab3master.c: 119:     TRISD = 0;
  1799     0495  0188               	clrf	8	;volatile
  1800                           
  1801                           ;Postlab3master.c: 120:     PORTA = 0;
  1802     0496  1283               	bcf	3,5	;RP0=0, select bank0
  1803     0497  1303               	bcf	3,6	;RP1=0, select bank0
  1804     0498  0185               	clrf	5	;volatile
  1805                           
  1806                           ;Postlab3master.c: 121:     PORTB = 0;
  1807     0499  0186               	clrf	6	;volatile
  1808                           
  1809                           ;Postlab3master.c: 122:     PORTD = 0;
  1810     049A  0188               	clrf	8	;volatile
  1811     049B                     l1217:
  1812                           
  1813                           ;Postlab3master.c: 123:     PORTCbits.RC1 = 1;
  1814     049B  1487               	bsf	7,1	;volatile
  1815     049C                     l1219:
  1816                           
  1817                           ;Postlab3master.c: 124:     PORTCbits.RC2 = 1;
  1818     049C  1507               	bsf	7,2	;volatile
  1819     049D                     l1221:
  1820                           
  1821                           ;Postlab3master.c: 125:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLO
      +                          CK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1822     049D  01F0               	clrf	spiInit@sDataSample
  1823     049E  01F1               	clrf	spiInit@sClockIdle
  1824     049F  01F2               	clrf	spiInit@sTransmitEdge
  1825     04A0  3020               	movlw	32
  1826     04A1  120A  118A  2437  120A  118A  	fcall	_spiInit
  1827     04A6                     l1223:
  1828                           
  1829                           ;Postlab3master.c: 127:     OSCCONbits.IRCF = 0b0111;
  1830     04A6  3070               	movlw	112
  1831     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  1832     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  1833     04A9  048F               	iorwf	15,f	;volatile
  1834     04AA                     l1225:
  1835                           
  1836                           ;Postlab3master.c: 128:     OSCCONbits.SCS = 1;
  1837     04AA  140F               	bsf	15,0	;volatile
  1838     04AB                     l152:
  1839     04AB  0008               	return
  1840     04AC                     __end_of_setup:
  1841                           
  1842                           	psect	text8
  1843     0437                     __ptext8:	
  1844 ;; *************** function _spiInit *****************
  1845 ;; Defined at:
  1846 ;;		line 12 in file "../Lab3slave.X/SPI.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  sType           1    wreg     enum E1292
  1849 ;;  sDataSample     1    0[COMMON] enum E1300
  1850 ;;  sClockIdle      1    1[COMMON] enum E1304
  1851 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  sType           1    3[COMMON] enum E1292
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         3       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0
  1865 ;;      Temps:          0       0       0       0       0
  1866 ;;      Totals:         4       0       0       0       0
  1867 ;;Total ram usage:        4 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_setup
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876     0437                     _spiInit:	
  1877                           ;psect for function _spiInit
  1878                           
  1879                           
  1880                           ;incstack = 0
  1881                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1882                           ;spiInit@sType stored from wreg
  1883     0437  00F3               	movwf	spiInit@sType
  1884     0438                     l1069:
  1885                           
  1886                           ;../Lab3slave.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi
      +                          _Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../Lab3slave.X/SPI.c: 13: {;../
      +                          Lab3slave.X/SPI.c: 14:     TRISC5 = 0;
  1887     0438  1683               	bsf	3,5	;RP0=1, select bank1
  1888     0439  1303               	bcf	3,6	;RP1=0, select bank1
  1889     043A  1287               	bcf	7,5	;volatile
  1890                           
  1891                           ;../Lab3slave.X/SPI.c: 15:     if(sType & 0b00000100)
  1892     043B  1D73               	btfss	spiInit@sType,2
  1893     043C  2C3E               	goto	u371
  1894     043D  2C3F               	goto	u370
  1895     043E                     u371:
  1896     043E  2C43               	goto	l1075
  1897     043F                     u370:
  1898     043F                     l1071:
  1899                           
  1900                           ;../Lab3slave.X/SPI.c: 16:     {;../Lab3slave.X/SPI.c: 17:         SSPSTAT = sTransmitEd
      +                          ge;
  1901     043F  0872               	movf	spiInit@sTransmitEdge,w
  1902     0440  0094               	movwf	20	;volatile
  1903     0441                     l1073:
  1904                           
  1905                           ;../Lab3slave.X/SPI.c: 18:         TRISC3 = 1;
  1906     0441  1587               	bsf	7,3	;volatile
  1907                           
  1908                           ;../Lab3slave.X/SPI.c: 19:     }
  1909     0442  2C47               	goto	l16
  1910     0443                     l1075:
  1911                           
  1912                           ;../Lab3slave.X/SPI.c: 21:     {;../Lab3slave.X/SPI.c: 22:         SSPSTAT = sDataSample
      +                           | sTransmitEdge;
  1913     0443  0870               	movf	spiInit@sDataSample,w
  1914     0444  0472               	iorwf	spiInit@sTransmitEdge,w
  1915     0445  0094               	movwf	20	;volatile
  1916     0446                     l1077:
  1917                           
  1918                           ;../Lab3slave.X/SPI.c: 23:         TRISC3 = 0;
  1919     0446  1187               	bcf	7,3	;volatile
  1920     0447                     l16:	
  1921                           ;../Lab3slave.X/SPI.c: 24:     }
  1922                           
  1923                           
  1924                           ;../Lab3slave.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
  1925     0447  0873               	movf	spiInit@sType,w
  1926     0448  0471               	iorwf	spiInit@sClockIdle,w
  1927     0449  1283               	bcf	3,5	;RP0=0, select bank0
  1928     044A  1303               	bcf	3,6	;RP1=0, select bank0
  1929     044B  0094               	movwf	20	;volatile
  1930     044C                     l17:
  1931     044C  0008               	return
  1932     044D                     __end_of_spiInit:
  1933                           
  1934                           	psect	text9
  1935     051B                     __ptext9:	
  1936 ;; *************** function _Lcd_Write_String *****************
  1937 ;; Defined at:
  1938 ;;		line 98 in file "LCD.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  a               2    5[COMMON] PTR unsigned char 
  1941 ;;		 -> main@s2(20), STR_3(5), main@s(20), STR_1(5), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  i               2   10[COMMON] int 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         2       0       0       0       0
  1954 ;;      Locals:         2       0       0       0       0
  1955 ;;      Temps:          3       0       0       0       0
  1956 ;;      Totals:         7       0       0       0       0
  1957 ;;Total ram usage:        7 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 2
  1960 ;; This function calls:
  1961 ;;		_Lcd_Write_Char
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967     051B                     _Lcd_Write_String:	
  1968                           ;psect for function _Lcd_Write_String
  1969                           
  1970     051B                     l1199:	
  1971                           ;incstack = 0
  1972                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1973                           
  1974                           
  1975                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1976     051B  01FA               	clrf	Lcd_Write_String@i
  1977     051C  01FB               	clrf	Lcd_Write_String@i+1
  1978     051D  2D40               	goto	l1205
  1979     051E                     l1201:
  1980                           
  1981                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  1982     051E  087A               	movf	Lcd_Write_String@i,w
  1983     051F  0775               	addwf	Lcd_Write_String@a,w
  1984     0520  00F8               	movwf	??_Lcd_Write_String+1
  1985     0521  0876               	movf	Lcd_Write_String@a+1,w
  1986     0522  00F7               	movwf	??_Lcd_Write_String
  1987     0523  1803               	skipnc
  1988     0524  0AF7               	incf	??_Lcd_Write_String,f
  1989     0525  1FFA               	btfss	Lcd_Write_String@i,7
  1990     0526  2D28               	goto	u570
  1991     0527  03F7               	decf	??_Lcd_Write_String,f
  1992     0528                     u570:
  1993     0528  0877               	movf	??_Lcd_Write_String,w
  1994     0529  00F9               	movwf	??_Lcd_Write_String+2
  1995     052A  0879               	movf	??_Lcd_Write_String+2,w
  1996     052B  1283               	bcf	3,5	;RP0=0, select bank0
  1997     052C  1303               	bcf	3,6	;RP1=0, select bank0
  1998     052D  00FF               	movwf	btemp+1
  1999     052E  0878               	movf	??_Lcd_Write_String+1,w
  2000     052F  0084               	movwf	4
  2001     0530  120A  118A  2003  120A  118A  	fcall	stringtab
  2002     0535  120A  118A  24AC  120A  118A  	fcall	_Lcd_Write_Char
  2003     053A                     l1203:
  2004     053A  3001               	movlw	1
  2005     053B  07FA               	addwf	Lcd_Write_String@i,f
  2006     053C  1803               	skipnc
  2007     053D  0AFB               	incf	Lcd_Write_String@i+1,f
  2008     053E  3000               	movlw	0
  2009     053F  07FB               	addwf	Lcd_Write_String@i+1,f
  2010     0540                     l1205:
  2011     0540  087A               	movf	Lcd_Write_String@i,w
  2012     0541  0775               	addwf	Lcd_Write_String@a,w
  2013     0542  00F8               	movwf	??_Lcd_Write_String+1
  2014     0543  0876               	movf	Lcd_Write_String@a+1,w
  2015     0544  00F7               	movwf	??_Lcd_Write_String
  2016     0545  1803               	skipnc
  2017     0546  0AF7               	incf	??_Lcd_Write_String,f
  2018     0547  1FFA               	btfss	Lcd_Write_String@i,7
  2019     0548  2D4A               	goto	u580
  2020     0549  03F7               	decf	??_Lcd_Write_String,f
  2021     054A                     u580:
  2022     054A  0877               	movf	??_Lcd_Write_String,w
  2023     054B  00F9               	movwf	??_Lcd_Write_String+2
  2024     054C  0879               	movf	??_Lcd_Write_String+2,w
  2025     054D  1283               	bcf	3,5	;RP0=0, select bank0
  2026     054E  1303               	bcf	3,6	;RP1=0, select bank0
  2027     054F  00FF               	movwf	btemp+1
  2028     0550  0878               	movf	??_Lcd_Write_String+1,w
  2029     0551  0084               	movwf	4
  2030     0552  120A  118A  2003  120A  118A  	fcall	stringtab
  2031     0557  3A00               	xorlw	0
  2032     0558  1D03               	skipz
  2033     0559  2D5B               	goto	u591
  2034     055A  2D5C               	goto	u590
  2035     055B                     u591:
  2036     055B  2D1E               	goto	l1201
  2037     055C                     u590:
  2038     055C                     l83:
  2039     055C  0008               	return
  2040     055D                     __end_of_Lcd_Write_String:
  2041                           
  2042                           	psect	text10
  2043     04AC                     __ptext10:	
  2044 ;; *************** function _Lcd_Write_Char *****************
  2045 ;; Defined at:
  2046 ;;		line 83 in file "LCD.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  a               1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  a               1    4[COMMON] unsigned char 
  2051 ;;  y               1    3[COMMON] unsigned char 
  2052 ;;  temp            1    2[COMMON] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       0       0       0       0
  2063 ;;      Locals:         3       0       0       0       0
  2064 ;;      Temps:          1       0       0       0       0
  2065 ;;      Totals:         4       0       0       0       0
  2066 ;;Total ram usage:        4 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 1
  2069 ;; This function calls:
  2070 ;;		_Lcd_Port
  2071 ;; This function is called by:
  2072 ;;		_Lcd_Write_String
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     04AC                     _Lcd_Write_Char:	
  2077                           ;psect for function _Lcd_Write_Char
  2078                           
  2079                           
  2080                           ;incstack = 0
  2081                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2082                           ;Lcd_Write_Char@a stored from wreg
  2083     04AC  00F4               	movwf	Lcd_Write_Char@a
  2084     04AD                     l1091:
  2085                           
  2086                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2087     04AD  0874               	movf	Lcd_Write_Char@a,w
  2088     04AE  390F               	andlw	15
  2089     04AF  00F2               	movwf	Lcd_Write_Char@temp
  2090                           
  2091                           ;LCD.c: 86:     y = a & 0xF0;
  2092     04B0  0874               	movf	Lcd_Write_Char@a,w
  2093     04B1  39F0               	andlw	240
  2094     04B2  00F3               	movwf	Lcd_Write_Char@y
  2095     04B3                     l1093:
  2096                           
  2097                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2098     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  2099     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  2100     04B5  1707               	bsf	7,6	;volatile
  2101     04B6                     l1095:
  2102                           
  2103                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2104     04B6  0873               	movf	Lcd_Write_Char@y,w
  2105     04B7  00F1               	movwf	??_Lcd_Write_Char
  2106     04B8  3004               	movlw	4
  2107     04B9                     u395:
  2108     04B9  1003               	clrc
  2109     04BA  0CF1               	rrf	??_Lcd_Write_Char,f
  2110     04BB  3EFF               	addlw	-1
  2111     04BC  1D03               	skipz
  2112     04BD  2CB9               	goto	u395
  2113     04BE  0871               	movf	??_Lcd_Write_Char,w
  2114     04BF  120A  118A  2467  120A  118A  	fcall	_Lcd_Port
  2115     04C4                     l1097:
  2116                           
  2117                           ;LCD.c: 89:     RC7 = 1;
  2118     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2119     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2120     04C6  1787               	bsf	7,7	;volatile
  2121     04C7                     l1099:
  2122                           
  2123                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2124     04C7  301A               	movlw	26
  2125     04C8  00F1               	movwf	??_Lcd_Write_Char
  2126     04C9                     u727:
  2127     04C9  0BF1               	decfsz	??_Lcd_Write_Char,f
  2128     04CA  2CC9               	goto	u727
  2129     04CB  0000               	nop
  2130     04CC                     l1101:
  2131                           
  2132                           ;LCD.c: 91:     RC7 = 0;
  2133     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2134     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2135     04CE  1387               	bcf	7,7	;volatile
  2136     04CF                     l1103:
  2137                           
  2138                           ;LCD.c: 92:     Lcd_Port(temp);
  2139     04CF  0872               	movf	Lcd_Write_Char@temp,w
  2140     04D0  120A  118A  2467  120A  118A  	fcall	_Lcd_Port
  2141     04D5                     l1105:
  2142                           
  2143                           ;LCD.c: 93:     RC7 = 1;
  2144     04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2145     04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2146     04D7  1787               	bsf	7,7	;volatile
  2147     04D8                     l1107:
  2148                           
  2149                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2150     04D8  301A               	movlw	26
  2151     04D9  00F1               	movwf	??_Lcd_Write_Char
  2152     04DA                     u737:
  2153     04DA  0BF1               	decfsz	??_Lcd_Write_Char,f
  2154     04DB  2CDA               	goto	u737
  2155     04DC  0000               	nop
  2156     04DD                     l1109:
  2157                           
  2158                           ;LCD.c: 95:     RC7 = 0;
  2159     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2160     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2161     04DF  1387               	bcf	7,7	;volatile
  2162     04E0                     l77:
  2163     04E0  0008               	return
  2164     04E1                     __end_of_Lcd_Write_Char:
  2165                           
  2166                           	psect	text11
  2167     05A1                     __ptext11:	
  2168 ;; *************** function _Lcd_Set_Cursor *****************
  2169 ;; Defined at:
  2170 ;;		line 48 in file "LCD.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  a               1    wreg     unsigned char 
  2173 ;;  b               1    4[COMMON] unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  a               1    6[COMMON] unsigned char 
  2176 ;;  temp            1    9[COMMON] unsigned char 
  2177 ;;  y               1    8[COMMON] unsigned char 
  2178 ;;  z               1    7[COMMON] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0, pclath, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2188 ;;      Params:         1       0       0       0       0
  2189 ;;      Locals:         4       0       0       0       0
  2190 ;;      Temps:          1       0       0       0       0
  2191 ;;      Totals:         6       0       0       0       0
  2192 ;;Total ram usage:        6 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 2
  2195 ;; This function calls:
  2196 ;;		_Lcd_Cmd
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202     05A1                     _Lcd_Set_Cursor:	
  2203                           ;psect for function _Lcd_Set_Cursor
  2204                           
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2208                           ;Lcd_Set_Cursor@a stored from wreg
  2209     05A1  00F6               	movwf	Lcd_Set_Cursor@a
  2210     05A2                     l1169:
  2211                           
  2212                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2213     05A2  0376               	decf	Lcd_Set_Cursor@a,w
  2214     05A3  1D03               	btfss	3,2
  2215     05A4  2DA6               	goto	u531
  2216     05A5  2DA7               	goto	u530
  2217     05A6                     u531:
  2218     05A6  2DC4               	goto	l1179
  2219     05A7                     u530:
  2220     05A7                     l1171:
  2221                           
  2222                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2223     05A7  0874               	movf	Lcd_Set_Cursor@b,w
  2224     05A8  3E7F               	addlw	127
  2225     05A9  00F9               	movwf	Lcd_Set_Cursor@temp
  2226                           
  2227                           ;LCD.c: 52:         z = temp >> 4;
  2228     05AA  0879               	movf	Lcd_Set_Cursor@temp,w
  2229     05AB  00F5               	movwf	??_Lcd_Set_Cursor
  2230     05AC  3004               	movlw	4
  2231     05AD                     u545:
  2232     05AD  1003               	clrc
  2233     05AE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2234     05AF  3EFF               	addlw	-1
  2235     05B0  1D03               	skipz
  2236     05B1  2DAD               	goto	u545
  2237     05B2  0875               	movf	??_Lcd_Set_Cursor,w
  2238     05B3  00F7               	movwf	Lcd_Set_Cursor@z
  2239     05B4                     l1173:
  2240                           
  2241                           ;LCD.c: 53:         y = temp & 0x0F;
  2242     05B4  0879               	movf	Lcd_Set_Cursor@temp,w
  2243     05B5  390F               	andlw	15
  2244     05B6  00F8               	movwf	Lcd_Set_Cursor@y
  2245     05B7                     l1175:
  2246                           
  2247                           ;LCD.c: 54:         Lcd_Cmd(z);
  2248     05B7  0877               	movf	Lcd_Set_Cursor@z,w
  2249     05B8  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2250     05BD                     l1177:
  2251                           
  2252                           ;LCD.c: 55:         Lcd_Cmd(y);
  2253     05BD  0878               	movf	Lcd_Set_Cursor@y,w
  2254     05BE  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2255                           
  2256                           ;LCD.c: 56:     } else if (a == 2) {
  2257     05C3  2DE6               	goto	l71
  2258     05C4                     l1179:
  2259     05C4  3002               	movlw	2
  2260     05C5  0676               	xorwf	Lcd_Set_Cursor@a,w
  2261     05C6  1D03               	btfss	3,2
  2262     05C7  2DC9               	goto	u551
  2263     05C8  2DCA               	goto	u550
  2264     05C9                     u551:
  2265     05C9  2DE6               	goto	l71
  2266     05CA                     u550:
  2267     05CA                     l1181:
  2268                           
  2269                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2270     05CA  0874               	movf	Lcd_Set_Cursor@b,w
  2271     05CB  3EBF               	addlw	191
  2272     05CC  00F9               	movwf	Lcd_Set_Cursor@temp
  2273                           
  2274                           ;LCD.c: 58:         z = temp >> 4;
  2275     05CD  0879               	movf	Lcd_Set_Cursor@temp,w
  2276     05CE  00F5               	movwf	??_Lcd_Set_Cursor
  2277     05CF  3004               	movlw	4
  2278     05D0                     u565:
  2279     05D0  1003               	clrc
  2280     05D1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2281     05D2  3EFF               	addlw	-1
  2282     05D3  1D03               	skipz
  2283     05D4  2DD0               	goto	u565
  2284     05D5  0875               	movf	??_Lcd_Set_Cursor,w
  2285     05D6  00F7               	movwf	Lcd_Set_Cursor@z
  2286     05D7                     l1183:
  2287                           
  2288                           ;LCD.c: 59:         y = temp & 0x0F;
  2289     05D7  0879               	movf	Lcd_Set_Cursor@temp,w
  2290     05D8  390F               	andlw	15
  2291     05D9  00F8               	movwf	Lcd_Set_Cursor@y
  2292     05DA                     l1185:
  2293                           
  2294                           ;LCD.c: 60:         Lcd_Cmd(z);
  2295     05DA  0877               	movf	Lcd_Set_Cursor@z,w
  2296     05DB  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2297     05E0                     l1187:
  2298                           
  2299                           ;LCD.c: 61:         Lcd_Cmd(y);
  2300     05E0  0878               	movf	Lcd_Set_Cursor@y,w
  2301     05E1  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2302     05E6                     l71:
  2303     05E6  0008               	return
  2304     05E7                     __end_of_Lcd_Set_Cursor:
  2305                           
  2306                           	psect	text12
  2307     05E7                     __ptext12:	
  2308 ;; *************** function _Lcd_Init *****************
  2309 ;; Defined at:
  2310 ;;		line 65 in file "LCD.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0
  2326 ;;      Temps:          2       0       0       0       0
  2327 ;;      Totals:         2       0       0       0       0
  2328 ;;Total ram usage:        2 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 2
  2331 ;; This function calls:
  2332 ;;		_Lcd_Cmd
  2333 ;;		_Lcd_Port
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339     05E7                     _Lcd_Init:	
  2340                           ;psect for function _Lcd_Init
  2341                           
  2342     05E7                     l1189:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2345                           
  2346                           
  2347                           ;LCD.c: 66:     Lcd_Port(0x00);
  2348     05E7  3000               	movlw	0
  2349     05E8  120A  118A  2467  120A  118A  	fcall	_Lcd_Port
  2350     05ED                     l1191:
  2351                           
  2352                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2353     05ED  3034               	movlw	52
  2354     05EE  00F5               	movwf	??_Lcd_Init+1
  2355     05EF  30F1               	movlw	241
  2356     05F0  00F4               	movwf	??_Lcd_Init
  2357     05F1                     u747:
  2358     05F1  0BF4               	decfsz	??_Lcd_Init,f
  2359     05F2  2DF1               	goto	u747
  2360     05F3  0BF5               	decfsz	??_Lcd_Init+1,f
  2361     05F4  2DF1               	goto	u747
  2362     05F5  2DF6               	nop2
  2363     05F6                     l1193:
  2364                           
  2365                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2366     05F6  3003               	movlw	3
  2367     05F7  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2368                           
  2369                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2370     05FC  300D               	movlw	13
  2371     05FD  00F5               	movwf	??_Lcd_Init+1
  2372     05FE  30FB               	movlw	251
  2373     05FF  00F4               	movwf	??_Lcd_Init
  2374     0600                     u757:
  2375     0600  0BF4               	decfsz	??_Lcd_Init,f
  2376     0601  2E00               	goto	u757
  2377     0602  0BF5               	decfsz	??_Lcd_Init+1,f
  2378     0603  2E00               	goto	u757
  2379     0604  2E05               	nop2
  2380     0605                     l1195:
  2381                           
  2382                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2383     0605  3003               	movlw	3
  2384     0606  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2385     060B                     l1197:
  2386                           
  2387                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2388     060B  301D               	movlw	29
  2389     060C  00F5               	movwf	??_Lcd_Init+1
  2390     060D  3091               	movlw	145
  2391     060E  00F4               	movwf	??_Lcd_Init
  2392     060F                     u767:
  2393     060F  0BF4               	decfsz	??_Lcd_Init,f
  2394     0610  2E0F               	goto	u767
  2395     0611  0BF5               	decfsz	??_Lcd_Init+1,f
  2396     0612  2E0F               	goto	u767
  2397                           
  2398                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2399     0613  3003               	movlw	3
  2400     0614  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2401                           
  2402                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2403     0619  3002               	movlw	2
  2404     061A  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2405                           
  2406                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2407     061F  3002               	movlw	2
  2408     0620  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2409                           
  2410                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2411     0625  3008               	movlw	8
  2412     0626  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2413                           
  2414                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2415     062B  3000               	movlw	0
  2416     062C  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2417                           
  2418                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2419     0631  300C               	movlw	12
  2420     0632  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2421                           
  2422                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2423     0637  3000               	movlw	0
  2424     0638  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2425                           
  2426                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2427     063D  3006               	movlw	6
  2428     063E  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2429     0643                     l74:
  2430     0643  0008               	return
  2431     0644                     __end_of_Lcd_Init:
  2432                           
  2433                           	psect	text13
  2434     042A                     __ptext13:	
  2435 ;; *************** function _Lcd_Clear *****************
  2436 ;; Defined at:
  2437 ;;		line 43 in file "LCD.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, pclath, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2451 ;;      Params:         0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		_Lcd_Cmd
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465     042A                     _Lcd_Clear:	
  2466                           ;psect for function _Lcd_Clear
  2467                           
  2468     042A                     l1167:	
  2469                           ;incstack = 0
  2470                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2471                           
  2472                           
  2473                           ;LCD.c: 44:     Lcd_Cmd(0);
  2474     042A  3000               	movlw	0
  2475     042B  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2476                           
  2477                           ;LCD.c: 45:     Lcd_Cmd(1);
  2478     0430  3001               	movlw	1
  2479     0431  120A  118A  244D  120A  118A  	fcall	_Lcd_Cmd
  2480     0436                     l65:
  2481     0436  0008               	return
  2482     0437                     __end_of_Lcd_Clear:
  2483                           
  2484                           	psect	text14
  2485     044D                     __ptext14:	
  2486 ;; *************** function _Lcd_Cmd *****************
  2487 ;; Defined at:
  2488 ;;		line 35 in file "LCD.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  a               1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  a               1    3[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2502 ;;      Params:         0       0       0       0       0
  2503 ;;      Locals:         1       0       0       0       0
  2504 ;;      Temps:          2       0       0       0       0
  2505 ;;      Totals:         3       0       0       0       0
  2506 ;;Total ram usage:        3 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		_Lcd_Port
  2511 ;; This function is called by:
  2512 ;;		_Lcd_Clear
  2513 ;;		_Lcd_Set_Cursor
  2514 ;;		_Lcd_Init
  2515 ;;		_Lcd_Shift_Right
  2516 ;;		_Lcd_Shift_Left
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520     044D                     _Lcd_Cmd:	
  2521                           ;psect for function _Lcd_Cmd
  2522                           
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2526                           ;Lcd_Cmd@a stored from wreg
  2527     044D  00F3               	movwf	Lcd_Cmd@a
  2528     044E                     l1081:
  2529                           
  2530                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2531     044E  1283               	bcf	3,5	;RP0=0, select bank0
  2532     044F  1303               	bcf	3,6	;RP1=0, select bank0
  2533     0450  1307               	bcf	7,6	;volatile
  2534     0451                     l1083:
  2535                           
  2536                           ;LCD.c: 37:     Lcd_Port(a);
  2537     0451  0873               	movf	Lcd_Cmd@a,w
  2538     0452  120A  118A  2467  120A  118A  	fcall	_Lcd_Port
  2539     0457                     l1085:
  2540                           
  2541                           ;LCD.c: 38:     RC7 = 1;
  2542     0457  1283               	bcf	3,5	;RP0=0, select bank0
  2543     0458  1303               	bcf	3,6	;RP1=0, select bank0
  2544     0459  1787               	bsf	7,7	;volatile
  2545     045A                     l1087:
  2546                           
  2547                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2548     045A  300B               	movlw	11
  2549     045B  00F2               	movwf	??_Lcd_Cmd+1
  2550     045C  3062               	movlw	98
  2551     045D  00F1               	movwf	??_Lcd_Cmd
  2552     045E                     u777:
  2553     045E  0BF1               	decfsz	??_Lcd_Cmd,f
  2554     045F  2C5E               	goto	u777
  2555     0460  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2556     0461  2C5E               	goto	u777
  2557     0462  0000               	nop
  2558     0463                     l1089:
  2559                           
  2560                           ;LCD.c: 40:     RC7 = 0;
  2561     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2562     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2563     0465  1387               	bcf	7,7	;volatile
  2564     0466                     l62:
  2565     0466  0008               	return
  2566     0467                     __end_of_Lcd_Cmd:
  2567                           
  2568                           	psect	text15
  2569     0467                     __ptext15:	
  2570 ;; *************** function _Lcd_Port *****************
  2571 ;; Defined at:
  2572 ;;		line 13 in file "LCD.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  a               1    wreg     unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  a               1    0[COMMON] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         0       0       0       0       0
  2587 ;;      Locals:         1       0       0       0       0
  2588 ;;      Temps:          0       0       0       0       0
  2589 ;;      Totals:         1       0       0       0       0
  2590 ;;Total ram usage:        1 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_Lcd_Cmd
  2596 ;;		_Lcd_Init
  2597 ;;		_Lcd_Write_Char
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601     0467                     _Lcd_Port:	
  2602                           ;psect for function _Lcd_Port
  2603                           
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _Lcd_Port: [wreg]
  2607                           ;Lcd_Port@a stored from wreg
  2608     0467  00F0               	movwf	Lcd_Port@a
  2609     0468                     l1059:
  2610                           
  2611                           ;LCD.c: 14:     if (a & 1)
  2612     0468  1C70               	btfss	Lcd_Port@a,0
  2613     0469  2C6B               	goto	u331
  2614     046A  2C6C               	goto	u330
  2615     046B                     u331:
  2616     046B  2C70               	goto	l51
  2617     046C                     u330:
  2618     046C                     l1061:
  2619                           
  2620                           ;LCD.c: 15:         RD4 = 1;
  2621     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2622     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2623     046E  1608               	bsf	8,4	;volatile
  2624     046F  2C73               	goto	l52
  2625     0470                     l51:	
  2626                           ;LCD.c: 16:     else
  2627                           
  2628                           
  2629                           ;LCD.c: 17:         RD4 = 0;
  2630     0470  1283               	bcf	3,5	;RP0=0, select bank0
  2631     0471  1303               	bcf	3,6	;RP1=0, select bank0
  2632     0472  1208               	bcf	8,4	;volatile
  2633     0473                     l52:
  2634                           
  2635                           ;LCD.c: 19:     if (a & 2)
  2636     0473  1CF0               	btfss	Lcd_Port@a,1
  2637     0474  2C76               	goto	u341
  2638     0475  2C77               	goto	u340
  2639     0476                     u341:
  2640     0476  2C79               	goto	l53
  2641     0477                     u340:
  2642     0477                     l1063:
  2643                           
  2644                           ;LCD.c: 20:         RD5 = 1;
  2645     0477  1688               	bsf	8,5	;volatile
  2646     0478  2C7A               	goto	l54
  2647     0479                     l53:	
  2648                           ;LCD.c: 21:     else
  2649                           
  2650                           
  2651                           ;LCD.c: 22:         RD5 = 0;
  2652     0479  1288               	bcf	8,5	;volatile
  2653     047A                     l54:
  2654                           
  2655                           ;LCD.c: 24:     if (a & 4)
  2656     047A  1D70               	btfss	Lcd_Port@a,2
  2657     047B  2C7D               	goto	u351
  2658     047C  2C7E               	goto	u350
  2659     047D                     u351:
  2660     047D  2C80               	goto	l55
  2661     047E                     u350:
  2662     047E                     l1065:
  2663                           
  2664                           ;LCD.c: 25:         RD6 = 1;
  2665     047E  1708               	bsf	8,6	;volatile
  2666     047F  2C81               	goto	l56
  2667     0480                     l55:	
  2668                           ;LCD.c: 26:     else
  2669                           
  2670                           
  2671                           ;LCD.c: 27:         RD6 = 0;
  2672     0480  1308               	bcf	8,6	;volatile
  2673     0481                     l56:
  2674                           
  2675                           ;LCD.c: 29:     if (a & 8)
  2676     0481  1DF0               	btfss	Lcd_Port@a,3
  2677     0482  2C84               	goto	u361
  2678     0483  2C85               	goto	u360
  2679     0484                     u361:
  2680     0484  2C87               	goto	l57
  2681     0485                     u360:
  2682     0485                     l1067:
  2683                           
  2684                           ;LCD.c: 30:         RD7 = 1;
  2685     0485  1788               	bsf	8,7	;volatile
  2686     0486  2C88               	goto	l59
  2687     0487                     l57:	
  2688                           ;LCD.c: 31:     else
  2689                           
  2690                           
  2691                           ;LCD.c: 32:         RD7 = 0;
  2692     0487  1388               	bcf	8,7	;volatile
  2693     0488                     l59:
  2694     0488  0008               	return
  2695     0489                     __end_of_Lcd_Port:
  2696     007E                     btemp	set	126	;btemp
  2697     007E                     wtemp0	set	126
  2698                           
  2699                           	psect	idloc
  2700                           
  2701                           ;Config register IDLOC0 @ 0x2000
  2702                           ;	unspecified, using default values
  2703     2000                     	org	8192
  2704     2000  3FFF               	dw	16383
  2705                           
  2706                           ;Config register IDLOC1 @ 0x2001
  2707                           ;	unspecified, using default values
  2708     2001                     	org	8193
  2709     2001  3FFF               	dw	16383
  2710                           
  2711                           ;Config register IDLOC2 @ 0x2002
  2712                           ;	unspecified, using default values
  2713     2002                     	org	8194
  2714     2002  3FFF               	dw	16383
  2715                           
  2716                           ;Config register IDLOC3 @ 0x2003
  2717                           ;	unspecified, using default values
  2718     2003                     	org	8195
  2719     2003  3FFF               	dw	16383
  2720                           
  2721                           	psect	config
  2722                           
  2723                           ;Config register CONFIG1 @ 0x2007
  2724                           ;	Oscillator Selection bits
  2725                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  2726                           ;	Watchdog Timer Enable bit
  2727                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2728                           ;	Power-up Timer Enable bit
  2729                           ;	PWRTE = OFF, PWRT disabled
  2730                           ;	RE3/MCLR pin function select bit
  2731                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2732                           ;	Code Protection bit
  2733                           ;	CP = OFF, Program memory code protection is disabled
  2734                           ;	Data Code Protection bit
  2735                           ;	CPD = OFF, Data memory code protection is disabled
  2736                           ;	Brown Out Reset Selection bits
  2737                           ;	BOREN = OFF, BOR disabled
  2738                           ;	Internal External Switchover bit
  2739                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2740                           ;	Fail-Safe Clock Monitor Enabled bit
  2741                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2742                           ;	Low Voltage Programming Enable bit
  2743                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2744                           ;	In-Circuit Debugger Mode bit
  2745                           ;	DEBUG = 0x1, unprogrammed default
  2746     2007                     	org	8199
  2747     2007  20D6               	dw	8406
  2748                           
  2749                           ;Config register CONFIG2 @ 0x2008
  2750                           ;	Brown-out Reset Selection bit
  2751                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2752                           ;	Flash Program Memory Self Write Enable bits
  2753                           ;	WRT = OFF, Write protection off
  2754     2008                     	org	8200
  2755     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s2(BANK0[20]), main@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@s2(BANK0[20]), STR_3(CODE[5]), main@s(BANK0[20]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0    3280
                                             13 BANK0     43    43      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1230
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     572
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     684
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      48       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      48      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 01 23:10:05 2023

                       pc 0002               _SSPSTATbits 0094                        l20 041A  
                      l23 0420                        l16 0447                        l17 044C  
                      l34 0429                        l26 0419                        l51 0470  
                      l52 0473                        l53 0479                        l54 047A  
                      l62 0466                        l55 0480                        l71 05E6  
                      l56 0481                        l57 0487                        l65 0436  
                      l74 0643                        l59 0488                        l83 055C  
                      l77 04E0                        fsr 0004                       l152 04AB  
                     l259 0704                       l535 05A0                       l545 051A  
                     _RD4 0044                       _RD5 0045                       _RC7 003F  
                     _RD6 0046                       _RD7 0047                       u400 0565  
                     u401 0564                       u330 046C                       u331 046B  
                     u340 0477                       u420 0577                       u500 0503  
                     u341 0476                       u421 0576                       u501 0502  
                     u350 047E                       u351 047D                       u415 0569  
                     u360 0485                       u440 0588                       u520 0516  
                     u600 0650                       u361 0484                       u441 0587  
                     u521 0515                       u505 04FF                       u601 064F  
                     u530 05A7                       u370 043F                       u610 06A4  
                     u531 05A6                       u371 043E                       u435 0578  
                     u515 050A                       u611 06A3                       u380 0420  
                     u460 059C                       u620 06AF                       u381 041F  
                     u461 059B                       u445 0584                       u621 06AE  
                     u550 05CA                       u470 04E7                       u630 06F0  
                     u551 05C9                       u455 0590                       u471 04E6  
                     u631 06EF                       u615 06A0                       u640 0700  
                     u545 05AD                       u641 06FF                       u570 0528  
                     u490 04F9                       u395 04B9                       u491 04F8  
                     u707 0775                       u580 054A                       u565 05D0  
                     u485 04EB                       u717 07EE                       u590 055C  
                     u727 04C9                       u591 055B                       u737 04DA  
                     u657 0718                       u747 05F1                       u667 0730  
                     u757 0600                       u677 073F                       u767 060F  
                     u687 074E                       u777 045E                       u697 0766  
                     fsr0 0004                       indf 0000                      l1101 04CC  
                    l1103 04CF                      l1111 055D                      l1105 04D5  
                    l1201 051E                      l1121 0573                      l1113 055F  
                    l1107 04D8                      l1203 053A                      l1211 0490  
                    l1131 0596                      l1123 0577                      l1115 0565  
                    l1061 046C                      l1109 04DD                      l1205 0540  
                    l1221 049D                      l1213 0491                      l1125 0588  
                    l1117 0568                      l1133 059C                      l1141 04EA  
                    l1301 0748                      l1063 0477                      l1071 043F  
                    l1223 04A6                      l1215 0492                      l1207 0489  
                    l1127 058E                      l1119 056F                      l1151 0509  
                    l1143 04F1                      l1231 0650                      l1311 0791  
                    l1303 0760                      l1065 047E                      l1081 044E  
                    l1073 0441                      l1225 04AA                      l1217 049B  
                    l1209 048D                      l1161 0421                      l1129 058F  
                    l1153 0510                      l1145 04F5                      l1137 04E1  
                    l1241 0661                      l1233 0655                      l1321 07E6  
                    l1313 07AA                      l1305 076A                      l1067 0485  
                    l1059 0468                      l1083 0451                      l1171 05A7  
                    l1091 04AD                      l1075 0443                      l1219 049C  
                    l1163 0426                      l1147 04F9                      l1139 04E7  
                    l1155 0516                      l1243 067B                      l1235 065A  
                    l1227 0647                      l1315 07B3                      l1307 076D  
                    l1085 0457                      l1181 05CA                      l1173 05B4  
                    l1093 04B3                      l1077 0446                      l1069 0438  
                    l1149 0503                      l1261 06B2                      l1253 0689  
                    l1245 0683                      l1237 065C                      l1229 064A  
                    l1317 07D5                      l1309 0788                      l1087 045A  
                    l1167 042A                      l1191 05ED                      l1183 05D7  
                    l1175 05B7                      l1095 04B6                      l1079 041A  
                    l1159 0415                      l1263 06DE                      l1247 0687  
                    l1271 0700                      l1343 0673                      l1319 07DD  
                    l1089 0463                      l1193 05F6                      l1185 05DA  
                    l1177 05BD                      l1169 05A2                      l1097 04C4  
                    l1265 06E3                      l1257 06A5                      l1195 0605  
                    l1187 05E0                      l1179 05C4                      l1099 04C7  
                    l1267 06E7                      l1259 06AF                      l1291 0722  
                    l1283 0705                      l1197 060B                      l1189 05E7  
                    l1269 06F0                      l1293 072A                      l1285 070F  
                    l1199 051B                      l1295 0734                      l1287 0712  
                    l1297 0737                      l1289 071C                      l1299 0745  
                    STR_1 001D                      STR_2 0027                      STR_3 0022  
                    STR_4 0027         ?_Lcd_Write_String 0075                      _main 0705  
                    _pot1 0059                      _pot2 0058                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 0467  
                   ?_main 0070                     _ANSEL 0188           __end_of___lwdiv 05A1  
         __end_of___lwmod 051B                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088           __end_of_dpowers 001D                     _setup 0489  
                   main@s 0030                     pclath 000A           __end_of_spiInit 044D  
         __end_of_spiRead 042A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0705          __end_of_Lcd_Init 0644          __end_of_Lcd_Port 0489  
         __initialization 07F8              __end_of_main 07F8                    ??_main 002D  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___lwdiv 0074  
               ??___lwmod 007C                    main@s2 0044          __end_of_spiWrite 041A  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 0023  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 0437  
          __pcstackCOMMON 0070             __end_of_setup 04AC            _Lcd_Set_Cursor 05A1  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                   ??_setup 0074  
              __pbssBANK0 0058                __pmaintext 0705    __end_of_Lcd_Set_Cursor 05E7  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 04AC                   _Lcd_Cmd 044D  
               ?_spiWrite 0070                   ___lwdiv 055D                   ___lwmod 04E1  
         ?_Lcd_Set_Cursor 0074                   __ptext1 0644                   __ptext2 04E1  
                 __ptext3 055D                   __ptext4 0414                   __ptext5 0421  
                 __ptext6 041A                   __ptext7 0489                   __ptext8 0437  
                 __ptext9 051B                   _dpowers 0013                   _spiInit 0437  
                 _spiRead 0421                   _sprintf 0644    __end_of_Lcd_Write_Char 04E1  
    end_of_initialization 07FC                ??_spiWrite 0070                 Lcd_Port@a 0070  
               _PORTCbits 0007               spiWrite@dat 0070           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0075         Lcd_Write_String@i 007A                 _Lcd_Clear 042A  
          _spiReceiveWait 041A          _Lcd_Write_String 051B       start_initialization 07F8  
  __end_of_spiReceiveWait 0421                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074  
         Lcd_Write_Char@y 0073                 ___latbits 0002             __pcstackBANK0 0020  
                ?_Lcd_Cmd 0070               sprintf@flag 0026               sprintf@prec 002A  
        ___lwdiv@dividend 0072           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075  
                ?___lwdiv 0070                  ?___lwmod 0078                 __pstrings 0003  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 0075  
                ?_sprintf 0020      spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 0012  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 05E7                  _Lcd_Port 0467  
__end_of_Lcd_Write_String 055D        __end_of__stringtab 0013                sprintf@val 0028  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 04AC  
                __ptext11 05A1                  __ptext12 05E7                  __ptext13 042A  
                __ptext14 044D                  __ptext15 0467                  _spiWrite 0414  
            spiInit@sType 0073         spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072  
               sprintf@ap 0027                 sprintf@sp 002B          ___lwmod@dividend 007A  
        ??_spiReceiveWait 0070                 stringcode 000D                _OSCCONbits 008F  
      Lcd_Set_Cursor@temp 0079                  sprintf@c 002C                  sprintf@f 0020  
         ___lwmod@divisor 0078           ___lwmod@counter 007D                  stringdir 000D  
                stringtab 0003  
