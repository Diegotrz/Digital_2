

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 06 20:14:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0097                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009A                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     0105                     	;# 
   128     0107                     	;# 
   129     0108                     	;# 
   130     0109                     	;# 
   131     010C                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0185                     	;# 
   137     0187                     	;# 
   138     0188                     	;# 
   139     0189                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     008F                     	;# 
   187     0090                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     0105                     	;# 
   206     0107                     	;# 
   207     0108                     	;# 
   208     0109                     	;# 
   209     010C                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     0185                     	;# 
   215     0187                     	;# 
   216     0188                     	;# 
   217     0189                     	;# 
   218     018C                     	;# 
   219     018D                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     000E                     	;# 
   236     000F                     	;# 
   237     0010                     	;# 
   238     0011                     	;# 
   239     0012                     	;# 
   240     0013                     	;# 
   241     0014                     	;# 
   242     0015                     	;# 
   243     0015                     	;# 
   244     0016                     	;# 
   245     0017                     	;# 
   246     0018                     	;# 
   247     0019                     	;# 
   248     001A                     	;# 
   249     001B                     	;# 
   250     001B                     	;# 
   251     001C                     	;# 
   252     001D                     	;# 
   253     001E                     	;# 
   254     001F                     	;# 
   255     0081                     	;# 
   256     0085                     	;# 
   257     0086                     	;# 
   258     0087                     	;# 
   259     0088                     	;# 
   260     0089                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0097                     	;# 
   275     0098                     	;# 
   276     0099                     	;# 
   277     009A                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     009F                     	;# 
   283     0105                     	;# 
   284     0107                     	;# 
   285     0108                     	;# 
   286     0109                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     0185                     	;# 
   293     0187                     	;# 
   294     0188                     	;# 
   295     0189                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0095                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009C                     	;# 
   358     009D                     	;# 
   359     009E                     	;# 
   360     009F                     	;# 
   361     0105                     	;# 
   362     0107                     	;# 
   363     0108                     	;# 
   364     0109                     	;# 
   365     010C                     	;# 
   366     010C                     	;# 
   367     010D                     	;# 
   368     010E                     	;# 
   369     010F                     	;# 
   370     0185                     	;# 
   371     0187                     	;# 
   372     0188                     	;# 
   373     0189                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376                           
   377                           	psect	strings
   378     0003                     __pstrings:
   379     0003                     stringtab:
   380     0003                     __stringtab:
   381                           
   382                           ;	String table - string pointers are 1 byte each
   383     0003  1BFF               	btfsc	btemp+1,7
   384     0004  280D               	ljmp	stringcode
   385     0005  1383               	bcf	3,7
   386     0006  187F               	btfsc	btemp+1,0
   387     0007  1783               	bsf	3,7
   388     0008  0800               	movf	0,w
   389     0009  0A84               	incf	4,f
   390     000A  1903               	skipnz
   391     000B  0AFF               	incf	btemp+1,f
   392     000C  0008               	return
   393     000D                     stringcode:
   394     000D                     stringdir:
   395     000D  3000               	movlw	high stringdir
   396     000E  008A               	movwf	10
   397     000F  0804               	movf	4,w
   398     0010  0A84               	incf	4,f
   399     0011  0782               	addwf	2,f
   400     0012                     __stringbase:
   401     0012  3400               	retlw	0
   402     0013                     __end_of__stringtab:
   403     0013                     _dpowers:
   404     0013  3401               	retlw	1
   405     0014  3400               	retlw	0
   406     0015  340A               	retlw	10
   407     0016  3400               	retlw	0
   408     0017  3464               	retlw	100
   409     0018  3400               	retlw	0
   410     0019  34E8               	retlw	232
   411     001A  3403               	retlw	3
   412     001B  3410               	retlw	16
   413     001C  3427               	retlw	39
   414     001D                     __end_of_dpowers:
   415     0008                     _PORTD	set	8
   416     0005                     _PORTA	set	5
   417     0006                     _PORTB	set	6
   418     0007                     _PORTCbits	set	7
   419     0013                     _SSPBUF	set	19
   420     0014                     _SSPCON	set	20
   421     003F                     _RC7	set	63
   422     0047                     _RD7	set	71
   423     0046                     _RD6	set	70
   424     0045                     _RD5	set	69
   425     0044                     _RD4	set	68
   426     008F                     _OSCCONbits	set	143
   427     0088                     _TRISD	set	136
   428     0086                     _TRISB	set	134
   429     0085                     _TRISA	set	133
   430     0094                     _SSPSTATbits	set	148
   431     0094                     _SSPSTAT	set	148
   432     043F                     _TRISC7	set	1087
   433     043E                     _TRISC6	set	1086
   434     043A                     _TRISC2	set	1082
   435     0439                     _TRISC1	set	1081
   436     043B                     _TRISC3	set	1083
   437     043D                     _TRISC5	set	1085
   438     0189                     _ANSELH	set	393
   439     0188                     _ANSEL	set	392
   440     001D                     STR_1:
   441     001D  3450               	retlw	80	;'P'
   442     001E  346F               	retlw	111	;'o'
   443     001F  3474               	retlw	116	;'t'
   444     0020  3431               	retlw	49	;'1'
   445     0021  3400               	retlw	0
   446     0022                     STR_3:
   447     0022  3450               	retlw	80	;'P'
   448     0023  346F               	retlw	111	;'o'
   449     0024  3474               	retlw	116	;'t'
   450     0025  3432               	retlw	50	;'2'
   451     0026  3400               	retlw	0
   452     0027                     STR_5:
   453     0027  3443               	retlw	67	;'C'
   454     0028  346F               	retlw	111	;'o'
   455     0029  346E               	retlw	110	;'n'
   456     002A  3474               	retlw	116	;'t'
   457     002B  3400               	retlw	0
   458     002C                     STR_2:
   459     002C  3425               	retlw	37	;'%'
   460     002D  3475               	retlw	117	;'u'
   461     002E  3400               	retlw	0
   462     002C                     
   463                           	psect	cinit
   464     07F7                     start_initialization:	
   465                           ; #config settings
   466                           
   467     07F7                     __initialization:
   468                           
   469                           ; Clear objects allocated to BANK0
   470     07F7  1283               	bcf	3,5	;RP0=0, select bank0
   471     07F8  1303               	bcf	3,6	;RP1=0, select bank0
   472     07F9  01EC               	clrf	__pbssBANK0& (0+127)
   473     07FA  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   474     07FB  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   475     07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478     07FC                     __end_of__initialization:
   479     07FC  0183               	clrf	3
   480     07FD  120A  118A  2E55   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK0
   483     006C                     __pbssBANK0:
   484     006C                     _valcont:
   485     006C                     	ds	1
   486     006D                     _pot2:
   487     006D                     	ds	1
   488     006E                     _pot1:
   489     006E                     	ds	1
   490                           
   491                           	psect	cstackCOMMON
   492     0070                     __pcstackCOMMON:
   493     0070                     ?_setup:
   494     0070                     ?_spiInit:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ?_spiReceiveWait:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ??_spiReceiveWait:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_spiWrite:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ??_spiWrite:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_spiRead:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ??_spiRead:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ?_Lcd_Port:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ??_Lcd_Port:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ?_Lcd_Cmd:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_Lcd_Clear:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_Lcd_Init:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_Lcd_Write_Char:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_main:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?___lwdiv:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     spiInit@sDataSample:	
   540                           ; 2 bytes @ 0x0
   541                           
   542     0070                     spiWrite@dat:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     Lcd_Port@a:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ___lwdiv@divisor:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 2 bytes @ 0x0
   553     0070                     	ds	1
   554     0071                     ??_Lcd_Cmd:
   555     0071                     ??_Lcd_Write_Char:	
   556                           ; 1 bytes @ 0x1
   557                           
   558     0071                     spiInit@sClockIdle:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 1 bytes @ 0x1
   563     0071                     	ds	1
   564     0072                     spiInit@sTransmitEdge:
   565     0072                     Lcd_Write_Char@temp:	
   566                           ; 1 bytes @ 0x2
   567                           
   568     0072                     ___lwdiv@dividend:	
   569                           ; 1 bytes @ 0x2
   570                           
   571                           
   572                           ; 2 bytes @ 0x2
   573     0072                     	ds	1
   574     0073                     ??_spiInit:
   575     0073                     spiInit@sType:	
   576                           ; 1 bytes @ 0x3
   577                           
   578     0073                     Lcd_Cmd@a:	
   579                           ; 1 bytes @ 0x3
   580                           
   581     0073                     Lcd_Write_Char@y:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586     0073                     	ds	1
   587     0074                     ??_setup:
   588     0074                     ??_Lcd_Clear:	
   589                           ; 1 bytes @ 0x4
   590                           
   591     0074                     ?_Lcd_Set_Cursor:	
   592                           ; 1 bytes @ 0x4
   593                           
   594     0074                     ??_Lcd_Init:	
   595                           ; 1 bytes @ 0x4
   596                           
   597     0074                     ??___lwdiv:	
   598                           ; 1 bytes @ 0x4
   599                           
   600     0074                     Lcd_Set_Cursor@b:	
   601                           ; 1 bytes @ 0x4
   602                           
   603     0074                     Lcd_Write_Char@a:	
   604                           ; 1 bytes @ 0x4
   605                           
   606                           
   607                           ; 1 bytes @ 0x4
   608     0074                     	ds	1
   609     0075                     ??_Lcd_Set_Cursor:
   610     0075                     ?_Lcd_Write_String:	
   611                           ; 1 bytes @ 0x5
   612                           
   613     0075                     Lcd_Write_String@a:	
   614                           ; 1 bytes @ 0x5
   615                           
   616     0075                     ___lwdiv@quotient:	
   617                           ; 2 bytes @ 0x5
   618                           
   619                           
   620                           ; 2 bytes @ 0x5
   621     0075                     	ds	1
   622     0076                     Lcd_Set_Cursor@a:
   623                           
   624                           ; 1 bytes @ 0x6
   625     0076                     	ds	1
   626     0077                     ??_Lcd_Write_String:
   627     0077                     Lcd_Set_Cursor@z:	
   628                           ; 1 bytes @ 0x7
   629                           
   630     0077                     ___lwdiv@counter:	
   631                           ; 1 bytes @ 0x7
   632                           
   633                           
   634                           ; 1 bytes @ 0x7
   635     0077                     	ds	1
   636     0078                     ?___lwmod:
   637     0078                     Lcd_Set_Cursor@y:	
   638                           ; 2 bytes @ 0x8
   639                           
   640     0078                     ___lwmod@divisor:	
   641                           ; 1 bytes @ 0x8
   642                           
   643                           
   644                           ; 2 bytes @ 0x8
   645     0078                     	ds	1
   646     0079                     Lcd_Set_Cursor@temp:
   647                           
   648                           ; 1 bytes @ 0x9
   649     0079                     	ds	1
   650     007A                     Lcd_Write_String@i:
   651     007A                     ___lwmod@dividend:	
   652                           ; 2 bytes @ 0xA
   653                           
   654                           
   655                           ; 2 bytes @ 0xA
   656     007A                     	ds	2
   657     007C                     ??___lwmod:
   658                           
   659                           ; 1 bytes @ 0xC
   660     007C                     	ds	1
   661     007D                     ___lwmod@counter:
   662                           
   663                           ; 1 bytes @ 0xD
   664     007D                     	ds	1
   665                           
   666                           	psect	cstackBANK0
   667     0020                     __pcstackBANK0:
   668     0020                     ?_sprintf:
   669     0020                     sprintf@f:	
   670                           ; 2 bytes @ 0x0
   671                           
   672                           
   673                           ; 1 bytes @ 0x0
   674     0020                     	ds	3
   675     0023                     ??_sprintf:
   676                           
   677                           ; 1 bytes @ 0x3
   678     0023                     	ds	3
   679     0026                     sprintf@flag:
   680                           
   681                           ; 1 bytes @ 0x6
   682     0026                     	ds	1
   683     0027                     sprintf@ap:
   684                           
   685                           ; 1 bytes @ 0x7
   686     0027                     	ds	1
   687     0028                     sprintf@val:
   688                           
   689                           ; 2 bytes @ 0x8
   690     0028                     	ds	2
   691     002A                     sprintf@prec:
   692                           
   693                           ; 1 bytes @ 0xA
   694     002A                     	ds	1
   695     002B                     sprintf@sp:
   696                           
   697                           ; 1 bytes @ 0xB
   698     002B                     	ds	1
   699     002C                     sprintf@c:
   700                           
   701                           ; 1 bytes @ 0xC
   702     002C                     	ds	1
   703     002D                     ??_main:
   704                           
   705                           ; 1 bytes @ 0xD
   706     002D                     	ds	3
   707     0030                     main@s:
   708                           
   709                           ; 20 bytes @ 0x10
   710     0030                     	ds	20
   711     0044                     main@s2:
   712                           
   713                           ; 20 bytes @ 0x24
   714     0044                     	ds	20
   715     0058                     main@s3:
   716                           
   717                           ; 20 bytes @ 0x38
   718     0058                     	ds	20
   719                           
   720                           	psect	maintext
   721     0655                     __pmaintext:	
   722 ;;
   723 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   724 ;;
   725 ;; *************** function _main *****************
   726 ;; Defined at:
   727 ;;		line 49 in file "Postlab3master.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  s3             20   56[BANK0 ] unsigned char [20]
   732 ;;  s2             20   36[BANK0 ] unsigned char [20]
   733 ;;  s              20   16[BANK0 ] unsigned char [20]
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : B00/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   743 ;;      Params:         0       0       0       0       0
   744 ;;      Locals:         0      60       0       0       0
   745 ;;      Temps:          0       3       0       0       0
   746 ;;      Totals:         0      63       0       0       0
   747 ;;Total ram usage:       63 bytes
   748 ;; Hardware stack levels required when called: 3
   749 ;; This function calls:
   750 ;;		_Lcd_Clear
   751 ;;		_Lcd_Init
   752 ;;		_Lcd_Set_Cursor
   753 ;;		_Lcd_Write_String
   754 ;;		_setup
   755 ;;		_spiRead
   756 ;;		_spiWrite
   757 ;;		_sprintf
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763     0655                     _main:	
   764                           ;psect for function _main
   765                           
   766     0655                     l1331:	
   767                           ;incstack = 0
   768                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   769                           
   770                           
   771                           ;Postlab3master.c: 50:     setup();
   772     0655  120A  118A  23D9  120A  118A  	fcall	_setup
   773                           
   774                           ;Postlab3master.c: 51:      Lcd_Init();
   775     065A  120A  118A  2537  120A  118A  	fcall	_Lcd_Init
   776     065F                     l1333:
   777                           
   778                           ;Postlab3master.c: 59:         PORTCbits.RC2 = 0;
   779     065F  1283               	bcf	3,5	;RP0=0, select bank0
   780     0660  1303               	bcf	3,6	;RP1=0, select bank0
   781     0661  1107               	bcf	7,2	;volatile
   782     0662                     l1335:
   783                           
   784                           ;Postlab3master.c: 60:        _delay((unsigned long)((1)*(8000000/4000.0)));
   785     0662  3003               	movlw	3
   786     0663  1283               	bcf	3,5	;RP0=0, select bank0
   787     0664  1303               	bcf	3,6	;RP1=0, select bank0
   788     0665  00AE               	movwf	??_main+1
   789     0666  3097               	movlw	151
   790     0667  00AD               	movwf	??_main
   791     0668                     u657:
   792     0668  0BAD               	decfsz	??_main,f
   793     0669  2E68               	goto	u657
   794     066A  0BAE               	decfsz	??_main+1,f
   795     066B  2E68               	goto	u657
   796     066C                     l1337:
   797                           
   798                           ;Postlab3master.c: 62:        spiWrite(0);
   799     066C  3000               	movlw	0
   800     066D  120A  118A  2364  120A  118A  	fcall	_spiWrite
   801                           
   802                           ;Postlab3master.c: 63:        _delay((unsigned long)((1)*(8000000/4000.0)));
   803     0672  3003               	movlw	3
   804     0673  1283               	bcf	3,5	;RP0=0, select bank0
   805     0674  1303               	bcf	3,6	;RP1=0, select bank0
   806     0675  00AE               	movwf	??_main+1
   807     0676  3097               	movlw	151
   808     0677  00AD               	movwf	??_main
   809     0678                     u667:
   810     0678  0BAD               	decfsz	??_main,f
   811     0679  2E78               	goto	u667
   812     067A  0BAE               	decfsz	??_main+1,f
   813     067B  2E78               	goto	u667
   814     067C                     l1339:
   815                           
   816                           ;Postlab3master.c: 64:        PORTCbits.RC2 = 1;
   817     067C  1283               	bcf	3,5	;RP0=0, select bank0
   818     067D  1303               	bcf	3,6	;RP1=0, select bank0
   819     067E  1507               	bsf	7,2	;volatile
   820     067F                     l1341:
   821                           
   822                           ;Postlab3master.c: 66:        PORTCbits.RC2 = 0;
   823     067F  1107               	bcf	7,2	;volatile
   824                           
   825                           ;Postlab3master.c: 67:        _delay((unsigned long)((1)*(8000000/4000.0)));
   826     0680  3003               	movlw	3
   827     0681  1283               	bcf	3,5	;RP0=0, select bank0
   828     0682  1303               	bcf	3,6	;RP1=0, select bank0
   829     0683  00AE               	movwf	??_main+1
   830     0684  3097               	movlw	151
   831     0685  00AD               	movwf	??_main
   832     0686                     u677:
   833     0686  0BAD               	decfsz	??_main,f
   834     0687  2E86               	goto	u677
   835     0688  0BAE               	decfsz	??_main+1,f
   836     0689  2E86               	goto	u677
   837                           
   838                           ;Postlab3master.c: 70:        _delay((unsigned long)((100)*(8000000/4000.0)));
   839     068A  3002               	movlw	2
   840     068B  1283               	bcf	3,5	;RP0=0, select bank0
   841     068C  1303               	bcf	3,6	;RP1=0, select bank0
   842     068D  00AF               	movwf	??_main+2
   843     068E  3004               	movlw	4
   844     068F  00AE               	movwf	??_main+1
   845     0690  30B9               	movlw	185
   846     0691  00AD               	movwf	??_main
   847     0692                     u687:
   848     0692  0BAD               	decfsz	??_main,f
   849     0693  2E92               	goto	u687
   850     0694  0BAE               	decfsz	??_main+1,f
   851     0695  2E92               	goto	u687
   852     0696  0BAF               	decfsz	??_main+2,f
   853     0697  2E92               	goto	u687
   854     0698  2E99               	nop2
   855     0699                     l1343:
   856                           
   857                           ;Postlab3master.c: 72:        valcont = spiRead();
   858     0699  120A  118A  2371  120A  118A  	fcall	_spiRead
   859     069E  1283               	bcf	3,5	;RP0=0, select bank0
   860     069F  1303               	bcf	3,6	;RP1=0, select bank0
   861     06A0  00EC               	movwf	_valcont
   862     06A1                     l1345:
   863                           
   864                           ;Postlab3master.c: 73:        PORTB = valcont;
   865     06A1  086C               	movf	_valcont,w
   866     06A2  0086               	movwf	6	;volatile
   867     06A3                     l1347:
   868                           
   869                           ;Postlab3master.c: 74:        _delay((unsigned long)((1)*(8000000/4000.0)));
   870     06A3  3003               	movlw	3
   871     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   872     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   873     06A6  00AE               	movwf	??_main+1
   874     06A7  3097               	movlw	151
   875     06A8  00AD               	movwf	??_main
   876     06A9                     u697:
   877     06A9  0BAD               	decfsz	??_main,f
   878     06AA  2EA9               	goto	u697
   879     06AB  0BAE               	decfsz	??_main+1,f
   880     06AC  2EA9               	goto	u697
   881     06AD                     l1349:
   882                           
   883                           ;Postlab3master.c: 75:        PORTCbits.RC2 = 1;
   884     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   885     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   886     06AF  1507               	bsf	7,2	;volatile
   887     06B0                     l1351:
   888                           
   889                           ;Postlab3master.c: 76:        _delay((unsigned long)((100)*(8000000/4000.0)));
   890     06B0  3002               	movlw	2
   891     06B1  1283               	bcf	3,5	;RP0=0, select bank0
   892     06B2  1303               	bcf	3,6	;RP1=0, select bank0
   893     06B3  00AF               	movwf	??_main+2
   894     06B4  3004               	movlw	4
   895     06B5  00AE               	movwf	??_main+1
   896     06B6  30B9               	movlw	185
   897     06B7  00AD               	movwf	??_main
   898     06B8                     u707:
   899     06B8  0BAD               	decfsz	??_main,f
   900     06B9  2EB8               	goto	u707
   901     06BA  0BAE               	decfsz	??_main+1,f
   902     06BB  2EB8               	goto	u707
   903     06BC  0BAF               	decfsz	??_main+2,f
   904     06BD  2EB8               	goto	u707
   905     06BE  2EBF               	nop2
   906     06BF                     l1353:
   907                           
   908                           ;Postlab3master.c: 84:        PORTCbits.RC1 = 0;
   909     06BF  1283               	bcf	3,5	;RP0=0, select bank0
   910     06C0  1303               	bcf	3,6	;RP1=0, select bank0
   911     06C1  1087               	bcf	7,1	;volatile
   912     06C2                     l1355:
   913                           
   914                           ;Postlab3master.c: 85:         _delay((unsigned long)((1)*(8000000/4000.0)));
   915     06C2  3003               	movlw	3
   916     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   917     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   918     06C5  00AE               	movwf	??_main+1
   919     06C6  3097               	movlw	151
   920     06C7  00AD               	movwf	??_main
   921     06C8                     u717:
   922     06C8  0BAD               	decfsz	??_main,f
   923     06C9  2EC8               	goto	u717
   924     06CA  0BAE               	decfsz	??_main+1,f
   925     06CB  2EC8               	goto	u717
   926     06CC                     l1357:
   927                           
   928                           ;Postlab3master.c: 87:        spiWrite(15);
   929     06CC  300F               	movlw	15
   930     06CD  120A  118A  2364  120A  118A  	fcall	_spiWrite
   931     06D2                     l1359:
   932                           
   933                           ;Postlab3master.c: 88:        pot2 = spiRead();
   934     06D2  120A  118A  2371  120A  118A  	fcall	_spiRead
   935     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   936     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   937     06D9  00ED               	movwf	_pot2
   938     06DA                     l1361:
   939                           
   940                           ;Postlab3master.c: 90:        PORTCbits.RC1 = 1;
   941     06DA  1487               	bsf	7,1	;volatile
   942     06DB                     l1363:
   943                           
   944                           ;Postlab3master.c: 92:        _delay((unsigned long)((250)*(8000000/4000.0)));
   945     06DB  3003               	movlw	3
   946     06DC  1283               	bcf	3,5	;RP0=0, select bank0
   947     06DD  1303               	bcf	3,6	;RP1=0, select bank0
   948     06DE  00AF               	movwf	??_main+2
   949     06DF  308A               	movlw	138
   950     06E0  00AE               	movwf	??_main+1
   951     06E1  3055               	movlw	85
   952     06E2  00AD               	movwf	??_main
   953     06E3                     u727:
   954     06E3  0BAD               	decfsz	??_main,f
   955     06E4  2EE3               	goto	u727
   956     06E5  0BAE               	decfsz	??_main+1,f
   957     06E6  2EE3               	goto	u727
   958     06E7  0BAF               	decfsz	??_main+2,f
   959     06E8  2EE3               	goto	u727
   960     06E9                     l1365:
   961                           
   962                           ;Postlab3master.c: 95:        PORTCbits.RC2 = 0;
   963     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   964     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   965     06EB  1107               	bcf	7,2	;volatile
   966     06EC                     l1367:
   967                           
   968                           ;Postlab3master.c: 96:        _delay((unsigned long)((1)*(8000000/4000.0)));
   969     06EC  3003               	movlw	3
   970     06ED  1283               	bcf	3,5	;RP0=0, select bank0
   971     06EE  1303               	bcf	3,6	;RP1=0, select bank0
   972     06EF  00AE               	movwf	??_main+1
   973     06F0  3097               	movlw	151
   974     06F1  00AD               	movwf	??_main
   975     06F2                     u737:
   976     06F2  0BAD               	decfsz	??_main,f
   977     06F3  2EF2               	goto	u737
   978     06F4  0BAE               	decfsz	??_main+1,f
   979     06F5  2EF2               	goto	u737
   980     06F6                     l1369:
   981                           
   982                           ;Postlab3master.c: 98:        spiWrite(1);
   983     06F6  3001               	movlw	1
   984     06F7  120A  118A  2364  120A  118A  	fcall	_spiWrite
   985                           
   986                           ;Postlab3master.c: 99:    _delay((unsigned long)((250)*(8000000/4000.0)));
   987     06FC  3003               	movlw	3
   988     06FD  1283               	bcf	3,5	;RP0=0, select bank0
   989     06FE  1303               	bcf	3,6	;RP1=0, select bank0
   990     06FF  00AF               	movwf	??_main+2
   991     0700  308A               	movlw	138
   992     0701  00AE               	movwf	??_main+1
   993     0702  3055               	movlw	85
   994     0703  00AD               	movwf	??_main
   995     0704                     u747:
   996     0704  0BAD               	decfsz	??_main,f
   997     0705  2F04               	goto	u747
   998     0706  0BAE               	decfsz	??_main+1,f
   999     0707  2F04               	goto	u747
  1000     0708  0BAF               	decfsz	??_main+2,f
  1001     0709  2F04               	goto	u747
  1002     070A                     l1371:
  1003                           
  1004                           ;Postlab3master.c: 100:        PORTCbits.RC2 = 1;
  1005     070A  1283               	bcf	3,5	;RP0=0, select bank0
  1006     070B  1303               	bcf	3,6	;RP1=0, select bank0
  1007     070C  1507               	bsf	7,2	;volatile
  1008                           
  1009                           ;Postlab3master.c: 101:        _delay((unsigned long)((50)*(8000000/4000.0)));
  1010     070D  3082               	movlw	130
  1011     070E  1283               	bcf	3,5	;RP0=0, select bank0
  1012     070F  1303               	bcf	3,6	;RP1=0, select bank0
  1013     0710  00AE               	movwf	??_main+1
  1014     0711  30DD               	movlw	221
  1015     0712  00AD               	movwf	??_main
  1016     0713                     u757:
  1017     0713  0BAD               	decfsz	??_main,f
  1018     0714  2F13               	goto	u757
  1019     0715  0BAE               	decfsz	??_main+1,f
  1020     0716  2F13               	goto	u757
  1021     0717                     l1373:
  1022                           
  1023                           ;Postlab3master.c: 104:        PORTCbits.RC2 = 0;
  1024     0717  1283               	bcf	3,5	;RP0=0, select bank0
  1025     0718  1303               	bcf	3,6	;RP1=0, select bank0
  1026     0719  1107               	bcf	7,2	;volatile
  1027                           
  1028                           ;Postlab3master.c: 105:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1029     071A  3003               	movlw	3
  1030     071B  1283               	bcf	3,5	;RP0=0, select bank0
  1031     071C  1303               	bcf	3,6	;RP1=0, select bank0
  1032     071D  00AE               	movwf	??_main+1
  1033     071E  3097               	movlw	151
  1034     071F  00AD               	movwf	??_main
  1035     0720                     u767:
  1036     0720  0BAD               	decfsz	??_main,f
  1037     0721  2F20               	goto	u767
  1038     0722  0BAE               	decfsz	??_main+1,f
  1039     0723  2F20               	goto	u767
  1040     0724                     l1375:
  1041                           
  1042                           ;Postlab3master.c: 108:        pot1 = spiRead();
  1043     0724  120A  118A  2371  120A  118A  	fcall	_spiRead
  1044     0729  1283               	bcf	3,5	;RP0=0, select bank0
  1045     072A  1303               	bcf	3,6	;RP1=0, select bank0
  1046     072B  00EE               	movwf	_pot1
  1047     072C                     l1377:
  1048                           
  1049                           ;Postlab3master.c: 109:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1050     072C  3003               	movlw	3
  1051     072D  1283               	bcf	3,5	;RP0=0, select bank0
  1052     072E  1303               	bcf	3,6	;RP1=0, select bank0
  1053     072F  00AE               	movwf	??_main+1
  1054     0730  3097               	movlw	151
  1055     0731  00AD               	movwf	??_main
  1056     0732                     u777:
  1057     0732  0BAD               	decfsz	??_main,f
  1058     0733  2F32               	goto	u777
  1059     0734  0BAE               	decfsz	??_main+1,f
  1060     0735  2F32               	goto	u777
  1061     0736                     l1379:
  1062                           
  1063                           ;Postlab3master.c: 110:        PORTCbits.RC2 = 1;
  1064     0736  1283               	bcf	3,5	;RP0=0, select bank0
  1065     0737  1303               	bcf	3,6	;RP1=0, select bank0
  1066     0738  1507               	bsf	7,2	;volatile
  1067     0739                     l1381:
  1068                           
  1069                           ;Postlab3master.c: 112:        _delay((unsigned long)((250)*(8000000/4000.0)));
  1070     0739  3003               	movlw	3
  1071     073A  1283               	bcf	3,5	;RP0=0, select bank0
  1072     073B  1303               	bcf	3,6	;RP1=0, select bank0
  1073     073C  00AF               	movwf	??_main+2
  1074     073D  308A               	movlw	138
  1075     073E  00AE               	movwf	??_main+1
  1076     073F  3055               	movlw	85
  1077     0740  00AD               	movwf	??_main
  1078     0741                     u787:
  1079     0741  0BAD               	decfsz	??_main,f
  1080     0742  2F41               	goto	u787
  1081     0743  0BAE               	decfsz	??_main+1,f
  1082     0744  2F41               	goto	u787
  1083     0745  0BAF               	decfsz	??_main+2,f
  1084     0746  2F41               	goto	u787
  1085     0747                     l1383:
  1086                           
  1087                           ;Postlab3master.c: 115:         char s[20];;Postlab3master.c: 116:         char s2[20];;
      +                          Postlab3master.c: 117:         char s3[20];;Postlab3master.c: 118:       Lcd_Clear();
  1088     0747  120A  118A  237A  120A  118A  	fcall	_Lcd_Clear
  1089     074C                     l1385:
  1090                           
  1091                           ;Postlab3master.c: 123:     Lcd_Set_Cursor(1,1);
  1092     074C  01F4               	clrf	Lcd_Set_Cursor@b
  1093     074D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1094     074E  3001               	movlw	1
  1095     074F  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1096     0754                     l1387:
  1097                           
  1098                           ;Postlab3master.c: 124:     Lcd_Write_String("Pot1");
  1099     0754  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1100     0755  00F5               	movwf	Lcd_Write_String@a
  1101     0756  3080               	movlw	128
  1102     0757  00F6               	movwf	Lcd_Write_String@a+1
  1103     0758  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1104     075D                     l1389:
  1105                           
  1106                           ;Postlab3master.c: 126:     sprintf(s, "%u", pot1);
  1107     075D  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1108     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1109     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1110     0760  00A0               	movwf	sprintf@f
  1111     0761  086E               	movf	_pot1,w
  1112     0762  00AD               	movwf	??_main
  1113     0763  01AE               	clrf	??_main+1
  1114     0764  082D               	movf	??_main,w
  1115     0765  00A1               	movwf	?_sprintf+1
  1116     0766  082E               	movf	??_main+1,w
  1117     0767  00A2               	movwf	?_sprintf+2
  1118     0768  3030               	movlw	(low (main@s| 0))& (0+255)
  1119     0769  120A  118A  2594  120A  118A  	fcall	_sprintf
  1120     076E                     l1391:
  1121                           
  1122                           ;Postlab3master.c: 127:     Lcd_Set_Cursor(2,1);
  1123     076E  01F4               	clrf	Lcd_Set_Cursor@b
  1124     076F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1125     0770  3002               	movlw	2
  1126     0771  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1127     0776                     l1393:
  1128                           
  1129                           ;Postlab3master.c: 128:     Lcd_Write_String(s);
  1130     0776  3030               	movlw	(low (main@s| 0))& (0+255)
  1131     0777  00F5               	movwf	Lcd_Write_String@a
  1132     0778  3000               	movlw	0
  1133     0779  00F6               	movwf	Lcd_Write_String@a+1
  1134     077A  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1135     077F                     l1395:
  1136                           
  1137                           ;Postlab3master.c: 130:     Lcd_Set_Cursor(1,7);
  1138     077F  3007               	movlw	7
  1139     0780  00F4               	movwf	Lcd_Set_Cursor@b
  1140     0781  3001               	movlw	1
  1141     0782  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1142     0787                     l1397:
  1143                           
  1144                           ;Postlab3master.c: 131:     Lcd_Write_String("Pot2");
  1145     0787  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1146     0788  00F5               	movwf	Lcd_Write_String@a
  1147     0789  3080               	movlw	128
  1148     078A  00F6               	movwf	Lcd_Write_String@a+1
  1149     078B  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1150     0790                     l1399:
  1151                           
  1152                           ;Postlab3master.c: 133:     sprintf(s2, "%u", pot2);
  1153     0790  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1154     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1155     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1156     0793  00A0               	movwf	sprintf@f
  1157     0794  086D               	movf	_pot2,w
  1158     0795  00AD               	movwf	??_main
  1159     0796  01AE               	clrf	??_main+1
  1160     0797  082D               	movf	??_main,w
  1161     0798  00A1               	movwf	?_sprintf+1
  1162     0799  082E               	movf	??_main+1,w
  1163     079A  00A2               	movwf	?_sprintf+2
  1164     079B  3044               	movlw	(low (main@s2| 0))& (0+255)
  1165     079C  120A  118A  2594  120A  118A  	fcall	_sprintf
  1166     07A1                     l1401:
  1167                           
  1168                           ;Postlab3master.c: 134:     Lcd_Set_Cursor(2,7);
  1169     07A1  3007               	movlw	7
  1170     07A2  00F4               	movwf	Lcd_Set_Cursor@b
  1171     07A3  3002               	movlw	2
  1172     07A4  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1173     07A9                     l1403:
  1174                           
  1175                           ;Postlab3master.c: 135:     Lcd_Write_String(s2);
  1176     07A9  3044               	movlw	(low (main@s2| 0))& (0+255)
  1177     07AA  00F5               	movwf	Lcd_Write_String@a
  1178     07AB  3000               	movlw	0
  1179     07AC  00F6               	movwf	Lcd_Write_String@a+1
  1180     07AD  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1181     07B2                     l1405:
  1182                           
  1183                           ;Postlab3master.c: 138:         Lcd_Set_Cursor(1,13);
  1184     07B2  300D               	movlw	13
  1185     07B3  00F4               	movwf	Lcd_Set_Cursor@b
  1186     07B4  3001               	movlw	1
  1187     07B5  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1188     07BA                     l1407:
  1189                           
  1190                           ;Postlab3master.c: 139:     Lcd_Write_String("Cont");
  1191     07BA  3015               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1192     07BB  00F5               	movwf	Lcd_Write_String@a
  1193     07BC  3080               	movlw	128
  1194     07BD  00F6               	movwf	Lcd_Write_String@a+1
  1195     07BE  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1196     07C3                     l1409:
  1197                           
  1198                           ;Postlab3master.c: 141:     sprintf(s3, "%u", valcont);
  1199     07C3  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1200     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1201     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1202     07C6  00A0               	movwf	sprintf@f
  1203     07C7  086C               	movf	_valcont,w
  1204     07C8  00AD               	movwf	??_main
  1205     07C9  01AE               	clrf	??_main+1
  1206     07CA  082D               	movf	??_main,w
  1207     07CB  00A1               	movwf	?_sprintf+1
  1208     07CC  082E               	movf	??_main+1,w
  1209     07CD  00A2               	movwf	?_sprintf+2
  1210     07CE  3058               	movlw	(low (main@s3| 0))& (0+255)
  1211     07CF  120A  118A  2594  120A  118A  	fcall	_sprintf
  1212     07D4                     l1411:
  1213                           
  1214                           ;Postlab3master.c: 142:     Lcd_Set_Cursor(2,13);
  1215     07D4  300D               	movlw	13
  1216     07D5  00F4               	movwf	Lcd_Set_Cursor@b
  1217     07D6  3002               	movlw	2
  1218     07D7  120A  118A  24F1  120A  118A  	fcall	_Lcd_Set_Cursor
  1219     07DC                     l1413:
  1220                           
  1221                           ;Postlab3master.c: 143:     Lcd_Write_String(s3);
  1222     07DC  3058               	movlw	(low (main@s3| 0))& (0+255)
  1223     07DD  00F5               	movwf	Lcd_Write_String@a
  1224     07DE  3000               	movlw	0
  1225     07DF  00F6               	movwf	Lcd_Write_String@a+1
  1226     07E0  120A  118A  246B  120A  118A  	fcall	_Lcd_Write_String
  1227     07E5                     l1415:
  1228                           
  1229                           ;Postlab3master.c: 144:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1230     07E5  3006               	movlw	6
  1231     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1232     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1233     07E8  00AF               	movwf	??_main+2
  1234     07E9  3013               	movlw	19
  1235     07EA  00AE               	movwf	??_main+1
  1236     07EB  30AD               	movlw	173
  1237     07EC  00AD               	movwf	??_main
  1238     07ED                     u797:
  1239     07ED  0BAD               	decfsz	??_main,f
  1240     07EE  2FED               	goto	u797
  1241     07EF  0BAE               	decfsz	??_main+1,f
  1242     07F0  2FED               	goto	u797
  1243     07F1  0BAF               	decfsz	??_main+2,f
  1244     07F2  2FED               	goto	u797
  1245     07F3  2E5F               	goto	l1333
  1246     07F4  120A  118A  2800   	ljmp	start
  1247     07F7                     __end_of_main:
  1248                           
  1249                           	psect	text1
  1250     0594                     __ptext1:	
  1251 ;; *************** function _sprintf *****************
  1252 ;; Defined at:
  1253 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  sp              1    wreg     PTR unsigned char 
  1256 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1257 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1258 ;;		 -> STR_6(3), STR_4(3), STR_2(3), 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1261 ;;		 -> main@s3(20), main@s2(20), main@s(20), 
  1262 ;;  tmpval          4    0        struct .
  1263 ;;  val             2    8[BANK0 ] unsigned int 
  1264 ;;  cp              2    0        PTR const unsigned char 
  1265 ;;  len             2    0        unsigned int 
  1266 ;;  c               1   12[BANK0 ] unsigned char 
  1267 ;;  prec            1   10[BANK0 ] char 
  1268 ;;  ap              1    7[BANK0 ] PTR void [1]
  1269 ;;		 -> ?_sprintf(2), 
  1270 ;;  flag            1    6[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  2    0[BANK0 ] int 
  1273 ;; Registers used:
  1274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       3       0       0       0
  1281 ;;      Locals:         0       7       0       0       0
  1282 ;;      Temps:          0       3       0       0       0
  1283 ;;      Totals:         0      13       0       0       0
  1284 ;;Total ram usage:       13 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; Hardware stack levels required when called: 1
  1287 ;; This function calls:
  1288 ;;		___lwdiv
  1289 ;;		___lwmod
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295     0594                     _sprintf:	
  1296                           ;psect for function _sprintf
  1297                           
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1301                           ;sprintf@sp stored from wreg
  1302     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1304     0596  00AB               	movwf	sprintf@sp
  1305     0597                     l1275:
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1308     0597  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1309     0598  00A7               	movwf	sprintf@ap
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1312     0599  2E40               	goto	l1317
  1313     059A                     l1277:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1316     059A  3025               	movlw	37
  1317     059B  062C               	xorwf	sprintf@c,w
  1318     059C  1903               	btfsc	3,2
  1319     059D  2D9F               	goto	u601
  1320     059E  2DA0               	goto	u600
  1321     059F                     u601:
  1322     059F  2DAA               	goto	l1283
  1323     05A0                     u600:
  1324     05A0                     l1279:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1327     05A0  082B               	movf	sprintf@sp,w
  1328     05A1  0084               	movwf	4
  1329     05A2  082C               	movf	sprintf@c,w
  1330     05A3  1383               	bcf	3,7	;select IRP bank0
  1331     05A4  0080               	movwf	0
  1332     05A5                     l1281:
  1333     05A5  3001               	movlw	1
  1334     05A6  00A3               	movwf	??_sprintf
  1335     05A7  0823               	movf	??_sprintf,w
  1336     05A8  07AB               	addwf	sprintf@sp,f
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1339     05A9  2E40               	goto	l1317
  1340     05AA                     l1283:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1343     05AA  01A6               	clrf	sprintf@flag
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1346     05AB  2DB1               	goto	l1289
  1347     05AC                     l1285:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1350     05AC  30C0               	movlw	192
  1351     05AD  00A3               	movwf	??_sprintf
  1352     05AE  0823               	movf	??_sprintf,w
  1353     05AF  04A6               	iorwf	sprintf@flag,f
  1354                           
  1355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1356     05B0  2DCB               	goto	l1291
  1357     05B1                     l1289:
  1358     05B1  3001               	movlw	1
  1359     05B2  07A0               	addwf	sprintf@f,f
  1360     05B3  30FF               	movlw	-1
  1361     05B4  0720               	addwf	sprintf@f,w
  1362     05B5  0084               	movwf	4
  1363     05B6  120A  118A  200D  120A  118A  	fcall	stringdir
  1364     05BB  00AC               	movwf	sprintf@c
  1365     05BC  00A3               	movwf	??_sprintf
  1366     05BD  01A4               	clrf	??_sprintf+1
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 1, Range of values is 0 to 0
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte            4     3 (average)
  1374                           ; direct_byte           11     8 (fixed)
  1375                           ; jumptable            260     6 (fixed)
  1376                           ;	Chosen strategy is simple_byte
  1377     05BE  0824               	movf	??_sprintf+1,w
  1378     05BF  3A00               	xorlw	0	; case 0
  1379     05C0  1903               	skipnz
  1380     05C1  2DC3               	goto	l1437
  1381     05C2  2E40               	goto	l1317
  1382     05C3                     l1437:
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 2, Range of values is 0 to 117
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte            7     4 (average)
  1389                           ; jumptable            260     6 (fixed)
  1390                           ;	Chosen strategy is simple_byte
  1391     05C3  0823               	movf	??_sprintf,w
  1392     05C4  3A00               	xorlw	0	; case 0
  1393     05C5  1903               	skipnz
  1394     05C6  2E50               	goto	l1319
  1395     05C7  3A75               	xorlw	117	; case 117
  1396     05C8  1903               	skipnz
  1397     05C9  2DAC               	goto	l1285
  1398     05CA  2E40               	goto	l1317
  1399     05CB                     l1291:
  1400                           
  1401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1402     05CB  0827               	movf	sprintf@ap,w
  1403     05CC  0084               	movwf	4
  1404     05CD  1383               	bcf	3,7	;select IRP bank0
  1405     05CE  0800               	movf	0,w
  1406     05CF  00A8               	movwf	sprintf@val
  1407     05D0  0A84               	incf	4,f
  1408     05D1  0800               	movf	0,w
  1409     05D2  00A9               	movwf	sprintf@val+1
  1410     05D3                     l1293:
  1411     05D3  3002               	movlw	2
  1412     05D4  00A3               	movwf	??_sprintf
  1413     05D5  0823               	movf	??_sprintf,w
  1414     05D6  07A7               	addwf	sprintf@ap,f
  1415     05D7                     l1295:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1418     05D7  01AC               	clrf	sprintf@c
  1419     05D8  0AAC               	incf	sprintf@c,f
  1420     05D9                     l1301:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1423     05D9  082C               	movf	sprintf@c,w
  1424     05DA  00A3               	movwf	??_sprintf
  1425     05DB  0723               	addwf	??_sprintf,w
  1426     05DC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1427     05DD  0084               	movwf	4
  1428     05DE  120A  118A  200D  120A  118A  	fcall	stringdir
  1429     05E3  00A4               	movwf	??_sprintf+1
  1430     05E4  120A  118A  200D  120A  118A  	fcall	stringdir
  1431     05E9  00A5               	movwf	??_sprintf+2
  1432     05EA  0825               	movf	??_sprintf+2,w
  1433     05EB  0229               	subwf	sprintf@val+1,w
  1434     05EC  1D03               	skipz
  1435     05ED  2DF0               	goto	u615
  1436     05EE  0824               	movf	??_sprintf+1,w
  1437     05EF  0228               	subwf	sprintf@val,w
  1438     05F0                     u615:
  1439     05F0  1803               	skipnc
  1440     05F1  2DF3               	goto	u611
  1441     05F2  2DF4               	goto	u610
  1442     05F3                     u611:
  1443     05F3  2DF5               	goto	l1305
  1444     05F4                     u610:
  1445     05F4  2DFF               	goto	l1307
  1446     05F5                     l1305:
  1447     05F5  3001               	movlw	1
  1448     05F6  00A3               	movwf	??_sprintf
  1449     05F7  0823               	movf	??_sprintf,w
  1450     05F8  07AC               	addwf	sprintf@c,f
  1451     05F9  3005               	movlw	5
  1452     05FA  062C               	xorwf	sprintf@c,w
  1453     05FB  1D03               	btfss	3,2
  1454     05FC  2DFE               	goto	u621
  1455     05FD  2DFF               	goto	u620
  1456     05FE                     u621:
  1457     05FE  2DD9               	goto	l1301
  1458     05FF                     u620:
  1459     05FF                     l1307:
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1462     05FF  082C               	movf	sprintf@c,w
  1463     0600  00AA               	movwf	sprintf@prec
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1466     0601  2E37               	goto	l1315
  1467     0602                     l1309:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1470     0602  300A               	movlw	10
  1471     0603  00F8               	movwf	___lwmod@divisor
  1472     0604  3000               	movlw	0
  1473     0605  00F9               	movwf	___lwmod@divisor+1
  1474     0606  082A               	movf	sprintf@prec,w
  1475     0607  00A3               	movwf	??_sprintf
  1476     0608  0723               	addwf	??_sprintf,w
  1477     0609  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1478     060A  0084               	movwf	4
  1479     060B  120A  118A  200D  120A  118A  	fcall	stringdir
  1480     0610  00F0               	movwf	___lwdiv@divisor
  1481     0611  120A  118A  200D  120A  118A  	fcall	stringdir
  1482     0616  00F1               	movwf	___lwdiv@divisor+1
  1483     0617  0829               	movf	sprintf@val+1,w
  1484     0618  00F3               	movwf	___lwdiv@dividend+1
  1485     0619  0828               	movf	sprintf@val,w
  1486     061A  00F2               	movwf	___lwdiv@dividend
  1487     061B  120A  118A  24AD  120A  118A  	fcall	___lwdiv
  1488     0620  0871               	movf	?___lwdiv+1,w
  1489     0621  00FB               	movwf	___lwmod@dividend+1
  1490     0622  0870               	movf	?___lwdiv,w
  1491     0623  00FA               	movwf	___lwmod@dividend
  1492     0624  120A  118A  2431  120A  118A  	fcall	___lwmod
  1493     0629  0878               	movf	?___lwmod,w
  1494     062A  3E30               	addlw	48
  1495     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1496     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1497     062D  00AC               	movwf	sprintf@c
  1498     062E                     l1311:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1501     062E  082B               	movf	sprintf@sp,w
  1502     062F  0084               	movwf	4
  1503     0630  082C               	movf	sprintf@c,w
  1504     0631  1383               	bcf	3,7	;select IRP bank0
  1505     0632  0080               	movwf	0
  1506     0633                     l1313:
  1507     0633  3001               	movlw	1
  1508     0634  00A3               	movwf	??_sprintf
  1509     0635  0823               	movf	??_sprintf,w
  1510     0636  07AB               	addwf	sprintf@sp,f
  1511     0637                     l1315:
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1514     0637  30FF               	movlw	255
  1515     0638  00A3               	movwf	??_sprintf
  1516     0639  0823               	movf	??_sprintf,w
  1517     063A  07AA               	addwf	sprintf@prec,f
  1518     063B  0A2A               	incf	sprintf@prec,w
  1519     063C  1D03               	btfss	3,2
  1520     063D  2E3F               	goto	u631
  1521     063E  2E40               	goto	u630
  1522     063F                     u631:
  1523     063F  2E02               	goto	l1309
  1524     0640                     u630:
  1525     0640                     l1317:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1528     0640  3001               	movlw	1
  1529     0641  07A0               	addwf	sprintf@f,f
  1530     0642  30FF               	movlw	-1
  1531     0643  0720               	addwf	sprintf@f,w
  1532     0644  0084               	movwf	4
  1533     0645  120A  118A  200D  120A  118A  	fcall	stringdir
  1534     064A  00AC               	movwf	sprintf@c
  1535     064B  082C               	movf	sprintf@c,w
  1536     064C  1D03               	btfss	3,2
  1537     064D  2E4F               	goto	u641
  1538     064E  2E50               	goto	u640
  1539     064F                     u641:
  1540     064F  2D9A               	goto	l1277
  1541     0650                     u640:
  1542     0650                     l1319:
  1543                           
  1544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1545     0650  082B               	movf	sprintf@sp,w
  1546     0651  0084               	movwf	4
  1547     0652  1383               	bcf	3,7	;select IRP bank0
  1548     0653  0180               	clrf	0
  1549     0654                     l261:
  1550     0654  0008               	return
  1551     0655                     __end_of_sprintf:
  1552                           
  1553                           	psect	text2
  1554     0431                     __ptext2:	
  1555 ;; *************** function ___lwmod *****************
  1556 ;; Defined at:
  1557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  divisor         2    8[COMMON] unsigned int 
  1560 ;;  dividend        2   10[COMMON] unsigned int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  counter         1   13[COMMON] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2    8[COMMON] unsigned int 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         4       0       0       0       0
  1573 ;;      Locals:         1       0       0       0       0
  1574 ;;      Temps:          1       0       0       0       0
  1575 ;;      Totals:         6       0       0       0       0
  1576 ;;Total ram usage:        6 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_sprintf
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585     0431                     ___lwmod:	
  1586                           ;psect for function ___lwmod
  1587                           
  1588     0431                     l1185:	
  1589                           ;incstack = 0
  1590                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1591                           
  1592     0431  0878               	movf	___lwmod@divisor,w
  1593     0432  0479               	iorwf	___lwmod@divisor+1,w
  1594     0433  1903               	btfsc	3,2
  1595     0434  2C36               	goto	u471
  1596     0435  2C37               	goto	u470
  1597     0436                     u471:
  1598     0436  2C66               	goto	l1203
  1599     0437                     u470:
  1600     0437                     l1187:
  1601     0437  01FD               	clrf	___lwmod@counter
  1602     0438  0AFD               	incf	___lwmod@counter,f
  1603     0439  2C45               	goto	l1193
  1604     043A                     l1189:
  1605     043A  3001               	movlw	1
  1606     043B                     u485:
  1607     043B  1003               	clrc
  1608     043C  0DF8               	rlf	___lwmod@divisor,f
  1609     043D  0DF9               	rlf	___lwmod@divisor+1,f
  1610     043E  3EFF               	addlw	-1
  1611     043F  1D03               	skipz
  1612     0440  2C3B               	goto	u485
  1613     0441                     l1191:
  1614     0441  3001               	movlw	1
  1615     0442  00FC               	movwf	??___lwmod
  1616     0443  087C               	movf	??___lwmod,w
  1617     0444  07FD               	addwf	___lwmod@counter,f
  1618     0445                     l1193:
  1619     0445  1FF9               	btfss	___lwmod@divisor+1,7
  1620     0446  2C48               	goto	u491
  1621     0447  2C49               	goto	u490
  1622     0448                     u491:
  1623     0448  2C3A               	goto	l1189
  1624     0449                     u490:
  1625     0449                     l1195:
  1626     0449  0879               	movf	___lwmod@divisor+1,w
  1627     044A  027B               	subwf	___lwmod@dividend+1,w
  1628     044B  1D03               	skipz
  1629     044C  2C4F               	goto	u505
  1630     044D  0878               	movf	___lwmod@divisor,w
  1631     044E  027A               	subwf	___lwmod@dividend,w
  1632     044F                     u505:
  1633     044F  1C03               	skipc
  1634     0450  2C52               	goto	u501
  1635     0451  2C53               	goto	u500
  1636     0452                     u501:
  1637     0452  2C59               	goto	l1199
  1638     0453                     u500:
  1639     0453                     l1197:
  1640     0453  0878               	movf	___lwmod@divisor,w
  1641     0454  02FA               	subwf	___lwmod@dividend,f
  1642     0455  0879               	movf	___lwmod@divisor+1,w
  1643     0456  1C03               	skipc
  1644     0457  03FB               	decf	___lwmod@dividend+1,f
  1645     0458  02FB               	subwf	___lwmod@dividend+1,f
  1646     0459                     l1199:
  1647     0459  3001               	movlw	1
  1648     045A                     u515:
  1649     045A  1003               	clrc
  1650     045B  0CF9               	rrf	___lwmod@divisor+1,f
  1651     045C  0CF8               	rrf	___lwmod@divisor,f
  1652     045D  3EFF               	addlw	-1
  1653     045E  1D03               	skipz
  1654     045F  2C5A               	goto	u515
  1655     0460                     l1201:
  1656     0460  3001               	movlw	1
  1657     0461  02FD               	subwf	___lwmod@counter,f
  1658     0462  1D03               	btfss	3,2
  1659     0463  2C65               	goto	u521
  1660     0464  2C66               	goto	u520
  1661     0465                     u521:
  1662     0465  2C49               	goto	l1195
  1663     0466                     u520:
  1664     0466                     l1203:
  1665     0466  087B               	movf	___lwmod@dividend+1,w
  1666     0467  00F9               	movwf	?___lwmod+1
  1667     0468  087A               	movf	___lwmod@dividend,w
  1668     0469  00F8               	movwf	?___lwmod
  1669     046A                     l547:
  1670     046A  0008               	return
  1671     046B                     __end_of___lwmod:
  1672                           
  1673                           	psect	text3
  1674     04AD                     __ptext3:	
  1675 ;; *************** function ___lwdiv *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  divisor         2    0[COMMON] unsigned int 
  1680 ;;  dividend        2    2[COMMON] unsigned int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  quotient        2    5[COMMON] unsigned int 
  1683 ;;  counter         1    7[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    0[COMMON] unsigned int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         4       0       0       0       0
  1694 ;;      Locals:         3       0       0       0       0
  1695 ;;      Temps:          1       0       0       0       0
  1696 ;;      Totals:         8       0       0       0       0
  1697 ;;Total ram usage:        8 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_sprintf
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706     04AD                     ___lwdiv:	
  1707                           ;psect for function ___lwdiv
  1708                           
  1709     04AD                     l1159:	
  1710                           ;incstack = 0
  1711                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1712                           
  1713     04AD  01F5               	clrf	___lwdiv@quotient
  1714     04AE  01F6               	clrf	___lwdiv@quotient+1
  1715     04AF                     l1161:
  1716     04AF  0870               	movf	___lwdiv@divisor,w
  1717     04B0  0471               	iorwf	___lwdiv@divisor+1,w
  1718     04B1  1903               	btfsc	3,2
  1719     04B2  2CB4               	goto	u401
  1720     04B3  2CB5               	goto	u400
  1721     04B4                     u401:
  1722     04B4  2CEC               	goto	l1181
  1723     04B5                     u400:
  1724     04B5                     l1163:
  1725     04B5  01F7               	clrf	___lwdiv@counter
  1726     04B6  0AF7               	incf	___lwdiv@counter,f
  1727     04B7  2CC3               	goto	l1169
  1728     04B8                     l1165:
  1729     04B8  3001               	movlw	1
  1730     04B9                     u415:
  1731     04B9  1003               	clrc
  1732     04BA  0DF0               	rlf	___lwdiv@divisor,f
  1733     04BB  0DF1               	rlf	___lwdiv@divisor+1,f
  1734     04BC  3EFF               	addlw	-1
  1735     04BD  1D03               	skipz
  1736     04BE  2CB9               	goto	u415
  1737     04BF                     l1167:
  1738     04BF  3001               	movlw	1
  1739     04C0  00F4               	movwf	??___lwdiv
  1740     04C1  0874               	movf	??___lwdiv,w
  1741     04C2  07F7               	addwf	___lwdiv@counter,f
  1742     04C3                     l1169:
  1743     04C3  1FF1               	btfss	___lwdiv@divisor+1,7
  1744     04C4  2CC6               	goto	u421
  1745     04C5  2CC7               	goto	u420
  1746     04C6                     u421:
  1747     04C6  2CB8               	goto	l1165
  1748     04C7                     u420:
  1749     04C7                     l1171:
  1750     04C7  3001               	movlw	1
  1751     04C8                     u435:
  1752     04C8  1003               	clrc
  1753     04C9  0DF5               	rlf	___lwdiv@quotient,f
  1754     04CA  0DF6               	rlf	___lwdiv@quotient+1,f
  1755     04CB  3EFF               	addlw	-1
  1756     04CC  1D03               	skipz
  1757     04CD  2CC8               	goto	u435
  1758     04CE  0871               	movf	___lwdiv@divisor+1,w
  1759     04CF  0273               	subwf	___lwdiv@dividend+1,w
  1760     04D0  1D03               	skipz
  1761     04D1  2CD4               	goto	u445
  1762     04D2  0870               	movf	___lwdiv@divisor,w
  1763     04D3  0272               	subwf	___lwdiv@dividend,w
  1764     04D4                     u445:
  1765     04D4  1C03               	skipc
  1766     04D5  2CD7               	goto	u441
  1767     04D6  2CD8               	goto	u440
  1768     04D7                     u441:
  1769     04D7  2CDF               	goto	l1177
  1770     04D8                     u440:
  1771     04D8                     l1173:
  1772     04D8  0870               	movf	___lwdiv@divisor,w
  1773     04D9  02F2               	subwf	___lwdiv@dividend,f
  1774     04DA  0871               	movf	___lwdiv@divisor+1,w
  1775     04DB  1C03               	skipc
  1776     04DC  03F3               	decf	___lwdiv@dividend+1,f
  1777     04DD  02F3               	subwf	___lwdiv@dividend+1,f
  1778     04DE                     l1175:
  1779     04DE  1475               	bsf	___lwdiv@quotient,0
  1780     04DF                     l1177:
  1781     04DF  3001               	movlw	1
  1782     04E0                     u455:
  1783     04E0  1003               	clrc
  1784     04E1  0CF1               	rrf	___lwdiv@divisor+1,f
  1785     04E2  0CF0               	rrf	___lwdiv@divisor,f
  1786     04E3  3EFF               	addlw	-1
  1787     04E4  1D03               	skipz
  1788     04E5  2CE0               	goto	u455
  1789     04E6                     l1179:
  1790     04E6  3001               	movlw	1
  1791     04E7  02F7               	subwf	___lwdiv@counter,f
  1792     04E8  1D03               	btfss	3,2
  1793     04E9  2CEB               	goto	u461
  1794     04EA  2CEC               	goto	u460
  1795     04EB                     u461:
  1796     04EB  2CC7               	goto	l1171
  1797     04EC                     u460:
  1798     04EC                     l1181:
  1799     04EC  0876               	movf	___lwdiv@quotient+1,w
  1800     04ED  00F1               	movwf	?___lwdiv+1
  1801     04EE  0875               	movf	___lwdiv@quotient,w
  1802     04EF  00F0               	movwf	?___lwdiv
  1803     04F0                     l537:
  1804     04F0  0008               	return
  1805     04F1                     __end_of___lwdiv:
  1806                           
  1807                           	psect	text4
  1808     0364                     __ptext4:	
  1809 ;; *************** function _spiWrite *****************
  1810 ;; Defined at:
  1811 ;;		line 34 in file "../Lab3slave.X/SPI.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  dat             1    wreg     unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  dat             1    0[COMMON] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         1       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         1       0       0       0       0
  1829 ;;Total ram usage:        1 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838     0364                     _spiWrite:	
  1839                           ;psect for function _spiWrite
  1840                           
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _spiWrite: [wreg]
  1844                           ;spiWrite@dat stored from wreg
  1845     0364  00F0               	movwf	spiWrite@dat
  1846     0365                     l1207:
  1847                           
  1848                           ;../Lab3slave.X/SPI.c: 34: void spiWrite(char dat);../Lab3slave.X/SPI.c: 35: {;../Lab3sl
      +                          ave.X/SPI.c: 36:     SSPBUF = dat;
  1849     0365  0870               	movf	spiWrite@dat,w
  1850     0366  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0367  1303               	bcf	3,6	;RP1=0, select bank0
  1852     0368  0093               	movwf	19	;volatile
  1853     0369                     l26:
  1854     0369  0008               	return
  1855     036A                     __end_of_spiWrite:
  1856                           
  1857                           	psect	text5
  1858     0371                     __ptext5:	
  1859 ;; *************** function _spiRead *****************
  1860 ;; Defined at:
  1861 ;;		line 47 in file "../Lab3slave.X/SPI.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      unsigned char 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 1
  1882 ;; This function calls:
  1883 ;;		_spiReceiveWait
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889     0371                     _spiRead:	
  1890                           ;psect for function _spiRead
  1891                           
  1892     0371                     l1209:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1895                           
  1896                           
  1897                           ;../Lab3slave.X/SPI.c: 49:     spiReceiveWait();
  1898     0371  120A  118A  236A  120A  118A  	fcall	_spiReceiveWait
  1899     0376                     l1211:
  1900                           
  1901                           ;../Lab3slave.X/SPI.c: 50:     return(SSPBUF);
  1902     0376  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0377  1303               	bcf	3,6	;RP1=0, select bank0
  1904     0378  0813               	movf	19,w	;volatile
  1905     0379                     l34:
  1906     0379  0008               	return
  1907     037A                     __end_of_spiRead:
  1908                           
  1909                           	psect	text6
  1910     036A                     __ptext6:	
  1911 ;; *************** function _spiReceiveWait *****************
  1912 ;; Defined at:
  1913 ;;		line 29 in file "../Lab3slave.X/SPI.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1927 ;;      Params:         0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_spiRead
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940     036A                     _spiReceiveWait:	
  1941                           ;psect for function _spiReceiveWait
  1942                           
  1943     036A                     l1127:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _spiReceiveWait: []
  1946                           
  1947     036A                     l20:	
  1948                           ;../Lab3slave.X/SPI.c: 31:     while ( !SSPSTATbits.BF );
  1949                           
  1950     036A  1683               	bsf	3,5	;RP0=1, select bank1
  1951     036B  1303               	bcf	3,6	;RP1=0, select bank1
  1952     036C  1C14               	btfss	20,0	;volatile
  1953     036D  2B6F               	goto	u381
  1954     036E  2B70               	goto	u380
  1955     036F                     u381:
  1956     036F  2B6A               	goto	l20
  1957     0370                     u380:
  1958     0370                     l23:
  1959     0370  0008               	return
  1960     0371                     __end_of_spiReceiveWait:
  1961                           
  1962                           	psect	text7
  1963     03D9                     __ptext7:	
  1964 ;; *************** function _setup *****************
  1965 ;; Defined at:
  1966 ;;		line 152 in file "Postlab3master.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 1
  1987 ;; This function calls:
  1988 ;;		_spiInit
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994     03D9                     _setup:	
  1995                           ;psect for function _setup
  1996                           
  1997     03D9                     l1255:	
  1998                           ;incstack = 0
  1999                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2000                           
  2001                           
  2002                           ;Postlab3master.c: 153:     ANSEL = 0;
  2003     03D9  1683               	bsf	3,5	;RP0=1, select bank3
  2004     03DA  1703               	bsf	3,6	;RP1=1, select bank3
  2005     03DB  0188               	clrf	8	;volatile
  2006                           
  2007                           ;Postlab3master.c: 154:     ANSELH = 0;
  2008     03DC  0189               	clrf	9	;volatile
  2009     03DD                     l1257:
  2010                           
  2011                           ;Postlab3master.c: 155:     TRISC1 = 0;
  2012     03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2013     03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2014     03DF  1087               	bcf	7,1	;volatile
  2015     03E0                     l1259:
  2016                           
  2017                           ;Postlab3master.c: 156:     TRISC2 = 0;
  2018     03E0  1107               	bcf	7,2	;volatile
  2019     03E1                     l1261:
  2020                           
  2021                           ;Postlab3master.c: 157:     TRISC6 = 0;
  2022     03E1  1307               	bcf	7,6	;volatile
  2023     03E2                     l1263:
  2024                           
  2025                           ;Postlab3master.c: 158:     TRISC7 = 0;
  2026     03E2  1387               	bcf	7,7	;volatile
  2027                           
  2028                           ;Postlab3master.c: 159:     TRISA =0;
  2029     03E3  0185               	clrf	5	;volatile
  2030                           
  2031                           ;Postlab3master.c: 160:     TRISB = 0;
  2032     03E4  0186               	clrf	6	;volatile
  2033                           
  2034                           ;Postlab3master.c: 161:     TRISD = 0;
  2035     03E5  0188               	clrf	8	;volatile
  2036                           
  2037                           ;Postlab3master.c: 162:     PORTA = 0;
  2038     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2039     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2040     03E8  0185               	clrf	5	;volatile
  2041                           
  2042                           ;Postlab3master.c: 163:     PORTB = 0;
  2043     03E9  0186               	clrf	6	;volatile
  2044                           
  2045                           ;Postlab3master.c: 164:     PORTD = 0;
  2046     03EA  0188               	clrf	8	;volatile
  2047     03EB                     l1265:
  2048                           
  2049                           ;Postlab3master.c: 165:     PORTCbits.RC1 = 1;
  2050     03EB  1487               	bsf	7,1	;volatile
  2051     03EC                     l1267:
  2052                           
  2053                           ;Postlab3master.c: 166:     PORTCbits.RC2 = 1;
  2054     03EC  1507               	bsf	7,2	;volatile
  2055     03ED                     l1269:
  2056                           
  2057                           ;Postlab3master.c: 167:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLO
      +                          CK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2058     03ED  01F0               	clrf	spiInit@sDataSample
  2059     03EE  01F1               	clrf	spiInit@sClockIdle
  2060     03EF  01F2               	clrf	spiInit@sTransmitEdge
  2061     03F0  3020               	movlw	32
  2062     03F1  120A  118A  2387  120A  118A  	fcall	_spiInit
  2063     03F6                     l1271:
  2064                           
  2065                           ;Postlab3master.c: 169:     OSCCONbits.IRCF = 0b0111;
  2066     03F6  3070               	movlw	112
  2067     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2068     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2069     03F9  048F               	iorwf	15,f	;volatile
  2070     03FA                     l1273:
  2071                           
  2072                           ;Postlab3master.c: 170:     OSCCONbits.SCS = 1;
  2073     03FA  140F               	bsf	15,0	;volatile
  2074     03FB                     l154:
  2075     03FB  0008               	return
  2076     03FC                     __end_of_setup:
  2077                           
  2078                           	psect	text8
  2079     0387                     __ptext8:	
  2080 ;; *************** function _spiInit *****************
  2081 ;; Defined at:
  2082 ;;		line 12 in file "../Lab3slave.X/SPI.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  sType           1    wreg     enum E1292
  2085 ;;  sDataSample     1    0[COMMON] enum E1300
  2086 ;;  sClockIdle      1    1[COMMON] enum E1304
  2087 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  sType           1    3[COMMON] enum E1292
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         3       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0
  2102 ;;      Totals:         4       0       0       0       0
  2103 ;;Total ram usage:        4 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; This function calls:
  2106 ;;		Nothing
  2107 ;; This function is called by:
  2108 ;;		_setup
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     0387                     _spiInit:	
  2113                           ;psect for function _spiInit
  2114                           
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2118                           ;spiInit@sType stored from wreg
  2119     0387  00F3               	movwf	spiInit@sType
  2120     0388                     l1117:
  2121                           
  2122                           ;../Lab3slave.X/SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi
      +                          _Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge);../Lab3slave.X/SPI.c: 13: {;../
      +                          Lab3slave.X/SPI.c: 14:     TRISC5 = 0;
  2123     0388  1683               	bsf	3,5	;RP0=1, select bank1
  2124     0389  1303               	bcf	3,6	;RP1=0, select bank1
  2125     038A  1287               	bcf	7,5	;volatile
  2126                           
  2127                           ;../Lab3slave.X/SPI.c: 15:     if(sType & 0b00000100)
  2128     038B  1D73               	btfss	spiInit@sType,2
  2129     038C  2B8E               	goto	u371
  2130     038D  2B8F               	goto	u370
  2131     038E                     u371:
  2132     038E  2B93               	goto	l1123
  2133     038F                     u370:
  2134     038F                     l1119:
  2135                           
  2136                           ;../Lab3slave.X/SPI.c: 16:     {;../Lab3slave.X/SPI.c: 17:         SSPSTAT = sTransmitEd
      +                          ge;
  2137     038F  0872               	movf	spiInit@sTransmitEdge,w
  2138     0390  0094               	movwf	20	;volatile
  2139     0391                     l1121:
  2140                           
  2141                           ;../Lab3slave.X/SPI.c: 18:         TRISC3 = 1;
  2142     0391  1587               	bsf	7,3	;volatile
  2143                           
  2144                           ;../Lab3slave.X/SPI.c: 19:     }
  2145     0392  2B97               	goto	l16
  2146     0393                     l1123:
  2147                           
  2148                           ;../Lab3slave.X/SPI.c: 21:     {;../Lab3slave.X/SPI.c: 22:         SSPSTAT = sDataSample
      +                           | sTransmitEdge;
  2149     0393  0870               	movf	spiInit@sDataSample,w
  2150     0394  0472               	iorwf	spiInit@sTransmitEdge,w
  2151     0395  0094               	movwf	20	;volatile
  2152     0396                     l1125:
  2153                           
  2154                           ;../Lab3slave.X/SPI.c: 23:         TRISC3 = 0;
  2155     0396  1187               	bcf	7,3	;volatile
  2156     0397                     l16:	
  2157                           ;../Lab3slave.X/SPI.c: 24:     }
  2158                           
  2159                           
  2160                           ;../Lab3slave.X/SPI.c: 26:     SSPCON = sType | sClockIdle;
  2161     0397  0873               	movf	spiInit@sType,w
  2162     0398  0471               	iorwf	spiInit@sClockIdle,w
  2163     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2164     039A  1303               	bcf	3,6	;RP1=0, select bank0
  2165     039B  0094               	movwf	20	;volatile
  2166     039C                     l17:
  2167     039C  0008               	return
  2168     039D                     __end_of_spiInit:
  2169                           
  2170                           	psect	text9
  2171     046B                     __ptext9:	
  2172 ;; *************** function _Lcd_Write_String *****************
  2173 ;; Defined at:
  2174 ;;		line 98 in file "LCD.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  a               2    5[COMMON] PTR unsigned char 
  2177 ;;		 -> main@s3(20), STR_5(5), main@s2(20), STR_3(5), 
  2178 ;;		 -> main@s(20), STR_1(5), 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  i               2   10[COMMON] int 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         2       0       0       0       0
  2191 ;;      Locals:         2       0       0       0       0
  2192 ;;      Temps:          3       0       0       0       0
  2193 ;;      Totals:         7       0       0       0       0
  2194 ;;Total ram usage:        7 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 2
  2197 ;; This function calls:
  2198 ;;		_Lcd_Write_Char
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     046B                     _Lcd_Write_String:	
  2205                           ;psect for function _Lcd_Write_String
  2206                           
  2207     046B                     l1247:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2210                           
  2211                           
  2212                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2213     046B  01FA               	clrf	Lcd_Write_String@i
  2214     046C  01FB               	clrf	Lcd_Write_String@i+1
  2215     046D  2C90               	goto	l1253
  2216     046E                     l1249:
  2217                           
  2218                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2219     046E  087A               	movf	Lcd_Write_String@i,w
  2220     046F  0775               	addwf	Lcd_Write_String@a,w
  2221     0470  00F8               	movwf	??_Lcd_Write_String+1
  2222     0471  0876               	movf	Lcd_Write_String@a+1,w
  2223     0472  00F7               	movwf	??_Lcd_Write_String
  2224     0473  1803               	skipnc
  2225     0474  0AF7               	incf	??_Lcd_Write_String,f
  2226     0475  1FFA               	btfss	Lcd_Write_String@i,7
  2227     0476  2C78               	goto	u570
  2228     0477  03F7               	decf	??_Lcd_Write_String,f
  2229     0478                     u570:
  2230     0478  0877               	movf	??_Lcd_Write_String,w
  2231     0479  00F9               	movwf	??_Lcd_Write_String+2
  2232     047A  0879               	movf	??_Lcd_Write_String+2,w
  2233     047B  1283               	bcf	3,5	;RP0=0, select bank0
  2234     047C  1303               	bcf	3,6	;RP1=0, select bank0
  2235     047D  00FF               	movwf	btemp+1
  2236     047E  0878               	movf	??_Lcd_Write_String+1,w
  2237     047F  0084               	movwf	4
  2238     0480  120A  118A  2003  120A  118A  	fcall	stringtab
  2239     0485  120A  118A  23FC  120A  118A  	fcall	_Lcd_Write_Char
  2240     048A                     l1251:
  2241     048A  3001               	movlw	1
  2242     048B  07FA               	addwf	Lcd_Write_String@i,f
  2243     048C  1803               	skipnc
  2244     048D  0AFB               	incf	Lcd_Write_String@i+1,f
  2245     048E  3000               	movlw	0
  2246     048F  07FB               	addwf	Lcd_Write_String@i+1,f
  2247     0490                     l1253:
  2248     0490  087A               	movf	Lcd_Write_String@i,w
  2249     0491  0775               	addwf	Lcd_Write_String@a,w
  2250     0492  00F8               	movwf	??_Lcd_Write_String+1
  2251     0493  0876               	movf	Lcd_Write_String@a+1,w
  2252     0494  00F7               	movwf	??_Lcd_Write_String
  2253     0495  1803               	skipnc
  2254     0496  0AF7               	incf	??_Lcd_Write_String,f
  2255     0497  1FFA               	btfss	Lcd_Write_String@i,7
  2256     0498  2C9A               	goto	u580
  2257     0499  03F7               	decf	??_Lcd_Write_String,f
  2258     049A                     u580:
  2259     049A  0877               	movf	??_Lcd_Write_String,w
  2260     049B  00F9               	movwf	??_Lcd_Write_String+2
  2261     049C  0879               	movf	??_Lcd_Write_String+2,w
  2262     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2263     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2264     049F  00FF               	movwf	btemp+1
  2265     04A0  0878               	movf	??_Lcd_Write_String+1,w
  2266     04A1  0084               	movwf	4
  2267     04A2  120A  118A  2003  120A  118A  	fcall	stringtab
  2268     04A7  3A00               	xorlw	0
  2269     04A8  1D03               	skipz
  2270     04A9  2CAB               	goto	u591
  2271     04AA  2CAC               	goto	u590
  2272     04AB                     u591:
  2273     04AB  2C6E               	goto	l1249
  2274     04AC                     u590:
  2275     04AC                     l83:
  2276     04AC  0008               	return
  2277     04AD                     __end_of_Lcd_Write_String:
  2278                           
  2279                           	psect	text10
  2280     03FC                     __ptext10:	
  2281 ;; *************** function _Lcd_Write_Char *****************
  2282 ;; Defined at:
  2283 ;;		line 83 in file "LCD.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  a               1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  a               1    4[COMMON] unsigned char 
  2288 ;;  y               1    3[COMMON] unsigned char 
  2289 ;;  temp            1    2[COMMON] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, pclath, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       0       0       0       0
  2300 ;;      Locals:         3       0       0       0       0
  2301 ;;      Temps:          1       0       0       0       0
  2302 ;;      Totals:         4       0       0       0       0
  2303 ;;Total ram usage:        4 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 1
  2306 ;; This function calls:
  2307 ;;		_Lcd_Port
  2308 ;; This function is called by:
  2309 ;;		_Lcd_Write_String
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     03FC                     _Lcd_Write_Char:	
  2314                           ;psect for function _Lcd_Write_Char
  2315                           
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2319                           ;Lcd_Write_Char@a stored from wreg
  2320     03FC  00F4               	movwf	Lcd_Write_Char@a
  2321     03FD                     l1139:
  2322                           
  2323                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2324     03FD  0874               	movf	Lcd_Write_Char@a,w
  2325     03FE  390F               	andlw	15
  2326     03FF  00F2               	movwf	Lcd_Write_Char@temp
  2327                           
  2328                           ;LCD.c: 86:     y = a & 0xF0;
  2329     0400  0874               	movf	Lcd_Write_Char@a,w
  2330     0401  39F0               	andlw	240
  2331     0402  00F3               	movwf	Lcd_Write_Char@y
  2332     0403                     l1141:
  2333                           
  2334                           ;LCD.c: 87:     PORTCbits.RC6 = 1;
  2335     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0405  1707               	bsf	7,6	;volatile
  2338     0406                     l1143:
  2339                           
  2340                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2341     0406  0873               	movf	Lcd_Write_Char@y,w
  2342     0407  00F1               	movwf	??_Lcd_Write_Char
  2343     0408  3004               	movlw	4
  2344     0409                     u395:
  2345     0409  1003               	clrc
  2346     040A  0CF1               	rrf	??_Lcd_Write_Char,f
  2347     040B  3EFF               	addlw	-1
  2348     040C  1D03               	skipz
  2349     040D  2C09               	goto	u395
  2350     040E  0871               	movf	??_Lcd_Write_Char,w
  2351     040F  120A  118A  23B7  120A  118A  	fcall	_Lcd_Port
  2352     0414                     l1145:
  2353                           
  2354                           ;LCD.c: 89:     RC7 = 1;
  2355     0414  1283               	bcf	3,5	;RP0=0, select bank0
  2356     0415  1303               	bcf	3,6	;RP1=0, select bank0
  2357     0416  1787               	bsf	7,7	;volatile
  2358     0417                     l1147:
  2359                           
  2360                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2361     0417  301A               	movlw	26
  2362     0418  00F1               	movwf	??_Lcd_Write_Char
  2363     0419                     u807:
  2364     0419  0BF1               	decfsz	??_Lcd_Write_Char,f
  2365     041A  2C19               	goto	u807
  2366     041B  0000               	nop
  2367     041C                     l1149:
  2368                           
  2369                           ;LCD.c: 91:     RC7 = 0;
  2370     041C  1283               	bcf	3,5	;RP0=0, select bank0
  2371     041D  1303               	bcf	3,6	;RP1=0, select bank0
  2372     041E  1387               	bcf	7,7	;volatile
  2373     041F                     l1151:
  2374                           
  2375                           ;LCD.c: 92:     Lcd_Port(temp);
  2376     041F  0872               	movf	Lcd_Write_Char@temp,w
  2377     0420  120A  118A  23B7  120A  118A  	fcall	_Lcd_Port
  2378     0425                     l1153:
  2379                           
  2380                           ;LCD.c: 93:     RC7 = 1;
  2381     0425  1283               	bcf	3,5	;RP0=0, select bank0
  2382     0426  1303               	bcf	3,6	;RP1=0, select bank0
  2383     0427  1787               	bsf	7,7	;volatile
  2384     0428                     l1155:
  2385                           
  2386                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2387     0428  301A               	movlw	26
  2388     0429  00F1               	movwf	??_Lcd_Write_Char
  2389     042A                     u817:
  2390     042A  0BF1               	decfsz	??_Lcd_Write_Char,f
  2391     042B  2C2A               	goto	u817
  2392     042C  0000               	nop
  2393     042D                     l1157:
  2394                           
  2395                           ;LCD.c: 95:     RC7 = 0;
  2396     042D  1283               	bcf	3,5	;RP0=0, select bank0
  2397     042E  1303               	bcf	3,6	;RP1=0, select bank0
  2398     042F  1387               	bcf	7,7	;volatile
  2399     0430                     l77:
  2400     0430  0008               	return
  2401     0431                     __end_of_Lcd_Write_Char:
  2402                           
  2403                           	psect	text11
  2404     04F1                     __ptext11:	
  2405 ;; *************** function _Lcd_Set_Cursor *****************
  2406 ;; Defined at:
  2407 ;;		line 48 in file "LCD.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  a               1    wreg     unsigned char 
  2410 ;;  b               1    4[COMMON] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  a               1    6[COMMON] unsigned char 
  2413 ;;  temp            1    9[COMMON] unsigned char 
  2414 ;;  y               1    8[COMMON] unsigned char 
  2415 ;;  z               1    7[COMMON] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, pclath, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         1       0       0       0       0
  2426 ;;      Locals:         4       0       0       0       0
  2427 ;;      Temps:          1       0       0       0       0
  2428 ;;      Totals:         6       0       0       0       0
  2429 ;;Total ram usage:        6 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 2
  2432 ;; This function calls:
  2433 ;;		_Lcd_Cmd
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439     04F1                     _Lcd_Set_Cursor:	
  2440                           ;psect for function _Lcd_Set_Cursor
  2441                           
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2445                           ;Lcd_Set_Cursor@a stored from wreg
  2446     04F1  00F6               	movwf	Lcd_Set_Cursor@a
  2447     04F2                     l1217:
  2448                           
  2449                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2450     04F2  0376               	decf	Lcd_Set_Cursor@a,w
  2451     04F3  1D03               	btfss	3,2
  2452     04F4  2CF6               	goto	u531
  2453     04F5  2CF7               	goto	u530
  2454     04F6                     u531:
  2455     04F6  2D14               	goto	l1227
  2456     04F7                     u530:
  2457     04F7                     l1219:
  2458                           
  2459                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2460     04F7  0874               	movf	Lcd_Set_Cursor@b,w
  2461     04F8  3E7F               	addlw	127
  2462     04F9  00F9               	movwf	Lcd_Set_Cursor@temp
  2463                           
  2464                           ;LCD.c: 52:         z = temp >> 4;
  2465     04FA  0879               	movf	Lcd_Set_Cursor@temp,w
  2466     04FB  00F5               	movwf	??_Lcd_Set_Cursor
  2467     04FC  3004               	movlw	4
  2468     04FD                     u545:
  2469     04FD  1003               	clrc
  2470     04FE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2471     04FF  3EFF               	addlw	-1
  2472     0500  1D03               	skipz
  2473     0501  2CFD               	goto	u545
  2474     0502  0875               	movf	??_Lcd_Set_Cursor,w
  2475     0503  00F7               	movwf	Lcd_Set_Cursor@z
  2476     0504                     l1221:
  2477                           
  2478                           ;LCD.c: 53:         y = temp & 0x0F;
  2479     0504  0879               	movf	Lcd_Set_Cursor@temp,w
  2480     0505  390F               	andlw	15
  2481     0506  00F8               	movwf	Lcd_Set_Cursor@y
  2482     0507                     l1223:
  2483                           
  2484                           ;LCD.c: 54:         Lcd_Cmd(z);
  2485     0507  0877               	movf	Lcd_Set_Cursor@z,w
  2486     0508  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2487     050D                     l1225:
  2488                           
  2489                           ;LCD.c: 55:         Lcd_Cmd(y);
  2490     050D  0878               	movf	Lcd_Set_Cursor@y,w
  2491     050E  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2492                           
  2493                           ;LCD.c: 56:     } else if (a == 2) {
  2494     0513  2D36               	goto	l71
  2495     0514                     l1227:
  2496     0514  3002               	movlw	2
  2497     0515  0676               	xorwf	Lcd_Set_Cursor@a,w
  2498     0516  1D03               	btfss	3,2
  2499     0517  2D19               	goto	u551
  2500     0518  2D1A               	goto	u550
  2501     0519                     u551:
  2502     0519  2D36               	goto	l71
  2503     051A                     u550:
  2504     051A                     l1229:
  2505                           
  2506                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2507     051A  0874               	movf	Lcd_Set_Cursor@b,w
  2508     051B  3EBF               	addlw	191
  2509     051C  00F9               	movwf	Lcd_Set_Cursor@temp
  2510                           
  2511                           ;LCD.c: 58:         z = temp >> 4;
  2512     051D  0879               	movf	Lcd_Set_Cursor@temp,w
  2513     051E  00F5               	movwf	??_Lcd_Set_Cursor
  2514     051F  3004               	movlw	4
  2515     0520                     u565:
  2516     0520  1003               	clrc
  2517     0521  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2518     0522  3EFF               	addlw	-1
  2519     0523  1D03               	skipz
  2520     0524  2D20               	goto	u565
  2521     0525  0875               	movf	??_Lcd_Set_Cursor,w
  2522     0526  00F7               	movwf	Lcd_Set_Cursor@z
  2523     0527                     l1231:
  2524                           
  2525                           ;LCD.c: 59:         y = temp & 0x0F;
  2526     0527  0879               	movf	Lcd_Set_Cursor@temp,w
  2527     0528  390F               	andlw	15
  2528     0529  00F8               	movwf	Lcd_Set_Cursor@y
  2529     052A                     l1233:
  2530                           
  2531                           ;LCD.c: 60:         Lcd_Cmd(z);
  2532     052A  0877               	movf	Lcd_Set_Cursor@z,w
  2533     052B  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2534     0530                     l1235:
  2535                           
  2536                           ;LCD.c: 61:         Lcd_Cmd(y);
  2537     0530  0878               	movf	Lcd_Set_Cursor@y,w
  2538     0531  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2539     0536                     l71:
  2540     0536  0008               	return
  2541     0537                     __end_of_Lcd_Set_Cursor:
  2542                           
  2543                           	psect	text12
  2544     0537                     __ptext12:	
  2545 ;; *************** function _Lcd_Init *****************
  2546 ;; Defined at:
  2547 ;;		line 65 in file "LCD.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2561 ;;      Params:         0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0
  2563 ;;      Temps:          2       0       0       0       0
  2564 ;;      Totals:         2       0       0       0       0
  2565 ;;Total ram usage:        2 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 2
  2568 ;; This function calls:
  2569 ;;		_Lcd_Cmd
  2570 ;;		_Lcd_Port
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576     0537                     _Lcd_Init:	
  2577                           ;psect for function _Lcd_Init
  2578                           
  2579     0537                     l1237:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2582                           
  2583                           
  2584                           ;LCD.c: 66:     Lcd_Port(0x00);
  2585     0537  3000               	movlw	0
  2586     0538  120A  118A  23B7  120A  118A  	fcall	_Lcd_Port
  2587     053D                     l1239:
  2588                           
  2589                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2590     053D  3034               	movlw	52
  2591     053E  00F5               	movwf	??_Lcd_Init+1
  2592     053F  30F1               	movlw	241
  2593     0540  00F4               	movwf	??_Lcd_Init
  2594     0541                     u827:
  2595     0541  0BF4               	decfsz	??_Lcd_Init,f
  2596     0542  2D41               	goto	u827
  2597     0543  0BF5               	decfsz	??_Lcd_Init+1,f
  2598     0544  2D41               	goto	u827
  2599     0545  2D46               	nop2
  2600     0546                     l1241:
  2601                           
  2602                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  2603     0546  3003               	movlw	3
  2604     0547  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2605                           
  2606                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2607     054C  300D               	movlw	13
  2608     054D  00F5               	movwf	??_Lcd_Init+1
  2609     054E  30FB               	movlw	251
  2610     054F  00F4               	movwf	??_Lcd_Init
  2611     0550                     u837:
  2612     0550  0BF4               	decfsz	??_Lcd_Init,f
  2613     0551  2D50               	goto	u837
  2614     0552  0BF5               	decfsz	??_Lcd_Init+1,f
  2615     0553  2D50               	goto	u837
  2616     0554  2D55               	nop2
  2617     0555                     l1243:
  2618                           
  2619                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  2620     0555  3003               	movlw	3
  2621     0556  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2622     055B                     l1245:
  2623                           
  2624                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2625     055B  301D               	movlw	29
  2626     055C  00F5               	movwf	??_Lcd_Init+1
  2627     055D  3091               	movlw	145
  2628     055E  00F4               	movwf	??_Lcd_Init
  2629     055F                     u847:
  2630     055F  0BF4               	decfsz	??_Lcd_Init,f
  2631     0560  2D5F               	goto	u847
  2632     0561  0BF5               	decfsz	??_Lcd_Init+1,f
  2633     0562  2D5F               	goto	u847
  2634                           
  2635                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  2636     0563  3003               	movlw	3
  2637     0564  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2638                           
  2639                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  2640     0569  3002               	movlw	2
  2641     056A  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2642                           
  2643                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  2644     056F  3002               	movlw	2
  2645     0570  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2646                           
  2647                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  2648     0575  3008               	movlw	8
  2649     0576  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2650                           
  2651                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  2652     057B  3000               	movlw	0
  2653     057C  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2654                           
  2655                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  2656     0581  300C               	movlw	12
  2657     0582  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2658                           
  2659                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  2660     0587  3000               	movlw	0
  2661     0588  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2662                           
  2663                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  2664     058D  3006               	movlw	6
  2665     058E  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2666     0593                     l74:
  2667     0593  0008               	return
  2668     0594                     __end_of_Lcd_Init:
  2669                           
  2670                           	psect	text13
  2671     037A                     __ptext13:	
  2672 ;; *************** function _Lcd_Clear *****************
  2673 ;; Defined at:
  2674 ;;		line 43 in file "LCD.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 2
  2695 ;; This function calls:
  2696 ;;		_Lcd_Cmd
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     037A                     _Lcd_Clear:	
  2703                           ;psect for function _Lcd_Clear
  2704                           
  2705     037A                     l1215:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2708                           
  2709                           
  2710                           ;LCD.c: 44:     Lcd_Cmd(0);
  2711     037A  3000               	movlw	0
  2712     037B  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2713                           
  2714                           ;LCD.c: 45:     Lcd_Cmd(1);
  2715     0380  3001               	movlw	1
  2716     0381  120A  118A  239D  120A  118A  	fcall	_Lcd_Cmd
  2717     0386                     l65:
  2718     0386  0008               	return
  2719     0387                     __end_of_Lcd_Clear:
  2720                           
  2721                           	psect	text14
  2722     039D                     __ptext14:	
  2723 ;; *************** function _Lcd_Cmd *****************
  2724 ;; Defined at:
  2725 ;;		line 35 in file "LCD.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  a               1    wreg     unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  a               1    3[COMMON] unsigned char 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2739 ;;      Params:         0       0       0       0       0
  2740 ;;      Locals:         1       0       0       0       0
  2741 ;;      Temps:          2       0       0       0       0
  2742 ;;      Totals:         3       0       0       0       0
  2743 ;;Total ram usage:        3 bytes
  2744 ;; Hardware stack levels used: 1
  2745 ;; Hardware stack levels required when called: 1
  2746 ;; This function calls:
  2747 ;;		_Lcd_Port
  2748 ;; This function is called by:
  2749 ;;		_Lcd_Clear
  2750 ;;		_Lcd_Set_Cursor
  2751 ;;		_Lcd_Init
  2752 ;;		_Lcd_Shift_Right
  2753 ;;		_Lcd_Shift_Left
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757     039D                     _Lcd_Cmd:	
  2758                           ;psect for function _Lcd_Cmd
  2759                           
  2760                           
  2761                           ;incstack = 0
  2762                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2763                           ;Lcd_Cmd@a stored from wreg
  2764     039D  00F3               	movwf	Lcd_Cmd@a
  2765     039E                     l1129:
  2766                           
  2767                           ;LCD.c: 36:     PORTCbits.RC6 = 0;
  2768     039E  1283               	bcf	3,5	;RP0=0, select bank0
  2769     039F  1303               	bcf	3,6	;RP1=0, select bank0
  2770     03A0  1307               	bcf	7,6	;volatile
  2771     03A1                     l1131:
  2772                           
  2773                           ;LCD.c: 37:     Lcd_Port(a);
  2774     03A1  0873               	movf	Lcd_Cmd@a,w
  2775     03A2  120A  118A  23B7  120A  118A  	fcall	_Lcd_Port
  2776     03A7                     l1133:
  2777                           
  2778                           ;LCD.c: 38:     RC7 = 1;
  2779     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2780     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2781     03A9  1787               	bsf	7,7	;volatile
  2782     03AA                     l1135:
  2783                           
  2784                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2785     03AA  300B               	movlw	11
  2786     03AB  00F2               	movwf	??_Lcd_Cmd+1
  2787     03AC  3062               	movlw	98
  2788     03AD  00F1               	movwf	??_Lcd_Cmd
  2789     03AE                     u857:
  2790     03AE  0BF1               	decfsz	??_Lcd_Cmd,f
  2791     03AF  2BAE               	goto	u857
  2792     03B0  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2793     03B1  2BAE               	goto	u857
  2794     03B2  0000               	nop
  2795     03B3                     l1137:
  2796                           
  2797                           ;LCD.c: 40:     RC7 = 0;
  2798     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2799     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2800     03B5  1387               	bcf	7,7	;volatile
  2801     03B6                     l62:
  2802     03B6  0008               	return
  2803     03B7                     __end_of_Lcd_Cmd:
  2804                           
  2805                           	psect	text15
  2806     03B7                     __ptext15:	
  2807 ;; *************** function _Lcd_Port *****************
  2808 ;; Defined at:
  2809 ;;		line 13 in file "LCD.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  a               1    wreg     unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  a               1    0[COMMON] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       0       0       0       0
  2824 ;;      Locals:         1       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         1       0       0       0       0
  2827 ;;Total ram usage:        1 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_Lcd_Cmd
  2833 ;;		_Lcd_Init
  2834 ;;		_Lcd_Write_Char
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838     03B7                     _Lcd_Port:	
  2839                           ;psect for function _Lcd_Port
  2840                           
  2841                           
  2842                           ;incstack = 0
  2843                           ; Regs used in _Lcd_Port: [wreg]
  2844                           ;Lcd_Port@a stored from wreg
  2845     03B7  00F0               	movwf	Lcd_Port@a
  2846     03B8                     l1107:
  2847                           
  2848                           ;LCD.c: 14:     if (a & 1)
  2849     03B8  1C70               	btfss	Lcd_Port@a,0
  2850     03B9  2BBB               	goto	u331
  2851     03BA  2BBC               	goto	u330
  2852     03BB                     u331:
  2853     03BB  2BC0               	goto	l51
  2854     03BC                     u330:
  2855     03BC                     l1109:
  2856                           
  2857                           ;LCD.c: 15:         RD4 = 1;
  2858     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2859     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2860     03BE  1608               	bsf	8,4	;volatile
  2861     03BF  2BC3               	goto	l52
  2862     03C0                     l51:	
  2863                           ;LCD.c: 16:     else
  2864                           
  2865                           
  2866                           ;LCD.c: 17:         RD4 = 0;
  2867     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2868     03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2869     03C2  1208               	bcf	8,4	;volatile
  2870     03C3                     l52:
  2871                           
  2872                           ;LCD.c: 19:     if (a & 2)
  2873     03C3  1CF0               	btfss	Lcd_Port@a,1
  2874     03C4  2BC6               	goto	u341
  2875     03C5  2BC7               	goto	u340
  2876     03C6                     u341:
  2877     03C6  2BC9               	goto	l53
  2878     03C7                     u340:
  2879     03C7                     l1111:
  2880                           
  2881                           ;LCD.c: 20:         RD5 = 1;
  2882     03C7  1688               	bsf	8,5	;volatile
  2883     03C8  2BCA               	goto	l54
  2884     03C9                     l53:	
  2885                           ;LCD.c: 21:     else
  2886                           
  2887                           
  2888                           ;LCD.c: 22:         RD5 = 0;
  2889     03C9  1288               	bcf	8,5	;volatile
  2890     03CA                     l54:
  2891                           
  2892                           ;LCD.c: 24:     if (a & 4)
  2893     03CA  1D70               	btfss	Lcd_Port@a,2
  2894     03CB  2BCD               	goto	u351
  2895     03CC  2BCE               	goto	u350
  2896     03CD                     u351:
  2897     03CD  2BD0               	goto	l55
  2898     03CE                     u350:
  2899     03CE                     l1113:
  2900                           
  2901                           ;LCD.c: 25:         RD6 = 1;
  2902     03CE  1708               	bsf	8,6	;volatile
  2903     03CF  2BD1               	goto	l56
  2904     03D0                     l55:	
  2905                           ;LCD.c: 26:     else
  2906                           
  2907                           
  2908                           ;LCD.c: 27:         RD6 = 0;
  2909     03D0  1308               	bcf	8,6	;volatile
  2910     03D1                     l56:
  2911                           
  2912                           ;LCD.c: 29:     if (a & 8)
  2913     03D1  1DF0               	btfss	Lcd_Port@a,3
  2914     03D2  2BD4               	goto	u361
  2915     03D3  2BD5               	goto	u360
  2916     03D4                     u361:
  2917     03D4  2BD7               	goto	l57
  2918     03D5                     u360:
  2919     03D5                     l1115:
  2920                           
  2921                           ;LCD.c: 30:         RD7 = 1;
  2922     03D5  1788               	bsf	8,7	;volatile
  2923     03D6  2BD8               	goto	l59
  2924     03D7                     l57:	
  2925                           ;LCD.c: 31:     else
  2926                           
  2927                           
  2928                           ;LCD.c: 32:         RD7 = 0;
  2929     03D7  1388               	bcf	8,7	;volatile
  2930     03D8                     l59:
  2931     03D8  0008               	return
  2932     03D9                     __end_of_Lcd_Port:
  2933     007E                     btemp	set	126	;btemp
  2934     007E                     wtemp0	set	126
  2935                           
  2936                           	psect	idloc
  2937                           
  2938                           ;Config register IDLOC0 @ 0x2000
  2939                           ;	unspecified, using default values
  2940     2000                     	org	8192
  2941     2000  3FFF               	dw	16383
  2942                           
  2943                           ;Config register IDLOC1 @ 0x2001
  2944                           ;	unspecified, using default values
  2945     2001                     	org	8193
  2946     2001  3FFF               	dw	16383
  2947                           
  2948                           ;Config register IDLOC2 @ 0x2002
  2949                           ;	unspecified, using default values
  2950     2002                     	org	8194
  2951     2002  3FFF               	dw	16383
  2952                           
  2953                           ;Config register IDLOC3 @ 0x2003
  2954                           ;	unspecified, using default values
  2955     2003                     	org	8195
  2956     2003  3FFF               	dw	16383
  2957                           
  2958                           	psect	config
  2959                           
  2960                           ;Config register CONFIG1 @ 0x2007
  2961                           ;	Oscillator Selection bits
  2962                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2963                           ;	Watchdog Timer Enable bit
  2964                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2965                           ;	Power-up Timer Enable bit
  2966                           ;	PWRTE = OFF, PWRT disabled
  2967                           ;	RE3/MCLR pin function select bit
  2968                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2969                           ;	Code Protection bit
  2970                           ;	CP = OFF, Program memory code protection is disabled
  2971                           ;	Data Code Protection bit
  2972                           ;	CPD = OFF, Data memory code protection is disabled
  2973                           ;	Brown Out Reset Selection bits
  2974                           ;	BOREN = OFF, BOR disabled
  2975                           ;	Internal External Switchover bit
  2976                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2977                           ;	Fail-Safe Clock Monitor Enabled bit
  2978                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2979                           ;	Low Voltage Programming Enable bit
  2980                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2981                           ;	In-Circuit Debugger Mode bit
  2982                           ;	DEBUG = 0x1, unprogrammed default
  2983     2007                     	org	8199
  2984     2007  20D5               	dw	8405
  2985                           
  2986                           ;Config register CONFIG2 @ 0x2008
  2987                           ;	Brown-out Reset Selection bit
  2988                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2989                           ;	Flash Program Memory Self Write Enable bits
  2990                           ;	WRT = OFF, Write protection off
  2991     2008                     	org	8200
  2992     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    10
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     76      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_4(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s3(BANK0[20]), main@s2(BANK0[20]), main@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@s3(BANK0[20]), STR_5(CODE[5]), main@s2(BANK0[20]), STR_3(CODE[5]), 
		 -> main@s(BANK0[20]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                63    63      0    3745
                                             13 BANK0     63    63      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     836
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5D      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 06 20:14:28 2023

                       pc 0002               _SSPSTATbits 0094                        l20 036A  
                      l23 0370                        l16 0397                        l17 039C  
                      l34 0379                        l26 0369                        l51 03C0  
                      l52 03C3                        l53 03C9                        l54 03CA  
                      l62 03B6                        l55 03D0                        l71 0536  
                      l56 03D1                        l57 03D7                        l65 0386  
                      l74 0593                        l59 03D8                        l83 04AC  
                      l77 0430                        fsr 0004                       l154 03FB  
                     l261 0654                       l537 04F0                       l547 046A  
                     _RD4 0044                       _RD5 0045                       _RC7 003F  
                     _RD6 0046                       _RD7 0047                       u400 04B5  
                     u401 04B4                       u330 03BC                       u331 03BB  
                     u340 03C7                       u420 04C7                       u500 0453  
                     u341 03C6                       u421 04C6                       u501 0452  
                     u350 03CE                       u351 03CD                       u415 04B9  
                     u360 03D5                       u440 04D8                       u520 0466  
                     u600 05A0                       u361 03D4                       u441 04D7  
                     u521 0465                       u505 044F                       u601 059F  
                     u530 04F7                       u370 038F                       u610 05F4  
                     u531 04F6                       u371 038E                       u435 04C8  
                     u515 045A                       u611 05F3                       u380 0370  
                     u460 04EC                       u620 05FF                       u381 036F  
                     u461 04EB                       u445 04D4                       u621 05FE  
                     u550 051A                       u470 0437                       u630 0640  
                     u551 0519                       u455 04E0                       u471 0436  
                     u631 063F                       u615 05F0                       u640 0650  
                     u545 04FD                       u641 064F                       u570 0478  
                     u490 0449                       u395 0409                       u491 0448  
                     u707 06B8                       u580 049A                       u565 0520  
                     u485 043B                       u717 06C8                       u590 04AC  
                     u807 0419                       u591 04AB                       u727 06E3  
                     u817 042A                       u737 06F2                       u657 0668  
                     u827 0541                       u747 0704                       u667 0678  
                     u837 0550                       u757 0713                       u677 0686  
                     u847 055F                       u767 0720                       u687 0692  
                     u857 03AE                       u777 0732                       u697 06A9  
                     u787 0741                       u797 07ED                       fsr0 0004  
                     indf 0000                      l1111 03C7                      l1113 03CE  
                    l1121 0391                      l1201 0460                      l1115 03D5  
                    l1107 03B8                      l1131 03A1                      l1123 0393  
                    l1211 0376                      l1203 0466                      l1109 03BC  
                    l1133 03A7                      l1221 0504                      l1141 0403  
                    l1125 0396                      l1117 0388                      l1301 05D9  
                    l1135 03AA                      l1215 037A                      l1231 0527  
                    l1223 0507                      l1151 041F                      l1143 0406  
                    l1119 038F                      l1127 036A                      l1207 0365  
                    l1311 062E                      l1137 03B3                      l1129 039E  
                    l1241 0546                      l1233 052A                      l1225 050D  
                    l1217 04F2                      l1153 0425                      l1145 0414  
                    l1209 0371                      l1161 04AF                      l1313 0633  
                    l1305 05F5                      l1401 07A1                      l1243 0555  
                    l1235 0530                      l1219 04F7                      l1227 0514  
                    l1155 0428                      l1147 0417                      l1139 03FD  
                    l1251 048A                      l1171 04C7                      l1163 04B5  
                    l1315 0637                      l1307 05FF                      l1411 07D4  
                    l1403 07A9                      l1331 0655                      l1245 055B  
                    l1237 0537                      l1229 051A                      l1157 042D  
                    l1149 041C                      l1253 0490                      l1261 03E1  
                    l1173 04D8                      l1165 04B8                      l1181 04EC  
                    l1309 0602                      l1317 0640                      l1413 07DC  
                    l1405 07B2                      l1341 067F                      l1333 065F  
                    l1239 053D                      l1247 046B                      l1271 03F6  
                    l1263 03E2                      l1255 03D9                      l1175 04DE  
                    l1167 04BF                      l1159 04AD                      l1191 0441  
                    l1319 0650                      l1415 07E5                      l1407 07BA  
                    l1351 06B0                      l1343 0699                      l1335 0662  
                    l1249 046E                      l1273 03FA                      l1265 03EB  
                    l1257 03DD                      l1177 04DF                      l1169 04C3  
                    l1193 0445                      l1185 0431                      l1281 05A5  
                    l1409 07C3                      l1361 06DA                      l1353 06BF  
                    l1345 06A1                      l1337 066C                      l1267 03EC  
                    l1259 03E0                      l1179 04E6                      l1195 0449  
                    l1187 0437                      l1291 05CB                      l1283 05AA  
                    l1275 0597                      l1371 070A                      l1363 06DB  
                    l1355 06C2                      l1347 06A3                      l1339 067C  
                    l1269 03ED                      l1197 0453                      l1189 043A  
                    l1293 05D3                      l1437 05C3                      l1285 05AC  
                    l1277 059A                      l1381 0739                      l1373 0717  
                    l1365 06E9                      l1357 06CC                      l1349 06AD  
                    l1199 0459                      l1295 05D7                      l1279 05A0  
                    l1391 076E                      l1383 0747                      l1375 0724  
                    l1367 06EC                      l1359 06D2                      l1289 05B1  
                    l1393 0776                      l1385 074C                      l1377 072C  
                    l1369 06F6                      l1395 077F                      l1387 0754  
                    l1379 0736                      l1397 0787                      l1389 075D  
                    l1399 0790                      STR_1 001D                      STR_2 002C  
                    STR_3 0022                      STR_4 002C                      STR_5 0027  
                    STR_6 002C         ?_Lcd_Write_String 0075                      _main 0655  
                    _pot1 006E                      _pot2 006D                      btemp 007E  
                    start 0000        ??_Lcd_Write_String 0077           __end_of_Lcd_Cmd 03B7  
                   ?_main 0070                     _ANSEL 0188           __end_of___lwdiv 04F1  
         __end_of___lwmod 046B                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088           __end_of_dpowers 001D                     _setup 03D9  
                   main@s 0030                     pclath 000A           __end_of_spiInit 039D  
         __end_of_spiRead 037A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0655          __end_of_Lcd_Init 0594          __end_of_Lcd_Port 03D9  
         __initialization 07F7              __end_of_main 07F7                    ??_main 002D  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC1 0439                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _TRISC6 043E                    _TRISC7 043F  
                  _SSPCON 0014                    _SSPBUF 0013                 ??___lwdiv 0074  
               ??___lwmod 007C                    main@s2 0044                    main@s3 0058  
        __end_of_spiWrite 036A                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 0023           Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074  
         Lcd_Set_Cursor@y 0078           Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 0387            __pcstackCOMMON 0070             __end_of_setup 03FC  
          _Lcd_Set_Cursor 04F1                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0074                __pbssBANK0 006C                __pmaintext 0655  
  __end_of_Lcd_Set_Cursor 0537                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 03FC  
                 _Lcd_Cmd 039D                 ?_spiWrite 0070                   ___lwdiv 04AD  
                 ___lwmod 0431           ?_Lcd_Set_Cursor 0074                   __ptext1 0594  
                 __ptext2 0431                   __ptext3 04AD                   __ptext4 0364  
                 __ptext5 0371                   __ptext6 036A                   __ptext7 03D9  
                 __ptext8 0387                   __ptext9 046B                   _dpowers 0013  
                 _valcont 006C                   _spiInit 0387                   _spiRead 0371  
                 _sprintf 0594    __end_of_Lcd_Write_Char 0431      end_of_initialization 07FC  
              ??_spiWrite 0070                 Lcd_Port@a 0070                 _PORTCbits 0007  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0075  
       Lcd_Write_String@i 007A                 _Lcd_Clear 037A            _spiReceiveWait 036A  
        _Lcd_Write_String 046B       start_initialization 07F7    __end_of_spiReceiveWait 0371  
              ?_Lcd_Clear 0070           Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073  
               ___latbits 0002             __pcstackBANK0 0020                  ?_Lcd_Cmd 0070  
             sprintf@flag 0026               sprintf@prec 002A          ___lwdiv@dividend 0072  
         ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070  
                ?___lwmod 0078                 __pstrings 0003                  ?_spiInit 0070  
                ?_spiRead 0070          ___lwdiv@quotient 0075                  ?_sprintf 0020  
    spiInit@sTransmitEdge 0072        spiInit@sDataSample 0070                  Lcd_Cmd@a 0073  
             ??_Lcd_Clear 0074               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 0537                  _Lcd_Port 03B7  __end_of_Lcd_Write_String 04AD  
      __end_of__stringtab 0013                sprintf@val 0028           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0077                  __ptext10 03FC                  __ptext11 04F1  
                __ptext12 0537                  __ptext13 037A                  __ptext14 039D  
                __ptext15 03B7                  _spiWrite 0364              spiInit@sType 0073  
       spiInit@sClockIdle 0071        Lcd_Write_Char@temp 0072                 sprintf@ap 0027  
               sprintf@sp 002B          ___lwmod@dividend 007A          ??_spiReceiveWait 0070  
               stringcode 000D                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0079  
                sprintf@c 002C                  sprintf@f 0020           ___lwmod@divisor 0078  
         ___lwmod@counter 007D                  stringdir 000D                  stringtab 0003  
