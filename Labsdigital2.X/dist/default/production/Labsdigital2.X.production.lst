

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jul 29 20:54:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459                           
   460                           	psect	strings
   461     0484                     __pstrings:
   462     0484                     stringtab:
   463     0484                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466     0484  1BFF               	btfsc	btemp+1,7
   467     0485  2C8E               	ljmp	stringcode
   468     0486  1383               	bcf	3,7
   469     0487  187F               	btfsc	btemp+1,0
   470     0488  1783               	bsf	3,7
   471     0489  0800               	movf	0,w
   472     048A  0A84               	incf	4,f
   473     048B  1903               	skipnz
   474     048C  0AFF               	incf	btemp+1,f
   475     048D  0008               	return
   476     048E                     stringcode:
   477     048E                     stringdir:
   478     048E  3004               	movlw	high stringdir
   479     048F  008A               	movwf	10
   480     0490  0804               	movf	4,w
   481     0491  0A84               	incf	4,f
   482     0492  0782               	addwf	2,f
   483     0493                     __stringbase:
   484     0493  3400               	retlw	0
   485     0494                     __end_of__stringtab:
   486     0494                     _dpowers:
   487     0494  3401               	retlw	1
   488     0495  3400               	retlw	0
   489     0496  340A               	retlw	10
   490     0497  3400               	retlw	0
   491     0498  3464               	retlw	100
   492     0499  3400               	retlw	0
   493     049A  34E8               	retlw	232
   494     049B  3403               	retlw	3
   495     049C  3410               	retlw	16
   496     049D  3427               	retlw	39
   497     049E                     __end_of_dpowers:
   498     049E                     _message2:
   499     049E  342D               	retlw	45
   500     049F  3420               	retlw	32
   501     04A0  3470               	retlw	112
   502     04A1  3461               	retlw	97
   503     04A2  3472               	retlw	114
   504     04A3  3461               	retlw	97
   505     04A4  3420               	retlw	32
   506     04A5  3464               	retlw	100
   507     04A6  3469               	retlw	105
   508     04A7  3473               	retlw	115
   509     04A8  346D               	retlw	109
   510     04A9  3469               	retlw	105
   511     04AA  346E               	retlw	110
   512     04AB  3475               	retlw	117
   513     04AC  3469               	retlw	105
   514     04AD  3472               	retlw	114
   515     04AE  3420               	retlw	32
   516     04AF  3463               	retlw	99
   517     04B0  346F               	retlw	111
   518     04B1  346E               	retlw	110
   519     04B2  3474               	retlw	116
   520     04B3  3461               	retlw	97
   521     04B4  3464               	retlw	100
   522     04B5  346F               	retlw	111
   523     04B6  3472               	retlw	114
   524     04B7  340D               	retlw	13
   525     04B8  340A               	retlw	10
   526     04B9  3400               	retlw	0
   527     04BA                     __end_of_message2:
   528     04BA                     _message:
   529     04BA  3420               	retlw	32
   530     04BB  342B               	retlw	43
   531     04BC  3420               	retlw	32
   532     04BD  3470               	retlw	112
   533     04BE  3461               	retlw	97
   534     04BF  3472               	retlw	114
   535     04C0  3461               	retlw	97
   536     04C1  3420               	retlw	32
   537     04C2  3461               	retlw	97
   538     04C3  3475               	retlw	117
   539     04C4  346D               	retlw	109
   540     04C5  3465               	retlw	101
   541     04C6  346E               	retlw	110
   542     04C7  3474               	retlw	116
   543     04C8  3461               	retlw	97
   544     04C9  3472               	retlw	114
   545     04CA  3420               	retlw	32
   546     04CB  3463               	retlw	99
   547     04CC  346F               	retlw	111
   548     04CD  346E               	retlw	110
   549     04CE  3474               	retlw	116
   550     04CF  3461               	retlw	97
   551     04D0  3464               	retlw	100
   552     04D1  346F               	retlw	111
   553     04D2  3472               	retlw	114
   554     04D3  340D               	retlw	13
   555     04D4  340A               	retlw	10
   556     04D5  3400               	retlw	0
   557     04D6                     __end_of_message:
   558     0019                     _TXREG	set	25
   559     0018                     _RCSTA	set	24
   560     000B                     _INTCONbits	set	11
   561     0006                     _PORTB	set	6
   562     001A                     _RCREG	set	26
   563     0018                     _RCSTAbits	set	24
   564     001E                     _ADRESH	set	30
   565     001F                     _ADCON0bits	set	31
   566     000C                     _PIR1bits	set	12
   567     0008                     _PORTD	set	8
   568     0007                     _PORTCbits	set	7
   569     00C4                     _CREN	set	196
   570     00C1                     _OERR	set	193
   571     0065                     _RCIF	set	101
   572     003E                     _RC6	set	62
   573     003F                     _RC7	set	63
   574     0047                     _RD7	set	71
   575     0046                     _RD6	set	70
   576     0045                     _RD5	set	69
   577     0044                     _RD4	set	68
   578     0098                     _TXSTA	set	152
   579     0099                     _SPBRG	set	153
   580     008C                     _PIE1bits	set	140
   581     009F                     _ADCON1bits	set	159
   582     0086                     _TRISB	set	134
   583     008F                     _OSCCON	set	143
   584     0088                     _TRISD	set	136
   585     04C1                     _TRMT	set	1217
   586     043E                     _TRISC6	set	1086
   587     043F                     _TRISC7	set	1087
   588     0189                     _ANSELH	set	393
   589     0188                     _ANSEL	set	392
   590     04D6                     STR_1:
   591     04D6  3431               	retlw	49	;'1'
   592     04D7  342E               	retlw	46	;'.'
   593     04D8  344C               	retlw	76	;'L'
   594     04D9  3465               	retlw	101	;'e'
   595     04DA  3465               	retlw	101	;'e'
   596     04DB  3472               	retlw	114	;'r'
   597     04DC  3420               	retlw	32	;' '
   598     04DD  3470               	retlw	112	;'p'
   599     04DE  346F               	retlw	111	;'o'
   600     04DF  3474               	retlw	116	;'t'
   601     04E0  3465               	retlw	101	;'e'
   602     04E1  346E               	retlw	110	;'n'
   603     04E2  3463               	retlw	99	;'c'
   604     04E3  3469               	retlw	105	;'i'
   605     04E4  346F               	retlw	111	;'o'
   606     04E5  346D               	retlw	109	;'m'
   607     04E6  3465               	retlw	101	;'e'
   608     04E7  3474               	retlw	116	;'t'
   609     04E8  3472               	retlw	114	;'r'
   610     04E9  346F               	retlw	111	;'o'
   611     04EA  340D               	retlw	13
   612     04EB  340A               	retlw	10
   613     04EC  3400               	retlw	0
   614     04ED                     STR_4:
   615     04ED  3425               	retlw	37	;'%'
   616     04EE  3430               	retlw	48	;'0'
   617     04EF  3433               	retlw	51	;'3'
   618     04F0  3475               	retlw	117	;'u'
   619     04F1  340D               	retlw	13
   620     04F2  340A               	retlw	10
   621     04F3  3400               	retlw	0
   622     04EA                     
   623                           	psect	cinit
   624     000F                     start_initialization:	
   625                           ; #config settings
   626                           
   627     000F                     __initialization:
   628                           
   629                           ; Clear objects allocated to COMMON
   630     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   631     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   632                           
   633                           ; Clear objects allocated to BANK0
   634     0011  1283               	bcf	3,5	;RP0=0, select bank0
   635     0012  1303               	bcf	3,6	;RP1=0, select bank0
   636     0013  01D9               	clrf	__pbssBANK0& (0+127)
   637     0014                     end_of_initialization:	
   638                           ;End of C runtime variable initialization code
   639                           
   640     0014                     __end_of__initialization:
   641     0014  0183               	clrf	3
   642     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	bssCOMMON
   645     0079                     __pbssCOMMON:
   646     0079                     _CMCON:
   647     0079                     	ds	2
   648                           
   649                           	psect	bssBANK0
   650     0059                     __pbssBANK0:
   651     0059                     _valpot:
   652     0059                     	ds	1
   653                           
   654                           	psect	cstackCOMMON
   655     0070                     __pcstackCOMMON:
   656     0070                     ?_UART_Data_Ready:
   657     0070                     ?_isdigit:	
   658                           ; 1 bit 
   659                           
   660     0070                     ?_setup:	
   661                           ; 1 bit 
   662                           
   663     0070                     ?_preguntas:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_UART_GetC:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_UART_PutC:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_isr:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??_isr:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_uart_read:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686     0070                     	ds	3
   687     0073                     ??_setup:
   688     0073                     ??_UART_Data_Ready:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0073                     ??_UART_GetC:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0073                     ??_UART_PutC:	
   695                           ; 1 bytes @ 0x3
   696                           
   697     0073                     ??_isdigit:	
   698                           ; 1 bytes @ 0x3
   699                           
   700     0073                     ??_uart_read:	
   701                           ; 1 bytes @ 0x3
   702                           
   703     0073                     ??___lldiv:	
   704                           ; 1 bytes @ 0x3
   705                           
   706     0073                     ?___wmul:	
   707                           ; 1 bytes @ 0x3
   708                           
   709     0073                     ?___fltol:	
   710                           ; 2 bytes @ 0x3
   711                           
   712     0073                     UART_PutC@data:	
   713                           ; 4 bytes @ 0x3
   714                           
   715     0073                     _isdigit$894:	
   716                           ; 1 bytes @ 0x3
   717                           
   718     0073                     ___wmul@multiplier:	
   719                           ; 1 bytes @ 0x3
   720                           
   721     0073                     ___fltol@f1:	
   722                           ; 2 bytes @ 0x3
   723                           
   724                           
   725                           ; 4 bytes @ 0x3
   726     0073                     	ds	1
   727     0074                     ?_UART_Print:
   728     0074                     isdigit@c:	
   729                           ; 1 bytes @ 0x4
   730                           
   731     0074                     UART_Print@data:	
   732                           ; 1 bytes @ 0x4
   733                           
   734     0074                     ___lldiv@quotient:	
   735                           ; 2 bytes @ 0x4
   736                           
   737                           
   738                           ; 4 bytes @ 0x4
   739     0074                     	ds	1
   740     0075                     ___wmul@multiplicand:
   741                           
   742                           ; 2 bytes @ 0x5
   743     0075                     	ds	1
   744     0076                     ??_UART_Print:
   745                           
   746                           ; 1 bytes @ 0x6
   747     0076                     	ds	1
   748     0077                     ??___wmul:
   749     0077                     UART_Print@i:	
   750                           ; 1 bytes @ 0x7
   751                           
   752     0077                     ___fltol@sign1:	
   753                           ; 1 bytes @ 0x7
   754                           
   755     0077                     ___wmul@product:	
   756                           ; 1 bytes @ 0x7
   757                           
   758                           
   759                           ; 2 bytes @ 0x7
   760     0077                     	ds	1
   761     0078                     ??_preguntas:
   762     0078                     ___lldiv@counter:	
   763                           ; 1 bytes @ 0x8
   764                           
   765     0078                     ___fltol@exp1:	
   766                           ; 1 bytes @ 0x8
   767                           
   768                           
   769                           ; 1 bytes @ 0x8
   770     0078                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773     0020                     __pcstackBANK0:
   774     0020                     ??___fltol:
   775     0020                     ?___lwdiv:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0020                     ?___lldiv:	
   779                           ; 2 bytes @ 0x0
   780                           
   781     0020                     ___lwdiv@divisor:	
   782                           ; 4 bytes @ 0x0
   783                           
   784     0020                     ___lldiv@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789     0020                     	ds	2
   790     0022                     ___lwdiv@dividend:
   791                           
   792                           ; 2 bytes @ 0x2
   793     0022                     	ds	2
   794     0024                     ??___lwdiv:
   795     0024                     ___lldiv@dividend:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 4 bytes @ 0x4
   800     0024                     	ds	1
   801     0025                     ___lwdiv@counter:
   802                           
   803                           ; 1 bytes @ 0x5
   804     0025                     	ds	1
   805     0026                     ___lwdiv@quotient:
   806                           
   807                           ; 2 bytes @ 0x6
   808     0026                     	ds	2
   809     0028                     ?_UART_Init:
   810     0028                     ?___lwmod:	
   811                           ; 1 bytes @ 0x8
   812                           
   813     0028                     ?___xxtofl:	
   814                           ; 2 bytes @ 0x8
   815                           
   816     0028                     ___lwmod@divisor:	
   817                           ; 4 bytes @ 0x8
   818                           
   819     0028                     UART_Init@baud_rate:	
   820                           ; 2 bytes @ 0x8
   821                           
   822     0028                     ___xxtofl@val:	
   823                           ; 4 bytes @ 0x8
   824                           
   825                           
   826                           ; 4 bytes @ 0x8
   827     0028                     	ds	2
   828     002A                     ___lwmod@dividend:
   829                           
   830                           ; 2 bytes @ 0xA
   831     002A                     	ds	2
   832     002C                     ??_UART_Init:
   833     002C                     ??___lwmod:	
   834                           ; 1 bytes @ 0xC
   835                           
   836     002C                     ??___xxtofl:	
   837                           ; 1 bytes @ 0xC
   838                           
   839                           
   840                           ; 1 bytes @ 0xC
   841     002C                     	ds	1
   842     002D                     ___lwmod@counter:
   843                           
   844                           ; 1 bytes @ 0xD
   845     002D                     	ds	1
   846     002E                     ?_sprintf:
   847     002E                     sprintf@f:	
   848                           ; 2 bytes @ 0xE
   849                           
   850                           
   851                           ; 1 bytes @ 0xE
   852     002E                     	ds	2
   853     0030                     ___xxtofl@sign:
   854     0030                     UART_Init@n:	
   855                           ; 1 bytes @ 0x10
   856                           
   857                           
   858                           ; 2 bytes @ 0x10
   859     0030                     	ds	1
   860     0031                     ??_sprintf:
   861     0031                     ___xxtofl@exp:	
   862                           ; 1 bytes @ 0x11
   863                           
   864                           
   865                           ; 1 bytes @ 0x11
   866     0031                     	ds	1
   867     0032                     ___xxtofl@arg:
   868                           
   869                           ; 4 bytes @ 0x12
   870     0032                     	ds	2
   871     0034                     sprintf@ap:
   872                           
   873                           ; 1 bytes @ 0x14
   874     0034                     	ds	1
   875     0035                     sprintf@flag:
   876                           
   877                           ; 1 bytes @ 0x15
   878     0035                     	ds	1
   879     0036                     ?_map:
   880     0036                     map@varmap:	
   881                           ; 2 bytes @ 0x16
   882                           
   883     0036                     sprintf@val:	
   884                           ; 2 bytes @ 0x16
   885                           
   886                           
   887                           ; 2 bytes @ 0x16
   888     0036                     	ds	2
   889     0038                     sprintf@prec:
   890     0038                     map@minval:	
   891                           ; 1 bytes @ 0x18
   892                           
   893                           
   894                           ; 2 bytes @ 0x18
   895     0038                     	ds	1
   896     0039                     sprintf@sp:
   897                           
   898                           ; 1 bytes @ 0x19
   899     0039                     	ds	1
   900     003A                     map@maxval:
   901     003A                     sprintf@width:	
   902                           ; 2 bytes @ 0x1A
   903                           
   904                           
   905                           ; 2 bytes @ 0x1A
   906     003A                     	ds	2
   907     003C                     sprintf@c:
   908     003C                     map@minsal:	
   909                           ; 1 bytes @ 0x1C
   910                           
   911                           
   912                           ; 2 bytes @ 0x1C
   913     003C                     	ds	2
   914     003E                     map@maxsal:
   915                           
   916                           ; 2 bytes @ 0x1E
   917     003E                     	ds	2
   918     0040                     ??_map:
   919                           
   920                           ; 1 bytes @ 0x20
   921     0040                     	ds	6
   922     0046                     map@valmap:
   923                           
   924                           ; 4 bytes @ 0x26
   925     0046                     	ds	4
   926     004A                     ??_main:
   927                           
   928                           ; 1 bytes @ 0x2A
   929     004A                     	ds	3
   930     004D                     main@text:
   931                           
   932                           ; 9 bytes @ 0x2D
   933     004D                     	ds	9
   934     0056                     main@varvolt2:
   935                           
   936                           ; 2 bytes @ 0x36
   937     0056                     	ds	2
   938     0058                     main@c:
   939                           
   940                           ; 1 bytes @ 0x38
   941     0058                     	ds	1
   942                           
   943                           	psect	maintext
   944     019E                     __pmaintext:	
   945 ;;
   946 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   947 ;;
   948 ;; *************** function _main *****************
   949 ;; Defined at:
   950 ;;		line 63 in file "postlab2.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  c               1   56[BANK0 ] unsigned char 
   955 ;;  varvolt2        2   54[BANK0 ] unsigned int 
   956 ;;  text            9   45[BANK0 ] unsigned char [9]
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : B00/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0      12       0       0       0
   968 ;;      Temps:          0       3       0       0       0
   969 ;;      Totals:         0      15       0       0       0
   970 ;;Total ram usage:       15 bytes
   971 ;; Hardware stack levels required when called: 4
   972 ;; This function calls:
   973 ;;		_UART_Data_Ready
   974 ;;		_UART_GetC
   975 ;;		_UART_Init
   976 ;;		_UART_Print
   977 ;;		_UART_PutC
   978 ;;		_map
   979 ;;		_preguntas
   980 ;;		_setup
   981 ;;		_sprintf
   982 ;;		_uart_read
   983 ;; This function is called by:
   984 ;;		Startup code after reset
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     019E                     _main:	
   989                           ;psect for function _main
   990                           
   991     019E                     l2253:	
   992                           ;incstack = 0
   993                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   994                           
   995                           
   996                           ;postlab2.c: 65:     setup();
   997     019E  120A  118A  266F  120A  118A  	fcall	_setup
   998     01A3                     l2255:
   999                           
  1000                           ;postlab2.c: 66:   OSCCON = 0x70;
  1001     01A3  3070               	movlw	112
  1002     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1003     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1004     01A6  008F               	movwf	15	;volatile
  1005     01A7                     l2257:
  1006                           
  1007                           ;postlab2.c: 68:   UART_Init(9600);
  1008     01A7  3000               	movlw	0
  1009     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1010     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1011     01AA  00AB               	movwf	UART_Init@baud_rate+3
  1012     01AB  3000               	movlw	0
  1013     01AC  00AA               	movwf	UART_Init@baud_rate+2
  1014     01AD  3025               	movlw	37
  1015     01AE  00A9               	movwf	UART_Init@baud_rate+1
  1016     01AF  3080               	movlw	128
  1017     01B0  00A8               	movwf	UART_Init@baud_rate
  1018     01B1  120A  118A  236C  120A  118A  	fcall	_UART_Init
  1019     01B6                     l2259:
  1020                           
  1021                           ;postlab2.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
  1022     01B6  3015               	movlw	21
  1023     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1024     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1025     01B9  00CC               	movwf	??_main+2
  1026     01BA  304B               	movlw	75
  1027     01BB  00CB               	movwf	??_main+1
  1028     01BC  30BD               	movlw	189
  1029     01BD  00CA               	movwf	??_main
  1030     01BE                     u2207:
  1031     01BE  0BCA               	decfsz	??_main,f
  1032     01BF  29BE               	goto	u2207
  1033     01C0  0BCB               	decfsz	??_main+1,f
  1034     01C1  29BE               	goto	u2207
  1035     01C2  0BCC               	decfsz	??_main+2,f
  1036     01C3  29BE               	goto	u2207
  1037     01C4  29C5               	nop2
  1038     01C5                     l2261:
  1039                           
  1040                           ;postlab2.c: 72:   UART_Print("1.Leer potenciometro\r\n");
  1041     01C5  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1042     01C6  00F4               	movwf	UART_Print@data
  1043     01C7  3080               	movlw	128
  1044     01C8  00F5               	movwf	UART_Print@data+1
  1045     01C9  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1046     01CE                     l2263:
  1047                           
  1048                           ;postlab2.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1049     01CE  300B               	movlw	11
  1050     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1051     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1052     01D1  00CC               	movwf	??_main+2
  1053     01D2  3026               	movlw	38
  1054     01D3  00CB               	movwf	??_main+1
  1055     01D4  305D               	movlw	93
  1056     01D5  00CA               	movwf	??_main
  1057     01D6                     u2217:
  1058     01D6  0BCA               	decfsz	??_main,f
  1059     01D7  29D6               	goto	u2217
  1060     01D8  0BCB               	decfsz	??_main+1,f
  1061     01D9  29D6               	goto	u2217
  1062     01DA  0BCC               	decfsz	??_main+2,f
  1063     01DB  29D6               	goto	u2217
  1064     01DC                     l2265:
  1065                           
  1066                           ;postlab2.c: 76:   UART_Print(message);
  1067     01DC  3027               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1068     01DD  00F4               	movwf	UART_Print@data
  1069     01DE  3080               	movlw	128
  1070     01DF  00F5               	movwf	UART_Print@data+1
  1071     01E0  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1072     01E5                     l2267:
  1073                           
  1074                           ;postlab2.c: 77:  UART_Print (message2);
  1075     01E5  300B               	movlw	(low ((_message2-__stringbase)| (0+32768)))& (0+255)
  1076     01E6  00F4               	movwf	UART_Print@data
  1077     01E7  3080               	movlw	128
  1078     01E8  00F5               	movwf	UART_Print@data+1
  1079     01E9  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1080     01EE                     l2269:
  1081                           
  1082                           ;postlab2.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1083     01EE  300B               	movlw	11
  1084     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1085     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1086     01F1  00CC               	movwf	??_main+2
  1087     01F2  3026               	movlw	38
  1088     01F3  00CB               	movwf	??_main+1
  1089     01F4  305D               	movlw	93
  1090     01F5  00CA               	movwf	??_main
  1091     01F6                     u2227:
  1092     01F6  0BCA               	decfsz	??_main,f
  1093     01F7  29F6               	goto	u2227
  1094     01F8  0BCB               	decfsz	??_main+1,f
  1095     01F9  29F6               	goto	u2227
  1096     01FA  0BCC               	decfsz	??_main+2,f
  1097     01FB  29F6               	goto	u2227
  1098     01FC                     l2271:
  1099                           
  1100                           ;postlab2.c: 80:   UART_Print("\r\n");
  1101     01FC  3057               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1102     01FD  00F4               	movwf	UART_Print@data
  1103     01FE  3080               	movlw	128
  1104     01FF  00F5               	movwf	UART_Print@data+1
  1105     0200  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1106     0205                     l2273:
  1107                           
  1108                           ;postlab2.c: 81:  ADCON0bits.GO =1;
  1109     0205  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0206  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0207  149F               	bsf	31,1	;volatile
  1112     0208                     l2275:
  1113                           
  1114                           ;postlab2.c: 84:   {;postlab2.c: 85:        if (ADCON0bits.GO ==0)
  1115     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1116     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1117     020A  189F               	btfsc	31,1	;volatile
  1118     020B  2A0D               	goto	u2181
  1119     020C  2A0E               	goto	u2180
  1120     020D                     u2181:
  1121     020D  2A7E               	goto	l2311
  1122     020E                     u2180:
  1123     020E                     l2277:
  1124                           
  1125                           ;postlab2.c: 86:      ADCON0bits.GO =1;
  1126     020E  149F               	bsf	31,1	;volatile
  1127     020F  2A7E               	goto	l2311
  1128     0210                     l2279:
  1129                           
  1130                           ;postlab2.c: 104:                valpot = ADRESH;
  1131     0210  081E               	movf	30,w	;volatile
  1132     0211  00D9               	movwf	_valpot
  1133     0212                     l2281:
  1134                           
  1135                           ;postlab2.c: 105:               uint16_t varvolt2 = map(valpot,0,255,0,5);
  1136     0212  0859               	movf	_valpot,w
  1137     0213  00CA               	movwf	??_main
  1138     0214  01CB               	clrf	??_main+1
  1139     0215  084A               	movf	??_main,w
  1140     0216  00B6               	movwf	map@varmap
  1141     0217  084B               	movf	??_main+1,w
  1142     0218  00B7               	movwf	map@varmap+1
  1143     0219  3000               	movlw	0
  1144     021A  00B8               	movwf	map@minval
  1145     021B  00B9               	movwf	map@minval+1
  1146     021C  30FF               	movlw	255
  1147     021D  00BA               	movwf	map@maxval
  1148     021E  3000               	movlw	0
  1149     021F  00BB               	movwf	map@maxval+1
  1150     0220  3000               	movlw	0
  1151     0221  00BC               	movwf	map@minsal
  1152     0222  00BD               	movwf	map@minsal+1
  1153     0223  3005               	movlw	5
  1154     0224  00BE               	movwf	map@maxsal
  1155     0225  3000               	movlw	0
  1156     0226  00BF               	movwf	map@maxsal+1
  1157     0227  120A  118A  255C  120A  118A  	fcall	_map
  1158     022C  1283               	bcf	3,5	;RP0=0, select bank0
  1159     022D  1303               	bcf	3,6	;RP1=0, select bank0
  1160     022E  0837               	movf	?_map+1,w
  1161     022F  00D7               	movwf	main@varvolt2+1
  1162     0230  0836               	movf	?_map,w
  1163     0231  00D6               	movwf	main@varvolt2
  1164     0232                     l2283:
  1165                           
  1166                           ;postlab2.c: 107:               UART_Print ("\r\n");
  1167     0232  3057               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1168     0233  00F4               	movwf	UART_Print@data
  1169     0234  3080               	movlw	128
  1170     0235  00F5               	movwf	UART_Print@data+1
  1171     0236  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1172     023B                     l2285:
  1173                           
  1174                           ;postlab2.c: 108:             sprintf(text, "%03u\r\n", varvolt2);
  1175     023B  305A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1176     023C  1283               	bcf	3,5	;RP0=0, select bank0
  1177     023D  1303               	bcf	3,6	;RP1=0, select bank0
  1178     023E  00AE               	movwf	sprintf@f
  1179     023F  0857               	movf	main@varvolt2+1,w
  1180     0240  00B0               	movwf	?_sprintf+2
  1181     0241  0856               	movf	main@varvolt2,w
  1182     0242  00AF               	movwf	?_sprintf+1
  1183     0243  304D               	movlw	(low (main@text| 0))& (0+255)
  1184     0244  120A  118A  2018  120A  118A  	fcall	_sprintf
  1185     0249                     l2287:
  1186                           
  1187                           ;postlab2.c: 109:             UART_Print(text);
  1188     0249  304D               	movlw	(low (main@text| 0))& (0+255)
  1189     024A  00F4               	movwf	UART_Print@data
  1190     024B  3000               	movlw	0
  1191     024C  00F5               	movwf	UART_Print@data+1
  1192     024D  120A  118A  2644  120A  118A  	fcall	_UART_Print
  1193     0252                     l2289:
  1194                           
  1195                           ;postlab2.c: 112:               preguntas();
  1196     0252  120A  118A  26BC  120A  118A  	fcall	_preguntas
  1197     0257                     l2291:
  1198                           
  1199                           ;postlab2.c: 113:              RCREG ='0';
  1200     0257  3030               	movlw	48
  1201     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1202     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1203     025A  009A               	movwf	26	;volatile
  1204                           
  1205                           ;postlab2.c: 115:              break;
  1206     025B  2A97               	goto	l2313
  1207     025C                     l2293:
  1208                           
  1209                           ;postlab2.c: 117:                _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1210     025C  3006               	movlw	6
  1211     025D  1283               	bcf	3,5	;RP0=0, select bank0
  1212     025E  1303               	bcf	3,6	;RP1=0, select bank0
  1213     025F  00CB               	movwf	??_main+1
  1214     0260  302F               	movlw	47
  1215     0261  00CA               	movwf	??_main
  1216     0262                     u2237:
  1217     0262  0BCA               	decfsz	??_main,f
  1218     0263  2A62               	goto	u2237
  1219     0264  0BCB               	decfsz	??_main+1,f
  1220     0265  2A62               	goto	u2237
  1221     0266  2A67               	nop2
  1222     0267                     l2295:
  1223                           
  1224                           ;postlab2.c: 118:                PORTB ++;
  1225     0267  3001               	movlw	1
  1226     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1227     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1228     026A  00CA               	movwf	??_main
  1229     026B  084A               	movf	??_main,w
  1230     026C  0786               	addwf	6,f	;volatile
  1231     026D  2A52               	goto	l2289
  1232     026E                     l2301:
  1233                           
  1234                           ;postlab2.c: 124:                _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1235     026E  3006               	movlw	6
  1236     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1237     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1238     0271  00CB               	movwf	??_main+1
  1239     0272  302F               	movlw	47
  1240     0273  00CA               	movwf	??_main
  1241     0274                     u2247:
  1242     0274  0BCA               	decfsz	??_main,f
  1243     0275  2A74               	goto	u2247
  1244     0276  0BCB               	decfsz	??_main+1,f
  1245     0277  2A74               	goto	u2247
  1246     0278  2A79               	nop2
  1247     0279                     l2303:
  1248                           
  1249                           ;postlab2.c: 125:                PORTB --;
  1250     0279  3001               	movlw	1
  1251     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1252     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1253     027C  0286               	subwf	6,f	;volatile
  1254     027D  2A52               	goto	l2289
  1255     027E                     l2311:
  1256     027E  120A  118A  26F1  120A  118A  	fcall	_uart_read
  1257     0283  1283               	bcf	3,5	;RP0=0, select bank0
  1258     0284  1303               	bcf	3,6	;RP1=0, select bank0
  1259     0285  00CA               	movwf	??_main
  1260     0286  01CB               	clrf	??_main+1
  1261                           
  1262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1263                           ; Switch size 1, requested type "simple"
  1264                           ; Number of cases is 1, Range of values is 0 to 0
  1265                           ; switch strategies available:
  1266                           ; Name         Instructions Cycles
  1267                           ; simple_byte            4     3 (average)
  1268                           ; direct_byte           11     8 (fixed)
  1269                           ; jumptable            260     6 (fixed)
  1270                           ;	Chosen strategy is simple_byte
  1271     0287  084B               	movf	??_main+1,w
  1272     0288  3A00               	xorlw	0	; case 0
  1273     0289  1903               	skipnz
  1274     028A  2A8C               	goto	l2383
  1275     028B  2A97               	goto	l2313
  1276     028C                     l2383:
  1277                           
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 3, Range of values is 43 to 49
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte           10     6 (average)
  1283                           ; direct_byte           32    11 (fixed)
  1284                           ; jumptable            263     9 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286     028C  084A               	movf	??_main,w
  1287     028D  3A2B               	xorlw	43	; case 43
  1288     028E  1903               	skipnz
  1289     028F  2A5C               	goto	l2293
  1290     0290  3A06               	xorlw	6	; case 45
  1291     0291  1903               	skipnz
  1292     0292  2A6E               	goto	l2301
  1293     0293  3A1C               	xorlw	28	; case 49
  1294     0294  1903               	skipnz
  1295     0295  2A10               	goto	l2279
  1296     0296  2A97               	goto	l2313
  1297     0297                     l2313:
  1298                           
  1299                           ;postlab2.c: 133:     if ( UART_Data_Ready() )
  1300     0297  120A  118A  2730  120A  118A  	fcall	_UART_Data_Ready
  1301     029C  1C03               	btfss	3,0
  1302     029D  2A9F               	goto	u2191
  1303     029E  2AA0               	goto	u2190
  1304     029F                     u2191:
  1305     029F  2A08               	goto	l2275
  1306     02A0                     u2190:
  1307     02A0                     l2315:
  1308                           
  1309                           ;postlab2.c: 134:     {;postlab2.c: 135:       uint8_t c = UART_GetC();
  1310     02A0  120A  118A  2716  120A  118A  	fcall	_UART_GetC
  1311     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1312     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1313     02A7  00D8               	movwf	main@c
  1314     02A8                     l2317:
  1315                           
  1316                           ;postlab2.c: 136:       UART_PutC(c);
  1317     02A8  0858               	movf	main@c,w
  1318     02A9  120A  118A  2724  120A  118A  	fcall	_UART_PutC
  1319     02AE  2A08               	goto	l2275
  1320     02AF  120A  118A  280C   	ljmp	start
  1321     02B2                     __end_of_main:
  1322                           
  1323                           	psect	text1
  1324     06F1                     __ptext1:	
  1325 ;; *************** function _uart_read *****************
  1326 ;; Defined at:
  1327 ;;		line 50 in file "postlab2.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      unsigned char 
  1334 ;; Registers used:
  1335 ;;		wreg
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 1
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355     06F1                     _uart_read:	
  1356                           ;psect for function _uart_read
  1357                           
  1358     06F1                     l1709:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _uart_read: [wreg]
  1361                           
  1362                           
  1363                           ;postlab2.c: 51:  if(PIR1bits.RCIF== 0){
  1364     06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1365     06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1366     06F3  1A8C               	btfsc	12,5	;volatile
  1367     06F4  2EF6               	goto	u1431
  1368     06F5  2EF7               	goto	u1430
  1369     06F6                     u1431:
  1370     06F6  2F02               	goto	l1721
  1371     06F7                     u1430:
  1372     06F7                     l1711:
  1373                           
  1374                           ;postlab2.c: 52:      if (RCSTAbits.OERR){
  1375     06F7  1C98               	btfss	24,1	;volatile
  1376     06F8  2EFA               	goto	u1441
  1377     06F9  2EFB               	goto	u1440
  1378     06FA                     u1441:
  1379     06FA  2F00               	goto	l1715
  1380     06FB                     u1440:
  1381     06FB                     l1713:
  1382                           
  1383                           ;postlab2.c: 53:          RCSTAbits.CREN =0;
  1384     06FB  1218               	bcf	24,4	;volatile
  1385                           
  1386                           ;postlab2.c: 54:          __nop();
  1387     06FC  0000               	nop
  1388                           
  1389                           ;postlab2.c: 55:          RCSTAbits.CREN =1;
  1390     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1391     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1392     06FF  1618               	bsf	24,4	;volatile
  1393     0700                     l1715:
  1394                           
  1395                           ;postlab2.c: 57:      return RCREG;
  1396     0700  081A               	movf	26,w	;volatile
  1397     0701  2F03               	goto	l158
  1398     0702                     l1721:
  1399                           
  1400                           ;postlab2.c: 60:      return 0;
  1401     0702  3000               	movlw	0
  1402     0703                     l158:
  1403     0703  0008               	return
  1404     0704                     __end_of_uart_read:
  1405                           
  1406                           	psect	text2
  1407     0018                     __ptext2:	
  1408 ;; *************** function _sprintf *****************
  1409 ;; Defined at:
  1410 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  sp              1    wreg     PTR unsigned char 
  1413 ;;		 -> main@text(9), 
  1414 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1415 ;;		 -> STR_4(7), 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1418 ;;		 -> main@text(9), 
  1419 ;;  tmpval          4    0        struct .
  1420 ;;  width           2   26[BANK0 ] int 
  1421 ;;  val             2   22[BANK0 ] unsigned int 
  1422 ;;  cp              2    0        PTR const unsigned char 
  1423 ;;  len             2    0        unsigned int 
  1424 ;;  c               1   28[BANK0 ] unsigned char 
  1425 ;;  prec            1   24[BANK0 ] char 
  1426 ;;  flag            1   21[BANK0 ] unsigned char 
  1427 ;;  ap              1   20[BANK0 ] PTR void [1]
  1428 ;;		 -> ?_sprintf(2), 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2   14[BANK0 ] int 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       3       0       0       0
  1439 ;;      Locals:         0       9       0       0       0
  1440 ;;      Temps:          0       3       0       0       0
  1441 ;;      Totals:         0      15       0       0       0
  1442 ;;Total ram usage:       15 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 2
  1445 ;; This function calls:
  1446 ;;		___lwdiv
  1447 ;;		___lwmod
  1448 ;;		___wmul
  1449 ;;		_isdigit
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     0018                     _sprintf:	
  1456                           ;psect for function _sprintf
  1457                           
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1461                           ;sprintf@sp stored from wreg
  1462     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1464     001A  00B9               	movwf	sprintf@sp
  1465     001B                     l2155:
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1468     001B  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1469     001C  00B4               	movwf	sprintf@ap
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1472     001D  2989               	goto	l2239
  1473     001E                     l2157:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1476     001E  3025               	movlw	37
  1477     001F  063C               	xorwf	sprintf@c,w
  1478     0020  1903               	btfsc	3,2
  1479     0021  2823               	goto	u2051
  1480     0022  2824               	goto	u2050
  1481     0023                     u2051:
  1482     0023  282E               	goto	l2163
  1483     0024                     u2050:
  1484     0024                     l2159:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1487     0024  0839               	movf	sprintf@sp,w
  1488     0025  0084               	movwf	4
  1489     0026  083C               	movf	sprintf@c,w
  1490     0027  1383               	bcf	3,7	;select IRP bank0
  1491     0028  0080               	movwf	0
  1492     0029                     l2161:
  1493     0029  3001               	movlw	1
  1494     002A  00B1               	movwf	??_sprintf
  1495     002B  0831               	movf	??_sprintf,w
  1496     002C  07B9               	addwf	sprintf@sp,f
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1499     002D  2989               	goto	l2239
  1500     002E                     l2163:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1503     002E  01BA               	clrf	sprintf@width
  1504     002F  01BB               	clrf	sprintf@width+1
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1507     0030  01B5               	clrf	sprintf@flag
  1508     0031  2837               	goto	l2169
  1509     0032                     l336:	
  1510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1511                           
  1512                           
  1513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1514     0032  1535               	bsf	sprintf@flag,2
  1515     0033                     l2165:
  1516                           
  1517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1518     0033  3001               	movlw	1
  1519     0034  00B1               	movwf	??_sprintf
  1520     0035  0831               	movf	??_sprintf,w
  1521     0036  07AE               	addwf	sprintf@f,f
  1522     0037                     l2169:	
  1523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1524                           
  1525     0037  082E               	movf	sprintf@f,w
  1526     0038  0084               	movwf	4
  1527     0039  120A  118A  248E  120A  118A  	fcall	stringdir
  1528     003E  00B1               	movwf	??_sprintf
  1529     003F  01B2               	clrf	??_sprintf+1
  1530                           
  1531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1532                           ; Switch size 1, requested type "simple"
  1533                           ; Number of cases is 1, Range of values is 0 to 0
  1534                           ; switch strategies available:
  1535                           ; Name         Instructions Cycles
  1536                           ; simple_byte            4     3 (average)
  1537                           ; direct_byte           11     8 (fixed)
  1538                           ; jumptable            260     6 (fixed)
  1539                           ;	Chosen strategy is simple_byte
  1540     0040  0832               	movf	??_sprintf+1,w
  1541     0041  3A00               	xorlw	0	; case 0
  1542     0042  1903               	skipnz
  1543     0043  2845               	goto	l2385
  1544     0044  284A               	goto	l2171
  1545     0045                     l2385:
  1546                           
  1547                           ; Switch size 1, requested type "simple"
  1548                           ; Number of cases is 1, Range of values is 48 to 48
  1549                           ; switch strategies available:
  1550                           ; Name         Instructions Cycles
  1551                           ; simple_byte            4     3 (average)
  1552                           ; direct_byte           14    11 (fixed)
  1553                           ; jumptable            263     9 (fixed)
  1554                           ;	Chosen strategy is simple_byte
  1555     0045  0831               	movf	??_sprintf,w
  1556     0046  3A30               	xorlw	48	; case 48
  1557     0047  1903               	skipnz
  1558     0048  2832               	goto	l336
  1559     0049  284A               	goto	l2171
  1560     004A                     l2171:
  1561                           
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1563     004A  082E               	movf	sprintf@f,w
  1564     004B  0084               	movwf	4
  1565     004C  120A  118A  248E  120A  118A  	fcall	stringdir
  1566     0051  120A  118A  2704  120A  118A  	fcall	_isdigit
  1567     0056  1C03               	btfss	3,0
  1568     0057  2859               	goto	u2061
  1569     0058  285A               	goto	u2060
  1570     0059                     u2061:
  1571     0059  28A0               	goto	l2187
  1572     005A                     u2060:
  1573     005A                     l2173:
  1574                           
  1575                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1576     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1577     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1578     005C  01BA               	clrf	sprintf@width
  1579     005D  01BB               	clrf	sprintf@width+1
  1580     005E                     l2175:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1583     005E  300A               	movlw	10
  1584     005F  00F3               	movwf	___wmul@multiplier
  1585     0060  3000               	movlw	0
  1586     0061  00F4               	movwf	___wmul@multiplier+1
  1587     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1588     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1589     0064  083B               	movf	sprintf@width+1,w
  1590     0065  00F6               	movwf	___wmul@multiplicand+1
  1591     0066  083A               	movf	sprintf@width,w
  1592     0067  00F5               	movwf	___wmul@multiplicand
  1593     0068  120A  118A  2697  120A  118A  	fcall	___wmul
  1594     006D  0874               	movf	?___wmul+1,w
  1595     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1596     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1597     0070  00BB               	movwf	sprintf@width+1
  1598     0071  0873               	movf	?___wmul,w
  1599     0072  00BA               	movwf	sprintf@width
  1600     0073                     l2177:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1603     0073  082E               	movf	sprintf@f,w
  1604     0074  0084               	movwf	4
  1605     0075  120A  118A  248E  120A  118A  	fcall	stringdir
  1606     007A  3ED0               	addlw	208
  1607     007B  00B1               	movwf	??_sprintf
  1608     007C  30FF               	movlw	255
  1609     007D  1803               	skipnc
  1610     007E  3000               	movlw	0
  1611     007F  00B2               	movwf	??_sprintf+1
  1612     0080  0831               	movf	??_sprintf,w
  1613     0081  07BA               	addwf	sprintf@width,f
  1614     0082  1803               	skipnc
  1615     0083  0ABB               	incf	sprintf@width+1,f
  1616     0084  0832               	movf	??_sprintf+1,w
  1617     0085  07BB               	addwf	sprintf@width+1,f
  1618     0086                     l2179:
  1619     0086  3001               	movlw	1
  1620     0087  00B1               	movwf	??_sprintf
  1621     0088  0831               	movf	??_sprintf,w
  1622     0089  07AE               	addwf	sprintf@f,f
  1623     008A                     l2181:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1626     008A  082E               	movf	sprintf@f,w
  1627     008B  0084               	movwf	4
  1628     008C  120A  118A  248E  120A  118A  	fcall	stringdir
  1629     0091  120A  118A  2704  120A  118A  	fcall	_isdigit
  1630     0096  1803               	btfsc	3,0
  1631     0097  2899               	goto	u2071
  1632     0098  289A               	goto	u2070
  1633     0099                     u2071:
  1634     0099  285E               	goto	l2175
  1635     009A                     u2070:
  1636     009A  28A0               	goto	l2187
  1637     009B                     l2183:
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1640     009B  30C0               	movlw	192
  1641     009C  00B1               	movwf	??_sprintf
  1642     009D  0831               	movf	??_sprintf,w
  1643     009E  04B5               	iorwf	sprintf@flag,f
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1646     009F  28BC               	goto	l2189
  1647     00A0                     l2187:
  1648     00A0  3001               	movlw	1
  1649     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1650     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1651     00A3  07AE               	addwf	sprintf@f,f
  1652     00A4  30FF               	movlw	-1
  1653     00A5  072E               	addwf	sprintf@f,w
  1654     00A6  0084               	movwf	4
  1655     00A7  120A  118A  248E  120A  118A  	fcall	stringdir
  1656     00AC  00BC               	movwf	sprintf@c
  1657     00AD  00B1               	movwf	??_sprintf
  1658     00AE  01B2               	clrf	??_sprintf+1
  1659                           
  1660                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 1, Range of values is 0 to 0
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte            4     3 (average)
  1666                           ; direct_byte           11     8 (fixed)
  1667                           ; jumptable            260     6 (fixed)
  1668                           ;	Chosen strategy is simple_byte
  1669     00AF  0832               	movf	??_sprintf+1,w
  1670     00B0  3A00               	xorlw	0	; case 0
  1671     00B1  1903               	skipnz
  1672     00B2  28B4               	goto	l2387
  1673     00B3  2989               	goto	l2239
  1674     00B4                     l2387:
  1675                           
  1676                           ; Switch size 1, requested type "simple"
  1677                           ; Number of cases is 2, Range of values is 0 to 117
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte            7     4 (average)
  1681                           ; jumptable            260     6 (fixed)
  1682                           ;	Chosen strategy is simple_byte
  1683     00B4  0831               	movf	??_sprintf,w
  1684     00B5  3A00               	xorlw	0	; case 0
  1685     00B6  1903               	skipnz
  1686     00B7  2999               	goto	l2241
  1687     00B8  3A75               	xorlw	117	; case 117
  1688     00B9  1903               	skipnz
  1689     00BA  289B               	goto	l2183
  1690     00BB  2989               	goto	l2239
  1691     00BC                     l2189:
  1692                           
  1693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1694     00BC  0834               	movf	sprintf@ap,w
  1695     00BD  0084               	movwf	4
  1696     00BE  1383               	bcf	3,7	;select IRP bank0
  1697     00BF  0800               	movf	0,w
  1698     00C0  00B6               	movwf	sprintf@val
  1699     00C1  0A84               	incf	4,f
  1700     00C2  0800               	movf	0,w
  1701     00C3  00B7               	movwf	sprintf@val+1
  1702     00C4                     l2191:
  1703     00C4  3002               	movlw	2
  1704     00C5  00B1               	movwf	??_sprintf
  1705     00C6  0831               	movf	??_sprintf,w
  1706     00C7  07B4               	addwf	sprintf@ap,f
  1707     00C8                     l2193:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1710     00C8  01BC               	clrf	sprintf@c
  1711     00C9  0ABC               	incf	sprintf@c,f
  1712     00CA                     l2199:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1715     00CA  083C               	movf	sprintf@c,w
  1716     00CB  00B1               	movwf	??_sprintf
  1717     00CC  0731               	addwf	??_sprintf,w
  1718     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1719     00CE  0084               	movwf	4
  1720     00CF  120A  118A  248E  120A  118A  	fcall	stringdir
  1721     00D4  00B2               	movwf	??_sprintf+1
  1722     00D5  120A  118A  248E  120A  118A  	fcall	stringdir
  1723     00DA  00B3               	movwf	??_sprintf+2
  1724     00DB  0833               	movf	??_sprintf+2,w
  1725     00DC  0237               	subwf	sprintf@val+1,w
  1726     00DD  1D03               	skipz
  1727     00DE  28E1               	goto	u2085
  1728     00DF  0832               	movf	??_sprintf+1,w
  1729     00E0  0236               	subwf	sprintf@val,w
  1730     00E1                     u2085:
  1731     00E1  1803               	skipnc
  1732     00E2  28E4               	goto	u2081
  1733     00E3  28E5               	goto	u2080
  1734     00E4                     u2081:
  1735     00E4  28E6               	goto	l2203
  1736     00E5                     u2080:
  1737     00E5  28F0               	goto	l2205
  1738     00E6                     l2203:
  1739     00E6  3001               	movlw	1
  1740     00E7  00B1               	movwf	??_sprintf
  1741     00E8  0831               	movf	??_sprintf,w
  1742     00E9  07BC               	addwf	sprintf@c,f
  1743     00EA  3005               	movlw	5
  1744     00EB  063C               	xorwf	sprintf@c,w
  1745     00EC  1D03               	btfss	3,2
  1746     00ED  28EF               	goto	u2091
  1747     00EE  28F0               	goto	u2090
  1748     00EF                     u2091:
  1749     00EF  28CA               	goto	l2199
  1750     00F0                     u2090:
  1751     00F0                     l2205:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1754     00F0  083B               	movf	sprintf@width+1,w
  1755     00F1  3A80               	xorlw	128
  1756     00F2  3C80               	sublw	128
  1757     00F3  1D03               	skipz
  1758     00F4  28F7               	goto	u2105
  1759     00F5  083A               	movf	sprintf@width,w
  1760     00F6  023C               	subwf	sprintf@c,w
  1761     00F7                     u2105:
  1762     00F7  1803               	skipnc
  1763     00F8  28FA               	goto	u2101
  1764     00F9  28FB               	goto	u2100
  1765     00FA                     u2101:
  1766     00FA  2907               	goto	l2209
  1767     00FB                     u2100:
  1768     00FB                     l2207:
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1771     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1772     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1773     00FD  083C               	movf	sprintf@c,w
  1774     00FE  00B1               	movwf	??_sprintf
  1775     00FF  01B2               	clrf	??_sprintf+1
  1776     0100  0831               	movf	??_sprintf,w
  1777     0101  02BA               	subwf	sprintf@width,f
  1778     0102  0832               	movf	??_sprintf+1,w
  1779     0103  1C03               	skipc
  1780     0104  03BB               	decf	sprintf@width+1,f
  1781     0105  02BB               	subwf	sprintf@width+1,f
  1782     0106  290B               	goto	l2211
  1783     0107                     l2209:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1786     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1787     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1788     0109  01BA               	clrf	sprintf@width
  1789     010A  01BB               	clrf	sprintf@width+1
  1790     010B                     l2211:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1793     010B  1D35               	btfss	sprintf@flag,2
  1794     010C  290E               	goto	u2111
  1795     010D  290F               	goto	u2110
  1796     010E                     u2111:
  1797     010E  292B               	goto	l2221
  1798     010F                     u2110:
  1799     010F                     l2213:
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1802     010F  083A               	movf	sprintf@width,w
  1803     0110  043B               	iorwf	sprintf@width+1,w
  1804     0111  1903               	btfsc	3,2
  1805     0112  2914               	goto	u2121
  1806     0113  2915               	goto	u2120
  1807     0114                     u2121:
  1808     0114  2946               	goto	l2229
  1809     0115                     u2120:
  1810     0115                     l2215:
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1813     0115  0839               	movf	sprintf@sp,w
  1814     0116  0084               	movwf	4
  1815     0117  3030               	movlw	48
  1816     0118  1383               	bcf	3,7	;select IRP bank0
  1817     0119  0080               	movwf	0
  1818     011A                     l2217:
  1819     011A  3001               	movlw	1
  1820     011B  00B1               	movwf	??_sprintf
  1821     011C  0831               	movf	??_sprintf,w
  1822     011D  07B9               	addwf	sprintf@sp,f
  1823     011E                     l2219:
  1824     011E  30FF               	movlw	255
  1825     011F  07BA               	addwf	sprintf@width,f
  1826     0120  1803               	skipnc
  1827     0121  0ABB               	incf	sprintf@width+1,f
  1828     0122  30FF               	movlw	255
  1829     0123  07BB               	addwf	sprintf@width+1,f
  1830     0124  083A               	movf	sprintf@width,w
  1831     0125  043B               	iorwf	sprintf@width+1,w
  1832     0126  1D03               	btfss	3,2
  1833     0127  2929               	goto	u2131
  1834     0128  292A               	goto	u2130
  1835     0129                     u2131:
  1836     0129  2915               	goto	l2215
  1837     012A                     u2130:
  1838     012A  2946               	goto	l2229
  1839     012B                     l2221:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1842     012B  083A               	movf	sprintf@width,w
  1843     012C  043B               	iorwf	sprintf@width+1,w
  1844     012D  1903               	btfsc	3,2
  1845     012E  2930               	goto	u2141
  1846     012F  2931               	goto	u2140
  1847     0130                     u2141:
  1848     0130  2946               	goto	l2229
  1849     0131                     u2140:
  1850     0131                     l2223:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1853     0131  0839               	movf	sprintf@sp,w
  1854     0132  0084               	movwf	4
  1855     0133  3020               	movlw	32
  1856     0134  1383               	bcf	3,7	;select IRP bank0
  1857     0135  0080               	movwf	0
  1858     0136                     l2225:
  1859     0136  3001               	movlw	1
  1860     0137  00B1               	movwf	??_sprintf
  1861     0138  0831               	movf	??_sprintf,w
  1862     0139  07B9               	addwf	sprintf@sp,f
  1863     013A                     l2227:
  1864     013A  30FF               	movlw	255
  1865     013B  07BA               	addwf	sprintf@width,f
  1866     013C  1803               	skipnc
  1867     013D  0ABB               	incf	sprintf@width+1,f
  1868     013E  30FF               	movlw	255
  1869     013F  07BB               	addwf	sprintf@width+1,f
  1870     0140  083A               	movf	sprintf@width,w
  1871     0141  043B               	iorwf	sprintf@width+1,w
  1872     0142  1D03               	btfss	3,2
  1873     0143  2945               	goto	u2151
  1874     0144  2946               	goto	u2150
  1875     0145                     u2151:
  1876     0145  2931               	goto	l2223
  1877     0146                     u2150:
  1878     0146                     l2229:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1881     0146  083C               	movf	sprintf@c,w
  1882     0147  00B8               	movwf	sprintf@prec
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1885     0148  2980               	goto	l2237
  1886     0149                     l2231:
  1887                           
  1888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1889     0149  300A               	movlw	10
  1890     014A  00A8               	movwf	___lwmod@divisor
  1891     014B  3000               	movlw	0
  1892     014C  00A9               	movwf	___lwmod@divisor+1
  1893     014D  0838               	movf	sprintf@prec,w
  1894     014E  00B1               	movwf	??_sprintf
  1895     014F  0731               	addwf	??_sprintf,w
  1896     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1897     0151  0084               	movwf	4
  1898     0152  120A  118A  248E  120A  118A  	fcall	stringdir
  1899     0157  00A0               	movwf	___lwdiv@divisor
  1900     0158  120A  118A  248E  120A  118A  	fcall	stringdir
  1901     015D  00A1               	movwf	___lwdiv@divisor+1
  1902     015E  0837               	movf	sprintf@val+1,w
  1903     015F  00A3               	movwf	___lwdiv@dividend+1
  1904     0160  0836               	movf	sprintf@val,w
  1905     0161  00A2               	movwf	___lwdiv@dividend
  1906     0162  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  1907     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1908     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1909     0169  0821               	movf	?___lwdiv+1,w
  1910     016A  00AB               	movwf	___lwmod@dividend+1
  1911     016B  0820               	movf	?___lwdiv,w
  1912     016C  00AA               	movwf	___lwmod@dividend
  1913     016D  120A  118A  2608  120A  118A  	fcall	___lwmod
  1914     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1915     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1916     0174  0828               	movf	?___lwmod,w
  1917     0175  3E30               	addlw	48
  1918     0176  00BC               	movwf	sprintf@c
  1919     0177                     l2233:
  1920                           
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1922     0177  0839               	movf	sprintf@sp,w
  1923     0178  0084               	movwf	4
  1924     0179  083C               	movf	sprintf@c,w
  1925     017A  1383               	bcf	3,7	;select IRP bank0
  1926     017B  0080               	movwf	0
  1927     017C                     l2235:
  1928     017C  3001               	movlw	1
  1929     017D  00B1               	movwf	??_sprintf
  1930     017E  0831               	movf	??_sprintf,w
  1931     017F  07B9               	addwf	sprintf@sp,f
  1932     0180                     l2237:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1935     0180  30FF               	movlw	255
  1936     0181  00B1               	movwf	??_sprintf
  1937     0182  0831               	movf	??_sprintf,w
  1938     0183  07B8               	addwf	sprintf@prec,f
  1939     0184  0A38               	incf	sprintf@prec,w
  1940     0185  1D03               	btfss	3,2
  1941     0186  2988               	goto	u2161
  1942     0187  2989               	goto	u2160
  1943     0188                     u2161:
  1944     0188  2949               	goto	l2231
  1945     0189                     u2160:
  1946     0189                     l2239:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1949     0189  3001               	movlw	1
  1950     018A  07AE               	addwf	sprintf@f,f
  1951     018B  30FF               	movlw	-1
  1952     018C  072E               	addwf	sprintf@f,w
  1953     018D  0084               	movwf	4
  1954     018E  120A  118A  248E  120A  118A  	fcall	stringdir
  1955     0193  00BC               	movwf	sprintf@c
  1956     0194  083C               	movf	sprintf@c,w
  1957     0195  1D03               	btfss	3,2
  1958     0196  2998               	goto	u2171
  1959     0197  2999               	goto	u2170
  1960     0198                     u2171:
  1961     0198  281E               	goto	l2157
  1962     0199                     u2170:
  1963     0199                     l2241:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1966     0199  0839               	movf	sprintf@sp,w
  1967     019A  0084               	movwf	4
  1968     019B  1383               	bcf	3,7	;select IRP bank0
  1969     019C  0180               	clrf	0
  1970     019D                     l366:
  1971     019D  0008               	return
  1972     019E                     __end_of_sprintf:
  1973                           
  1974                           	psect	text3
  1975     0704                     __ptext3:	
  1976 ;; *************** function _isdigit *****************
  1977 ;; Defined at:
  1978 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  c               1    wreg     unsigned char 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  c               1    4[COMMON] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;		None               void
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         2       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used: 1
  1998 ;; Hardware stack levels required when called: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_sprintf
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     0704                     _isdigit:	
  2007                           ;psect for function _isdigit
  2008                           
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2012                           ;isdigit@c stored from wreg
  2013     0704  00F4               	movwf	isdigit@c
  2014     0705                     l1531:
  2015     0705  01F3               	clrf	_isdigit$894
  2016     0706                     l1533:
  2017     0706  303A               	movlw	58
  2018     0707  0274               	subwf	isdigit@c,w
  2019     0708  1803               	skipnc
  2020     0709  2F0B               	goto	u931
  2021     070A  2F0C               	goto	u930
  2022     070B                     u931:
  2023     070B  2F14               	goto	l1539
  2024     070C                     u930:
  2025     070C                     l1535:
  2026     070C  3030               	movlw	48
  2027     070D  0274               	subwf	isdigit@c,w
  2028     070E  1C03               	skipc
  2029     070F  2F11               	goto	u941
  2030     0710  2F12               	goto	u940
  2031     0711                     u941:
  2032     0711  2F14               	goto	l1539
  2033     0712                     u940:
  2034     0712                     l1537:
  2035     0712  01F3               	clrf	_isdigit$894
  2036     0713  0AF3               	incf	_isdigit$894,f
  2037     0714                     l1539:
  2038     0714  0C73               	rrf	_isdigit$894,w
  2039     0715                     l823:
  2040     0715  0008               	return
  2041     0716                     __end_of_isdigit:
  2042                           
  2043                           	psect	text4
  2044     0608                     __ptext4:	
  2045 ;; *************** function ___lwmod *****************
  2046 ;; Defined at:
  2047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  divisor         2    8[BANK0 ] unsigned int 
  2050 ;;  dividend        2   10[BANK0 ] unsigned int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  counter         1   13[BANK0 ] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    8[BANK0 ] unsigned int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         0       4       0       0       0
  2063 ;;      Locals:         0       1       0       0       0
  2064 ;;      Temps:          0       1       0       0       0
  2065 ;;      Totals:         0       6       0       0       0
  2066 ;;Total ram usage:        6 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_sprintf
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     0608                     ___lwmod:	
  2077                           ;psect for function ___lwmod
  2078                           
  2079     0608                     l2113:	
  2080                           ;incstack = 0
  2081                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2082                           
  2083     0608  1283               	bcf	3,5	;RP0=0, select bank0
  2084     0609  1303               	bcf	3,6	;RP1=0, select bank0
  2085     060A  0828               	movf	___lwmod@divisor,w
  2086     060B  0429               	iorwf	___lwmod@divisor+1,w
  2087     060C  1903               	btfsc	3,2
  2088     060D  2E0F               	goto	u1941
  2089     060E  2E10               	goto	u1940
  2090     060F                     u1941:
  2091     060F  2E3F               	goto	l2131
  2092     0610                     u1940:
  2093     0610                     l2115:
  2094     0610  01AD               	clrf	___lwmod@counter
  2095     0611  0AAD               	incf	___lwmod@counter,f
  2096     0612  2E1E               	goto	l2121
  2097     0613                     l2117:
  2098     0613  3001               	movlw	1
  2099     0614                     u1955:
  2100     0614  1003               	clrc
  2101     0615  0DA8               	rlf	___lwmod@divisor,f
  2102     0616  0DA9               	rlf	___lwmod@divisor+1,f
  2103     0617  3EFF               	addlw	-1
  2104     0618  1D03               	skipz
  2105     0619  2E14               	goto	u1955
  2106     061A                     l2119:
  2107     061A  3001               	movlw	1
  2108     061B  00AC               	movwf	??___lwmod
  2109     061C  082C               	movf	??___lwmod,w
  2110     061D  07AD               	addwf	___lwmod@counter,f
  2111     061E                     l2121:
  2112     061E  1FA9               	btfss	___lwmod@divisor+1,7
  2113     061F  2E21               	goto	u1961
  2114     0620  2E22               	goto	u1960
  2115     0621                     u1961:
  2116     0621  2E13               	goto	l2117
  2117     0622                     u1960:
  2118     0622                     l2123:
  2119     0622  0829               	movf	___lwmod@divisor+1,w
  2120     0623  022B               	subwf	___lwmod@dividend+1,w
  2121     0624  1D03               	skipz
  2122     0625  2E28               	goto	u1975
  2123     0626  0828               	movf	___lwmod@divisor,w
  2124     0627  022A               	subwf	___lwmod@dividend,w
  2125     0628                     u1975:
  2126     0628  1C03               	skipc
  2127     0629  2E2B               	goto	u1971
  2128     062A  2E2C               	goto	u1970
  2129     062B                     u1971:
  2130     062B  2E32               	goto	l2127
  2131     062C                     u1970:
  2132     062C                     l2125:
  2133     062C  0828               	movf	___lwmod@divisor,w
  2134     062D  02AA               	subwf	___lwmod@dividend,f
  2135     062E  0829               	movf	___lwmod@divisor+1,w
  2136     062F  1C03               	skipc
  2137     0630  03AB               	decf	___lwmod@dividend+1,f
  2138     0631  02AB               	subwf	___lwmod@dividend+1,f
  2139     0632                     l2127:
  2140     0632  3001               	movlw	1
  2141     0633                     u1985:
  2142     0633  1003               	clrc
  2143     0634  0CA9               	rrf	___lwmod@divisor+1,f
  2144     0635  0CA8               	rrf	___lwmod@divisor,f
  2145     0636  3EFF               	addlw	-1
  2146     0637  1D03               	skipz
  2147     0638  2E33               	goto	u1985
  2148     0639                     l2129:
  2149     0639  3001               	movlw	1
  2150     063A  02AD               	subwf	___lwmod@counter,f
  2151     063B  1D03               	btfss	3,2
  2152     063C  2E3E               	goto	u1991
  2153     063D  2E3F               	goto	u1990
  2154     063E                     u1991:
  2155     063E  2E22               	goto	l2123
  2156     063F                     u1990:
  2157     063F                     l2131:
  2158     063F  082B               	movf	___lwmod@dividend+1,w
  2159     0640  00A9               	movwf	?___lwmod+1
  2160     0641  082A               	movf	___lwmod@dividend,w
  2161     0642  00A8               	movwf	?___lwmod
  2162     0643                     l652:
  2163     0643  0008               	return
  2164     0644                     __end_of___lwmod:
  2165                           
  2166                           	psect	text5
  2167     066F                     __ptext5:	
  2168 ;; *************** function _setup *****************
  2169 ;; Defined at:
  2170 ;;		line 142 in file "postlab2.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          1       0       0       0       0
  2187 ;;      Totals:         1       0       0       0       0
  2188 ;;Total ram usage:        1 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198     066F                     _setup:	
  2199                           ;psect for function _setup
  2200                           
  2201     066F                     l1725:	
  2202                           ;incstack = 0
  2203                           ; Regs used in _setup: [wreg+status,2+status,0]
  2204                           
  2205                           
  2206                           ;postlab2.c: 143:     ANSEL = 0b00000011;
  2207     066F  3003               	movlw	3
  2208     0670  1683               	bsf	3,5	;RP0=1, select bank3
  2209     0671  1703               	bsf	3,6	;RP1=1, select bank3
  2210     0672  0088               	movwf	8	;volatile
  2211     0673                     l1727:
  2212                           
  2213                           ;postlab2.c: 144:     ANSELH = 0;
  2214     0673  0189               	clrf	9	;volatile
  2215     0674                     l1729:
  2216                           
  2217                           ;postlab2.c: 146:     TRISB= 0xFF;
  2218     0674  30FF               	movlw	255
  2219     0675  1683               	bsf	3,5	;RP0=1, select bank1
  2220     0676  1303               	bcf	3,6	;RP1=0, select bank1
  2221     0677  0086               	movwf	6	;volatile
  2222                           
  2223                           ;postlab2.c: 147:     TRISB = 0;
  2224     0678  0186               	clrf	6	;volatile
  2225                           
  2226                           ;postlab2.c: 148:     PORTB = 0;
  2227     0679  1283               	bcf	3,5	;RP0=0, select bank0
  2228     067A  1303               	bcf	3,6	;RP1=0, select bank0
  2229     067B  0186               	clrf	6	;volatile
  2230     067C                     l1731:
  2231                           
  2232                           ;postlab2.c: 151:     ADCON1bits.ADFM = 0;
  2233     067C  1683               	bsf	3,5	;RP0=1, select bank1
  2234     067D  1303               	bcf	3,6	;RP1=0, select bank1
  2235     067E  139F               	bcf	31,7	;volatile
  2236     067F                     l1733:
  2237                           
  2238                           ;postlab2.c: 152:     ADCON1bits.VCFG0 = 0;
  2239     067F  121F               	bcf	31,4	;volatile
  2240     0680                     l1735:
  2241                           
  2242                           ;postlab2.c: 153:     ADCON1bits.VCFG1 = 0;
  2243     0680  129F               	bcf	31,5	;volatile
  2244     0681                     l1737:
  2245                           
  2246                           ;postlab2.c: 155:     ADCON0bits.ADCS = 0b01;
  2247     0681  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0682  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0683  081F               	movf	31,w	;volatile
  2250     0684  393F               	andlw	-193
  2251     0685  3840               	iorlw	64
  2252     0686  009F               	movwf	31	;volatile
  2253     0687                     l1739:
  2254                           
  2255                           ;postlab2.c: 156:     ADCON0bits.CHS = 0;
  2256     0687  30C3               	movlw	-61
  2257     0688  059F               	andwf	31,f	;volatile
  2258     0689                     l1741:
  2259                           
  2260                           ;postlab2.c: 157:     ADCON0bits.ADON= 1;
  2261     0689  141F               	bsf	31,0	;volatile
  2262     068A                     l1743:
  2263                           
  2264                           ;postlab2.c: 158:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2265     068A  3021               	movlw	33
  2266     068B  00F3               	movwf	??_setup
  2267     068C                     u2257:
  2268     068C  0BF3               	decfsz	??_setup,f
  2269     068D  2E8C               	goto	u2257
  2270     068E                     l1745:
  2271                           
  2272                           ;postlab2.c: 160:     PIR1bits.ADIF = 0;
  2273     068E  1283               	bcf	3,5	;RP0=0, select bank0
  2274     068F  1303               	bcf	3,6	;RP1=0, select bank0
  2275     0690  130C               	bcf	12,6	;volatile
  2276     0691                     l1747:
  2277                           
  2278                           ;postlab2.c: 161:     PIE1bits.ADIE = 1;
  2279     0691  1683               	bsf	3,5	;RP0=1, select bank1
  2280     0692  1303               	bcf	3,6	;RP1=0, select bank1
  2281     0693  170C               	bsf	12,6	;volatile
  2282     0694                     l1749:
  2283                           
  2284                           ;postlab2.c: 162:     INTCONbits.PEIE = 1;
  2285     0694  170B               	bsf	11,6	;volatile
  2286     0695                     l1751:
  2287                           
  2288                           ;postlab2.c: 163:     INTCONbits.GIE = 1;
  2289     0695  178B               	bsf	11,7	;volatile
  2290     0696                     l177:
  2291     0696  0008               	return
  2292     0697                     __end_of_setup:
  2293                           
  2294                           	psect	text6
  2295     06BC                     __ptext6:	
  2296 ;; *************** function _preguntas *****************
  2297 ;; Defined at:
  2298 ;;		line 166 in file "postlab2.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0
  2315 ;;      Totals:         0       0       0       0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 3
  2319 ;; This function calls:
  2320 ;;		_UART_Print
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     06BC                     _preguntas:	
  2327                           ;psect for function _preguntas
  2328                           
  2329     06BC                     l1871:	
  2330                           ;incstack = 0
  2331                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2332                           
  2333                           
  2334                           ;postlab2.c: 168:     UART_Print ("1.Leer potenciometro\r\n");
  2335     06BC  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2336     06BD  00F4               	movwf	UART_Print@data
  2337     06BE  3080               	movlw	128
  2338     06BF  00F5               	movwf	UART_Print@data+1
  2339     06C0  120A  118A  2644  120A  118A  	fcall	_UART_Print
  2340                           
  2341                           ;postlab2.c: 169:     UART_Print (message);
  2342     06C5  3027               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2343     06C6  00F4               	movwf	UART_Print@data
  2344     06C7  3080               	movlw	128
  2345     06C8  00F5               	movwf	UART_Print@data+1
  2346     06C9  120A  118A  2644  120A  118A  	fcall	_UART_Print
  2347                           
  2348                           ;postlab2.c: 170:     UART_Print (message2);
  2349     06CE  300B               	movlw	(low ((_message2-__stringbase)| (0+32768)))& (0+255)
  2350     06CF  00F4               	movwf	UART_Print@data
  2351     06D0  3080               	movlw	128
  2352     06D1  00F5               	movwf	UART_Print@data+1
  2353     06D2  120A  118A  2644  120A  118A  	fcall	_UART_Print
  2354     06D7                     l180:
  2355     06D7  0008               	return
  2356     06D8                     __end_of_preguntas:
  2357                           
  2358                           	psect	text7
  2359     0644                     __ptext7:	
  2360 ;; *************** function _UART_Print *****************
  2361 ;; Defined at:
  2362 ;;		line 65 in file "USARTmodl.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  data            2    4[COMMON] PTR const unsigned char 
  2365 ;;		 -> STR_5(23), main@text(9), STR_3(3), STR_2(3), 
  2366 ;;		 -> message2(28), message(28), STR_1(23), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  i               1    7[COMMON] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2378 ;;      Params:         2       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0
  2380 ;;      Temps:          1       0       0       0       0
  2381 ;;      Totals:         4       0       0       0       0
  2382 ;;Total ram usage:        4 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 2
  2385 ;; This function calls:
  2386 ;;		_UART_PutC
  2387 ;; This function is called by:
  2388 ;;		_main
  2389 ;;		_preguntas
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393     0644                     _UART_Print:	
  2394                           ;psect for function _UART_Print
  2395                           
  2396     0644                     l1523:	
  2397                           ;incstack = 0
  2398                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2399                           
  2400                           
  2401                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2402     0644  01F7               	clrf	UART_Print@i
  2403                           
  2404                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2405     0645  2E5B               	goto	l1529
  2406     0646                     l1525:
  2407                           
  2408                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2409     0646  0877               	movf	UART_Print@i,w
  2410     0647  0774               	addwf	UART_Print@data,w
  2411     0648  0084               	movwf	4
  2412     0649  0875               	movf	UART_Print@data+1,w
  2413     064A  1803               	skipnc
  2414     064B  0A75               	incf	UART_Print@data+1,w
  2415     064C  00FF               	movwf	btemp+1
  2416     064D  120A  118A  2484  120A  118A  	fcall	stringtab
  2417     0652  120A  118A  2724  120A  118A  	fcall	_UART_PutC
  2418     0657                     l1527:
  2419     0657  3001               	movlw	1
  2420     0658  00F6               	movwf	??_UART_Print
  2421     0659  0876               	movf	??_UART_Print,w
  2422     065A  07F7               	addwf	UART_Print@i,f
  2423     065B                     l1529:
  2424                           
  2425                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2426     065B  0877               	movf	UART_Print@i,w
  2427     065C  0774               	addwf	UART_Print@data,w
  2428     065D  0084               	movwf	4
  2429     065E  0875               	movf	UART_Print@data+1,w
  2430     065F  1803               	skipnc
  2431     0660  0A75               	incf	UART_Print@data+1,w
  2432     0661  1283               	bcf	3,5	;RP0=0, select bank0
  2433     0662  1303               	bcf	3,6	;RP1=0, select bank0
  2434     0663  00FF               	movwf	btemp+1
  2435     0664  120A  118A  2484  120A  118A  	fcall	stringtab
  2436     0669  3A00               	xorlw	0
  2437     066A  1D03               	skipz
  2438     066B  2E6D               	goto	u921
  2439     066C  2E6E               	goto	u920
  2440     066D                     u921:
  2441     066D  2E46               	goto	l1525
  2442     066E                     u920:
  2443     066E                     l238:
  2444     066E  0008               	return
  2445     066F                     __end_of_UART_Print:
  2446                           
  2447                           	psect	text8
  2448     0724                     __ptext8:	
  2449 ;; *************** function _UART_PutC *****************
  2450 ;; Defined at:
  2451 ;;		line 59 in file "USARTmodl.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  data            1    wreg     const unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  data            1    3[COMMON] const unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         1       0       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;;		_UART_Print
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480     0724                     _UART_PutC:	
  2481                           ;psect for function _UART_PutC
  2482                           
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _UART_PutC: [wreg]
  2486                           ;UART_PutC@data stored from wreg
  2487     0724  00F3               	movwf	UART_PutC@data
  2488     0725                     l1519:
  2489     0725                     l229:	
  2490                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2491                           
  2492     0725  1683               	bsf	3,5	;RP0=1, select bank1
  2493     0726  1303               	bcf	3,6	;RP1=0, select bank1
  2494     0727  1C98               	btfss	24,1	;volatile
  2495     0728  2F2A               	goto	u911
  2496     0729  2F2B               	goto	u910
  2497     072A                     u911:
  2498     072A  2F25               	goto	l229
  2499     072B                     u910:
  2500     072B                     l1521:
  2501                           
  2502                           ;USARTmodl.c: 62:   TXREG = data;
  2503     072B  0873               	movf	UART_PutC@data,w
  2504     072C  1283               	bcf	3,5	;RP0=0, select bank0
  2505     072D  1303               	bcf	3,6	;RP1=0, select bank0
  2506     072E  0099               	movwf	25	;volatile
  2507     072F                     l232:
  2508     072F  0008               	return
  2509     0730                     __end_of_UART_PutC:
  2510                           
  2511                           	psect	text9
  2512     055C                     __ptext9:	
  2513 ;; *************** function _map *****************
  2514 ;; Defined at:
  2515 ;;		line 172 in file "postlab2.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  varmap          2   22[BANK0 ] unsigned int 
  2518 ;;  minval          2   24[BANK0 ] unsigned int 
  2519 ;;  maxval          2   26[BANK0 ] unsigned int 
  2520 ;;  minsal          2   28[BANK0 ] unsigned int 
  2521 ;;  maxsal          2   30[BANK0 ] unsigned int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  valmap          4   38[BANK0 ] float 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  2   22[BANK0 ] unsigned int 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, pclath, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0      10       0       0       0
  2534 ;;      Locals:         0       4       0       0       0
  2535 ;;      Temps:          0       6       0       0       0
  2536 ;;      Totals:         0      20       0       0       0
  2537 ;;Total ram usage:       20 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 2
  2540 ;; This function calls:
  2541 ;;		___fltol
  2542 ;;		___lwdiv
  2543 ;;		___wmul
  2544 ;;		___xxtofl
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550     055C                     _map:	
  2551                           ;psect for function _map
  2552                           
  2553     055C                     l2151:	
  2554                           ;incstack = 0
  2555                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2556                           
  2557                           
  2558                           ;postlab2.c: 173:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval - mi
      +                          nval) + minsal;
  2559     055C  1283               	bcf	3,5	;RP0=0, select bank0
  2560     055D  1303               	bcf	3,6	;RP1=0, select bank0
  2561     055E  083C               	movf	map@minsal,w
  2562     055F  023E               	subwf	map@maxsal,w
  2563     0560  00F5               	movwf	___wmul@multiplicand
  2564     0561  083D               	movf	map@minsal+1,w
  2565     0562  1C03               	skipc
  2566     0563  0A3D               	incf	map@minsal+1,w
  2567     0564  023F               	subwf	map@maxsal+1,w
  2568     0565  00F6               	movwf	___wmul@multiplicand+1
  2569     0566  0838               	movf	map@minval,w
  2570     0567  0236               	subwf	map@varmap,w
  2571     0568  00F3               	movwf	___wmul@multiplier
  2572     0569  0839               	movf	map@minval+1,w
  2573     056A  1C03               	skipc
  2574     056B  0A39               	incf	map@minval+1,w
  2575     056C  0237               	subwf	map@varmap+1,w
  2576     056D  00F4               	movwf	___wmul@multiplier+1
  2577     056E  120A  118A  2697  120A  118A  	fcall	___wmul
  2578     0573  0874               	movf	?___wmul+1,w
  2579     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0576  00A3               	movwf	___lwdiv@dividend+1
  2582     0577  0873               	movf	?___wmul,w
  2583     0578  00A2               	movwf	___lwdiv@dividend
  2584     0579  0838               	movf	map@minval,w
  2585     057A  023A               	subwf	map@maxval,w
  2586     057B  00A0               	movwf	___lwdiv@divisor
  2587     057C  0839               	movf	map@minval+1,w
  2588     057D  1C03               	skipc
  2589     057E  0A39               	incf	map@minval+1,w
  2590     057F  023B               	subwf	map@maxval+1,w
  2591     0580  00A1               	movwf	___lwdiv@divisor+1
  2592     0581  120A  118A  25C2  120A  118A  	fcall	___lwdiv
  2593     0586  1283               	bcf	3,5	;RP0=0, select bank0
  2594     0587  1303               	bcf	3,6	;RP1=0, select bank0
  2595     0588  083C               	movf	map@minsal,w
  2596     0589  0720               	addwf	?___lwdiv,w
  2597     058A  00C0               	movwf	??_map
  2598     058B  083D               	movf	map@minsal+1,w
  2599     058C  1803               	skipnc
  2600     058D  0A3D               	incf	map@minsal+1,w
  2601     058E  0721               	addwf	?___lwdiv+1,w
  2602     058F  00C1               	movwf	??_map+1
  2603     0590  0840               	movf	??_map,w
  2604     0591  00C2               	movwf	??_map+2
  2605     0592  0841               	movf	??_map+1,w
  2606     0593  00C3               	movwf	??_map+3
  2607     0594  01C4               	clrf	??_map+4
  2608     0595  01C5               	clrf	??_map+5
  2609     0596  0845               	movf	??_map+5,w
  2610     0597  00AB               	movwf	___xxtofl@val+3
  2611     0598  0844               	movf	??_map+4,w
  2612     0599  00AA               	movwf	___xxtofl@val+2
  2613     059A  0843               	movf	??_map+3,w
  2614     059B  00A9               	movwf	___xxtofl@val+1
  2615     059C  0842               	movf	??_map+2,w
  2616     059D  00A8               	movwf	___xxtofl@val
  2617     059E  3000               	movlw	0
  2618     059F  120A  118A  22B2  120A  118A  	fcall	___xxtofl
  2619     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2620     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2621     05A6  082B               	movf	?___xxtofl+3,w
  2622     05A7  00C9               	movwf	map@valmap+3
  2623     05A8  082A               	movf	?___xxtofl+2,w
  2624     05A9  00C8               	movwf	map@valmap+2
  2625     05AA  0829               	movf	?___xxtofl+1,w
  2626     05AB  00C7               	movwf	map@valmap+1
  2627     05AC  0828               	movf	?___xxtofl,w
  2628     05AD  00C6               	movwf	map@valmap
  2629                           
  2630                           ;postlab2.c: 174:   return valmap;
  2631     05AE  0849               	movf	map@valmap+3,w
  2632     05AF  00F6               	movwf	___fltol@f1+3
  2633     05B0  0848               	movf	map@valmap+2,w
  2634     05B1  00F5               	movwf	___fltol@f1+2
  2635     05B2  0847               	movf	map@valmap+1,w
  2636     05B3  00F4               	movwf	___fltol@f1+1
  2637     05B4  0846               	movf	map@valmap,w
  2638     05B5  00F3               	movwf	___fltol@f1
  2639     05B6  120A  118A  240C  120A  118A  	fcall	___fltol
  2640     05BB  0874               	movf	?___fltol+1,w
  2641     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2642     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2643     05BE  00B7               	movwf	?_map+1
  2644     05BF  0873               	movf	?___fltol,w
  2645     05C0  00B6               	movwf	?_map
  2646     05C1                     l183:
  2647     05C1  0008               	return
  2648     05C2                     __end_of_map:
  2649                           
  2650                           	psect	text10
  2651     02B2                     __ptext10:	
  2652 ;; *************** function ___xxtofl *****************
  2653 ;; Defined at:
  2654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  sign            1    wreg     unsigned char 
  2657 ;;  val             4    8[BANK0 ] long 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  sign            1   16[BANK0 ] unsigned char 
  2660 ;;  arg             4   18[BANK0 ] unsigned long 
  2661 ;;  exp             1   17[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  4    8[BANK0 ] unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         0       4       0       0       0
  2672 ;;      Locals:         0       6       0       0       0
  2673 ;;      Temps:          0       4       0       0       0
  2674 ;;      Totals:         0      14       0       0       0
  2675 ;;Total ram usage:       14 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_map
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685     02B2                     ___xxtofl:	
  2686                           ;psect for function ___xxtofl
  2687                           
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2691                           ;___xxtofl@sign stored from wreg
  2692     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2693     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2694     02B4  00B0               	movwf	___xxtofl@sign
  2695     02B5                     l1665:
  2696     02B5  0830               	movf	___xxtofl@sign,w
  2697     02B6  1903               	btfsc	3,2
  2698     02B7  2AB9               	goto	u1291
  2699     02B8  2ABA               	goto	u1290
  2700     02B9                     u1291:
  2701     02B9  2ACE               	goto	l1671
  2702     02BA                     u1290:
  2703     02BA                     l1667:
  2704     02BA  1FAB               	btfss	___xxtofl@val+3,7
  2705     02BB  2ABD               	goto	u1301
  2706     02BC  2ABE               	goto	u1300
  2707     02BD                     u1301:
  2708     02BD  2ACE               	goto	l1671
  2709     02BE                     u1300:
  2710     02BE                     l1669:
  2711     02BE  0928               	comf	___xxtofl@val,w
  2712     02BF  00B2               	movwf	___xxtofl@arg
  2713     02C0  0929               	comf	___xxtofl@val+1,w
  2714     02C1  00B3               	movwf	___xxtofl@arg+1
  2715     02C2  092A               	comf	___xxtofl@val+2,w
  2716     02C3  00B4               	movwf	___xxtofl@arg+2
  2717     02C4  092B               	comf	___xxtofl@val+3,w
  2718     02C5  00B5               	movwf	___xxtofl@arg+3
  2719     02C6  0AB2               	incf	___xxtofl@arg,f
  2720     02C7  1903               	skipnz
  2721     02C8  0AB3               	incf	___xxtofl@arg+1,f
  2722     02C9  1903               	skipnz
  2723     02CA  0AB4               	incf	___xxtofl@arg+2,f
  2724     02CB  1903               	skipnz
  2725     02CC  0AB5               	incf	___xxtofl@arg+3,f
  2726     02CD  2AD6               	goto	l803
  2727     02CE                     l1671:
  2728     02CE  082B               	movf	___xxtofl@val+3,w
  2729     02CF  00B5               	movwf	___xxtofl@arg+3
  2730     02D0  082A               	movf	___xxtofl@val+2,w
  2731     02D1  00B4               	movwf	___xxtofl@arg+2
  2732     02D2  0829               	movf	___xxtofl@val+1,w
  2733     02D3  00B3               	movwf	___xxtofl@arg+1
  2734     02D4  0828               	movf	___xxtofl@val,w
  2735     02D5  00B2               	movwf	___xxtofl@arg
  2736     02D6                     l803:
  2737     02D6  082B               	movf	___xxtofl@val+3,w
  2738     02D7  042A               	iorwf	___xxtofl@val+2,w
  2739     02D8  0429               	iorwf	___xxtofl@val+1,w
  2740     02D9  0428               	iorwf	___xxtofl@val,w
  2741     02DA  1D03               	skipz
  2742     02DB  2ADD               	goto	u1311
  2743     02DC  2ADE               	goto	u1310
  2744     02DD                     u1311:
  2745     02DD  2AE7               	goto	l1677
  2746     02DE                     u1310:
  2747     02DE                     l1673:
  2748     02DE  3000               	movlw	0
  2749     02DF  00AB               	movwf	?___xxtofl+3
  2750     02E0  3000               	movlw	0
  2751     02E1  00AA               	movwf	?___xxtofl+2
  2752     02E2  3000               	movlw	0
  2753     02E3  00A9               	movwf	?___xxtofl+1
  2754     02E4  3000               	movlw	0
  2755     02E5  00A8               	movwf	?___xxtofl
  2756     02E6  2B6B               	goto	l805
  2757     02E7                     l1677:
  2758     02E7  3096               	movlw	150
  2759     02E8  00B1               	movwf	___xxtofl@exp
  2760     02E9  2AF7               	goto	l1681
  2761     02EA                     l1679:
  2762     02EA  3001               	movlw	1
  2763     02EB  00AC               	movwf	??___xxtofl
  2764     02EC  082C               	movf	??___xxtofl,w
  2765     02ED  07B1               	addwf	___xxtofl@exp,f
  2766     02EE  3001               	movlw	1
  2767     02EF                     u1325:
  2768     02EF  1003               	clrc
  2769     02F0  0CB5               	rrf	___xxtofl@arg+3,f
  2770     02F1  0CB4               	rrf	___xxtofl@arg+2,f
  2771     02F2  0CB3               	rrf	___xxtofl@arg+1,f
  2772     02F3  0CB2               	rrf	___xxtofl@arg,f
  2773     02F4  3EFF               	addlw	-1
  2774     02F5  1D03               	skipz
  2775     02F6  2AEF               	goto	u1325
  2776     02F7                     l1681:
  2777     02F7  30FE               	movlw	254
  2778     02F8  0535               	andwf	___xxtofl@arg+3,w
  2779     02F9  1D03               	btfss	3,2
  2780     02FA  2AFC               	goto	u1331
  2781     02FB  2AFD               	goto	u1330
  2782     02FC                     u1331:
  2783     02FC  2AEA               	goto	l1679
  2784     02FD                     u1330:
  2785     02FD  2B19               	goto	l809
  2786     02FE                     l1683:
  2787     02FE  3001               	movlw	1
  2788     02FF  00AC               	movwf	??___xxtofl
  2789     0300  082C               	movf	??___xxtofl,w
  2790     0301  07B1               	addwf	___xxtofl@exp,f
  2791     0302                     l1685:
  2792     0302  3001               	movlw	1
  2793     0303  07B2               	addwf	___xxtofl@arg,f
  2794     0304  3000               	movlw	0
  2795     0305  1803               	skipnc
  2796     0306  3001               	movlw	1
  2797     0307  07B3               	addwf	___xxtofl@arg+1,f
  2798     0308  3000               	movlw	0
  2799     0309  1803               	skipnc
  2800     030A  3001               	movlw	1
  2801     030B  07B4               	addwf	___xxtofl@arg+2,f
  2802     030C  3000               	movlw	0
  2803     030D  1803               	skipnc
  2804     030E  3001               	movlw	1
  2805     030F  07B5               	addwf	___xxtofl@arg+3,f
  2806     0310                     l1687:
  2807     0310  3001               	movlw	1
  2808     0311                     u1345:
  2809     0311  1003               	clrc
  2810     0312  0CB5               	rrf	___xxtofl@arg+3,f
  2811     0313  0CB4               	rrf	___xxtofl@arg+2,f
  2812     0314  0CB3               	rrf	___xxtofl@arg+1,f
  2813     0315  0CB2               	rrf	___xxtofl@arg,f
  2814     0316  3EFF               	addlw	-1
  2815     0317  1D03               	skipz
  2816     0318  2B11               	goto	u1345
  2817     0319                     l809:
  2818     0319  30FF               	movlw	255
  2819     031A  0535               	andwf	___xxtofl@arg+3,w
  2820     031B  1D03               	btfss	3,2
  2821     031C  2B1E               	goto	u1351
  2822     031D  2B1F               	goto	u1350
  2823     031E                     u1351:
  2824     031E  2AFE               	goto	l1683
  2825     031F                     u1350:
  2826     031F  2B2B               	goto	l1691
  2827     0320                     l1689:
  2828     0320  3001               	movlw	1
  2829     0321  02B1               	subwf	___xxtofl@exp,f
  2830     0322  3001               	movlw	1
  2831     0323  00AC               	movwf	??___xxtofl
  2832     0324                     u1365:
  2833     0324  1003               	clrc
  2834     0325  0DB2               	rlf	___xxtofl@arg,f
  2835     0326  0DB3               	rlf	___xxtofl@arg+1,f
  2836     0327  0DB4               	rlf	___xxtofl@arg+2,f
  2837     0328  0DB5               	rlf	___xxtofl@arg+3,f
  2838     0329  0BAC               	decfsz	??___xxtofl,f
  2839     032A  2B24               	goto	u1365
  2840     032B                     l1691:
  2841     032B  1BB4               	btfsc	___xxtofl@arg+2,7
  2842     032C  2B2E               	goto	u1371
  2843     032D  2B2F               	goto	u1370
  2844     032E                     u1371:
  2845     032E  2B35               	goto	l816
  2846     032F                     u1370:
  2847     032F                     l1693:
  2848     032F  3002               	movlw	2
  2849     0330  0231               	subwf	___xxtofl@exp,w
  2850     0331  1803               	skipnc
  2851     0332  2B34               	goto	u1381
  2852     0333  2B35               	goto	u1380
  2853     0334                     u1381:
  2854     0334  2B20               	goto	l1689
  2855     0335                     u1380:
  2856     0335                     l816:
  2857     0335  1831               	btfsc	___xxtofl@exp,0
  2858     0336  2B38               	goto	u1391
  2859     0337  2B39               	goto	u1390
  2860     0338                     u1391:
  2861     0338  2B41               	goto	l817
  2862     0339                     u1390:
  2863     0339                     l1695:
  2864     0339  30FF               	movlw	255
  2865     033A  05B2               	andwf	___xxtofl@arg,f
  2866     033B  30FF               	movlw	255
  2867     033C  05B3               	andwf	___xxtofl@arg+1,f
  2868     033D  307F               	movlw	127
  2869     033E  05B4               	andwf	___xxtofl@arg+2,f
  2870     033F  30FF               	movlw	255
  2871     0340  05B5               	andwf	___xxtofl@arg+3,f
  2872     0341                     l817:
  2873     0341  1003               	clrc
  2874     0342  0CB1               	rrf	___xxtofl@exp,f
  2875     0343                     l1697:
  2876     0343  0831               	movf	___xxtofl@exp,w
  2877     0344  00AC               	movwf	??___xxtofl
  2878     0345  01AD               	clrf	??___xxtofl+1
  2879     0346  01AE               	clrf	??___xxtofl+2
  2880     0347  01AF               	clrf	??___xxtofl+3
  2881     0348  3018               	movlw	24
  2882     0349                     u1405:
  2883     0349  1003               	clrc
  2884     034A  0DAC               	rlf	??___xxtofl,f
  2885     034B  0DAD               	rlf	??___xxtofl+1,f
  2886     034C  0DAE               	rlf	??___xxtofl+2,f
  2887     034D  0DAF               	rlf	??___xxtofl+3,f
  2888     034E                     u1400:
  2889     034E  3EFF               	addlw	-1
  2890     034F  1D03               	skipz
  2891     0350  2B49               	goto	u1405
  2892     0351  082C               	movf	??___xxtofl,w
  2893     0352  04B2               	iorwf	___xxtofl@arg,f
  2894     0353  082D               	movf	??___xxtofl+1,w
  2895     0354  04B3               	iorwf	___xxtofl@arg+1,f
  2896     0355  082E               	movf	??___xxtofl+2,w
  2897     0356  04B4               	iorwf	___xxtofl@arg+2,f
  2898     0357  082F               	movf	??___xxtofl+3,w
  2899     0358  04B5               	iorwf	___xxtofl@arg+3,f
  2900     0359                     l1699:
  2901     0359  0830               	movf	___xxtofl@sign,w
  2902     035A  1903               	btfsc	3,2
  2903     035B  2B5D               	goto	u1411
  2904     035C  2B5E               	goto	u1410
  2905     035D                     u1411:
  2906     035D  2B63               	goto	l1705
  2907     035E                     u1410:
  2908     035E                     l1701:
  2909     035E  1FAB               	btfss	___xxtofl@val+3,7
  2910     035F  2B61               	goto	u1421
  2911     0360  2B62               	goto	u1420
  2912     0361                     u1421:
  2913     0361  2B63               	goto	l1705
  2914     0362                     u1420:
  2915     0362                     l1703:
  2916     0362  17B5               	bsf	___xxtofl@arg+3,7
  2917     0363                     l1705:
  2918     0363  0835               	movf	___xxtofl@arg+3,w
  2919     0364  00AB               	movwf	?___xxtofl+3
  2920     0365  0834               	movf	___xxtofl@arg+2,w
  2921     0366  00AA               	movwf	?___xxtofl+2
  2922     0367  0833               	movf	___xxtofl@arg+1,w
  2923     0368  00A9               	movwf	?___xxtofl+1
  2924     0369  0832               	movf	___xxtofl@arg,w
  2925     036A  00A8               	movwf	?___xxtofl
  2926     036B                     l805:
  2927     036B  0008               	return
  2928     036C                     __end_of___xxtofl:
  2929                           
  2930                           	psect	text11
  2931     0697                     __ptext11:	
  2932 ;; *************** function ___wmul *****************
  2933 ;; Defined at:
  2934 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  multiplier      2    3[COMMON] unsigned int 
  2937 ;;  multiplicand    2    5[COMMON] unsigned int 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  product         2    7[COMMON] unsigned int 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2    3[COMMON] unsigned int 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         4       0       0       0       0
  2950 ;;      Locals:         2       0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0
  2952 ;;      Totals:         6       0       0       0       0
  2953 ;;Total ram usage:        6 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_map
  2960 ;;		_sprintf
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     0697                     ___wmul:	
  2965                           ;psect for function ___wmul
  2966                           
  2967     0697                     l1543:	
  2968                           ;incstack = 0
  2969                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2970                           
  2971     0697  01F7               	clrf	___wmul@product
  2972     0698  01F8               	clrf	___wmul@product+1
  2973     0699                     l1545:
  2974     0699  1C73               	btfss	___wmul@multiplier,0
  2975     069A  2E9C               	goto	u951
  2976     069B  2E9D               	goto	u950
  2977     069C                     u951:
  2978     069C  2EA3               	goto	l370
  2979     069D                     u950:
  2980     069D                     l1547:
  2981     069D  0875               	movf	___wmul@multiplicand,w
  2982     069E  07F7               	addwf	___wmul@product,f
  2983     069F  1803               	skipnc
  2984     06A0  0AF8               	incf	___wmul@product+1,f
  2985     06A1  0876               	movf	___wmul@multiplicand+1,w
  2986     06A2  07F8               	addwf	___wmul@product+1,f
  2987     06A3                     l370:
  2988     06A3  3001               	movlw	1
  2989     06A4                     u965:
  2990     06A4  1003               	clrc
  2991     06A5  0DF5               	rlf	___wmul@multiplicand,f
  2992     06A6  0DF6               	rlf	___wmul@multiplicand+1,f
  2993     06A7  3EFF               	addlw	-1
  2994     06A8  1D03               	skipz
  2995     06A9  2EA4               	goto	u965
  2996     06AA                     l1549:
  2997     06AA  3001               	movlw	1
  2998     06AB                     u975:
  2999     06AB  1003               	clrc
  3000     06AC  0CF4               	rrf	___wmul@multiplier+1,f
  3001     06AD  0CF3               	rrf	___wmul@multiplier,f
  3002     06AE  3EFF               	addlw	-1
  3003     06AF  1D03               	skipz
  3004     06B0  2EAB               	goto	u975
  3005     06B1                     l1551:
  3006     06B1  0873               	movf	___wmul@multiplier,w
  3007     06B2  0474               	iorwf	___wmul@multiplier+1,w
  3008     06B3  1D03               	btfss	3,2
  3009     06B4  2EB6               	goto	u981
  3010     06B5  2EB7               	goto	u980
  3011     06B6                     u981:
  3012     06B6  2E99               	goto	l1545
  3013     06B7                     u980:
  3014     06B7                     l1553:
  3015     06B7  0878               	movf	___wmul@product+1,w
  3016     06B8  00F4               	movwf	?___wmul+1
  3017     06B9  0877               	movf	___wmul@product,w
  3018     06BA  00F3               	movwf	?___wmul
  3019     06BB                     l372:
  3020     06BB  0008               	return
  3021     06BC                     __end_of___wmul:
  3022                           
  3023                           	psect	text12
  3024     05C2                     __ptext12:	
  3025 ;; *************** function ___lwdiv *****************
  3026 ;; Defined at:
  3027 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  divisor         2    0[BANK0 ] unsigned int 
  3030 ;;  dividend        2    2[BANK0 ] unsigned int 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  quotient        2    6[BANK0 ] unsigned int 
  3033 ;;  counter         1    5[BANK0 ] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  2    0[BANK0 ] unsigned int 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       4       0       0       0
  3044 ;;      Locals:         0       3       0       0       0
  3045 ;;      Temps:          0       1       0       0       0
  3046 ;;      Totals:         0       8       0       0       0
  3047 ;;Total ram usage:        8 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_map
  3054 ;;		_sprintf
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     05C2                     ___lwdiv:	
  3059                           ;psect for function ___lwdiv
  3060                           
  3061     05C2                     l2087:	
  3062                           ;incstack = 0
  3063                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3064                           
  3065     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3066     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3067     05C4  01A6               	clrf	___lwdiv@quotient
  3068     05C5  01A7               	clrf	___lwdiv@quotient+1
  3069     05C6                     l2089:
  3070     05C6  0820               	movf	___lwdiv@divisor,w
  3071     05C7  0421               	iorwf	___lwdiv@divisor+1,w
  3072     05C8  1903               	btfsc	3,2
  3073     05C9  2DCB               	goto	u1871
  3074     05CA  2DCC               	goto	u1870
  3075     05CB                     u1871:
  3076     05CB  2E03               	goto	l2109
  3077     05CC                     u1870:
  3078     05CC                     l2091:
  3079     05CC  01A5               	clrf	___lwdiv@counter
  3080     05CD  0AA5               	incf	___lwdiv@counter,f
  3081     05CE  2DDA               	goto	l2097
  3082     05CF                     l2093:
  3083     05CF  3001               	movlw	1
  3084     05D0                     u1885:
  3085     05D0  1003               	clrc
  3086     05D1  0DA0               	rlf	___lwdiv@divisor,f
  3087     05D2  0DA1               	rlf	___lwdiv@divisor+1,f
  3088     05D3  3EFF               	addlw	-1
  3089     05D4  1D03               	skipz
  3090     05D5  2DD0               	goto	u1885
  3091     05D6                     l2095:
  3092     05D6  3001               	movlw	1
  3093     05D7  00A4               	movwf	??___lwdiv
  3094     05D8  0824               	movf	??___lwdiv,w
  3095     05D9  07A5               	addwf	___lwdiv@counter,f
  3096     05DA                     l2097:
  3097     05DA  1FA1               	btfss	___lwdiv@divisor+1,7
  3098     05DB  2DDD               	goto	u1891
  3099     05DC  2DDE               	goto	u1890
  3100     05DD                     u1891:
  3101     05DD  2DCF               	goto	l2093
  3102     05DE                     u1890:
  3103     05DE                     l2099:
  3104     05DE  3001               	movlw	1
  3105     05DF                     u1905:
  3106     05DF  1003               	clrc
  3107     05E0  0DA6               	rlf	___lwdiv@quotient,f
  3108     05E1  0DA7               	rlf	___lwdiv@quotient+1,f
  3109     05E2  3EFF               	addlw	-1
  3110     05E3  1D03               	skipz
  3111     05E4  2DDF               	goto	u1905
  3112     05E5  0821               	movf	___lwdiv@divisor+1,w
  3113     05E6  0223               	subwf	___lwdiv@dividend+1,w
  3114     05E7  1D03               	skipz
  3115     05E8  2DEB               	goto	u1915
  3116     05E9  0820               	movf	___lwdiv@divisor,w
  3117     05EA  0222               	subwf	___lwdiv@dividend,w
  3118     05EB                     u1915:
  3119     05EB  1C03               	skipc
  3120     05EC  2DEE               	goto	u1911
  3121     05ED  2DEF               	goto	u1910
  3122     05EE                     u1911:
  3123     05EE  2DF6               	goto	l2105
  3124     05EF                     u1910:
  3125     05EF                     l2101:
  3126     05EF  0820               	movf	___lwdiv@divisor,w
  3127     05F0  02A2               	subwf	___lwdiv@dividend,f
  3128     05F1  0821               	movf	___lwdiv@divisor+1,w
  3129     05F2  1C03               	skipc
  3130     05F3  03A3               	decf	___lwdiv@dividend+1,f
  3131     05F4  02A3               	subwf	___lwdiv@dividend+1,f
  3132     05F5                     l2103:
  3133     05F5  1426               	bsf	___lwdiv@quotient,0
  3134     05F6                     l2105:
  3135     05F6  3001               	movlw	1
  3136     05F7                     u1925:
  3137     05F7  1003               	clrc
  3138     05F8  0CA1               	rrf	___lwdiv@divisor+1,f
  3139     05F9  0CA0               	rrf	___lwdiv@divisor,f
  3140     05FA  3EFF               	addlw	-1
  3141     05FB  1D03               	skipz
  3142     05FC  2DF7               	goto	u1925
  3143     05FD                     l2107:
  3144     05FD  3001               	movlw	1
  3145     05FE  02A5               	subwf	___lwdiv@counter,f
  3146     05FF  1D03               	btfss	3,2
  3147     0600  2E02               	goto	u1931
  3148     0601  2E03               	goto	u1930
  3149     0602                     u1931:
  3150     0602  2DDE               	goto	l2099
  3151     0603                     u1930:
  3152     0603                     l2109:
  3153     0603  0827               	movf	___lwdiv@quotient+1,w
  3154     0604  00A1               	movwf	?___lwdiv+1
  3155     0605  0826               	movf	___lwdiv@quotient,w
  3156     0606  00A0               	movwf	?___lwdiv
  3157     0607                     l642:
  3158     0607  0008               	return
  3159     0608                     __end_of___lwdiv:
  3160                           
  3161                           	psect	text13
  3162     040C                     __ptext13:	
  3163 ;; *************** function ___fltol *****************
  3164 ;; Defined at:
  3165 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  f1              4    3[COMMON] unsigned int 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  exp1            1    8[COMMON] unsigned char 
  3170 ;;  sign1           1    7[COMMON] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  4    3[COMMON] long 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         4       0       0       0       0
  3181 ;;      Locals:         2       0       0       0       0
  3182 ;;      Temps:          0       4       0       0       0
  3183 ;;      Totals:         6       4       0       0       0
  3184 ;;Total ram usage:       10 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 1
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_map
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     040C                     ___fltol:	
  3195                           ;psect for function ___fltol
  3196                           
  3197     040C                     l2051:	
  3198                           ;incstack = 0
  3199                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3200                           
  3201     040C  1003               	clrc
  3202     040D  0D75               	rlf	___fltol@f1+2,w
  3203     040E  0D76               	rlf	___fltol@f1+3,w
  3204     040F  00F8               	movwf	___fltol@exp1
  3205     0410  0878               	movf	___fltol@exp1,w
  3206     0411  1D03               	btfss	3,2
  3207     0412  2C14               	goto	u1771
  3208     0413  2C15               	goto	u1770
  3209     0414                     u1771:
  3210     0414  2C1E               	goto	l2057
  3211     0415                     u1770:
  3212     0415                     l2053:
  3213     0415  3000               	movlw	0
  3214     0416  00F6               	movwf	?___fltol+3
  3215     0417  3000               	movlw	0
  3216     0418  00F5               	movwf	?___fltol+2
  3217     0419  3000               	movlw	0
  3218     041A  00F4               	movwf	?___fltol+1
  3219     041B  3000               	movlw	0
  3220     041C  00F3               	movwf	?___fltol
  3221     041D  2C83               	goto	l556
  3222     041E                     l2057:
  3223     041E  0873               	movf	___fltol@f1,w
  3224     041F  1283               	bcf	3,5	;RP0=0, select bank0
  3225     0420  1303               	bcf	3,6	;RP1=0, select bank0
  3226     0421  00A0               	movwf	??___fltol
  3227     0422  0874               	movf	___fltol@f1+1,w
  3228     0423  00A1               	movwf	??___fltol+1
  3229     0424  0875               	movf	___fltol@f1+2,w
  3230     0425  00A2               	movwf	??___fltol+2
  3231     0426  0876               	movf	___fltol@f1+3,w
  3232     0427  00A3               	movwf	??___fltol+3
  3233     0428  301F               	movlw	31
  3234     0429                     u1785:
  3235     0429  1003               	clrc
  3236     042A  0CA3               	rrf	??___fltol+3,f
  3237     042B  0CA2               	rrf	??___fltol+2,f
  3238     042C  0CA1               	rrf	??___fltol+1,f
  3239     042D  0CA0               	rrf	??___fltol,f
  3240     042E                     u1780:
  3241     042E  3EFF               	addlw	-1
  3242     042F  1D03               	skipz
  3243     0430  2C29               	goto	u1785
  3244     0431  0820               	movf	??___fltol,w
  3245     0432  00F7               	movwf	___fltol@sign1
  3246     0433                     l2059:
  3247     0433  17F5               	bsf	___fltol@f1+2,7
  3248     0434                     l2061:
  3249     0434  30FF               	movlw	255
  3250     0435  05F3               	andwf	___fltol@f1,f
  3251     0436  30FF               	movlw	255
  3252     0437  05F4               	andwf	___fltol@f1+1,f
  3253     0438  30FF               	movlw	255
  3254     0439  05F5               	andwf	___fltol@f1+2,f
  3255     043A  3000               	movlw	0
  3256     043B  05F6               	andwf	___fltol@f1+3,f
  3257     043C                     l2063:
  3258     043C  3096               	movlw	150
  3259     043D  02F8               	subwf	___fltol@exp1,f
  3260     043E                     l2065:
  3261     043E  1FF8               	btfss	___fltol@exp1,7
  3262     043F  2C41               	goto	u1791
  3263     0440  2C42               	goto	u1790
  3264     0441                     u1791:
  3265     0441  2C5C               	goto	l2075
  3266     0442                     u1790:
  3267     0442                     l2067:
  3268     0442  0878               	movf	___fltol@exp1,w
  3269     0443  3A80               	xorlw	128
  3270     0444  3E97               	addlw	151
  3271     0445  1803               	skipnc
  3272     0446  2C48               	goto	u1801
  3273     0447  2C49               	goto	u1800
  3274     0448                     u1801:
  3275     0448  2C4A               	goto	l2073
  3276     0449                     u1800:
  3277     0449  2C15               	goto	l2053
  3278     044A                     l2073:
  3279     044A  3001               	movlw	1
  3280     044B                     u1815:
  3281     044B  1003               	clrc
  3282     044C  0CF6               	rrf	___fltol@f1+3,f
  3283     044D  0CF5               	rrf	___fltol@f1+2,f
  3284     044E  0CF4               	rrf	___fltol@f1+1,f
  3285     044F  0CF3               	rrf	___fltol@f1,f
  3286     0450  3EFF               	addlw	-1
  3287     0451  1D03               	skipz
  3288     0452  2C4B               	goto	u1815
  3289     0453  3001               	movlw	1
  3290     0454  00A0               	movwf	??___fltol
  3291     0455  0820               	movf	??___fltol,w
  3292     0456  07F8               	addwf	___fltol@exp1,f
  3293     0457  1D03               	btfss	3,2
  3294     0458  2C5A               	goto	u1821
  3295     0459  2C5B               	goto	u1820
  3296     045A                     u1821:
  3297     045A  2C4A               	goto	l2073
  3298     045B                     u1820:
  3299     045B  2C73               	goto	l2083
  3300     045C                     l2075:
  3301     045C  3020               	movlw	32
  3302     045D  0278               	subwf	___fltol@exp1,w
  3303     045E  1C03               	skipc
  3304     045F  2C61               	goto	u1831
  3305     0460  2C62               	goto	u1830
  3306     0461                     u1831:
  3307     0461  2C6E               	goto	l563
  3308     0462                     u1830:
  3309     0462  2C15               	goto	l2053
  3310     0463                     l2081:
  3311     0463  3001               	movlw	1
  3312     0464  00A0               	movwf	??___fltol
  3313     0465                     u1845:
  3314     0465  1003               	clrc
  3315     0466  0DF3               	rlf	___fltol@f1,f
  3316     0467  0DF4               	rlf	___fltol@f1+1,f
  3317     0468  0DF5               	rlf	___fltol@f1+2,f
  3318     0469  0DF6               	rlf	___fltol@f1+3,f
  3319     046A  0BA0               	decfsz	??___fltol,f
  3320     046B  2C65               	goto	u1845
  3321     046C  3001               	movlw	1
  3322     046D  02F8               	subwf	___fltol@exp1,f
  3323     046E                     l563:
  3324     046E  0878               	movf	___fltol@exp1,w
  3325     046F  1D03               	btfss	3,2
  3326     0470  2C72               	goto	u1851
  3327     0471  2C73               	goto	u1850
  3328     0472                     u1851:
  3329     0472  2C63               	goto	l2081
  3330     0473                     u1850:
  3331     0473                     l2083:
  3332     0473  0877               	movf	___fltol@sign1,w
  3333     0474  1903               	btfsc	3,2
  3334     0475  2C77               	goto	u1861
  3335     0476  2C78               	goto	u1860
  3336     0477                     u1861:
  3337     0477  2C83               	goto	l566
  3338     0478                     u1860:
  3339     0478                     l2085:
  3340     0478  09F3               	comf	___fltol@f1,f
  3341     0479  09F4               	comf	___fltol@f1+1,f
  3342     047A  09F5               	comf	___fltol@f1+2,f
  3343     047B  09F6               	comf	___fltol@f1+3,f
  3344     047C  0AF3               	incf	___fltol@f1,f
  3345     047D  1903               	skipnz
  3346     047E  0AF4               	incf	___fltol@f1+1,f
  3347     047F  1903               	skipnz
  3348     0480  0AF5               	incf	___fltol@f1+2,f
  3349     0481  1903               	skipnz
  3350     0482  0AF6               	incf	___fltol@f1+3,f
  3351     0483                     l566:
  3352     0483                     l556:
  3353     0483  0008               	return
  3354     0484                     __end_of___fltol:
  3355                           
  3356                           	psect	text14
  3357     036C                     __ptext14:	
  3358 ;; *************** function _UART_Init *****************
  3359 ;; Defined at:
  3360 ;;		line 14 in file "USARTmodl.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  n               2   16[BANK0 ] int 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3374 ;;      Params:         0       4       0       0       0
  3375 ;;      Locals:         0       2       0       0       0
  3376 ;;      Temps:          0       4       0       0       0
  3377 ;;      Totals:         0      10       0       0       0
  3378 ;;Total ram usage:       10 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 2
  3381 ;; This function calls:
  3382 ;;		___lldiv
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388     036C                     _UART_Init:	
  3389                           ;psect for function _UART_Init
  3390                           
  3391     036C                     l2135:	
  3392                           ;incstack = 0
  3393                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3394                           
  3395                           
  3396                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3397     036C  1283               	bcf	3,5	;RP0=0, select bank0
  3398     036D  1303               	bcf	3,6	;RP1=0, select bank0
  3399     036E  0828               	movf	UART_Init@baud_rate,w
  3400     036F  00AC               	movwf	??_UART_Init
  3401     0370  0829               	movf	UART_Init@baud_rate+1,w
  3402     0371  00AD               	movwf	??_UART_Init+1
  3403     0372  082A               	movf	UART_Init@baud_rate+2,w
  3404     0373  00AE               	movwf	??_UART_Init+2
  3405     0374  082B               	movf	UART_Init@baud_rate+3,w
  3406     0375  00AF               	movwf	??_UART_Init+3
  3407     0376  3004               	movlw	4
  3408     0377                     u2005:
  3409     0377  1003               	clrc
  3410     0378  0DAC               	rlf	??_UART_Init,f
  3411     0379  0DAD               	rlf	??_UART_Init+1,f
  3412     037A  0DAE               	rlf	??_UART_Init+2,f
  3413     037B  0DAF               	rlf	??_UART_Init+3,f
  3414     037C                     u2000:
  3415     037C  3EFF               	addlw	-1
  3416     037D  1D03               	skipz
  3417     037E  2B77               	goto	u2005
  3418     037F  082F               	movf	??_UART_Init+3,w
  3419     0380  00A3               	movwf	___lldiv@divisor+3
  3420     0381  082E               	movf	??_UART_Init+2,w
  3421     0382  00A2               	movwf	___lldiv@divisor+2
  3422     0383  082D               	movf	??_UART_Init+1,w
  3423     0384  00A1               	movwf	___lldiv@divisor+1
  3424     0385  082C               	movf	??_UART_Init,w
  3425     0386  00A0               	movwf	___lldiv@divisor
  3426     0387  3000               	movlw	0
  3427     0388  00A7               	movwf	___lldiv@dividend+3
  3428     0389  307A               	movlw	122
  3429     038A  00A6               	movwf	___lldiv@dividend+2
  3430     038B  3012               	movlw	18
  3431     038C  00A5               	movwf	___lldiv@dividend+1
  3432     038D  3000               	movlw	0
  3433     038E  00A4               	movwf	___lldiv@dividend
  3434     038F  120A  118A  24F4  120A  118A  	fcall	___lldiv
  3435     0394  1283               	bcf	3,5	;RP0=0, select bank0
  3436     0395  1303               	bcf	3,6	;RP1=0, select bank0
  3437     0396  0820               	movf	?___lldiv,w
  3438     0397  3EFF               	addlw	255
  3439     0398  00B0               	movwf	UART_Init@n
  3440     0399  0821               	movf	?___lldiv+1,w
  3441     039A  1803               	skipnc
  3442     039B  3E01               	addlw	1
  3443     039C  3EFF               	addlw	255
  3444     039D  00B1               	movwf	UART_Init@n+1
  3445     039E                     l2137:
  3446                           
  3447                           ;USARTmodl.c: 18:   if (n < 0)
  3448     039E  1FB1               	btfss	UART_Init@n+1,7
  3449     039F  2BA1               	goto	u2011
  3450     03A0  2BA2               	goto	u2010
  3451     03A1                     u2011:
  3452     03A1  2BA4               	goto	l2141
  3453     03A2                     u2010:
  3454     03A2                     l2139:
  3455                           
  3456                           ;USARTmodl.c: 19:     n = 0;
  3457     03A2  01B0               	clrf	UART_Init@n
  3458     03A3  01B1               	clrf	UART_Init@n+1
  3459     03A4                     l2141:
  3460                           
  3461                           ;USARTmodl.c: 21:   if (n > 255)
  3462     03A4  0831               	movf	UART_Init@n+1,w
  3463     03A5  3A80               	xorlw	128
  3464     03A6  00FF               	movwf	btemp+1
  3465     03A7  3081               	movlw	129
  3466     03A8  027F               	subwf	btemp+1,w
  3467     03A9  1D03               	skipz
  3468     03AA  2BAD               	goto	u2025
  3469     03AB  3000               	movlw	0
  3470     03AC  0230               	subwf	UART_Init@n,w
  3471     03AD                     u2025:
  3472     03AD  1C03               	skipc
  3473     03AE  2BB0               	goto	u2021
  3474     03AF  2BB1               	goto	u2020
  3475     03B0                     u2021:
  3476     03B0  2BFF               	goto	l2149
  3477     03B1                     u2020:
  3478     03B1                     l2143:
  3479                           
  3480                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3481     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3482     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3483     03B3  0828               	movf	UART_Init@baud_rate,w
  3484     03B4  00AC               	movwf	??_UART_Init
  3485     03B5  0829               	movf	UART_Init@baud_rate+1,w
  3486     03B6  00AD               	movwf	??_UART_Init+1
  3487     03B7  082A               	movf	UART_Init@baud_rate+2,w
  3488     03B8  00AE               	movwf	??_UART_Init+2
  3489     03B9  082B               	movf	UART_Init@baud_rate+3,w
  3490     03BA  00AF               	movwf	??_UART_Init+3
  3491     03BB  3006               	movlw	6
  3492     03BC                     u2035:
  3493     03BC  1003               	clrc
  3494     03BD  0DAC               	rlf	??_UART_Init,f
  3495     03BE  0DAD               	rlf	??_UART_Init+1,f
  3496     03BF  0DAE               	rlf	??_UART_Init+2,f
  3497     03C0  0DAF               	rlf	??_UART_Init+3,f
  3498     03C1                     u2030:
  3499     03C1  3EFF               	addlw	-1
  3500     03C2  1D03               	skipz
  3501     03C3  2BBC               	goto	u2035
  3502     03C4  082F               	movf	??_UART_Init+3,w
  3503     03C5  00A3               	movwf	___lldiv@divisor+3
  3504     03C6  082E               	movf	??_UART_Init+2,w
  3505     03C7  00A2               	movwf	___lldiv@divisor+2
  3506     03C8  082D               	movf	??_UART_Init+1,w
  3507     03C9  00A1               	movwf	___lldiv@divisor+1
  3508     03CA  082C               	movf	??_UART_Init,w
  3509     03CB  00A0               	movwf	___lldiv@divisor
  3510     03CC  3000               	movlw	0
  3511     03CD  00A7               	movwf	___lldiv@dividend+3
  3512     03CE  307A               	movlw	122
  3513     03CF  00A6               	movwf	___lldiv@dividend+2
  3514     03D0  3012               	movlw	18
  3515     03D1  00A5               	movwf	___lldiv@dividend+1
  3516     03D2  3000               	movlw	0
  3517     03D3  00A4               	movwf	___lldiv@dividend
  3518     03D4  120A  118A  24F4  120A  118A  	fcall	___lldiv
  3519     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3520     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3521     03DB  0820               	movf	?___lldiv,w
  3522     03DC  3EFF               	addlw	255
  3523     03DD  00B0               	movwf	UART_Init@n
  3524     03DE  0821               	movf	?___lldiv+1,w
  3525     03DF  1803               	skipnc
  3526     03E0  3E01               	addlw	1
  3527     03E1  3EFF               	addlw	255
  3528     03E2  00B1               	movwf	UART_Init@n+1
  3529     03E3                     l2145:
  3530                           
  3531                           ;USARTmodl.c: 24:     if (n > 255)
  3532     03E3  0831               	movf	UART_Init@n+1,w
  3533     03E4  3A80               	xorlw	128
  3534     03E5  00FF               	movwf	btemp+1
  3535     03E6  3081               	movlw	129
  3536     03E7  027F               	subwf	btemp+1,w
  3537     03E8  1D03               	skipz
  3538     03E9  2BEC               	goto	u2045
  3539     03EA  3000               	movlw	0
  3540     03EB  0230               	subwf	UART_Init@n,w
  3541     03EC                     u2045:
  3542     03EC  1C03               	skipc
  3543     03ED  2BEF               	goto	u2041
  3544     03EE  2BF0               	goto	u2040
  3545     03EF                     u2041:
  3546     03EF  2BF6               	goto	l210
  3547     03F0                     u2040:
  3548     03F0                     l2147:
  3549                           
  3550                           ;USARTmodl.c: 25:       n = 255;
  3551     03F0  30FF               	movlw	255
  3552     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3553     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3554     03F3  00B0               	movwf	UART_Init@n
  3555     03F4  3000               	movlw	0
  3556     03F5  00B1               	movwf	UART_Init@n+1
  3557     03F6                     l210:
  3558                           
  3559                           ;USARTmodl.c: 26:     SPBRG = n;
  3560     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3561     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3562     03F8  0830               	movf	UART_Init@n,w
  3563     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3564     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3565     03FB  0099               	movwf	25	;volatile
  3566                           
  3567                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3568     03FC  3020               	movlw	32
  3569     03FD  0098               	movwf	24	;volatile
  3570                           
  3571                           ;USARTmodl.c: 28:   }
  3572     03FE  2C07               	goto	l211
  3573     03FF                     l2149:
  3574                           
  3575                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3576     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  3577     0400  1303               	bcf	3,6	;RP1=0, select bank0
  3578     0401  0830               	movf	UART_Init@n,w
  3579     0402  1683               	bsf	3,5	;RP0=1, select bank1
  3580     0403  1303               	bcf	3,6	;RP1=0, select bank1
  3581     0404  0099               	movwf	25	;volatile
  3582                           
  3583                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3584     0405  3024               	movlw	36
  3585     0406  0098               	movwf	24	;volatile
  3586     0407                     l211:	
  3587                           ;USARTmodl.c: 34:   }
  3588                           
  3589                           
  3590                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3591     0407  3090               	movlw	144
  3592     0408  1283               	bcf	3,5	;RP0=0, select bank0
  3593     0409  1303               	bcf	3,6	;RP1=0, select bank0
  3594     040A  0098               	movwf	24	;volatile
  3595     040B                     l212:
  3596     040B  0008               	return
  3597     040C                     __end_of_UART_Init:
  3598                           
  3599                           	psect	text15
  3600     04F4                     __ptext15:	
  3601 ;; *************** function ___lldiv *****************
  3602 ;; Defined at:
  3603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  divisor         4    0[BANK0 ] unsigned long 
  3606 ;;  dividend        4    4[BANK0 ] unsigned long 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  quotient        4    4[COMMON] unsigned long 
  3609 ;;  counter         1    8[COMMON] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  4    0[BANK0 ] unsigned long 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         0       8       0       0       0
  3620 ;;      Locals:         5       0       0       0       0
  3621 ;;      Temps:          1       0       0       0       0
  3622 ;;      Totals:         6       8       0       0       0
  3623 ;;Total ram usage:       14 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 1
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_UART_Init
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633     04F4                     ___lldiv:	
  3634                           ;psect for function ___lldiv
  3635                           
  3636     04F4                     l2027:	
  3637                           ;incstack = 0
  3638                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3639                           
  3640     04F4  3000               	movlw	0
  3641     04F5  00F7               	movwf	___lldiv@quotient+3
  3642     04F6  3000               	movlw	0
  3643     04F7  00F6               	movwf	___lldiv@quotient+2
  3644     04F8  3000               	movlw	0
  3645     04F9  00F5               	movwf	___lldiv@quotient+1
  3646     04FA  3000               	movlw	0
  3647     04FB  00F4               	movwf	___lldiv@quotient
  3648     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  3649     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  3650     04FE  0823               	movf	___lldiv@divisor+3,w
  3651     04FF  0422               	iorwf	___lldiv@divisor+2,w
  3652     0500  0421               	iorwf	___lldiv@divisor+1,w
  3653     0501  0420               	iorwf	___lldiv@divisor,w
  3654     0502  1903               	skipnz
  3655     0503  2D05               	goto	u1701
  3656     0504  2D06               	goto	u1700
  3657     0505                     u1701:
  3658     0505  2D53               	goto	l2047
  3659     0506                     u1700:
  3660     0506                     l2029:
  3661     0506  01F8               	clrf	___lldiv@counter
  3662     0507  0AF8               	incf	___lldiv@counter,f
  3663     0508  2D16               	goto	l2033
  3664     0509                     l2031:
  3665     0509  3001               	movlw	1
  3666     050A  00F3               	movwf	??___lldiv
  3667     050B                     u1715:
  3668     050B  1003               	clrc
  3669     050C  0DA0               	rlf	___lldiv@divisor,f
  3670     050D  0DA1               	rlf	___lldiv@divisor+1,f
  3671     050E  0DA2               	rlf	___lldiv@divisor+2,f
  3672     050F  0DA3               	rlf	___lldiv@divisor+3,f
  3673     0510  0BF3               	decfsz	??___lldiv,f
  3674     0511  2D0B               	goto	u1715
  3675     0512  3001               	movlw	1
  3676     0513  00F3               	movwf	??___lldiv
  3677     0514  0873               	movf	??___lldiv,w
  3678     0515  07F8               	addwf	___lldiv@counter,f
  3679     0516                     l2033:
  3680     0516  1FA3               	btfss	___lldiv@divisor+3,7
  3681     0517  2D19               	goto	u1721
  3682     0518  2D1A               	goto	u1720
  3683     0519                     u1721:
  3684     0519  2D09               	goto	l2031
  3685     051A                     u1720:
  3686     051A                     l2035:
  3687     051A  3001               	movlw	1
  3688     051B  00F3               	movwf	??___lldiv
  3689     051C                     u1735:
  3690     051C  1003               	clrc
  3691     051D  0DF4               	rlf	___lldiv@quotient,f
  3692     051E  0DF5               	rlf	___lldiv@quotient+1,f
  3693     051F  0DF6               	rlf	___lldiv@quotient+2,f
  3694     0520  0DF7               	rlf	___lldiv@quotient+3,f
  3695     0521  0BF3               	decfsz	??___lldiv,f
  3696     0522  2D1C               	goto	u1735
  3697     0523                     l2037:
  3698     0523  0823               	movf	___lldiv@divisor+3,w
  3699     0524  0227               	subwf	___lldiv@dividend+3,w
  3700     0525  1D03               	skipz
  3701     0526  2D31               	goto	u1745
  3702     0527  0822               	movf	___lldiv@divisor+2,w
  3703     0528  0226               	subwf	___lldiv@dividend+2,w
  3704     0529  1D03               	skipz
  3705     052A  2D31               	goto	u1745
  3706     052B  0821               	movf	___lldiv@divisor+1,w
  3707     052C  0225               	subwf	___lldiv@dividend+1,w
  3708     052D  1D03               	skipz
  3709     052E  2D31               	goto	u1745
  3710     052F  0820               	movf	___lldiv@divisor,w
  3711     0530  0224               	subwf	___lldiv@dividend,w
  3712     0531                     u1745:
  3713     0531  1C03               	skipc
  3714     0532  2D34               	goto	u1741
  3715     0533  2D35               	goto	u1740
  3716     0534                     u1741:
  3717     0534  2D44               	goto	l2043
  3718     0535                     u1740:
  3719     0535                     l2039:
  3720     0535  0820               	movf	___lldiv@divisor,w
  3721     0536  02A4               	subwf	___lldiv@dividend,f
  3722     0537  0821               	movf	___lldiv@divisor+1,w
  3723     0538  1C03               	skipc
  3724     0539  0F21               	incfsz	___lldiv@divisor+1,w
  3725     053A  02A5               	subwf	___lldiv@dividend+1,f
  3726     053B  0822               	movf	___lldiv@divisor+2,w
  3727     053C  1C03               	skipc
  3728     053D  0F22               	incfsz	___lldiv@divisor+2,w
  3729     053E  02A6               	subwf	___lldiv@dividend+2,f
  3730     053F  0823               	movf	___lldiv@divisor+3,w
  3731     0540  1C03               	skipc
  3732     0541  0F23               	incfsz	___lldiv@divisor+3,w
  3733     0542  02A7               	subwf	___lldiv@dividend+3,f
  3734     0543                     l2041:
  3735     0543  1474               	bsf	___lldiv@quotient,0
  3736     0544                     l2043:
  3737     0544  3001               	movlw	1
  3738     0545                     u1755:
  3739     0545  1003               	clrc
  3740     0546  0CA3               	rrf	___lldiv@divisor+3,f
  3741     0547  0CA2               	rrf	___lldiv@divisor+2,f
  3742     0548  0CA1               	rrf	___lldiv@divisor+1,f
  3743     0549  0CA0               	rrf	___lldiv@divisor,f
  3744     054A  3EFF               	addlw	-1
  3745     054B  1D03               	skipz
  3746     054C  2D45               	goto	u1755
  3747     054D                     l2045:
  3748     054D  3001               	movlw	1
  3749     054E  02F8               	subwf	___lldiv@counter,f
  3750     054F  1D03               	btfss	3,2
  3751     0550  2D52               	goto	u1761
  3752     0551  2D53               	goto	u1760
  3753     0552                     u1761:
  3754     0552  2D1A               	goto	l2035
  3755     0553                     u1760:
  3756     0553                     l2047:
  3757     0553  0877               	movf	___lldiv@quotient+3,w
  3758     0554  00A3               	movwf	?___lldiv+3
  3759     0555  0876               	movf	___lldiv@quotient+2,w
  3760     0556  00A2               	movwf	?___lldiv+2
  3761     0557  0875               	movf	___lldiv@quotient+1,w
  3762     0558  00A1               	movwf	?___lldiv+1
  3763     0559  0874               	movf	___lldiv@quotient,w
  3764     055A  00A0               	movwf	?___lldiv
  3765     055B                     l406:
  3766     055B  0008               	return
  3767     055C                     __end_of___lldiv:
  3768                           
  3769                           	psect	text16
  3770     0716                     __ptext16:	
  3771 ;; *************** function _UART_GetC *****************
  3772 ;; Defined at:
  3773 ;;		line 46 in file "USARTmodl.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      unsigned char 
  3780 ;; Registers used:
  3781 ;;		wreg
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3787 ;;      Params:         0       0       0       0       0
  3788 ;;      Locals:         0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0
  3790 ;;      Totals:         0       0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; Hardware stack levels required when called: 1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801     0716                     _UART_GetC:	
  3802                           ;psect for function _UART_GetC
  3803                           
  3804     0716                     l1881:	
  3805                           ;incstack = 0
  3806                           ; Regs used in _UART_GetC: [wreg]
  3807                           
  3808     0716                     l222:	
  3809                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3810                           
  3811     0716  1283               	bcf	3,5	;RP0=0, select bank0
  3812     0717  1303               	bcf	3,6	;RP1=0, select bank0
  3813     0718  1E8C               	btfss	12,5	;volatile
  3814     0719  2F1B               	goto	u1641
  3815     071A  2F1C               	goto	u1640
  3816     071B                     u1641:
  3817     071B  2F16               	goto	l222
  3818     071C                     u1640:
  3819     071C                     l224:
  3820                           
  3821                           ;USARTmodl.c: 49:   if (OERR)
  3822     071C  1C98               	btfss	24,1	;volatile
  3823     071D  2F1F               	goto	u1651
  3824     071E  2F20               	goto	u1650
  3825     071F                     u1651:
  3826     071F  2F22               	goto	l1885
  3827     0720                     u1650:
  3828     0720                     l1883:
  3829                           
  3830                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3831     0720  1218               	bcf	24,4	;volatile
  3832                           
  3833                           ;USARTmodl.c: 52:     CREN = 1;
  3834     0721  1618               	bsf	24,4	;volatile
  3835     0722                     l1885:
  3836                           
  3837                           ;USARTmodl.c: 54:   return RCREG;
  3838     0722  081A               	movf	26,w	;volatile
  3839     0723                     l226:
  3840     0723  0008               	return
  3841     0724                     __end_of_UART_GetC:
  3842                           
  3843                           	psect	text17
  3844     0730                     __ptext17:	
  3845 ;; *************** function _UART_Data_Ready *****************
  3846 ;; Defined at:
  3847 ;;		line 41 in file "USARTmodl.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;		None               void
  3854 ;; Registers used:
  3855 ;;		status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875     0730                     _UART_Data_Ready:	
  3876                           ;psect for function _UART_Data_Ready
  3877                           
  3878     0730                     l1873:	
  3879                           ;incstack = 0
  3880                           ; Regs used in _UART_Data_Ready: [status]
  3881                           
  3882                           
  3883                           ;USARTmodl.c: 43:   return RCIF;
  3884     0730  1283               	bcf	3,5	;RP0=0, select bank0
  3885     0731  1303               	bcf	3,6	;RP1=0, select bank0
  3886     0732  1A8C               	btfsc	12,5	;volatile
  3887     0733  2F35               	goto	u1631
  3888     0734  2F36               	goto	u1630
  3889     0735                     u1631:
  3890     0735  2F38               	goto	l1877
  3891     0736                     u1630:
  3892     0736                     l1875:
  3893     0736  1003               	clrc
  3894     0737  2F39               	goto	l219
  3895     0738                     l1877:
  3896     0738  1403               	setc
  3897     0739                     l219:
  3898     0739  0008               	return
  3899     073A                     __end_of_UART_Data_Ready:
  3900                           
  3901                           	psect	text18
  3902     06D8                     __ptext18:	
  3903 ;; *************** function _isr *****************
  3904 ;; Defined at:
  3905 ;;		line 34 in file "postlab2.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;		None
  3908 ;; Auto vars:     Size  Location     Type
  3909 ;;		None
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  1    wreg      void 
  3912 ;; Registers used:
  3913 ;;		wreg, status,2, status,0
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3919 ;;      Params:         0       0       0       0       0
  3920 ;;      Locals:         0       0       0       0       0
  3921 ;;      Temps:          3       0       0       0       0
  3922 ;;      Totals:         3       0       0       0       0
  3923 ;;Total ram usage:        3 bytes
  3924 ;; Hardware stack levels used: 1
  3925 ;; This function calls:
  3926 ;;		Nothing
  3927 ;; This function is called by:
  3928 ;;		Interrupt level 1
  3929 ;; This function uses a non-reentrant model
  3930 ;;
  3931                           
  3932     06D8                     _isr:	
  3933                           ;psect for function _isr
  3934                           
  3935     06D8                     i1l1889:
  3936                           
  3937                           ;postlab2.c: 36:     if(PIR1bits.ADIF){
  3938     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  3939     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  3940     06DA  1F0C               	btfss	12,6	;volatile
  3941     06DB  2EDD               	goto	u166_21
  3942     06DC  2EDE               	goto	u166_20
  3943     06DD                     u166_21:
  3944     06DD  2EEA               	goto	i1l153
  3945     06DE                     u166_20:
  3946     06DE                     i1l1891:
  3947                           
  3948                           ;postlab2.c: 38:          if (ADCON0bits.CHS ==0)
  3949     06DE  0C1F               	rrf	31,w	;volatile
  3950     06DF  00F0               	movwf	??_isr
  3951     06E0  0C70               	rrf	??_isr,w
  3952     06E1  390F               	andlw	15
  3953     06E2  3A00               	xorlw	0
  3954     06E3  1D03               	skipz
  3955     06E4  2EE6               	goto	u167_21
  3956     06E5  2EE7               	goto	u167_20
  3957     06E6                     u167_21:
  3958     06E6  2EE9               	goto	i1l1895
  3959     06E7                     u167_20:
  3960     06E7                     i1l1893:
  3961                           
  3962                           ;postlab2.c: 39:           valpot = ADRESH;
  3963     06E7  081E               	movf	30,w	;volatile
  3964     06E8  00D9               	movwf	_valpot
  3965     06E9                     i1l1895:
  3966                           
  3967                           ;postlab2.c: 40:          PIR1bits.ADIF =0;
  3968     06E9  130C               	bcf	12,6	;volatile
  3969     06EA                     i1l153:
  3970     06EA  0872               	movf	??_isr+2,w
  3971     06EB  008A               	movwf	10
  3972     06EC  0E71               	swapf	??_isr+1,w
  3973     06ED  0083               	movwf	3
  3974     06EE  0EFE               	swapf	btemp,f
  3975     06EF  0E7E               	swapf	btemp,w
  3976     06F0  0009               	retfie
  3977     06F1                     __end_of_isr:
  3978     007E                     btemp	set	126	;btemp
  3979     007E                     wtemp0	set	126
  3980                           
  3981                           	psect	intentry
  3982     0004                     __pintentry:	
  3983                           ;incstack = 0
  3984                           ; Regs used in _isr: [wreg+status,2+status,0]
  3985                           
  3986     0004                     interrupt_function:
  3987     007E                     saved_w	set	btemp
  3988     0004  00FE               	movwf	btemp
  3989     0005  0E03               	swapf	3,w
  3990     0006  00F1               	movwf	??_isr+1
  3991     0007  080A               	movf	10,w
  3992     0008  00F2               	movwf	??_isr+2
  3993     0009  120A  118A  2ED8   	ljmp	_isr
  3994                           
  3995                           	psect	idloc
  3996                           
  3997                           ;Config register IDLOC0 @ 0x2000
  3998                           ;	unspecified, using default values
  3999     2000                     	org	8192
  4000     2000  3FFF               	dw	16383
  4001                           
  4002                           ;Config register IDLOC1 @ 0x2001
  4003                           ;	unspecified, using default values
  4004     2001                     	org	8193
  4005     2001  3FFF               	dw	16383
  4006                           
  4007                           ;Config register IDLOC2 @ 0x2002
  4008                           ;	unspecified, using default values
  4009     2002                     	org	8194
  4010     2002  3FFF               	dw	16383
  4011                           
  4012                           ;Config register IDLOC3 @ 0x2003
  4013                           ;	unspecified, using default values
  4014     2003                     	org	8195
  4015     2003  3FFF               	dw	16383
  4016                           
  4017                           	psect	config
  4018                           
  4019                           ;Config register CONFIG1 @ 0x2007
  4020                           ;	Oscillator Selection bits
  4021                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4022                           ;	Watchdog Timer Enable bit
  4023                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4024                           ;	Power-up Timer Enable bit
  4025                           ;	PWRTE = OFF, PWRT disabled
  4026                           ;	RE3/MCLR pin function select bit
  4027                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4028                           ;	Code Protection bit
  4029                           ;	CP = OFF, Program memory code protection is disabled
  4030                           ;	Data Code Protection bit
  4031                           ;	CPD = OFF, Data memory code protection is disabled
  4032                           ;	Brown Out Reset Selection bits
  4033                           ;	BOREN = OFF, BOR disabled
  4034                           ;	Internal External Switchover bit
  4035                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4036                           ;	Fail-Safe Clock Monitor Enabled bit
  4037                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  4038                           ;	Low Voltage Programming Enable bit
  4039                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  4040                           ;	In-Circuit Debugger Mode bit
  4041                           ;	DEBUG = 0x1, unprogrammed default
  4042     2007                     	org	8199
  4043     2007  38D5               	dw	14549
  4044                           
  4045                           ;Config register CONFIG2 @ 0x2008
  4046                           ;	Brown-out Reset Selection bit
  4047                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4048                           ;	Flash Program Memory Self Write Enable bits
  4049                           ;	WRT = OFF, Write protection off
  4050     2008                     	org	8200
  4051     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    66
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     57      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[23]), main@text(BANK0[9]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> message2(CODE[28]), message(CODE[28]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___wmul
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _map->___fltol
    _map->___wmul
    ___xxtofl->___wmul
    ___lwdiv->___wmul
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___xxtofl
    ___xxtofl->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    7890
                                             42 BANK0     15    15      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                                _map
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2667
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     796
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           4     2      2     796
                                              4 COMMON     4     2      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    2523
                                             22 BANK0     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              8 BANK0     14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              3 COMMON     6     2      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              8 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _map
     ___fltol
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     39      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jul 29 20:54:14 2023

                      pc 0002                       fsr 0004      ___wmul@multiplicand 0075  
                    l210 03F6                      l211 0407                      l212 040B  
                    l222 0716                      l224 071C                      l232 072F  
                    l226 0723                      l219 0739                      l180 06D7  
                    l229 0725                      l406 055B                      l238 066E  
                    l158 0703                      l183 05C1                      l336 0032  
                    l177 0696                      l370 06A3                      l372 06BB  
                    l366 019D                      l642 0607                      l563 046E  
                    l803 02D6                      l556 0483                      l652 0643  
                    l805 036B                      l566 0483                      l823 0715  
                    l816 0335                      l817 0341                      l809 0319  
                    _RD4 0044                      _RC6 003E                      _RD5 0045  
                    _RC7 003F                      _RD6 0046                      _RD7 0047  
                    u910 072B                      u911 072A                      u920 066E  
                    u921 066D                      u930 070C                      u931 070B  
                    u940 0712                      u941 0711                      u950 069D  
                    u951 069C                      u980 06B7                      u981 06B6  
                    u965 06A4                      u975 06AB                      _map 055C  
                    _isr 06D8                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0078                     l2101 05EF                     l2031 0509  
                   l2103 05F5                     l2041 0543                     l2033 0516  
                   l2105 05F6                     l2121 061E                     l2113 0608  
                   l2043 0544                     l2035 051A                     l2027 04F4  
                   l2051 040C                     l2107 05FD                     l2123 0622  
                   l2115 0610                     l2131 063F                     l2211 010B  
                   l2203 00E6                     l2045 054D                     l2037 0523  
                   l2029 0506                     l2141 03A4                     l2061 0434  
                   l2053 0415                     l2109 0603                     l2125 062C  
                   l2117 0613                     l2213 010F                     l2221 012B  
                   l2205 00F0                     l2301 026E                     l2039 0535  
                   l2047 0553                     l2143 03B1                     l2135 036C  
                   l2063 043C                     l2151 055C                     l2127 0632  
                   l2119 061A                     l2231 0149                     l2223 0131  
                   l2215 0115                     l2207 00FB                     l2303 0279  
                   l2311 027E                     l2145 03E3                     l2137 039E  
                   l2081 0463                     l2073 044A                     l2065 043E  
                   l2057 041E                     l1521 072B                     l2129 0639  
                   l2233 0177                     l2225 0136                     l2217 011A  
                   l2209 0107                     l2241 0199                     l2161 0029  
                   l2313 0297                     l2147 03F0                     l2139 03A2  
                   l2083 0473                     l2067 0442                     l2075 045C  
                   l2059 0433                     l2091 05CC                     l1523 0644  
                   l1531 0705                     l2235 017C                     l2227 013A  
                   l2219 011E                     l2171 004A                     l2163 002E  
                   l2155 001B                     l2315 02A0                     l2149 03FF  
                   l2085 0478                     l2093 05CF                     l1701 035E  
                   l1525 0646                     l1533 0706                     l2237 0180  
                   l2229 0146                     l2181 008A                     l2173 005A  
                   l2165 0033                     l2157 001E                     l2317 02A8  
                   l2261 01C5                     l2253 019E                     l2095 05D6  
                   l2087 05C2                     l1551 06B1                     l1543 0697  
                   l1703 0362                     l1519 0725                     l1527 0657  
                   l1535 070C                     l2191 00C4                     l2183 009B  
                   l2175 005E                     l2159 0024                     l2239 0189  
                   l1711 06F7                     l2271 01FC                     l2263 01CE  
                   l2255 01A3                     l2097 05DA                     l2089 05C6  
                   l1553 06B7                     l1545 0699                     l1705 0363  
                   l1529 065B                     l1537 0712                     l2193 00C8  
                   l2177 0073                     l2169 0037                     l1713 06FB  
                   l1721 0702                     l2281 0212                     l2273 0205  
                   l2265 01DC                     l2257 01A7                     l2099 05DE  
                   l1547 069D                     l1731 067C                     l1539 0714  
                   l2179 0086                     l2187 00A0                     l1715 0700  
                   l2291 0257                     l2283 0232                     l2275 0208  
                   l2267 01E5                     l2259 01B6                     l1549 06AA  
                   l1741 0689                     l1733 067F                     l1725 066F  
                   l2189 00BC                     l1709 06F1                     l2293 025C  
                   l2285 023B                     l2277 020E                     l2269 01EE  
                   l1671 02CE                     l1751 0695                     l1743 068A  
                   l1735 0680                     l1727 0673                     l2199 00CA  
                   l2383 028C                     l2295 0267                     l2287 0249  
                   l2279 0210                     l1681 02F7                     l1673 02DE  
                   l1665 02B5                     l1745 068E                     l1737 0681  
                   l1729 0674                     l2385 0045                     l2289 0252  
                   l1691 032B                     l1683 02FE                     l1667 02BA  
                   l1747 0691                     l1739 0687                     l2387 00B4  
                   l1693 032F                     l1685 0302                     l1677 02E7  
                   l1669 02BE                     l1749 0694                     l1695 0339  
                   l1687 0310                     l1679 02EA                     l1871 06BC  
                   l1873 0730                     l1881 0716                     l1697 0343  
                   l1689 0320                     l1875 0736                     l1883 0720  
                   l1699 0359                     l1877 0738                     l1885 0722  
                   ?_map 0036                     ?_isr 0070                     STR_1 04D6  
                   STR_2 04EA                     STR_3 04EA                     STR_4 04ED  
                   STR_5 04D6                     _CREN 00C4                     u2000 037C  
                   u2010 03A2                     u2011 03A1                     u2020 03B1  
                   u1300 02BE                     u2100 00FB                     u2021 03B0  
                   u2005 0377                     u1301 02BD                     u2101 00FA  
                   u2030 03C1                     u1310 02DE                     u2110 010F  
                   u1311 02DD                     u2111 010E                     u2040 03F0  
                   u1400 034E                     u2120 0115                     u2041 03EF  
                   u2025 03AD                     u2121 0114                     u2105 00F7  
                   u1410 035E                     u1330 02FD                     u2130 012A  
                   u2050 0024                     u2035 03BC                     u1411 035D  
                   u1331 02FC                     u2131 0129                     u2051 0023  
                   u1420 0362                     u2140 0131                     u2060 005A  
                   u2045 03EC                     u1421 0361                     u1405 0349  
                   u1325 02EF                     u2141 0130                     u2061 0059  
                   u1350 031F                     u2150 0146                     u2070 009A  
                   u1430 06F7                     u1351 031E                     u2151 0145  
                   u2071 0099                     u1431 06F6                     u2207 01BE  
                   u2160 0189                     u2080 00E5                     u1440 06FB  
                   u1345 0311                     u2161 0188                     u2081 00E4  
                   u1441 06FA                     u2217 01D6                     u1370 032F  
                   u1290 02BA                     u2170 0199                     u2090 00F0  
                   u1371 032E                     u1291 02B9                     u2171 0198  
                   u2091 00EF                     u2227 01F6                     u1700 0506  
                   u1380 0335                     u2180 020E                     u1701 0505  
                   u1381 0334                     u1365 0324                     u2085 00E1  
                   u2237 0262                     u2181 020D                     u1630 0736  
                   u1390 0339                     u2190 02A0                     u1631 0735  
                   u1391 0338                     u2191 029F                     u2247 0274  
                   u1640 071C                     u1720 051A                     u1800 0449  
                   u1641 071B                     u1721 0519                     u1801 0448  
                   u2257 068C                     u1650 0720                     u1651 071F  
                   u1715 050B                     u1740 0535                     u1820 045B  
                   u1741 0534                     u1821 045A                     u1830 0462  
                   u1910 05EF                     u1735 051C                     u1831 0461  
                   u1815 044B                     u1911 05EE                     u1760 0553  
                   u1761 0552                     u1745 0531                     u1905 05DF  
                   u1850 0473                     u1770 0415                     u1930 0603  
                   u1755 0545                     u1851 0472                     u1771 0414  
                   u1931 0602                     u1915 05EB                     u1860 0478  
                   u1780 042E                     u1940 0610                     u1861 0477  
                   u1845 0465                     u1925 05F7                     u1941 060F  
                   u1790 0442                     u1870 05CC                     u1791 0441  
                   u1871 05CB                     u1960 0622                     u1785 0429  
                   u1961 0621                     u1890 05DE                     u1970 062C  
                   u1891 05DD                     u1971 062B                     u1955 0614  
                   u1885 05D0                     u1990 063F                     u1991 063E  
                   u1975 0628                     u1985 0633                     _RCIF 0065  
                   _OERR 00C1                     _TRMT 04C1                     _main 019E  
                   btemp 007E                     start 000C                    ??_map 0040  
                  ??_isr 0070            ___fltol@sign1 0077                    ?_main 0070  
        __end_of___fltol 0484                    _CMCON 0079                    _ANSEL 0188  
        __end_of___lldiv 055C          __end_of___lwdiv 0608                    i1l153 06EA  
        __end_of___lwmod 0644                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098              ?_UART_Print 0074          __end_of_dpowers 049E  
        __end_of_isdigit 0716          __end_of_message 04D6                    _setup 066F  
                  main@c 0058                    pclath 000A             main@varvolt2 0056  
                  status 0003                    wtemp0 007E          __end_of_sprintf 019E  
        __initialization 000F             __end_of_main 02B2                   ??_main 004A  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 i1l1891 06DE                   i1l1893 06E7                   i1l1895 06E9  
                 i1l1889 06D8                   u166_20 06DE                   u166_21 06DD  
                 u167_20 06E7                   u167_21 06E6                   _OSCCON 008F  
                 _TRISC6 043E                   _TRISC7 043F         __end_of___xxtofl 036C  
      __end_of_UART_GetC 0724        __end_of_UART_Init 040C        __end_of_UART_PutC 0730  
                 ___wmul 0697                ??___fltol 0020                ??___lldiv 0073  
              ??___lwdiv 0024                ??___lwmod 002C         __end_of_message2 04BA  
                 _valpot 0059                ??_isdigit 0073                   saved_w 007E  
              ??_sprintf 0031             ___xxtofl@arg 0032             ___xxtofl@exp 0031  
           ___xxtofl@val 0028  __end_of__initialization 0014               ___fltol@f1 0073  
         __pcstackCOMMON 0070            __end_of_setup 0697             sprintf@width 003A  
                ??_setup 0073               __pbssBANK0 0059               __pmaintext 019E  
                ?___wmul 0073               __pintentry 0004                ?___xxtofl 0028  
           ??_UART_Print 0076               __stringtab 0484       __end_of_UART_Print 066F  
                ___fltol 040C                  ___lldiv 04F4                  ___lwdiv 05C2  
                ___lwmod 0608                  __ptext1 06F1                  __ptext2 0018  
                __ptext3 0704                  __ptext4 0608                  __ptext5 066F  
                __ptext6 06BC                  __ptext7 0644                  __ptext8 0724  
                __ptext9 055C                  _dpowers 0494                  _isdigit 0704  
             ??___xxtofl 002C                  _message 04BA              UART_Print@i 0077  
         UART_Print@data 0074                  _sprintf 0018     end_of_initialization 0014  
      __end_of_uart_read 0704        __end_of_preguntas 06D8          ___lldiv@divisor 0020  
        ___lldiv@counter 0078                _RCSTAbits 0018        ??_UART_Data_Ready 0073  
              _UART_GetC 0716                _UART_Init 036C                _UART_PutC 0724  
              _PORTCbits 0007       UART_Init@baud_rate 0028            ___xxtofl@sign 0030  
         __end_of___wmul 06BC               ?_UART_GetC 0070               ?_UART_Init 0028  
             ?_UART_PutC 0070      start_initialization 000F              __end_of_map 05C2  
            __end_of_isr 06F1                 ??___wmul 0077              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0035  
            sprintf@prec 0038         ___lwdiv@dividend 0022                 ?___fltol 0073  
               ?___lldiv 0020                 ?___lwdiv 0020                 ?___lwmod 0028  
            ??_UART_GetC 0073              ??_UART_Init 002C              ??_UART_PutC 0073  
              __pstrings 0484                 ?_isdigit 0070            UART_PutC@data 0073  
       ___lwdiv@quotient 0026                 ?_sprintf 002E               UART_Init@n 0030  
      interrupt_function 0004           ___wmul@product 0077          _UART_Data_Ready 0730  
               _PIE1bits 008C                 _PIR1bits 000C                _uart_read 06F1  
              _preguntas 06BC                map@maxsal 003E                map@maxval 003A  
              map@minsal 003C                map@minval 0038               _ADCON0bits 001F  
            __stringbase 0493               _ADCON1bits 009F        ___wmul@multiplier 0073  
              map@valmap 0046                map@varmap 0036               ?_uart_read 0070  
             ?_preguntas 0070       __end_of__stringtab 0494              _isdigit$894 0073  
             sprintf@val 0036                 ___xxtofl 02B2          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0025                 __ptext10 02B2                 __ptext11 0697  
               __ptext12 05C2                 __ptext13 040C                 __ptext14 036C  
               __ptext15 04F4                 __ptext16 0716                 __ptext17 0730  
               __ptext18 06D8  __end_of_UART_Data_Ready 073A                 _message2 049E  
               main@text 004D               _INTCONbits 000B                 isdigit@c 0074  
               intlevel1 0000                sprintf@ap 0034                sprintf@sp 0039  
       ___lwmod@dividend 002A         ___lldiv@dividend 0024                stringcode 048E  
            ??_uart_read 0073              ??_preguntas 0078                 sprintf@c 003C  
               sprintf@f 002E         ___lldiv@quotient 0074          ___lwmod@divisor 0028  
        ___lwmod@counter 002D                 stringdir 048E                 stringtab 0484  
             _UART_Print 0644         ?_UART_Data_Ready 0070  
