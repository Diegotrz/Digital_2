

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 25 15:55:49 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    49                           	psect	text1_split_2,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     000E                     	;# 
   103     000F                     	;# 
   104     0010                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001B                     	;# 
   118     001C                     	;# 
   119     001D                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     0081                     	;# 
   123     0085                     	;# 
   124     0086                     	;# 
   125     0087                     	;# 
   126     0088                     	;# 
   127     0089                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     008F                     	;# 
   132     0090                     	;# 
   133     0091                     	;# 
   134     0092                     	;# 
   135     0093                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0094                     	;# 
   139     0095                     	;# 
   140     0096                     	;# 
   141     0097                     	;# 
   142     0098                     	;# 
   143     0099                     	;# 
   144     009A                     	;# 
   145     009B                     	;# 
   146     009C                     	;# 
   147     009D                     	;# 
   148     009E                     	;# 
   149     009F                     	;# 
   150     0105                     	;# 
   151     0107                     	;# 
   152     0108                     	;# 
   153     0109                     	;# 
   154     010C                     	;# 
   155     010C                     	;# 
   156     010D                     	;# 
   157     010E                     	;# 
   158     010F                     	;# 
   159     0185                     	;# 
   160     0187                     	;# 
   161     0188                     	;# 
   162     0189                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0000                     	;# 
   166     0001                     	;# 
   167     0002                     	;# 
   168     0003                     	;# 
   169     0004                     	;# 
   170     0005                     	;# 
   171     0006                     	;# 
   172     0007                     	;# 
   173     0008                     	;# 
   174     0009                     	;# 
   175     000A                     	;# 
   176     000B                     	;# 
   177     000C                     	;# 
   178     000D                     	;# 
   179     000E                     	;# 
   180     000E                     	;# 
   181     000F                     	;# 
   182     0010                     	;# 
   183     0011                     	;# 
   184     0012                     	;# 
   185     0013                     	;# 
   186     0014                     	;# 
   187     0015                     	;# 
   188     0015                     	;# 
   189     0016                     	;# 
   190     0017                     	;# 
   191     0018                     	;# 
   192     0019                     	;# 
   193     001A                     	;# 
   194     001B                     	;# 
   195     001B                     	;# 
   196     001C                     	;# 
   197     001D                     	;# 
   198     001E                     	;# 
   199     001F                     	;# 
   200     0081                     	;# 
   201     0085                     	;# 
   202     0086                     	;# 
   203     0087                     	;# 
   204     0088                     	;# 
   205     0089                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     008F                     	;# 
   210     0090                     	;# 
   211     0091                     	;# 
   212     0092                     	;# 
   213     0093                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0094                     	;# 
   217     0095                     	;# 
   218     0096                     	;# 
   219     0097                     	;# 
   220     0098                     	;# 
   221     0099                     	;# 
   222     009A                     	;# 
   223     009B                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     0105                     	;# 
   229     0107                     	;# 
   230     0108                     	;# 
   231     0109                     	;# 
   232     010C                     	;# 
   233     010C                     	;# 
   234     010D                     	;# 
   235     010E                     	;# 
   236     010F                     	;# 
   237     0185                     	;# 
   238     0187                     	;# 
   239     0188                     	;# 
   240     0189                     	;# 
   241     018C                     	;# 
   242     018D                     	;# 
   243     0000                     	;# 
   244     0001                     	;# 
   245     0002                     	;# 
   246     0003                     	;# 
   247     0004                     	;# 
   248     0005                     	;# 
   249     0006                     	;# 
   250     0007                     	;# 
   251     0008                     	;# 
   252     0009                     	;# 
   253     000A                     	;# 
   254     000B                     	;# 
   255     000C                     	;# 
   256     000D                     	;# 
   257     000E                     	;# 
   258     000E                     	;# 
   259     000F                     	;# 
   260     0010                     	;# 
   261     0011                     	;# 
   262     0012                     	;# 
   263     0013                     	;# 
   264     0014                     	;# 
   265     0015                     	;# 
   266     0015                     	;# 
   267     0016                     	;# 
   268     0017                     	;# 
   269     0018                     	;# 
   270     0019                     	;# 
   271     001A                     	;# 
   272     001B                     	;# 
   273     001B                     	;# 
   274     001C                     	;# 
   275     001D                     	;# 
   276     001E                     	;# 
   277     001F                     	;# 
   278     0081                     	;# 
   279     0085                     	;# 
   280     0086                     	;# 
   281     0087                     	;# 
   282     0088                     	;# 
   283     0089                     	;# 
   284     008C                     	;# 
   285     008D                     	;# 
   286     008E                     	;# 
   287     008F                     	;# 
   288     0090                     	;# 
   289     0091                     	;# 
   290     0092                     	;# 
   291     0093                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0094                     	;# 
   295     0095                     	;# 
   296     0096                     	;# 
   297     0097                     	;# 
   298     0098                     	;# 
   299     0099                     	;# 
   300     009A                     	;# 
   301     009B                     	;# 
   302     009C                     	;# 
   303     009D                     	;# 
   304     009E                     	;# 
   305     009F                     	;# 
   306     0105                     	;# 
   307     0107                     	;# 
   308     0108                     	;# 
   309     0109                     	;# 
   310     010C                     	;# 
   311     010C                     	;# 
   312     010D                     	;# 
   313     010E                     	;# 
   314     010F                     	;# 
   315     0185                     	;# 
   316     0187                     	;# 
   317     0188                     	;# 
   318     0189                     	;# 
   319     018C                     	;# 
   320     018D                     	;# 
   321     0000                     	;# 
   322     0001                     	;# 
   323     0002                     	;# 
   324     0003                     	;# 
   325     0004                     	;# 
   326     0005                     	;# 
   327     0006                     	;# 
   328     0007                     	;# 
   329     0008                     	;# 
   330     0009                     	;# 
   331     000A                     	;# 
   332     000B                     	;# 
   333     000C                     	;# 
   334     000D                     	;# 
   335     000E                     	;# 
   336     000E                     	;# 
   337     000F                     	;# 
   338     0010                     	;# 
   339     0011                     	;# 
   340     0012                     	;# 
   341     0013                     	;# 
   342     0014                     	;# 
   343     0015                     	;# 
   344     0015                     	;# 
   345     0016                     	;# 
   346     0017                     	;# 
   347     0018                     	;# 
   348     0019                     	;# 
   349     001A                     	;# 
   350     001B                     	;# 
   351     001B                     	;# 
   352     001C                     	;# 
   353     001D                     	;# 
   354     001E                     	;# 
   355     001F                     	;# 
   356     0081                     	;# 
   357     0085                     	;# 
   358     0086                     	;# 
   359     0087                     	;# 
   360     0088                     	;# 
   361     0089                     	;# 
   362     008C                     	;# 
   363     008D                     	;# 
   364     008E                     	;# 
   365     008F                     	;# 
   366     0090                     	;# 
   367     0091                     	;# 
   368     0092                     	;# 
   369     0093                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0094                     	;# 
   373     0095                     	;# 
   374     0096                     	;# 
   375     0097                     	;# 
   376     0098                     	;# 
   377     0099                     	;# 
   378     009A                     	;# 
   379     009B                     	;# 
   380     009C                     	;# 
   381     009D                     	;# 
   382     009E                     	;# 
   383     009F                     	;# 
   384     0105                     	;# 
   385     0107                     	;# 
   386     0108                     	;# 
   387     0109                     	;# 
   388     010C                     	;# 
   389     010C                     	;# 
   390     010D                     	;# 
   391     010E                     	;# 
   392     010F                     	;# 
   393     0185                     	;# 
   394     0187                     	;# 
   395     0188                     	;# 
   396     0189                     	;# 
   397     018C                     	;# 
   398     018D                     	;# 
   399     0000                     	;# 
   400     0001                     	;# 
   401     0002                     	;# 
   402     0003                     	;# 
   403     0004                     	;# 
   404     0005                     	;# 
   405     0006                     	;# 
   406     0007                     	;# 
   407     0008                     	;# 
   408     0009                     	;# 
   409     000A                     	;# 
   410     000B                     	;# 
   411     000C                     	;# 
   412     000D                     	;# 
   413     000E                     	;# 
   414     000E                     	;# 
   415     000F                     	;# 
   416     0010                     	;# 
   417     0011                     	;# 
   418     0012                     	;# 
   419     0013                     	;# 
   420     0014                     	;# 
   421     0015                     	;# 
   422     0015                     	;# 
   423     0016                     	;# 
   424     0017                     	;# 
   425     0018                     	;# 
   426     0019                     	;# 
   427     001A                     	;# 
   428     001B                     	;# 
   429     001B                     	;# 
   430     001C                     	;# 
   431     001D                     	;# 
   432     001E                     	;# 
   433     001F                     	;# 
   434     0081                     	;# 
   435     0085                     	;# 
   436     0086                     	;# 
   437     0087                     	;# 
   438     0088                     	;# 
   439     0089                     	;# 
   440     008C                     	;# 
   441     008D                     	;# 
   442     008E                     	;# 
   443     008F                     	;# 
   444     0090                     	;# 
   445     0091                     	;# 
   446     0092                     	;# 
   447     0093                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0094                     	;# 
   451     0095                     	;# 
   452     0096                     	;# 
   453     0097                     	;# 
   454     0098                     	;# 
   455     0099                     	;# 
   456     009A                     	;# 
   457     009B                     	;# 
   458     009C                     	;# 
   459     009D                     	;# 
   460     009E                     	;# 
   461     009F                     	;# 
   462     0105                     	;# 
   463     0107                     	;# 
   464     0108                     	;# 
   465     0109                     	;# 
   466     010C                     	;# 
   467     010C                     	;# 
   468     010D                     	;# 
   469     010E                     	;# 
   470     010F                     	;# 
   471     0185                     	;# 
   472     0187                     	;# 
   473     0188                     	;# 
   474     0189                     	;# 
   475     018C                     	;# 
   476     018D                     	;# 
   477                           
   478                           	psect	strings
   479     1000                     __pstrings:
   480     1000                     stringtab:
   481     1000                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484     1000  1BFF               	btfsc	btemp+1,7
   485     1001  280A               	ljmp	stringcode
   486     1002  1383               	bcf	3,7
   487     1003  187F               	btfsc	btemp+1,0
   488     1004  1783               	bsf	3,7
   489     1005  0800               	movf	0,w
   490     1006  0A84               	incf	4,f
   491     1007  1903               	skipnz
   492     1008  0AFF               	incf	btemp+1,f
   493     1009  0008               	return
   494     100A                     stringcode:
   495     100A                     stringdir:
   496     100A  3010               	movlw	high stringdir
   497     100B  008A               	movwf	10
   498     100C  0804               	movf	4,w
   499     100D  0A84               	incf	4,f
   500     100E  0782               	addwf	2,f
   501     100F                     __stringbase:
   502     100F  3400               	retlw	0
   503     1010                     __end_of__stringtab:
   504     1010                     __powers_:
   505     1010  3400               	retlw	0
   506     1011  3400               	retlw	0
   507     1012  3480               	retlw	128
   508     1013  343F               	retlw	63
   509     1014  3400               	retlw	0
   510     1015  3400               	retlw	0
   511     1016  3420               	retlw	32
   512     1017  3441               	retlw	65
   513     1018  3400               	retlw	0
   514     1019  3400               	retlw	0
   515     101A  34C8               	retlw	200
   516     101B  3442               	retlw	66
   517     101C  3400               	retlw	0
   518     101D  3400               	retlw	0
   519     101E  347A               	retlw	122
   520     101F  3444               	retlw	68
   521     1020  3400               	retlw	0
   522     1021  3440               	retlw	64
   523     1022  341C               	retlw	28
   524     1023  3446               	retlw	70
   525     1024  3400               	retlw	0
   526     1025  3450               	retlw	80
   527     1026  34C3               	retlw	195
   528     1027  3447               	retlw	71
   529     1028  3400               	retlw	0
   530     1029  3424               	retlw	36
   531     102A  3474               	retlw	116
   532     102B  3449               	retlw	73
   533     102C  3480               	retlw	128
   534     102D  3496               	retlw	150
   535     102E  3418               	retlw	24
   536     102F  344B               	retlw	75
   537     1030  3420               	retlw	32
   538     1031  34BC               	retlw	188
   539     1032  34BE               	retlw	190
   540     1033  344C               	retlw	76
   541     1034  3428               	retlw	40
   542     1035  346B               	retlw	107
   543     1036  346E               	retlw	110
   544     1037  344E               	retlw	78
   545     1038  34F9               	retlw	249
   546     1039  3402               	retlw	2
   547     103A  3415               	retlw	21
   548     103B  3450               	retlw	80
   549     103C  34EC               	retlw	236
   550     103D  3478               	retlw	120
   551     103E  34AD               	retlw	173
   552     103F  3460               	retlw	96
   553     1040  34CA               	retlw	202
   554     1041  34F2               	retlw	242
   555     1042  3449               	retlw	73
   556     1043  3471               	retlw	113
   557     1044                     __end_of__powers_:
   558     1044                     __npowers_:
   559     1044  3400               	retlw	0
   560     1045  3400               	retlw	0
   561     1046  3480               	retlw	128
   562     1047  343F               	retlw	63
   563     1048  34CD               	retlw	205
   564     1049  34CC               	retlw	204
   565     104A  34CC               	retlw	204
   566     104B  343D               	retlw	61
   567     104C  340A               	retlw	10
   568     104D  34D7               	retlw	215
   569     104E  3423               	retlw	35
   570     104F  343C               	retlw	60
   571     1050  346F               	retlw	111
   572     1051  3412               	retlw	18
   573     1052  3483               	retlw	131
   574     1053  343A               	retlw	58
   575     1054  3417               	retlw	23
   576     1055  34B7               	retlw	183
   577     1056  34D1               	retlw	209
   578     1057  3438               	retlw	56
   579     1058  34AC               	retlw	172
   580     1059  34C5               	retlw	197
   581     105A  3427               	retlw	39
   582     105B  3437               	retlw	55
   583     105C  34BD               	retlw	189
   584     105D  3437               	retlw	55
   585     105E  3486               	retlw	134
   586     105F  3435               	retlw	53
   587     1060  3495               	retlw	149
   588     1061  34BF               	retlw	191
   589     1062  34D6               	retlw	214
   590     1063  3433               	retlw	51
   591     1064  3477               	retlw	119
   592     1065  34CC               	retlw	204
   593     1066  342B               	retlw	43
   594     1067  3432               	retlw	50
   595     1068  345F               	retlw	95
   596     1069  3470               	retlw	112
   597     106A  3489               	retlw	137
   598     106B  3430               	retlw	48
   599     106C  34FF               	retlw	255
   600     106D  34E6               	retlw	230
   601     106E  34DB               	retlw	219
   602     106F  342E               	retlw	46
   603     1070  3408               	retlw	8
   604     1071  34E5               	retlw	229
   605     1072  343C               	retlw	60
   606     1073  341E               	retlw	30
   607     1074  3460               	retlw	96
   608     1075  3442               	retlw	66
   609     1076  34A2               	retlw	162
   610     1077  340D               	retlw	13
   611     1078                     __end_of__npowers_:
   612     1078                     _message:
   613     1078  3432               	retlw	50
   614     1079  342E               	retlw	46
   615     107A  3445               	retlw	69
   616     107B  346E               	retlw	110
   617     107C  3476               	retlw	118
   618     107D  3469               	retlw	105
   619     107E  3461               	retlw	97
   620     107F  3472               	retlw	114
   621     1080  3420               	retlw	32
   622     1081  3441               	retlw	65
   623     1082  3473               	retlw	115
   624     1083  3463               	retlw	99
   625     1084  3469               	retlw	105
   626     1085  3469               	retlw	105
   627     1086  3400               	retlw	0
   628     1087                     __end_of_message:
   629     1087                     _dpowers:
   630     1087  3401               	retlw	1
   631     1088  3400               	retlw	0
   632     1089  3400               	retlw	0
   633     108A  3400               	retlw	0
   634     108B  340A               	retlw	10
   635     108C  3400               	retlw	0
   636     108D  3400               	retlw	0
   637     108E  3400               	retlw	0
   638     108F  3464               	retlw	100
   639     1090  3400               	retlw	0
   640     1091  3400               	retlw	0
   641     1092  3400               	retlw	0
   642     1093  34E8               	retlw	232
   643     1094  3403               	retlw	3
   644     1095  3400               	retlw	0
   645     1096  3400               	retlw	0
   646     1097  3410               	retlw	16
   647     1098  3427               	retlw	39
   648     1099  3400               	retlw	0
   649     109A  3400               	retlw	0
   650     109B  34A0               	retlw	160
   651     109C  3486               	retlw	134
   652     109D  3401               	retlw	1
   653     109E  3400               	retlw	0
   654     109F  3440               	retlw	64
   655     10A0  3442               	retlw	66
   656     10A1  340F               	retlw	15
   657     10A2  3400               	retlw	0
   658     10A3  3480               	retlw	128
   659     10A4  3496               	retlw	150
   660     10A5  3498               	retlw	152
   661     10A6  3400               	retlw	0
   662     10A7  3400               	retlw	0
   663     10A8  34E1               	retlw	225
   664     10A9  34F5               	retlw	245
   665     10AA  3405               	retlw	5
   666     10AB  3400               	retlw	0
   667     10AC  34CA               	retlw	202
   668     10AD  349A               	retlw	154
   669     10AE  343B               	retlw	59
   670     10AF                     __end_of_dpowers:
   671     0019                     _TXREG	set	25
   672     0018                     _RCSTA	set	24
   673     000B                     _INTCONbits	set	11
   674     0009                     _PORTE	set	9
   675     001A                     _RCREG	set	26
   676     0018                     _RCSTAbits	set	24
   677     001F                     _ADCON0bits	set	31
   678     000C                     _PIR1bits	set	12
   679     0008                     _PORTD	set	8
   680     0008                     _PORTDbits	set	8
   681     001E                     _ADRESH	set	30
   682     00C4                     _CREN	set	196
   683     00C1                     _OERR	set	193
   684     0065                     _RCIF	set	101
   685     003E                     _RC6	set	62
   686     003F                     _RC7	set	63
   687     0043                     _RD3	set	67
   688     0047                     _RD7	set	71
   689     0046                     _RD6	set	70
   690     0045                     _RD5	set	69
   691     0044                     _RD4	set	68
   692     0098                     _TXSTA	set	152
   693     0099                     _SPBRG	set	153
   694     008C                     _PIE1bits	set	140
   695     009F                     _ADCON1bits	set	159
   696     008F                     _OSCCONbits	set	143
   697     0095                     _WPUB	set	149
   698     0081                     _OPTION_REGbits	set	129
   699     0089                     _TRISE	set	137
   700     0086                     _TRISB	set	134
   701     0085                     _TRISA	set	133
   702     0088                     _TRISD	set	136
   703     04C1                     _TRMT	set	1217
   704     043E                     _TRISC6	set	1086
   705     043F                     _TRISC7	set	1087
   706     0189                     _ANSELH	set	393
   707     0188                     _ANSEL	set	392
   708     10AF                     STR_2:
   709     10AF  3476               	retlw	118	;'v'
   710     10B0  346F               	retlw	111	;'o'
   711     10B1  346C               	retlw	108	;'l'
   712     10B2  3474               	retlw	116	;'t'
   713     10B3  343D               	retlw	61	;'='
   714     10B4  3420               	retlw	32	;' '
   715     10B5  3425               	retlw	37	;'%'
   716     10B6  3466               	retlw	102	;'f'
   717     10B7  3400               	retlw	0
   718     10B8                     STR_3:
   719     10B8  3425               	retlw	37	;'%'
   720     10B9  3430               	retlw	48	;'0'
   721     10BA  3433               	retlw	51	;'3'
   722     10BB  3475               	retlw	117	;'u'
   723     10BC  340D               	retlw	13
   724     10BD  340A               	retlw	10
   725     10BE  3400               	retlw	0
   726     10BC                     
   727                           	psect	cinit
   728     0011                     start_initialization:	
   729                           ; #config settings
   730                           
   731     0011                     __initialization:
   732                           
   733                           ; Clear objects allocated to BANK0
   734     0011  1283               	bcf	3,5	;RP0=0, select bank0
   735     0012  1303               	bcf	3,6	;RP1=0, select bank0
   736     0013  01E4               	clrf	__pbssBANK0& (0+127)
   737     0014  01E5               	clrf	(__pbssBANK0+1)& (0+127)
   738     0015  01E6               	clrf	(__pbssBANK0+2)& (0+127)
   739     0016  01E7               	clrf	(__pbssBANK0+3)& (0+127)
   740     0017  01E8               	clrf	(__pbssBANK0+4)& (0+127)
   741     0018  01E9               	clrf	(__pbssBANK0+5)& (0+127)
   742                           
   743                           ; Clear objects allocated to BANK1
   744     0019  1683               	bsf	3,5	;RP0=1, select bank1
   745     001A  1303               	bcf	3,6	;RP1=0, select bank1
   746     001B  01E6               	clrf	__pbssBANK1& (0+127)
   747     001C  01E7               	clrf	(__pbssBANK1+1)& (0+127)
   748                           
   749                           ; Clear objects allocated to BANK3
   750     001D  1683               	bsf	3,5	;RP0=1, select bank3
   751     001E  1703               	bsf	3,6	;RP1=1, select bank3
   752     001F  01A4               	clrf	__pbssBANK3& (0+127)
   753     0020  01A5               	clrf	(__pbssBANK3+1)& (0+127)
   754     0021  01A6               	clrf	(__pbssBANK3+2)& (0+127)
   755     0022  01A7               	clrf	(__pbssBANK3+3)& (0+127)
   756     0023  01A8               	clrf	(__pbssBANK3+4)& (0+127)
   757     0024  01A9               	clrf	(__pbssBANK3+5)& (0+127)
   758     0025                     end_of_initialization:	
   759                           ;End of C runtime variable initialization code
   760                           
   761     0025                     __end_of__initialization:
   762     0025  0183               	clrf	3
   763     0026  160A  118A  2963   	ljmp	_main	;jump to C main() function
   764                           
   765                           	psect	bssBANK0
   766     0064                     __pbssBANK0:
   767     0064                     _valpot1:
   768     0064                     	ds	2
   769     0066                     _valpot0:
   770     0066                     	ds	2
   771     0068                     _CMCON:
   772     0068                     	ds	2
   773                           
   774                           	psect	bssBANK1
   775     00E6                     __pbssBANK1:
   776     00E6                     _val:
   777     00E6                     	ds	2
   778                           
   779                           	psect	bssBANK3
   780     01A4                     __pbssBANK3:
   781     01A4                     _varvolt:
   782     01A4                     	ds	4
   783     01A8                     _i:
   784     01A8                     	ds	2
   785                           
   786                           	psect	cstackBANK3
   787     0190                     __pcstackBANK3:
   788     0190                     _main$1201:
   789                           
   790                           ; 4 bytes @ 0x0
   791     0190                     	ds	4
   792     0194                     _main$1200:
   793                           
   794                           ; 2 bytes @ 0x4
   795     0194                     	ds	2
   796     0196                     main@s:
   797                           
   798                           ; 9 bytes @ 0x6
   799     0196                     	ds	9
   800     019F                     main@c:
   801                           
   802                           ; 1 bytes @ 0xF
   803     019F                     	ds	1
   804     01A0                     main@varvolt2:
   805                           
   806                           ; 4 bytes @ 0x10
   807     01A0                     	ds	4
   808                           
   809                           	psect	cstackBANK1
   810     00A0                     __pcstackBANK1:
   811     00A0                     ?___fltol:
   812     00A0                     ?___fladd:	
   813                           ; 4 bytes @ 0x0
   814                           
   815     00A0                     ___fltol@f1:	
   816                           ; 4 bytes @ 0x0
   817                           
   818     00A0                     ___fladd@b:	
   819                           ; 4 bytes @ 0x0
   820                           
   821                           
   822                           ; 4 bytes @ 0x0
   823     00A0                     	ds	4
   824     00A4                     ??___fltol:
   825     00A4                     ___fladd@a:	
   826                           ; 1 bytes @ 0x4
   827                           
   828                           
   829                           ; 4 bytes @ 0x4
   830     00A4                     	ds	4
   831     00A8                     ??___fladd:
   832     00A8                     ___fltol@sign1:	
   833                           ; 1 bytes @ 0x8
   834                           
   835                           
   836                           ; 1 bytes @ 0x8
   837     00A8                     	ds	1
   838     00A9                     ___fltol@exp1:
   839                           
   840                           ; 1 bytes @ 0x9
   841     00A9                     	ds	1
   842     00AA                     ?___xxtofl:
   843     00AA                     ___xxtofl@val:	
   844                           ; 4 bytes @ 0xA
   845                           
   846                           
   847                           ; 4 bytes @ 0xA
   848     00AA                     	ds	4
   849     00AE                     ??___xxtofl:
   850                           
   851                           ; 1 bytes @ 0xE
   852     00AE                     	ds	2
   853     00B0                     ___fladd@signs:
   854                           
   855                           ; 1 bytes @ 0x10
   856     00B0                     	ds	1
   857     00B1                     ___fladd@aexp:
   858                           
   859                           ; 1 bytes @ 0x11
   860     00B1                     	ds	1
   861     00B2                     ___fladd@bexp:
   862     00B2                     ___xxtofl@sign:	
   863                           ; 1 bytes @ 0x12
   864                           
   865                           
   866                           ; 1 bytes @ 0x12
   867     00B2                     	ds	1
   868     00B3                     ___fladd@grs:
   869     00B3                     ___xxtofl@exp:	
   870                           ; 1 bytes @ 0x13
   871                           
   872                           
   873                           ; 1 bytes @ 0x13
   874     00B3                     	ds	1
   875     00B4                     ___xxtofl@arg:
   876                           
   877                           ; 4 bytes @ 0x14
   878     00B4                     	ds	4
   879     00B8                     ?_map:
   880     00B8                     ?___flsub:	
   881                           ; 2 bytes @ 0x18
   882                           
   883     00B8                     map@varmap:	
   884                           ; 4 bytes @ 0x18
   885                           
   886     00B8                     ___flsub@a:	
   887                           ; 2 bytes @ 0x18
   888                           
   889                           
   890                           ; 4 bytes @ 0x18
   891     00B8                     	ds	2
   892     00BA                     map@minval:
   893                           
   894                           ; 2 bytes @ 0x1A
   895     00BA                     	ds	2
   896     00BC                     map@maxval:
   897     00BC                     ___flsub@b:	
   898                           ; 2 bytes @ 0x1C
   899                           
   900                           
   901                           ; 4 bytes @ 0x1C
   902     00BC                     	ds	2
   903     00BE                     map@minsal:
   904                           
   905                           ; 2 bytes @ 0x1E
   906     00BE                     	ds	2
   907     00C0                     ?_sprintf:
   908     00C0                     sprintf@f:	
   909                           ; 2 bytes @ 0x20
   910                           
   911     00C0                     map@maxsal:	
   912                           ; 1 bytes @ 0x20
   913                           
   914                           
   915                           ; 2 bytes @ 0x20
   916     00C0                     	ds	2
   917     00C2                     ??_map:
   918                           
   919                           ; 1 bytes @ 0x22
   920     00C2                     	ds	3
   921     00C5                     ??_sprintf:
   922                           
   923                           ; 1 bytes @ 0x25
   924     00C5                     	ds	3
   925     00C8                     map@valmap:
   926                           
   927                           ; 4 bytes @ 0x28
   928     00C8                     	ds	2
   929     00CA                     _sprintf$1205:
   930                           
   931                           ; 4 bytes @ 0x2A
   932     00CA                     	ds	4
   933     00CE                     sprintf@ap:
   934                           
   935                           ; 1 bytes @ 0x2E
   936     00CE                     	ds	1
   937     00CF                     sprintf@val:
   938                           
   939                           ; 4 bytes @ 0x2F
   940     00CF                     	ds	4
   941     00D3                     sprintf@prec:
   942                           
   943                           ; 2 bytes @ 0x33
   944     00D3                     	ds	2
   945     00D5                     sprintf@flag:
   946                           
   947                           ; 2 bytes @ 0x35
   948     00D5                     	ds	2
   949     00D7                     sprintf@tmpval:
   950                           
   951                           ; 4 bytes @ 0x37
   952     00D7                     	ds	4
   953     00DB                     sprintf@width:
   954                           
   955                           ; 2 bytes @ 0x3B
   956     00DB                     	ds	2
   957     00DD                     sprintf@eexp:
   958                           
   959                           ; 2 bytes @ 0x3D
   960     00DD                     	ds	2
   961     00DF                     sprintf@fval:
   962                           
   963                           ; 4 bytes @ 0x3F
   964     00DF                     	ds	4
   965     00E3                     sprintf@sp:
   966                           
   967                           ; 1 bytes @ 0x43
   968     00E3                     	ds	1
   969     00E4                     sprintf@c:
   970                           
   971                           ; 1 bytes @ 0x44
   972     00E4                     	ds	1
   973     00E5                     ??_main:
   974                           
   975                           ; 1 bytes @ 0x45
   976     00E5                     	ds	1
   977                           
   978                           	psect	cstackCOMMON
   979     0070                     __pcstackCOMMON:
   980     0070                     ?_UART_Data_Ready:
   981     0070                     ?_isdigit:	
   982                           ; 1 bit 
   983                           
   984     0070                     ?_setup:	
   985                           ; 1 bit 
   986                           
   987     0070                     ?_UART_GetC:	
   988                           ; 1 bytes @ 0x0
   989                           
   990     0070                     ?_UART_PutC:	
   991                           ; 1 bytes @ 0x0
   992                           
   993     0070                     ?_isr:	
   994                           ; 1 bytes @ 0x0
   995                           
   996     0070                     ?_main:	
   997                           ; 1 bytes @ 0x0
   998                           
   999     0070                     ?i1___awdiv:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002     0070                     ?i1___xxtofl:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005     0070                     i1___awdiv@divisor:	
  1006                           ; 4 bytes @ 0x0
  1007                           
  1008     0070                     i1___xxtofl@val:	
  1009                           ; 2 bytes @ 0x0
  1010                           
  1011                           
  1012                           ; 4 bytes @ 0x0
  1013     0070                     	ds	2
  1014     0072                     i1___awdiv@dividend:
  1015                           
  1016                           ; 2 bytes @ 0x2
  1017     0072                     	ds	2
  1018     0074                     ??i1___awdiv:
  1019     0074                     ??i1___xxtofl:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022                           
  1023                           ; 1 bytes @ 0x4
  1024     0074                     	ds	1
  1025     0075                     i1___awdiv@counter:
  1026                           
  1027                           ; 1 bytes @ 0x5
  1028     0075                     	ds	1
  1029     0076                     i1___awdiv@sign:
  1030                           
  1031                           ; 1 bytes @ 0x6
  1032     0076                     	ds	1
  1033     0077                     i1___awdiv@quotient:
  1034                           
  1035                           ; 2 bytes @ 0x7
  1036     0077                     	ds	1
  1037     0078                     i1___xxtofl@sign:
  1038                           
  1039                           ; 1 bytes @ 0x8
  1040     0078                     	ds	1
  1041     0079                     i1___xxtofl@exp:
  1042                           
  1043                           ; 1 bytes @ 0x9
  1044     0079                     	ds	1
  1045     007A                     i1___xxtofl@arg:
  1046                           
  1047                           ; 4 bytes @ 0xA
  1048     007A                     	ds	4
  1049                           
  1050                           	psect	cstackBANK0
  1051     0020                     __pcstackBANK0:
  1052     0020                     ??_isr:
  1053                           
  1054                           ; 1 bytes @ 0x0
  1055     0020                     	ds	6
  1056     0026                     ?___fleq:
  1057     0026                     ?___flge:	
  1058                           ; 1 bit 
  1059                           
  1060     0026                     ??_setup:	
  1061                           ; 1 bit 
  1062                           
  1063     0026                     ??_UART_Data_Ready:	
  1064                           ; 1 bytes @ 0x6
  1065                           
  1066     0026                     ??_UART_GetC:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069     0026                     ??_UART_PutC:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072     0026                     ??_isdigit:	
  1073                           ; 1 bytes @ 0x6
  1074                           
  1075     0026                     ?__Umul8_16:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078     0026                     ?___wmul:	
  1079                           ; 2 bytes @ 0x6
  1080                           
  1081     0026                     ?___awmod:	
  1082                           ; 2 bytes @ 0x6
  1083                           
  1084     0026                     ?___lwmod:	
  1085                           ; 2 bytes @ 0x6
  1086                           
  1087     0026                     ?__tdiv_to_l_:	
  1088                           ; 2 bytes @ 0x6
  1089                           
  1090     0026                     ?__div_to_l_:	
  1091                           ; 4 bytes @ 0x6
  1092                           
  1093     0026                     ?___lldiv:	
  1094                           ; 4 bytes @ 0x6
  1095                           
  1096     0026                     ?___flneg:	
  1097                           ; 4 bytes @ 0x6
  1098                           
  1099     0026                     UART_PutC@data:	
  1100                           ; 4 bytes @ 0x6
  1101                           
  1102     0026                     __Umul8_16@multiplicand:	
  1103                           ; 1 bytes @ 0x6
  1104                           
  1105     0026                     _isdigit$986:	
  1106                           ; 1 bytes @ 0x6
  1107                           
  1108     0026                     ___wmul@multiplier:	
  1109                           ; 1 bytes @ 0x6
  1110                           
  1111     0026                     ___awmod@divisor:	
  1112                           ; 2 bytes @ 0x6
  1113                           
  1114     0026                     ___lwmod@divisor:	
  1115                           ; 2 bytes @ 0x6
  1116                           
  1117     0026                     ___lldiv@divisor:	
  1118                           ; 2 bytes @ 0x6
  1119                           
  1120     0026                     __div_to_l_@f1:	
  1121                           ; 4 bytes @ 0x6
  1122                           
  1123     0026                     ___fleq@ff1:	
  1124                           ; 4 bytes @ 0x6
  1125                           
  1126     0026                     ___flge@ff1:	
  1127                           ; 4 bytes @ 0x6
  1128                           
  1129     0026                     ___flneg@f1:	
  1130                           ; 4 bytes @ 0x6
  1131                           
  1132     0026                     __tdiv_to_l_@f1:	
  1133                           ; 4 bytes @ 0x6
  1134                           
  1135                           
  1136                           ; 4 bytes @ 0x6
  1137     0026                     	ds	1
  1138     0027                     ?_UART_Print:
  1139     0027                     isdigit@c:	
  1140                           ; 1 bytes @ 0x7
  1141                           
  1142     0027                     UART_Print@data:	
  1143                           ; 1 bytes @ 0x7
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x7
  1147     0027                     	ds	1
  1148     0028                     ??__Umul8_16:
  1149     0028                     ___wmul@multiplicand:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152     0028                     ___awmod@dividend:	
  1153                           ; 2 bytes @ 0x8
  1154                           
  1155     0028                     ___lwmod@dividend:	
  1156                           ; 2 bytes @ 0x8
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x8
  1160     0028                     	ds	1
  1161     0029                     ??_UART_Print:
  1162                           
  1163                           ; 1 bytes @ 0x9
  1164     0029                     	ds	1
  1165     002A                     ??___wmul:
  1166     002A                     ??___awmod:	
  1167                           ; 1 bytes @ 0xA
  1168                           
  1169     002A                     ??___flneg:	
  1170                           ; 1 bytes @ 0xA
  1171                           
  1172     002A                     ??___lwmod:	
  1173                           ; 1 bytes @ 0xA
  1174                           
  1175     002A                     UART_Print@i:	
  1176                           ; 1 bytes @ 0xA
  1177                           
  1178     002A                     ___wmul@product:	
  1179                           ; 1 bytes @ 0xA
  1180                           
  1181     002A                     __Umul8_16@product:	
  1182                           ; 2 bytes @ 0xA
  1183                           
  1184     002A                     ___lldiv@dividend:	
  1185                           ; 2 bytes @ 0xA
  1186                           
  1187     002A                     __div_to_l_@f2:	
  1188                           ; 4 bytes @ 0xA
  1189                           
  1190     002A                     ___fleq@ff2:	
  1191                           ; 4 bytes @ 0xA
  1192                           
  1193     002A                     ___flge@ff2:	
  1194                           ; 4 bytes @ 0xA
  1195                           
  1196     002A                     __tdiv_to_l_@f2:	
  1197                           ; 4 bytes @ 0xA
  1198                           
  1199                           
  1200                           ; 4 bytes @ 0xA
  1201     002A                     	ds	1
  1202     002B                     ___awmod@counter:
  1203     002B                     ___lwmod@counter:	
  1204                           ; 1 bytes @ 0xB
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0xB
  1208     002B                     	ds	1
  1209     002C                     ?___lwdiv:
  1210     002C                     ___awmod@sign:	
  1211                           ; 2 bytes @ 0xC
  1212                           
  1213     002C                     ___lwdiv@divisor:	
  1214                           ; 1 bytes @ 0xC
  1215                           
  1216     002C                     __Umul8_16@word_mpld:	
  1217                           ; 2 bytes @ 0xC
  1218                           
  1219                           
  1220                           ; 2 bytes @ 0xC
  1221     002C                     	ds	1
  1222     002D                     ?___awdiv:
  1223     002D                     ___awdiv@divisor:	
  1224                           ; 2 bytes @ 0xD
  1225                           
  1226                           
  1227                           ; 2 bytes @ 0xD
  1228     002D                     	ds	1
  1229     002E                     ??__tdiv_to_l_:
  1230     002E                     ??__div_to_l_:	
  1231                           ; 1 bytes @ 0xE
  1232                           
  1233     002E                     ??___lldiv:	
  1234                           ; 1 bytes @ 0xE
  1235                           
  1236     002E                     ??___fleq:	
  1237                           ; 1 bytes @ 0xE
  1238                           
  1239     002E                     ??___flge:	
  1240                           ; 1 bytes @ 0xE
  1241                           
  1242     002E                     __Umul8_16@multiplier:	
  1243                           ; 1 bytes @ 0xE
  1244                           
  1245     002E                     ___lwdiv@dividend:	
  1246                           ; 1 bytes @ 0xE
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0xE
  1250     002E                     	ds	1
  1251     002F                     ___awdiv@dividend:
  1252     002F                     ___lldiv@quotient:	
  1253                           ; 2 bytes @ 0xF
  1254                           
  1255     002F                     __div_to_l_@quot:	
  1256                           ; 4 bytes @ 0xF
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0xF
  1260     002F                     	ds	1
  1261     0030                     ??___lwdiv:
  1262                           
  1263                           ; 1 bytes @ 0x10
  1264     0030                     	ds	1
  1265     0031                     ??___awdiv:
  1266     0031                     ___lwdiv@quotient:	
  1267                           ; 1 bytes @ 0x11
  1268                           
  1269     0031                     __tdiv_to_l_@quot:	
  1270                           ; 2 bytes @ 0x11
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x11
  1274     0031                     	ds	1
  1275     0032                     ___awdiv@counter:
  1276                           
  1277                           ; 1 bytes @ 0x12
  1278     0032                     	ds	1
  1279     0033                     ___lldiv@counter:
  1280     0033                     ___awdiv@sign:	
  1281                           ; 1 bytes @ 0x13
  1282                           
  1283     0033                     __div_to_l_@cntr:	
  1284                           ; 1 bytes @ 0x13
  1285                           
  1286     0033                     ___lwdiv@counter:	
  1287                           ; 1 bytes @ 0x13
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x13
  1291     0033                     	ds	1
  1292     0034                     ?___llmod:
  1293     0034                     __div_to_l_@exp1:	
  1294                           ; 4 bytes @ 0x14
  1295                           
  1296     0034                     ___awdiv@quotient:	
  1297                           ; 1 bytes @ 0x14
  1298                           
  1299     0034                     ___llmod@divisor:	
  1300                           ; 2 bytes @ 0x14
  1301                           
  1302                           
  1303                           ; 4 bytes @ 0x14
  1304     0034                     	ds	1
  1305     0035                     __tdiv_to_l_@cntr:
  1306                           
  1307                           ; 1 bytes @ 0x15
  1308     0035                     	ds	1
  1309     0036                     ?___flmul:
  1310     0036                     __tdiv_to_l_@exp1:	
  1311                           ; 4 bytes @ 0x16
  1312                           
  1313     0036                     ___flmul@b:	
  1314                           ; 1 bytes @ 0x16
  1315                           
  1316                           
  1317                           ; 4 bytes @ 0x16
  1318     0036                     	ds	2
  1319     0038                     ___llmod@dividend:
  1320                           
  1321                           ; 4 bytes @ 0x18
  1322     0038                     	ds	2
  1323     003A                     ___flmul@a:
  1324                           
  1325                           ; 4 bytes @ 0x1A
  1326     003A                     	ds	2
  1327     003C                     ??___llmod:
  1328                           
  1329                           ; 1 bytes @ 0x1C
  1330     003C                     	ds	1
  1331     003D                     ___llmod@counter:
  1332                           
  1333                           ; 1 bytes @ 0x1D
  1334     003D                     	ds	1
  1335     003E                     ??___flmul:
  1336                           
  1337                           ; 1 bytes @ 0x1E
  1338     003E                     	ds	5
  1339     0043                     ___flmul@sign:
  1340                           
  1341                           ; 1 bytes @ 0x23
  1342     0043                     	ds	1
  1343     0044                     ___flmul@grs:
  1344                           
  1345                           ; 4 bytes @ 0x24
  1346     0044                     	ds	4
  1347     0048                     ___flmul@aexp:
  1348                           
  1349                           ; 1 bytes @ 0x28
  1350     0048                     	ds	1
  1351     0049                     ___flmul@bexp:
  1352                           
  1353                           ; 1 bytes @ 0x29
  1354     0049                     	ds	1
  1355     004A                     ___flmul@prod:
  1356                           
  1357                           ; 4 bytes @ 0x2A
  1358     004A                     	ds	4
  1359     004E                     ___flmul@temp:
  1360                           
  1361                           ; 2 bytes @ 0x2E
  1362     004E                     	ds	2
  1363     0050                     ?_fround:
  1364     0050                     ?_scale:	
  1365                           ; 4 bytes @ 0x30
  1366                           
  1367                           
  1368                           ; 4 bytes @ 0x30
  1369     0050                     	ds	4
  1370     0054                     ??_fround:
  1371     0054                     ??_scale:	
  1372                           ; 1 bytes @ 0x34
  1373                           
  1374                           
  1375                           ; 1 bytes @ 0x34
  1376     0054                     	ds	7
  1377     005B                     _fround$1203:
  1378                           
  1379                           ; 4 bytes @ 0x3B
  1380     005B                     	ds	3
  1381     005E                     _scale$1204:
  1382                           
  1383                           ; 4 bytes @ 0x3E
  1384     005E                     	ds	1
  1385     005F                     _fround$1202:
  1386                           
  1387                           ; 4 bytes @ 0x3F
  1388     005F                     	ds	3
  1389     0062                     scale@scl:
  1390                           
  1391                           ; 1 bytes @ 0x42
  1392     0062                     	ds	1
  1393     0063                     fround@prec:
  1394                           
  1395                           ; 1 bytes @ 0x43
  1396     0063                     	ds	1
  1397     0064                     ??___flsub:
  1398                           
  1399                           	psect	maintext
  1400     1163                     __pmaintext:	
  1401                           ; 1 bytes @ 0x44
  1402 ;;
  1403 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1404 ;;
  1405 ;; *************** function _main *****************
  1406 ;; Defined at:
  1407 ;;		line 70 in file "postlab2.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  c               1   15[BANK3 ] unsigned char 
  1412 ;;  s               9    6[BANK3 ] unsigned char [9]
  1413 ;;  varvolt2        4   16[BANK3 ] float 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : B00/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0      20       0
  1425 ;;      Temps:          0       0       1       0       0
  1426 ;;      Totals:         0       0       1      20       0
  1427 ;;Total ram usage:       21 bytes
  1428 ;; Hardware stack levels required when called: 6
  1429 ;; This function calls:
  1430 ;;		_UART_Data_Ready
  1431 ;;		_UART_GetC
  1432 ;;		_UART_Print
  1433 ;;		_UART_PutC
  1434 ;;		___fltol
  1435 ;;		___xxtofl
  1436 ;;		_map
  1437 ;;		_setup
  1438 ;;		_sprintf
  1439 ;; This function is called by:
  1440 ;;		Startup code after reset
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444     1163                     _main:	
  1445                           ;psect for function _main
  1446                           
  1447     1163                     l4515:	
  1448                           ;incstack = 0
  1449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1450                           
  1451                           
  1452                           ;postlab2.c: 78:  setup();
  1453     1163  160A  158A  21B9  160A  118A  	fcall	_setup
  1454     1168                     l4517:
  1455                           
  1456                           ;postlab2.c: 79:  ADCON0bits.GO =1;
  1457     1168  1283               	bcf	3,5	;RP0=0, select bank0
  1458     1169  1303               	bcf	3,6	;RP1=0, select bank0
  1459     116A  149F               	bsf	31,1	;volatile
  1460     116B                     l4519:
  1461                           
  1462                           ;postlab2.c: 80:  i=0;
  1463     116B  1683               	bsf	3,5	;RP0=1, select bank3
  1464     116C  1703               	bsf	3,6	;RP1=1, select bank3
  1465     116D  01A8               	clrf	_i^(0+384)
  1466     116E  01A9               	clrf	(_i+1)^(0+384)
  1467     116F                     l4521:
  1468                           
  1469                           ;postlab2.c: 85:      if (ADCON0bits.GO ==0){
  1470     116F  1283               	bcf	3,5	;RP0=0, select bank0
  1471     1170  1303               	bcf	3,6	;RP1=0, select bank0
  1472     1171  189F               	btfsc	31,1	;volatile
  1473     1172  2974               	goto	u7451
  1474     1173  2975               	goto	u7450
  1475     1174                     u7451:
  1476     1174  29A2               	goto	l4537
  1477     1175                     u7450:
  1478     1175                     l4523:
  1479                           
  1480                           ;postlab2.c: 86:            for (i=0;i<=2;i++){
  1481     1175  1683               	bsf	3,5	;RP0=1, select bank3
  1482     1176  1703               	bsf	3,6	;RP1=1, select bank3
  1483     1177  01A8               	clrf	_i^(0+384)
  1484     1178  01A9               	clrf	(_i+1)^(0+384)
  1485     1179                     l4529:
  1486                           
  1487                           ;postlab2.c: 87:            ADCON0bits.CHS = i;
  1488     1179  1683               	bsf	3,5	;RP0=1, select bank3
  1489     117A  1703               	bsf	3,6	;RP1=1, select bank3
  1490     117B  0828               	movf	_i^(0+384),w
  1491     117C  1683               	bsf	3,5	;RP0=1, select bank1
  1492     117D  1303               	bcf	3,6	;RP1=0, select bank1
  1493     117E  00E5               	movwf	??_main^(0+128)
  1494     117F  0DE5               	rlf	??_main^(0+128),f
  1495     1180  0DE5               	rlf	??_main^(0+128),f
  1496     1181  1283               	bcf	3,5	;RP0=0, select bank0
  1497     1182  1303               	bcf	3,6	;RP1=0, select bank0
  1498     1183  081F               	movf	31,w	;volatile
  1499     1184  1683               	bsf	3,5	;RP0=1, select bank1
  1500     1185  1303               	bcf	3,6	;RP1=0, select bank1
  1501     1186  0665               	xorwf	??_main^(0+128),w
  1502     1187  39C3               	andlw	-61
  1503     1188  0665               	xorwf	??_main^(0+128),w
  1504     1189  1283               	bcf	3,5	;RP0=0, select bank0
  1505     118A  1303               	bcf	3,6	;RP1=0, select bank0
  1506     118B  009F               	movwf	31	;volatile
  1507     118C                     l4531:
  1508                           
  1509                           ;postlab2.c: 88:            ADCON0bits.GO =1;
  1510     118C  149F               	bsf	31,1	;volatile
  1511     118D                     l4533:
  1512                           
  1513                           ;postlab2.c: 89:         }
  1514     118D  3001               	movlw	1
  1515     118E  1683               	bsf	3,5	;RP0=1, select bank3
  1516     118F  1703               	bsf	3,6	;RP1=1, select bank3
  1517     1190  07A8               	addwf	_i^(0+384),f
  1518     1191  1803               	skipnc
  1519     1192  0AA9               	incf	(_i+1)^(0+384),f
  1520     1193  3000               	movlw	0
  1521     1194  07A9               	addwf	(_i+1)^(0+384),f
  1522     1195                     l4535:
  1523     1195  0829               	movf	(_i+1)^(0+384),w
  1524     1196  3A80               	xorlw	128
  1525     1197  00FF               	movwf	btemp+1
  1526     1198  3080               	movlw	128
  1527     1199  027F               	subwf	btemp+1,w
  1528     119A  1D03               	skipz
  1529     119B  299E               	goto	u7465
  1530     119C  3003               	movlw	3
  1531     119D  0228               	subwf	_i^(0+384),w
  1532     119E                     u7465:
  1533     119E  1C03               	skipc
  1534     119F  29A1               	goto	u7461
  1535     11A0  29A2               	goto	u7460
  1536     11A1                     u7461:
  1537     11A1  2979               	goto	l4529
  1538     11A2                     u7460:
  1539     11A2                     l4537:
  1540                           
  1541                           ;postlab2.c: 92:      char s[9];;postlab2.c: 95:      UART_Print ("\r\n");
  1542     11A2  30AD               	movlw	(low (((STR_3+4)-__stringbase)| (0+32768)))& (0+255)
  1543     11A3  1283               	bcf	3,5	;RP0=0, select bank0
  1544     11A4  1303               	bcf	3,6	;RP1=0, select bank0
  1545     11A5  00A7               	movwf	UART_Print@data
  1546     11A6  3080               	movlw	128
  1547     11A7  00A8               	movwf	UART_Print@data+1
  1548     11A8  160A  158A  218C  160A  118A  	fcall	_UART_Print
  1549     11AD                     l4539:
  1550                           
  1551                           ;postlab2.c: 96:      float varvolt2 = map(varvolt,0,255,0,5);
  1552     11AD  1683               	bsf	3,5	;RP0=1, select bank3
  1553     11AE  1703               	bsf	3,6	;RP1=1, select bank3
  1554     11AF  0827               	movf	(_varvolt+3)^(0+384),w
  1555     11B0  1683               	bsf	3,5	;RP0=1, select bank1
  1556     11B1  1303               	bcf	3,6	;RP1=0, select bank1
  1557     11B2  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1558     11B3  1683               	bsf	3,5	;RP0=1, select bank3
  1559     11B4  1703               	bsf	3,6	;RP1=1, select bank3
  1560     11B5  0826               	movf	(_varvolt+2)^(0+384),w
  1561     11B6  1683               	bsf	3,5	;RP0=1, select bank1
  1562     11B7  1303               	bcf	3,6	;RP1=0, select bank1
  1563     11B8  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1564     11B9  1683               	bsf	3,5	;RP0=1, select bank3
  1565     11BA  1703               	bsf	3,6	;RP1=1, select bank3
  1566     11BB  0825               	movf	(_varvolt+1)^(0+384),w
  1567     11BC  1683               	bsf	3,5	;RP0=1, select bank1
  1568     11BD  1303               	bcf	3,6	;RP1=0, select bank1
  1569     11BE  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1570     11BF  1683               	bsf	3,5	;RP0=1, select bank3
  1571     11C0  1703               	bsf	3,6	;RP1=1, select bank3
  1572     11C1  0824               	movf	_varvolt^(0+384),w
  1573     11C2  1683               	bsf	3,5	;RP0=1, select bank1
  1574     11C3  1303               	bcf	3,6	;RP1=0, select bank1
  1575     11C4  00A0               	movwf	___fltol@f1^(0+128)
  1576     11C5  160A  158A  24DA  160A  118A  	fcall	___fltol
  1577     11CA  1683               	bsf	3,5	;RP0=1, select bank1
  1578     11CB  1303               	bcf	3,6	;RP1=0, select bank1
  1579     11CC  0821               	movf	(?___fltol+1)^(0+128),w
  1580     11CD  1683               	bsf	3,5	;RP0=1, select bank3
  1581     11CE  1703               	bsf	3,6	;RP1=1, select bank3
  1582     11CF  0095               	movwf	(_main$1200+1)^(0+384)
  1583     11D0  1683               	bsf	3,5	;RP0=1, select bank1
  1584     11D1  1303               	bcf	3,6	;RP1=0, select bank1
  1585     11D2  0820               	movf	?___fltol^(0+128),w
  1586     11D3  1683               	bsf	3,5	;RP0=1, select bank3
  1587     11D4  1703               	bsf	3,6	;RP1=1, select bank3
  1588     11D5  0094               	movwf	_main$1200^(0+384)
  1589     11D6                     l4541:
  1590                           
  1591                           ;postlab2.c: 96:      float varvolt2 = map(varvolt,0,255,0,5);
  1592     11D6  3005               	movlw	5
  1593     11D7  1683               	bsf	3,5	;RP0=1, select bank1
  1594     11D8  1303               	bcf	3,6	;RP1=0, select bank1
  1595     11D9  00C0               	movwf	map@maxsal^(0+128)
  1596     11DA  3000               	movlw	0
  1597     11DB  00C1               	movwf	(map@maxsal^(0+128)+1)
  1598     11DC  3000               	movlw	0
  1599     11DD  00BE               	movwf	map@minsal^(0+128)
  1600     11DE  00BF               	movwf	(map@minsal+1)^(0+128)
  1601     11DF  30FF               	movlw	255
  1602     11E0  00BC               	movwf	map@maxval^(0+128)
  1603     11E1  3000               	movlw	0
  1604     11E2  00BD               	movwf	(map@maxval^(0+128)+1)
  1605     11E3  3000               	movlw	0
  1606     11E4  00BA               	movwf	map@minval^(0+128)
  1607     11E5  00BB               	movwf	(map@minval+1)^(0+128)
  1608     11E6  1683               	bsf	3,5	;RP0=1, select bank3
  1609     11E7  1703               	bsf	3,6	;RP1=1, select bank3
  1610     11E8  0815               	movf	(_main$1200+1)^(0+384),w
  1611     11E9  1683               	bsf	3,5	;RP0=1, select bank1
  1612     11EA  1303               	bcf	3,6	;RP1=0, select bank1
  1613     11EB  00B9               	movwf	(map@varmap+1)^(0+128)
  1614     11EC  1683               	bsf	3,5	;RP0=1, select bank3
  1615     11ED  1703               	bsf	3,6	;RP1=1, select bank3
  1616     11EE  0814               	movf	_main$1200^(0+384),w
  1617     11EF  1683               	bsf	3,5	;RP0=1, select bank1
  1618     11F0  1303               	bcf	3,6	;RP1=0, select bank1
  1619     11F1  00B8               	movwf	map@varmap^(0+128)
  1620     11F2  160A  158A  2552  160A  118A  	fcall	_map
  1621     11F7  1683               	bsf	3,5	;RP0=1, select bank1
  1622     11F8  1303               	bcf	3,6	;RP1=0, select bank1
  1623     11F9  0838               	movf	?_map^(0+128),w
  1624     11FA  1683               	bsf	3,5	;RP0=1, select bank3
  1625     11FB  1703               	bsf	3,6	;RP1=1, select bank3
  1626     11FC  0090               	movwf	_main$1201^(0+384)
  1627     11FD  1683               	bsf	3,5	;RP0=1, select bank1
  1628     11FE  1303               	bcf	3,6	;RP1=0, select bank1
  1629     11FF  0839               	movf	(?_map+1)^(0+128),w
  1630     1200  1683               	bsf	3,5	;RP0=1, select bank3
  1631     1201  1703               	bsf	3,6	;RP1=1, select bank3
  1632     1202  0091               	movwf	(_main$1201^(0+384)+1)
  1633     1203  0192               	clrf	(_main$1201^(0+384)+2)
  1634     1204  0193               	clrf	(_main$1201^(0+384)+3)
  1635     1205                     l4543:
  1636                           
  1637                           ;postlab2.c: 96:      float varvolt2 = map(varvolt,0,255,0,5);
  1638     1205  0813               	movf	(_main$1201+3)^(0+384),w
  1639     1206  1683               	bsf	3,5	;RP0=1, select bank1
  1640     1207  1303               	bcf	3,6	;RP1=0, select bank1
  1641     1208  00AD               	movwf	(___xxtofl@val+3)^(0+128)
  1642     1209  1683               	bsf	3,5	;RP0=1, select bank3
  1643     120A  1703               	bsf	3,6	;RP1=1, select bank3
  1644     120B  0812               	movf	(_main$1201+2)^(0+384),w
  1645     120C  1683               	bsf	3,5	;RP0=1, select bank1
  1646     120D  1303               	bcf	3,6	;RP1=0, select bank1
  1647     120E  00AC               	movwf	(___xxtofl@val+2)^(0+128)
  1648     120F  1683               	bsf	3,5	;RP0=1, select bank3
  1649     1210  1703               	bsf	3,6	;RP1=1, select bank3
  1650     1211  0811               	movf	(_main$1201+1)^(0+384),w
  1651     1212  1683               	bsf	3,5	;RP0=1, select bank1
  1652     1213  1303               	bcf	3,6	;RP1=0, select bank1
  1653     1214  00AB               	movwf	(___xxtofl@val+1)^(0+128)
  1654     1215  1683               	bsf	3,5	;RP0=1, select bank3
  1655     1216  1703               	bsf	3,6	;RP1=1, select bank3
  1656     1217  0810               	movf	_main$1201^(0+384),w
  1657     1218  1683               	bsf	3,5	;RP0=1, select bank1
  1658     1219  1303               	bcf	3,6	;RP1=0, select bank1
  1659     121A  00AA               	movwf	___xxtofl@val^(0+128)
  1660     121B  3000               	movlw	0
  1661     121C  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1662     1221  1683               	bsf	3,5	;RP0=1, select bank1
  1663     1222  1303               	bcf	3,6	;RP1=0, select bank1
  1664     1223  082D               	movf	(?___xxtofl+3)^(0+128),w
  1665     1224  1683               	bsf	3,5	;RP0=1, select bank3
  1666     1225  1703               	bsf	3,6	;RP1=1, select bank3
  1667     1226  00A3               	movwf	(main@varvolt2+3)^(0+384)
  1668     1227  1683               	bsf	3,5	;RP0=1, select bank1
  1669     1228  1303               	bcf	3,6	;RP1=0, select bank1
  1670     1229  082C               	movf	(?___xxtofl+2)^(0+128),w
  1671     122A  1683               	bsf	3,5	;RP0=1, select bank3
  1672     122B  1703               	bsf	3,6	;RP1=1, select bank3
  1673     122C  00A2               	movwf	(main@varvolt2+2)^(0+384)
  1674     122D  1683               	bsf	3,5	;RP0=1, select bank1
  1675     122E  1303               	bcf	3,6	;RP1=0, select bank1
  1676     122F  082B               	movf	(?___xxtofl+1)^(0+128),w
  1677     1230  1683               	bsf	3,5	;RP0=1, select bank3
  1678     1231  1703               	bsf	3,6	;RP1=1, select bank3
  1679     1232  00A1               	movwf	(main@varvolt2+1)^(0+384)
  1680     1233  1683               	bsf	3,5	;RP0=1, select bank1
  1681     1234  1303               	bcf	3,6	;RP1=0, select bank1
  1682     1235  082A               	movf	?___xxtofl^(0+128),w
  1683     1236  1683               	bsf	3,5	;RP0=1, select bank3
  1684     1237  1703               	bsf	3,6	;RP1=1, select bank3
  1685     1238  00A0               	movwf	main@varvolt2^(0+384)
  1686     1239                     l4545:
  1687                           
  1688                           ;postlab2.c: 97:      sprintf(s, "volt= %f", varvolt2);
  1689     1239  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1690     123A  1683               	bsf	3,5	;RP0=1, select bank1
  1691     123B  1303               	bcf	3,6	;RP1=0, select bank1
  1692     123C  00C0               	movwf	sprintf@f^(0+128)
  1693     123D  1683               	bsf	3,5	;RP0=1, select bank3
  1694     123E  1703               	bsf	3,6	;RP1=1, select bank3
  1695     123F  0823               	movf	(main@varvolt2+3)^(0+384),w
  1696     1240  1683               	bsf	3,5	;RP0=1, select bank1
  1697     1241  1303               	bcf	3,6	;RP1=0, select bank1
  1698     1242  00C4               	movwf	((?_sprintf+3)^(0+128)+1)
  1699     1243  1683               	bsf	3,5	;RP0=1, select bank3
  1700     1244  1703               	bsf	3,6	;RP1=1, select bank3
  1701     1245  0822               	movf	(main@varvolt2+2)^(0+384),w
  1702     1246  1683               	bsf	3,5	;RP0=1, select bank1
  1703     1247  1303               	bcf	3,6	;RP1=0, select bank1
  1704     1248  00C3               	movwf	((?_sprintf+2)^(0+128)+1)
  1705     1249  1683               	bsf	3,5	;RP0=1, select bank3
  1706     124A  1703               	bsf	3,6	;RP1=1, select bank3
  1707     124B  0821               	movf	(main@varvolt2+1)^(0+384),w
  1708     124C  1683               	bsf	3,5	;RP0=1, select bank1
  1709     124D  1303               	bcf	3,6	;RP1=0, select bank1
  1710     124E  00C2               	movwf	((?_sprintf+1)^(0+128)+1)
  1711     124F  1683               	bsf	3,5	;RP0=1, select bank3
  1712     1250  1703               	bsf	3,6	;RP1=1, select bank3
  1713     1251  0820               	movf	main@varvolt2^(0+384),w
  1714     1252  1683               	bsf	3,5	;RP0=1, select bank1
  1715     1253  1303               	bcf	3,6	;RP1=0, select bank1
  1716     1254  00C1               	movwf	(?_sprintf^(0+128)+1)
  1717     1255  3096               	movlw	(low (main@s| (0+256)))& (0+255)
  1718     1256  120A  158A  203E  160A  118A  	fcall	_sprintf
  1719     125B                     l4547:
  1720                           
  1721                           ;postlab2.c: 98:        UART_Print(s);
  1722     125B  3096               	movlw	(low (main@s| (0+256)))& (0+255)
  1723     125C  1283               	bcf	3,5	;RP0=0, select bank0
  1724     125D  1303               	bcf	3,6	;RP1=0, select bank0
  1725     125E  00A7               	movwf	UART_Print@data
  1726     125F  3001               	movlw	1
  1727     1260  00A8               	movwf	UART_Print@data+1
  1728     1261  160A  158A  218C  160A  118A  	fcall	_UART_Print
  1729     1266                     l4549:
  1730                           
  1731                           ;postlab2.c: 99:      sprintf(s, "%03u\r\n", varvolt2);
  1732     1266  30A9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1733     1267  1683               	bsf	3,5	;RP0=1, select bank1
  1734     1268  1303               	bcf	3,6	;RP1=0, select bank1
  1735     1269  00C0               	movwf	sprintf@f^(0+128)
  1736     126A  1683               	bsf	3,5	;RP0=1, select bank3
  1737     126B  1703               	bsf	3,6	;RP1=1, select bank3
  1738     126C  0823               	movf	(main@varvolt2+3)^(0+384),w
  1739     126D  1683               	bsf	3,5	;RP0=1, select bank1
  1740     126E  1303               	bcf	3,6	;RP1=0, select bank1
  1741     126F  00C4               	movwf	((?_sprintf+3)^(0+128)+1)
  1742     1270  1683               	bsf	3,5	;RP0=1, select bank3
  1743     1271  1703               	bsf	3,6	;RP1=1, select bank3
  1744     1272  0822               	movf	(main@varvolt2+2)^(0+384),w
  1745     1273  1683               	bsf	3,5	;RP0=1, select bank1
  1746     1274  1303               	bcf	3,6	;RP1=0, select bank1
  1747     1275  00C3               	movwf	((?_sprintf+2)^(0+128)+1)
  1748     1276  1683               	bsf	3,5	;RP0=1, select bank3
  1749     1277  1703               	bsf	3,6	;RP1=1, select bank3
  1750     1278  0821               	movf	(main@varvolt2+1)^(0+384),w
  1751     1279  1683               	bsf	3,5	;RP0=1, select bank1
  1752     127A  1303               	bcf	3,6	;RP1=0, select bank1
  1753     127B  00C2               	movwf	((?_sprintf+1)^(0+128)+1)
  1754     127C  1683               	bsf	3,5	;RP0=1, select bank3
  1755     127D  1703               	bsf	3,6	;RP1=1, select bank3
  1756     127E  0820               	movf	main@varvolt2^(0+384),w
  1757     127F  1683               	bsf	3,5	;RP0=1, select bank1
  1758     1280  1303               	bcf	3,6	;RP1=0, select bank1
  1759     1281  00C1               	movwf	(?_sprintf^(0+128)+1)
  1760     1282  3096               	movlw	(low (main@s| (0+256)))& (0+255)
  1761     1283  120A  158A  203E  160A  118A  	fcall	_sprintf
  1762     1288                     l4551:
  1763                           
  1764                           ;postlab2.c: 100:      UART_Print(s);
  1765     1288  3096               	movlw	(low (main@s| (0+256)))& (0+255)
  1766     1289  1283               	bcf	3,5	;RP0=0, select bank0
  1767     128A  1303               	bcf	3,6	;RP1=0, select bank0
  1768     128B  00A7               	movwf	UART_Print@data
  1769     128C  3001               	movlw	1
  1770     128D  00A8               	movwf	UART_Print@data+1
  1771     128E  160A  158A  218C  160A  118A  	fcall	_UART_Print
  1772     1293                     l4553:
  1773                           
  1774                           ;postlab2.c: 102:         if ( UART_Data_Ready() )
  1775     1293  160A  158A  20D1  160A  118A  	fcall	_UART_Data_Ready
  1776     1298  1C03               	btfss	3,0
  1777     1299  2A9B               	goto	u7471
  1778     129A  2A9C               	goto	u7470
  1779     129B                     u7471:
  1780     129B  296F               	goto	l4521
  1781     129C                     u7470:
  1782     129C                     l4555:
  1783                           
  1784                           ;postlab2.c: 103:     {;postlab2.c: 104:       uint8_t c = UART_GetC();
  1785     129C  160A  158A  20E8  160A  118A  	fcall	_UART_GetC
  1786     12A1  1683               	bsf	3,5	;RP0=1, select bank3
  1787     12A2  1703               	bsf	3,6	;RP1=1, select bank3
  1788     12A3  009F               	movwf	main@c^(0+384)
  1789     12A4                     l4557:
  1790                           
  1791                           ;postlab2.c: 105:       UART_PutC(c);
  1792     12A4  081F               	movf	main@c^(0+384),w
  1793     12A5  160A  158A  20F6  160A  118A  	fcall	_UART_PutC
  1794     12AA  296F               	goto	l4521
  1795     12AB  120A  118A  280E   	ljmp	start
  1796     12AE                     __end_of_main:
  1797                           
  1798                           	psect	text1
  1799     083E                     __ptext1:	
  1800 ;; *************** function _sprintf *****************
  1801 ;; Defined at:
  1802 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  sp              1    wreg     PTR unsigned char 
  1805 ;;		 -> main@s(9), 
  1806 ;;  f               1   32[BANK1 ] PTR const unsigned char 
  1807 ;;		 -> STR_3(7), STR_2(9), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  sp              1   67[BANK1 ] PTR unsigned char 
  1810 ;;		 -> main@s(9), 
  1811 ;;  fval            4   63[BANK1 ] PTR unsigned char 
  1812 ;;  tmpval          4   55[BANK1 ] struct .
  1813 ;;  val             4   47[BANK1 ] unsigned long 
  1814 ;;  eexp            2   61[BANK1 ] int 
  1815 ;;  width           2   59[BANK1 ] int 
  1816 ;;  flag            2   53[BANK1 ] unsigned short 
  1817 ;;  prec            2   51[BANK1 ] int 
  1818 ;;  cp              2    0        PTR const unsigned char 
  1819 ;;  len             2    0        unsigned int 
  1820 ;;  c               1   68[BANK1 ] unsigned char 
  1821 ;;  ap              1   46[BANK1 ] PTR void [1]
  1822 ;;		 -> ?_sprintf(2), 
  1823 ;;  d               1    0        unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2   32[BANK1 ] int 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1833 ;;      Params:         0       0       5       0       0
  1834 ;;      Locals:         0       0      27       0       0
  1835 ;;      Temps:          0       0       5       0       0
  1836 ;;      Totals:         0       0      37       0       0
  1837 ;;Total ram usage:       37 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 5
  1840 ;; This function calls:
  1841 ;;		___awdiv
  1842 ;;		___fladd
  1843 ;;		___fleq
  1844 ;;		___flge
  1845 ;;		___flmul
  1846 ;;		___flneg
  1847 ;;		___flsub
  1848 ;;		___fltol
  1849 ;;		___lldiv
  1850 ;;		___llmod
  1851 ;;		___wmul
  1852 ;;		___xxtofl
  1853 ;;		__div_to_l_
  1854 ;;		__tdiv_to_l_
  1855 ;;		_fround
  1856 ;;		_isdigit
  1857 ;;		_scale
  1858 ;; This function is called by:
  1859 ;;		_main
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863     083E                     _sprintf:	
  1864                           ;psect for function _sprintf
  1865                           
  1866                           
  1867                           ;incstack = 0
  1868                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1869                           ;sprintf@sp stored from wreg
  1870     083E  1683               	bsf	3,5	;RP0=1, select bank1
  1871     083F  1303               	bcf	3,6	;RP1=0, select bank1
  1872     0840  00E3               	movwf	sprintf@sp^(0+128)
  1873     0841                     l4229:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1876     0841  30C1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1877     0842  00CE               	movwf	sprintf@ap^(0+128)
  1878     0843                     L1:
  1879                           
  1880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1881     0843  120A  118A  2CDA   	goto	l4501
  1882     0846                     l4231:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1885     0846  3025               	movlw	37
  1886     0847  0664               	xorwf	sprintf@c^(0+128),w
  1887     0848  1903               	btfsc	3,2
  1888     0849  284B               	goto	u6961
  1889     084A  284C               	goto	u6960
  1890     084B                     u6961:
  1891     084B  2856               	goto	l4237
  1892     084C                     u6960:
  1893     084C                     l4233:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1896     084C  0863               	movf	sprintf@sp^(0+128),w
  1897     084D  0084               	movwf	4
  1898     084E  0864               	movf	sprintf@c^(0+128),w
  1899     084F  1783               	bsf	3,7	;select IRP bank2
  1900     0850  0080               	movwf	0
  1901     0851                     l4235:
  1902     0851  3001               	movlw	1
  1903     0852  00C5               	movwf	??_sprintf^(0+128)
  1904     0853  0845               	movf	??_sprintf^(0+128),w
  1905     0854  07E3               	addwf	sprintf@sp^(0+128),f
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1908     0855  2843               	goto	L1
  1909     0856                     l4237:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1912     0856  01DB               	clrf	sprintf@width^(0+128)
  1913     0857  01DC               	clrf	(sprintf@width+1)^(0+128)
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1916     0858  01D5               	clrf	sprintf@flag^(0+128)
  1917     0859  01D6               	clrf	(sprintf@flag+1)^(0+128)
  1918     085A  2860               	goto	l4243
  1919     085B                     l372:	
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1921                           
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1924     085B  1555               	bsf	sprintf@flag^(0+128),2
  1925     085C                     l4239:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1928     085C  3001               	movlw	1
  1929     085D  00C5               	movwf	??_sprintf^(0+128)
  1930     085E  0845               	movf	??_sprintf^(0+128),w
  1931     085F  07C0               	addwf	sprintf@f^(0+128),f
  1932     0860                     l4243:	
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1934                           
  1935     0860  0840               	movf	sprintf@f^(0+128),w
  1936     0861  0084               	movwf	4
  1937     0862  160A  118A  200A  120A  158A  	fcall	stringdir
  1938     0867  00C5               	movwf	??_sprintf^(0+128)
  1939     0868  01C6               	clrf	(??_sprintf^(0+128)+1)
  1940                           
  1941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 1, Range of values is 0 to 0
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte            4     3 (average)
  1947                           ; direct_byte           11     8 (fixed)
  1948                           ; jumptable            260     6 (fixed)
  1949                           ;	Chosen strategy is simple_byte
  1950     0869  0846               	movf	(??_sprintf+1)^(0+128),w
  1951     086A  3A00               	xorlw	0	; case 0
  1952     086B  1903               	skipnz
  1953     086C  286E               	goto	l4599
  1954     086D  2873               	goto	l4245
  1955     086E                     l4599:
  1956                           
  1957                           ; Switch size 1, requested type "simple"
  1958                           ; Number of cases is 1, Range of values is 48 to 48
  1959                           ; switch strategies available:
  1960                           ; Name         Instructions Cycles
  1961                           ; simple_byte            4     3 (average)
  1962                           ; direct_byte           14    11 (fixed)
  1963                           ; jumptable            263     9 (fixed)
  1964                           ;	Chosen strategy is simple_byte
  1965     086E  0845               	movf	??_sprintf^(0+128),w
  1966     086F  3A30               	xorlw	48	; case 48
  1967     0870  1903               	skipnz
  1968     0871  285B               	goto	l372
  1969     0872  2873               	goto	l4245
  1970     0873                     l4245:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1973     0873  0840               	movf	sprintf@f^(0+128),w
  1974     0874  0084               	movwf	4
  1975     0875  160A  118A  200A  120A  158A  	fcall	stringdir
  1976     087A  160A  158A  2104  120A  158A  	fcall	_isdigit
  1977     087F  1C03               	btfss	3,0
  1978     0880  2882               	goto	u6971
  1979     0881  2883               	goto	u6970
  1980     0882                     u6971:
  1981     0882  28D9               	goto	l4261
  1982     0883                     u6970:
  1983     0883                     l4247:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1986     0883  1683               	bsf	3,5	;RP0=1, select bank1
  1987     0884  1303               	bcf	3,6	;RP1=0, select bank1
  1988     0885  01DB               	clrf	sprintf@width^(0+128)
  1989     0886  01DC               	clrf	(sprintf@width+1)^(0+128)
  1990     0887                     l4249:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1993     0887  300A               	movlw	10
  1994     0888  1283               	bcf	3,5	;RP0=0, select bank0
  1995     0889  1303               	bcf	3,6	;RP1=0, select bank0
  1996     088A  00A6               	movwf	___wmul@multiplier
  1997     088B  3000               	movlw	0
  1998     088C  00A7               	movwf	___wmul@multiplier+1
  1999     088D  1683               	bsf	3,5	;RP0=1, select bank1
  2000     088E  1303               	bcf	3,6	;RP1=0, select bank1
  2001     088F  085C               	movf	(sprintf@width+1)^(0+128),w
  2002     0890  1283               	bcf	3,5	;RP0=0, select bank0
  2003     0891  1303               	bcf	3,6	;RP1=0, select bank0
  2004     0892  00A9               	movwf	___wmul@multiplicand+1
  2005     0893  1683               	bsf	3,5	;RP0=1, select bank1
  2006     0894  1303               	bcf	3,6	;RP1=0, select bank1
  2007     0895  085B               	movf	sprintf@width^(0+128),w
  2008     0896  1283               	bcf	3,5	;RP0=0, select bank0
  2009     0897  1303               	bcf	3,6	;RP1=0, select bank0
  2010     0898  00A8               	movwf	___wmul@multiplicand
  2011     0899  160A  158A  213C  120A  158A  	fcall	___wmul
  2012     089E  1283               	bcf	3,5	;RP0=0, select bank0
  2013     089F  1303               	bcf	3,6	;RP1=0, select bank0
  2014     08A0  0827               	movf	?___wmul+1,w
  2015     08A1  1683               	bsf	3,5	;RP0=1, select bank1
  2016     08A2  1303               	bcf	3,6	;RP1=0, select bank1
  2017     08A3  00DC               	movwf	(sprintf@width+1)^(0+128)
  2018     08A4  1283               	bcf	3,5	;RP0=0, select bank0
  2019     08A5  1303               	bcf	3,6	;RP1=0, select bank0
  2020     08A6  0826               	movf	?___wmul,w
  2021     08A7  1683               	bsf	3,5	;RP0=1, select bank1
  2022     08A8  1303               	bcf	3,6	;RP1=0, select bank1
  2023     08A9  00DB               	movwf	sprintf@width^(0+128)
  2024     08AA                     l4251:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2027     08AA  0840               	movf	sprintf@f^(0+128),w
  2028     08AB  0084               	movwf	4
  2029     08AC  160A  118A  200A  120A  158A  	fcall	stringdir
  2030     08B1  3ED0               	addlw	208
  2031     08B2  00C5               	movwf	??_sprintf^(0+128)
  2032     08B3  30FF               	movlw	255
  2033     08B4  1803               	skipnc
  2034     08B5  3000               	movlw	0
  2035     08B6  00C6               	movwf	(??_sprintf^(0+128)+1)
  2036     08B7  0845               	movf	??_sprintf^(0+128),w
  2037     08B8  07DB               	addwf	sprintf@width^(0+128),f
  2038     08B9  1803               	skipnc
  2039     08BA  0ADC               	incf	(sprintf@width+1)^(0+128),f
  2040     08BB  0846               	movf	(??_sprintf+1)^(0+128),w
  2041     08BC  07DC               	addwf	(sprintf@width+1)^(0+128),f
  2042     08BD                     l4253:
  2043     08BD  3001               	movlw	1
  2044     08BE  00C5               	movwf	??_sprintf^(0+128)
  2045     08BF  0845               	movf	??_sprintf^(0+128),w
  2046     08C0  07C0               	addwf	sprintf@f^(0+128),f
  2047     08C1                     l4255:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2050     08C1  0840               	movf	sprintf@f^(0+128),w
  2051     08C2  0084               	movwf	4
  2052     08C3  160A  118A  200A  120A  158A  	fcall	stringdir
  2053     08C8  160A  158A  2104  120A  158A  	fcall	_isdigit
  2054     08CD  1803               	btfsc	3,0
  2055     08CE  28D0               	goto	u6981
  2056     08CF  28D1               	goto	u6980
  2057     08D0                     u6981:
  2058     08D0  2887               	goto	l4249
  2059     08D1                     u6980:
  2060     08D1  28D9               	goto	l4261
  2061     08D2                     l382:	
  2062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2063                           
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2066     08D2  1556               	bsf	(sprintf@flag^(0+128)+1),2
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  2069     08D3  28F8               	goto	l4263
  2070     08D4                     l4257:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2073     08D4  30C0               	movlw	192
  2074     08D5  04D5               	iorwf	sprintf@flag^(0+128),f
  2075     08D6  3000               	movlw	0
  2076     08D7  04D6               	iorwf	(sprintf@flag+1)^(0+128),f
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2079     08D8  28F8               	goto	l4263
  2080     08D9                     l4261:
  2081     08D9  3001               	movlw	1
  2082     08DA  1683               	bsf	3,5	;RP0=1, select bank1
  2083     08DB  1303               	bcf	3,6	;RP1=0, select bank1
  2084     08DC  07C0               	addwf	sprintf@f^(0+128),f
  2085     08DD  30FF               	movlw	-1
  2086     08DE  0740               	addwf	sprintf@f^(0+128),w
  2087     08DF  0084               	movwf	4
  2088     08E0  160A  118A  200A  120A  158A  	fcall	stringdir
  2089     08E5  00E4               	movwf	sprintf@c^(0+128)
  2090     08E6  00C5               	movwf	??_sprintf^(0+128)
  2091     08E7  01C6               	clrf	(??_sprintf^(0+128)+1)
  2092                           
  2093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2094                           ; Switch size 1, requested type "simple"
  2095                           ; Number of cases is 1, Range of values is 0 to 0
  2096                           ; switch strategies available:
  2097                           ; Name         Instructions Cycles
  2098                           ; simple_byte            4     3 (average)
  2099                           ; direct_byte           11     8 (fixed)
  2100                           ; jumptable            260     6 (fixed)
  2101                           ;	Chosen strategy is simple_byte
  2102     08E8  0846               	movf	(??_sprintf+1)^(0+128),w
  2103     08E9  3A00               	xorlw	0	; case 0
  2104     08EA  1903               	skipnz
  2105     08EB  28ED               	goto	l4601
  2106     08EC  2843               	goto	L1
  2107     08ED                     l4601:
  2108                           
  2109                           ; Switch size 1, requested type "simple"
  2110                           ; Number of cases is 3, Range of values is 0 to 117
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte           10     6 (average)
  2114                           ; jumptable            260     6 (fixed)
  2115                           ;	Chosen strategy is simple_byte
  2116     08ED  0845               	movf	??_sprintf^(0+128),w
  2117     08EE  3A00               	xorlw	0	; case 0
  2118     08EF  1903               	skipnz
  2119     08F0  2947               	goto	L3
  2120     08F1  3A66               	xorlw	102	; case 102
  2121     08F2  1903               	skipnz
  2122     08F3  28D2               	goto	l382
  2123     08F4  3A13               	xorlw	19	; case 117
  2124     08F5  1903               	skipnz
  2125     08F6  28D4               	goto	l4257
  2126     08F7  2843               	goto	L1
  2127     08F8                     l4263:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2130     08F8  3000               	movlw	0
  2131     08F9  0555               	andwf	sprintf@flag^(0+128),w
  2132     08FA  00C5               	movwf	??_sprintf^(0+128)
  2133     08FB  3007               	movlw	7
  2134     08FC  0556               	andwf	(sprintf@flag+1)^(0+128),w
  2135     08FD  00C6               	movwf	(??_sprintf+1)^(0+128)
  2136     08FE  0845               	movf	??_sprintf^(0+128),w
  2137     08FF  0446               	iorwf	(??_sprintf^(0+128)+1),w
  2138     0900  1903               	btfsc	3,2
  2139     0901  2903               	goto	u6991
  2140     0902  2906               	goto	u6990
  2141     0903                     u6991:
  2142     0903  120A  118A  2B69   	goto	l4435
  2143     0906                     u6990:
  2144     0906                     l4265:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2147     0906  3006               	movlw	6
  2148     0907  00D3               	movwf	sprintf@prec^(0+128)
  2149     0908  3000               	movlw	0
  2150     0909  00D4               	movwf	(sprintf@prec^(0+128)+1)
  2151     090A                     l4267:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2154     090A  084E               	movf	sprintf@ap^(0+128),w
  2155     090B  0084               	movwf	4
  2156     090C  1383               	bcf	3,7	;select IRP bank0
  2157     090D  0800               	movf	0,w
  2158     090E  00DF               	movwf	sprintf@fval^(0+128)
  2159     090F  0A84               	incf	4,f
  2160     0910  0800               	movf	0,w
  2161     0911  00E0               	movwf	(sprintf@fval+1)^(0+128)
  2162     0912  0A84               	incf	4,f
  2163     0913  0800               	movf	0,w
  2164     0914  00E1               	movwf	(sprintf@fval+2)^(0+128)
  2165     0915  0A84               	incf	4,f
  2166     0916  0800               	movf	0,w
  2167     0917  00E2               	movwf	(sprintf@fval+3)^(0+128)
  2168     0918                     l4269:
  2169     0918  3004               	movlw	4
  2170     0919  00C5               	movwf	??_sprintf^(0+128)
  2171     091A  0845               	movf	??_sprintf^(0+128),w
  2172     091B  07CE               	addwf	sprintf@ap^(0+128),f
  2173     091C                     l4271:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2176     091C  0862               	movf	(sprintf@fval+3)^(0+128),w
  2177     091D  1283               	bcf	3,5	;RP0=0, select bank0
  2178     091E  1303               	bcf	3,6	;RP1=0, select bank0
  2179     091F  00A9               	movwf	___flge@ff1+3
  2180     0920  1683               	bsf	3,5	;RP0=1, select bank1
  2181     0921  1303               	bcf	3,6	;RP1=0, select bank1
  2182     0922  0861               	movf	(sprintf@fval+2)^(0+128),w
  2183     0923  1283               	bcf	3,5	;RP0=0, select bank0
  2184     0924  1303               	bcf	3,6	;RP1=0, select bank0
  2185     0925  00A8               	movwf	___flge@ff1+2
  2186     0926  1683               	bsf	3,5	;RP0=1, select bank1
  2187     0927  1303               	bcf	3,6	;RP1=0, select bank1
  2188     0928  0860               	movf	(sprintf@fval+1)^(0+128),w
  2189     0929  1283               	bcf	3,5	;RP0=0, select bank0
  2190     092A  1303               	bcf	3,6	;RP1=0, select bank0
  2191     092B  00A7               	movwf	___flge@ff1+1
  2192     092C  1683               	bsf	3,5	;RP0=1, select bank1
  2193     092D  1303               	bcf	3,6	;RP1=0, select bank1
  2194     092E  085F               	movf	sprintf@fval^(0+128),w
  2195     092F  1283               	bcf	3,5	;RP0=0, select bank0
  2196     0930  1303               	bcf	3,6	;RP1=0, select bank0
  2197     0931  00A6               	movwf	___flge@ff1
  2198     0932  3000               	movlw	0
  2199     0933  00AD               	movwf	___flge@ff2+3
  2200     0934  3000               	movlw	0
  2201     0935  00AC               	movwf	___flge@ff2+2
  2202     0936  3000               	movlw	0
  2203     0937  00AB               	movwf	___flge@ff2+1
  2204     0938  3000               	movlw	0
  2205     0939  00AA               	movwf	___flge@ff2
  2206     093A  160A  118A  20BF  120A  158A  	fcall	___flge
  2207     093F  1803               	btfsc	3,0
  2208     0940  2944               	goto	u7001
  2209     0941  120A  158A  294A   	goto	u7000
  2210     0944                     u7001:
  2211     0944  120A  158A  2983   	goto	l4277
  2212     0947                     L3:
  2213     0947                     L2:
  2214     0947  120A  118A  2CEC   	ljmp	l4503
  2215                           
  2216                           	psect	text2
  2217     0C9D                     __ptext2:	
  2218 ;; *************** function _scale *****************
  2219 ;; Defined at:
  2220 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  scl             1    wreg     char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  scl             1   66[BANK0 ] char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  4   48[BANK0 ] char 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2234 ;;      Params:         0       4       0       0       0
  2235 ;;      Locals:         0       5       0       0       0
  2236 ;;      Temps:          0      10       0       0       0
  2237 ;;      Totals:         0      19       0       0       0
  2238 ;;Total ram usage:       19 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 4
  2241 ;; This function calls:
  2242 ;;		___awdiv
  2243 ;;		___awmod
  2244 ;;		___flmul
  2245 ;; This function is called by:
  2246 ;;		_sprintf
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250     0C9D                     _scale:	
  2251                           ;psect for function _scale
  2252                           
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2256                           ;scale@scl stored from wreg
  2257     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2258     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2259     0C9F  00E2               	movwf	scale@scl
  2260     0CA0                     l3085:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2263     0CA0  1FE2               	btfss	scale@scl,7
  2264     0CA1  2CA3               	goto	u4541
  2265     0CA2  2CA4               	goto	u4540
  2266     0CA3                     u4541:
  2267     0CA3  2E53               	goto	l3107
  2268     0CA4                     u4540:
  2269     0CA4                     l3087:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2272     0CA4  09E2               	comf	scale@scl,f
  2273     0CA5  0AE2               	incf	scale@scl,f
  2274     0CA6                     l3089:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2277     0CA6  0862               	movf	scale@scl,w
  2278     0CA7  3A80               	xorlw	128
  2279     0CA8  3E12               	addlw	-238
  2280     0CA9  1C03               	skipc
  2281     0CAA  2CAC               	goto	u4551
  2282     0CAB  2CAD               	goto	u4550
  2283     0CAC                     u4551:
  2284     0CAC  2D97               	goto	l3097
  2285     0CAD                     u4550:
  2286     0CAD                     l3091:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2289     0CAD  300A               	movlw	10
  2290     0CAE  00AD               	movwf	___awdiv@divisor
  2291     0CAF  3000               	movlw	0
  2292     0CB0  00AE               	movwf	___awdiv@divisor+1
  2293     0CB1  0862               	movf	scale@scl,w
  2294     0CB2  00A8               	movwf	___awmod@dividend
  2295     0CB3  01A9               	clrf	___awmod@dividend+1
  2296     0CB4  1BA8               	btfsc	___awmod@dividend,7
  2297     0CB5  03A9               	decf	___awmod@dividend+1,f
  2298     0CB6  3064               	movlw	100
  2299     0CB7  00A6               	movwf	___awmod@divisor
  2300     0CB8  3000               	movlw	0
  2301     0CB9  00A7               	movwf	___awmod@divisor+1
  2302     0CBA  160A  158A  22DC  120A  158A  	fcall	___awmod
  2303     0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  2304     0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  2305     0CC1  0827               	movf	?___awmod+1,w
  2306     0CC2  00B0               	movwf	___awdiv@dividend+1
  2307     0CC3  0826               	movf	?___awmod,w
  2308     0CC4  00AF               	movwf	___awdiv@dividend
  2309     0CC5  160A  158A  2406  120A  158A  	fcall	___awdiv
  2310     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2311     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2312     0CCC  082D               	movf	?___awdiv,w
  2313     0CCD  00D4               	movwf	??_scale
  2314     0CCE  3001               	movlw	1
  2315     0CCF                     u4565:
  2316     0CCF  1003               	clrc
  2317     0CD0  0DD4               	rlf	??_scale,f
  2318     0CD1  3EFF               	addlw	-1
  2319     0CD2  1D03               	skipz
  2320     0CD3  2CCF               	goto	u4565
  2321     0CD4  1003               	clrc
  2322     0CD5  0D54               	rlf	??_scale,w
  2323     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2324     0CD7  0084               	movwf	4
  2325     0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  2326     0CDD  00D5               	movwf	??_scale+1
  2327     0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  2328     0CE3  00D6               	movwf	??_scale+2
  2329     0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  2330     0CE9  00D7               	movwf	??_scale+3
  2331     0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  2332     0CEF  00D8               	movwf	??_scale+4
  2333     0CF0  0858               	movf	??_scale+4,w
  2334     0CF1  00B9               	movwf	___flmul@b+3
  2335     0CF2  0857               	movf	??_scale+3,w
  2336     0CF3  00B8               	movwf	___flmul@b+2
  2337     0CF4  0856               	movf	??_scale+2,w
  2338     0CF5  00B7               	movwf	___flmul@b+1
  2339     0CF6  0855               	movf	??_scale+1,w
  2340     0CF7  00B6               	movwf	___flmul@b
  2341     0CF8  3064               	movlw	100
  2342     0CF9  00AD               	movwf	___awdiv@divisor
  2343     0CFA  3000               	movlw	0
  2344     0CFB  00AE               	movwf	___awdiv@divisor+1
  2345     0CFC  0862               	movf	scale@scl,w
  2346     0CFD  00AF               	movwf	___awdiv@dividend
  2347     0CFE  01B0               	clrf	___awdiv@dividend+1
  2348     0CFF  1BAF               	btfsc	___awdiv@dividend,7
  2349     0D00  03B0               	decf	___awdiv@dividend+1,f
  2350     0D01  160A  158A  2406  120A  158A  	fcall	___awdiv
  2351     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2352     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2353     0D08  082D               	movf	?___awdiv,w
  2354     0D09  00D9               	movwf	??_scale+5
  2355     0D0A  3001               	movlw	1
  2356     0D0B                     u4575:
  2357     0D0B  1003               	clrc
  2358     0D0C  0DD9               	rlf	??_scale+5,f
  2359     0D0D  3EFF               	addlw	-1
  2360     0D0E  1D03               	skipz
  2361     0D0F  2D0B               	goto	u4575
  2362     0D10  1003               	clrc
  2363     0D11  0D59               	rlf	??_scale+5,w
  2364     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2365     0D13  0084               	movwf	4
  2366     0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  2367     0D19  00DA               	movwf	??_scale+6
  2368     0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  2369     0D1F  00DB               	movwf	??_scale+7
  2370     0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  2371     0D25  00DC               	movwf	??_scale+8
  2372     0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  2373     0D2B  00DD               	movwf	??_scale+9
  2374     0D2C  085D               	movf	??_scale+9,w
  2375     0D2D  00BD               	movwf	___flmul@a+3
  2376     0D2E  085C               	movf	??_scale+8,w
  2377     0D2F  00BC               	movwf	___flmul@a+2
  2378     0D30  085B               	movf	??_scale+7,w
  2379     0D31  00BB               	movwf	___flmul@a+1
  2380     0D32  085A               	movf	??_scale+6,w
  2381     0D33  00BA               	movwf	___flmul@a
  2382     0D34  160A  118A  24BB  120A  158A  	fcall	___flmul
  2383     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2384     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2385     0D3B  0839               	movf	?___flmul+3,w
  2386     0D3C  00E1               	movwf	_scale$1204+3
  2387     0D3D  0838               	movf	?___flmul+2,w
  2388     0D3E  00E0               	movwf	_scale$1204+2
  2389     0D3F  0837               	movf	?___flmul+1,w
  2390     0D40  00DF               	movwf	_scale$1204+1
  2391     0D41  0836               	movf	?___flmul,w
  2392     0D42  00DE               	movwf	_scale$1204
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2395     0D43  300A               	movlw	10
  2396     0D44  00A6               	movwf	___awmod@divisor
  2397     0D45  3000               	movlw	0
  2398     0D46  00A7               	movwf	___awmod@divisor+1
  2399     0D47  0862               	movf	scale@scl,w
  2400     0D48  00A8               	movwf	___awmod@dividend
  2401     0D49  01A9               	clrf	___awmod@dividend+1
  2402     0D4A  1BA8               	btfsc	___awmod@dividend,7
  2403     0D4B  03A9               	decf	___awmod@dividend+1,f
  2404     0D4C  160A  158A  22DC  120A  158A  	fcall	___awmod
  2405     0D51  1283               	bcf	3,5	;RP0=0, select bank0
  2406     0D52  1303               	bcf	3,6	;RP1=0, select bank0
  2407     0D53  0826               	movf	?___awmod,w
  2408     0D54  00D4               	movwf	??_scale
  2409     0D55  3001               	movlw	1
  2410     0D56                     u4585:
  2411     0D56  1003               	clrc
  2412     0D57  0DD4               	rlf	??_scale,f
  2413     0D58  3EFF               	addlw	-1
  2414     0D59  1D03               	skipz
  2415     0D5A  2D56               	goto	u4585
  2416     0D5B  1003               	clrc
  2417     0D5C  0D54               	rlf	??_scale,w
  2418     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2419     0D5E  0084               	movwf	4
  2420     0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  2421     0D64  00D5               	movwf	??_scale+1
  2422     0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  2423     0D6A  00D6               	movwf	??_scale+2
  2424     0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  2425     0D70  00D7               	movwf	??_scale+3
  2426     0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  2427     0D76  00D8               	movwf	??_scale+4
  2428     0D77  0858               	movf	??_scale+4,w
  2429     0D78  00B9               	movwf	___flmul@b+3
  2430     0D79  0857               	movf	??_scale+3,w
  2431     0D7A  00B8               	movwf	___flmul@b+2
  2432     0D7B  0856               	movf	??_scale+2,w
  2433     0D7C  00B7               	movwf	___flmul@b+1
  2434     0D7D  0855               	movf	??_scale+1,w
  2435     0D7E  00B6               	movwf	___flmul@b
  2436     0D7F  0861               	movf	_scale$1204+3,w
  2437     0D80  00BD               	movwf	___flmul@a+3
  2438     0D81  0860               	movf	_scale$1204+2,w
  2439     0D82  00BC               	movwf	___flmul@a+2
  2440     0D83  085F               	movf	_scale$1204+1,w
  2441     0D84  00BB               	movwf	___flmul@a+1
  2442     0D85  085E               	movf	_scale$1204,w
  2443     0D86  00BA               	movwf	___flmul@a
  2444     0D87  160A  118A  24BB  120A  158A  	fcall	___flmul
  2445     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2446     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2447     0D8E  0839               	movf	?___flmul+3,w
  2448     0D8F  00D3               	movwf	?_scale+3
  2449     0D90  0838               	movf	?___flmul+2,w
  2450     0D91  00D2               	movwf	?_scale+2
  2451     0D92  0837               	movf	?___flmul+1,w
  2452     0D93  00D1               	movwf	?_scale+1
  2453     0D94  0836               	movf	?___flmul,w
  2454     0D95  00D0               	movwf	?_scale
  2455     0D96  2FFF               	goto	l359
  2456     0D97                     l3097:
  2457     0D97  0862               	movf	scale@scl,w
  2458     0D98  3A80               	xorlw	128
  2459     0D99  3E75               	addlw	-139
  2460     0D9A  1C03               	skipc
  2461     0D9B  2D9D               	goto	u4591
  2462     0D9C  2D9E               	goto	u4590
  2463     0D9D                     u4591:
  2464     0D9D  2E26               	goto	l3103
  2465     0D9E                     u4590:
  2466     0D9E                     l3099:
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2469     0D9E  300A               	movlw	10
  2470     0D9F  00A6               	movwf	___awmod@divisor
  2471     0DA0  3000               	movlw	0
  2472     0DA1  00A7               	movwf	___awmod@divisor+1
  2473     0DA2  0862               	movf	scale@scl,w
  2474     0DA3  00A8               	movwf	___awmod@dividend
  2475     0DA4  01A9               	clrf	___awmod@dividend+1
  2476     0DA5  1BA8               	btfsc	___awmod@dividend,7
  2477     0DA6  03A9               	decf	___awmod@dividend+1,f
  2478     0DA7  160A  158A  22DC  120A  158A  	fcall	___awmod
  2479     0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2480     0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2481     0DAE  0826               	movf	?___awmod,w
  2482     0DAF  00D4               	movwf	??_scale
  2483     0DB0  3001               	movlw	1
  2484     0DB1                     u4605:
  2485     0DB1  1003               	clrc
  2486     0DB2  0DD4               	rlf	??_scale,f
  2487     0DB3  3EFF               	addlw	-1
  2488     0DB4  1D03               	skipz
  2489     0DB5  2DB1               	goto	u4605
  2490     0DB6  1003               	clrc
  2491     0DB7  0D54               	rlf	??_scale,w
  2492     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2493     0DB9  0084               	movwf	4
  2494     0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  2495     0DBF  00D5               	movwf	??_scale+1
  2496     0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  2497     0DC5  00D6               	movwf	??_scale+2
  2498     0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  2499     0DCB  00D7               	movwf	??_scale+3
  2500     0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  2501     0DD1  00D8               	movwf	??_scale+4
  2502     0DD2  0858               	movf	??_scale+4,w
  2503     0DD3  00B9               	movwf	___flmul@b+3
  2504     0DD4  0857               	movf	??_scale+3,w
  2505     0DD5  00B8               	movwf	___flmul@b+2
  2506     0DD6  0856               	movf	??_scale+2,w
  2507     0DD7  00B7               	movwf	___flmul@b+1
  2508     0DD8  0855               	movf	??_scale+1,w
  2509     0DD9  00B6               	movwf	___flmul@b
  2510     0DDA  300A               	movlw	10
  2511     0DDB  00AD               	movwf	___awdiv@divisor
  2512     0DDC  3000               	movlw	0
  2513     0DDD  00AE               	movwf	___awdiv@divisor+1
  2514     0DDE  0862               	movf	scale@scl,w
  2515     0DDF  00AF               	movwf	___awdiv@dividend
  2516     0DE0  01B0               	clrf	___awdiv@dividend+1
  2517     0DE1  1BAF               	btfsc	___awdiv@dividend,7
  2518     0DE2  03B0               	decf	___awdiv@dividend+1,f
  2519     0DE3  160A  158A  2406  120A  158A  	fcall	___awdiv
  2520     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2521     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2522     0DEA  082D               	movf	?___awdiv,w
  2523     0DEB  00D9               	movwf	??_scale+5
  2524     0DEC  3001               	movlw	1
  2525     0DED                     u4615:
  2526     0DED  1003               	clrc
  2527     0DEE  0DD9               	rlf	??_scale+5,f
  2528     0DEF  3EFF               	addlw	-1
  2529     0DF0  1D03               	skipz
  2530     0DF1  2DED               	goto	u4615
  2531     0DF2  1003               	clrc
  2532     0DF3  0D59               	rlf	??_scale+5,w
  2533     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2534     0DF5  0084               	movwf	4
  2535     0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  2536     0DFB  00DA               	movwf	??_scale+6
  2537     0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  2538     0E01  00DB               	movwf	??_scale+7
  2539     0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  2540     0E07  00DC               	movwf	??_scale+8
  2541     0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  2542     0E0D  00DD               	movwf	??_scale+9
  2543     0E0E  085D               	movf	??_scale+9,w
  2544     0E0F  00BD               	movwf	___flmul@a+3
  2545     0E10  085C               	movf	??_scale+8,w
  2546     0E11  00BC               	movwf	___flmul@a+2
  2547     0E12  085B               	movf	??_scale+7,w
  2548     0E13  00BB               	movwf	___flmul@a+1
  2549     0E14  085A               	movf	??_scale+6,w
  2550     0E15  00BA               	movwf	___flmul@a
  2551     0E16  160A  118A  24BB  120A  158A  	fcall	___flmul
  2552     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2553     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2554     0E1D  0839               	movf	?___flmul+3,w
  2555     0E1E  00D3               	movwf	?_scale+3
  2556     0E1F  0838               	movf	?___flmul+2,w
  2557     0E20  00D2               	movwf	?_scale+2
  2558     0E21  0837               	movf	?___flmul+1,w
  2559     0E22  00D1               	movwf	?_scale+1
  2560     0E23  0836               	movf	?___flmul,w
  2561     0E24  00D0               	movwf	?_scale
  2562     0E25  2FFF               	goto	l359
  2563     0E26                     l3103:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2566     0E26  0862               	movf	scale@scl,w
  2567     0E27  00D4               	movwf	??_scale
  2568     0E28  3001               	movlw	1
  2569     0E29                     u4625:
  2570     0E29  1003               	clrc
  2571     0E2A  0DD4               	rlf	??_scale,f
  2572     0E2B  3EFF               	addlw	-1
  2573     0E2C  1D03               	skipz
  2574     0E2D  2E29               	goto	u4625
  2575     0E2E  1003               	clrc
  2576     0E2F  0D54               	rlf	??_scale,w
  2577     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2578     0E31  0084               	movwf	4
  2579     0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  2580     0E37  00D5               	movwf	??_scale+1
  2581     0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  2582     0E3D  00D6               	movwf	??_scale+2
  2583     0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  2584     0E43  00D7               	movwf	??_scale+3
  2585     0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  2586     0E49  00D8               	movwf	??_scale+4
  2587     0E4A  0858               	movf	??_scale+4,w
  2588     0E4B  00D3               	movwf	?_scale+3
  2589     0E4C  0857               	movf	??_scale+3,w
  2590     0E4D  00D2               	movwf	?_scale+2
  2591     0E4E  0856               	movf	??_scale+2,w
  2592     0E4F  00D1               	movwf	?_scale+1
  2593     0E50  0855               	movf	??_scale+1,w
  2594     0E51  00D0               	movwf	?_scale
  2595     0E52  2FFF               	goto	l359
  2596     0E53                     l3107:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2599     0E53  0862               	movf	scale@scl,w
  2600     0E54  3A80               	xorlw	128
  2601     0E55  3E12               	addlw	-238
  2602     0E56  1C03               	skipc
  2603     0E57  2E59               	goto	u4631
  2604     0E58  2E5A               	goto	u4630
  2605     0E59                     u4631:
  2606     0E59  2F44               	goto	l3115
  2607     0E5A                     u4630:
  2608     0E5A                     l3109:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2611     0E5A  300A               	movlw	10
  2612     0E5B  00AD               	movwf	___awdiv@divisor
  2613     0E5C  3000               	movlw	0
  2614     0E5D  00AE               	movwf	___awdiv@divisor+1
  2615     0E5E  0862               	movf	scale@scl,w
  2616     0E5F  00A8               	movwf	___awmod@dividend
  2617     0E60  01A9               	clrf	___awmod@dividend+1
  2618     0E61  1BA8               	btfsc	___awmod@dividend,7
  2619     0E62  03A9               	decf	___awmod@dividend+1,f
  2620     0E63  3064               	movlw	100
  2621     0E64  00A6               	movwf	___awmod@divisor
  2622     0E65  3000               	movlw	0
  2623     0E66  00A7               	movwf	___awmod@divisor+1
  2624     0E67  160A  158A  22DC  120A  158A  	fcall	___awmod
  2625     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2626     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2627     0E6E  0827               	movf	?___awmod+1,w
  2628     0E6F  00B0               	movwf	___awdiv@dividend+1
  2629     0E70  0826               	movf	?___awmod,w
  2630     0E71  00AF               	movwf	___awdiv@dividend
  2631     0E72  160A  158A  2406  120A  158A  	fcall	___awdiv
  2632     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2633     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2634     0E79  082D               	movf	?___awdiv,w
  2635     0E7A  00D4               	movwf	??_scale
  2636     0E7B  3001               	movlw	1
  2637     0E7C                     u4645:
  2638     0E7C  1003               	clrc
  2639     0E7D  0DD4               	rlf	??_scale,f
  2640     0E7E  3EFF               	addlw	-1
  2641     0E7F  1D03               	skipz
  2642     0E80  2E7C               	goto	u4645
  2643     0E81  1003               	clrc
  2644     0E82  0D54               	rlf	??_scale,w
  2645     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2646     0E84  0084               	movwf	4
  2647     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  2648     0E8A  00D5               	movwf	??_scale+1
  2649     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  2650     0E90  00D6               	movwf	??_scale+2
  2651     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  2652     0E96  00D7               	movwf	??_scale+3
  2653     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  2654     0E9C  00D8               	movwf	??_scale+4
  2655     0E9D  0858               	movf	??_scale+4,w
  2656     0E9E  00B9               	movwf	___flmul@b+3
  2657     0E9F  0857               	movf	??_scale+3,w
  2658     0EA0  00B8               	movwf	___flmul@b+2
  2659     0EA1  0856               	movf	??_scale+2,w
  2660     0EA2  00B7               	movwf	___flmul@b+1
  2661     0EA3  0855               	movf	??_scale+1,w
  2662     0EA4  00B6               	movwf	___flmul@b
  2663     0EA5  3064               	movlw	100
  2664     0EA6  00AD               	movwf	___awdiv@divisor
  2665     0EA7  3000               	movlw	0
  2666     0EA8  00AE               	movwf	___awdiv@divisor+1
  2667     0EA9  0862               	movf	scale@scl,w
  2668     0EAA  00AF               	movwf	___awdiv@dividend
  2669     0EAB  01B0               	clrf	___awdiv@dividend+1
  2670     0EAC  1BAF               	btfsc	___awdiv@dividend,7
  2671     0EAD  03B0               	decf	___awdiv@dividend+1,f
  2672     0EAE  160A  158A  2406  120A  158A  	fcall	___awdiv
  2673     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2674     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2675     0EB5  082D               	movf	?___awdiv,w
  2676     0EB6  00D9               	movwf	??_scale+5
  2677     0EB7  3001               	movlw	1
  2678     0EB8                     u4655:
  2679     0EB8  1003               	clrc
  2680     0EB9  0DD9               	rlf	??_scale+5,f
  2681     0EBA  3EFF               	addlw	-1
  2682     0EBB  1D03               	skipz
  2683     0EBC  2EB8               	goto	u4655
  2684     0EBD  1003               	clrc
  2685     0EBE  0D59               	rlf	??_scale+5,w
  2686     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2687     0EC0  0084               	movwf	4
  2688     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  2689     0EC6  00DA               	movwf	??_scale+6
  2690     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  2691     0ECC  00DB               	movwf	??_scale+7
  2692     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  2693     0ED2  00DC               	movwf	??_scale+8
  2694     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  2695     0ED8  00DD               	movwf	??_scale+9
  2696     0ED9  085D               	movf	??_scale+9,w
  2697     0EDA  00BD               	movwf	___flmul@a+3
  2698     0EDB  085C               	movf	??_scale+8,w
  2699     0EDC  00BC               	movwf	___flmul@a+2
  2700     0EDD  085B               	movf	??_scale+7,w
  2701     0EDE  00BB               	movwf	___flmul@a+1
  2702     0EDF  085A               	movf	??_scale+6,w
  2703     0EE0  00BA               	movwf	___flmul@a
  2704     0EE1  160A  118A  24BB  120A  158A  	fcall	___flmul
  2705     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2706     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2707     0EE8  0839               	movf	?___flmul+3,w
  2708     0EE9  00E1               	movwf	_scale$1204+3
  2709     0EEA  0838               	movf	?___flmul+2,w
  2710     0EEB  00E0               	movwf	_scale$1204+2
  2711     0EEC  0837               	movf	?___flmul+1,w
  2712     0EED  00DF               	movwf	_scale$1204+1
  2713     0EEE  0836               	movf	?___flmul,w
  2714     0EEF  00DE               	movwf	_scale$1204
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2717     0EF0  300A               	movlw	10
  2718     0EF1  00A6               	movwf	___awmod@divisor
  2719     0EF2  3000               	movlw	0
  2720     0EF3  00A7               	movwf	___awmod@divisor+1
  2721     0EF4  0862               	movf	scale@scl,w
  2722     0EF5  00A8               	movwf	___awmod@dividend
  2723     0EF6  01A9               	clrf	___awmod@dividend+1
  2724     0EF7  1BA8               	btfsc	___awmod@dividend,7
  2725     0EF8  03A9               	decf	___awmod@dividend+1,f
  2726     0EF9  160A  158A  22DC  120A  158A  	fcall	___awmod
  2727     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0F00  0826               	movf	?___awmod,w
  2730     0F01  00D4               	movwf	??_scale
  2731     0F02  3001               	movlw	1
  2732     0F03                     u4665:
  2733     0F03  1003               	clrc
  2734     0F04  0DD4               	rlf	??_scale,f
  2735     0F05  3EFF               	addlw	-1
  2736     0F06  1D03               	skipz
  2737     0F07  2F03               	goto	u4665
  2738     0F08  1003               	clrc
  2739     0F09  0D54               	rlf	??_scale,w
  2740     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2741     0F0B  0084               	movwf	4
  2742     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  2743     0F11  00D5               	movwf	??_scale+1
  2744     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  2745     0F17  00D6               	movwf	??_scale+2
  2746     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  2747     0F1D  00D7               	movwf	??_scale+3
  2748     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  2749     0F23  00D8               	movwf	??_scale+4
  2750     0F24  0858               	movf	??_scale+4,w
  2751     0F25  00B9               	movwf	___flmul@b+3
  2752     0F26  0857               	movf	??_scale+3,w
  2753     0F27  00B8               	movwf	___flmul@b+2
  2754     0F28  0856               	movf	??_scale+2,w
  2755     0F29  00B7               	movwf	___flmul@b+1
  2756     0F2A  0855               	movf	??_scale+1,w
  2757     0F2B  00B6               	movwf	___flmul@b
  2758     0F2C  0861               	movf	_scale$1204+3,w
  2759     0F2D  00BD               	movwf	___flmul@a+3
  2760     0F2E  0860               	movf	_scale$1204+2,w
  2761     0F2F  00BC               	movwf	___flmul@a+2
  2762     0F30  085F               	movf	_scale$1204+1,w
  2763     0F31  00BB               	movwf	___flmul@a+1
  2764     0F32  085E               	movf	_scale$1204,w
  2765     0F33  00BA               	movwf	___flmul@a
  2766     0F34  160A  118A  24BB  120A  158A  	fcall	___flmul
  2767     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2768     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2769     0F3B  0839               	movf	?___flmul+3,w
  2770     0F3C  00D3               	movwf	?_scale+3
  2771     0F3D  0838               	movf	?___flmul+2,w
  2772     0F3E  00D2               	movwf	?_scale+2
  2773     0F3F  0837               	movf	?___flmul+1,w
  2774     0F40  00D1               	movwf	?_scale+1
  2775     0F41  0836               	movf	?___flmul,w
  2776     0F42  00D0               	movwf	?_scale
  2777     0F43  2FFF               	goto	l359
  2778     0F44                     l3115:
  2779     0F44  0862               	movf	scale@scl,w
  2780     0F45  3A80               	xorlw	128
  2781     0F46  3E75               	addlw	-139
  2782     0F47  1C03               	skipc
  2783     0F48  2F4A               	goto	u4671
  2784     0F49  2F4B               	goto	u4670
  2785     0F4A                     u4671:
  2786     0F4A  2FD3               	goto	l3121
  2787     0F4B                     u4670:
  2788     0F4B                     l3117:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2791     0F4B  300A               	movlw	10
  2792     0F4C  00A6               	movwf	___awmod@divisor
  2793     0F4D  3000               	movlw	0
  2794     0F4E  00A7               	movwf	___awmod@divisor+1
  2795     0F4F  0862               	movf	scale@scl,w
  2796     0F50  00A8               	movwf	___awmod@dividend
  2797     0F51  01A9               	clrf	___awmod@dividend+1
  2798     0F52  1BA8               	btfsc	___awmod@dividend,7
  2799     0F53  03A9               	decf	___awmod@dividend+1,f
  2800     0F54  160A  158A  22DC  120A  158A  	fcall	___awmod
  2801     0F59  1283               	bcf	3,5	;RP0=0, select bank0
  2802     0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  2803     0F5B  0826               	movf	?___awmod,w
  2804     0F5C  00D4               	movwf	??_scale
  2805     0F5D  3001               	movlw	1
  2806     0F5E                     u4685:
  2807     0F5E  1003               	clrc
  2808     0F5F  0DD4               	rlf	??_scale,f
  2809     0F60  3EFF               	addlw	-1
  2810     0F61  1D03               	skipz
  2811     0F62  2F5E               	goto	u4685
  2812     0F63  1003               	clrc
  2813     0F64  0D54               	rlf	??_scale,w
  2814     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2815     0F66  0084               	movwf	4
  2816     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  2817     0F6C  00D5               	movwf	??_scale+1
  2818     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  2819     0F72  00D6               	movwf	??_scale+2
  2820     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  2821     0F78  00D7               	movwf	??_scale+3
  2822     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  2823     0F7E  00D8               	movwf	??_scale+4
  2824     0F7F  0858               	movf	??_scale+4,w
  2825     0F80  00B9               	movwf	___flmul@b+3
  2826     0F81  0857               	movf	??_scale+3,w
  2827     0F82  00B8               	movwf	___flmul@b+2
  2828     0F83  0856               	movf	??_scale+2,w
  2829     0F84  00B7               	movwf	___flmul@b+1
  2830     0F85  0855               	movf	??_scale+1,w
  2831     0F86  00B6               	movwf	___flmul@b
  2832     0F87  300A               	movlw	10
  2833     0F88  00AD               	movwf	___awdiv@divisor
  2834     0F89  3000               	movlw	0
  2835     0F8A  00AE               	movwf	___awdiv@divisor+1
  2836     0F8B  0862               	movf	scale@scl,w
  2837     0F8C  00AF               	movwf	___awdiv@dividend
  2838     0F8D  01B0               	clrf	___awdiv@dividend+1
  2839     0F8E  1BAF               	btfsc	___awdiv@dividend,7
  2840     0F8F  03B0               	decf	___awdiv@dividend+1,f
  2841     0F90  160A  158A  2406  120A  158A  	fcall	___awdiv
  2842     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0F97  082D               	movf	?___awdiv,w
  2845     0F98  00D9               	movwf	??_scale+5
  2846     0F99  3001               	movlw	1
  2847     0F9A                     u4695:
  2848     0F9A  1003               	clrc
  2849     0F9B  0DD9               	rlf	??_scale+5,f
  2850     0F9C  3EFF               	addlw	-1
  2851     0F9D  1D03               	skipz
  2852     0F9E  2F9A               	goto	u4695
  2853     0F9F  1003               	clrc
  2854     0FA0  0D59               	rlf	??_scale+5,w
  2855     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2856     0FA2  0084               	movwf	4
  2857     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  2858     0FA8  00DA               	movwf	??_scale+6
  2859     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  2860     0FAE  00DB               	movwf	??_scale+7
  2861     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  2862     0FB4  00DC               	movwf	??_scale+8
  2863     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  2864     0FBA  00DD               	movwf	??_scale+9
  2865     0FBB  085D               	movf	??_scale+9,w
  2866     0FBC  00BD               	movwf	___flmul@a+3
  2867     0FBD  085C               	movf	??_scale+8,w
  2868     0FBE  00BC               	movwf	___flmul@a+2
  2869     0FBF  085B               	movf	??_scale+7,w
  2870     0FC0  00BB               	movwf	___flmul@a+1
  2871     0FC1  085A               	movf	??_scale+6,w
  2872     0FC2  00BA               	movwf	___flmul@a
  2873     0FC3  160A  118A  24BB  120A  158A  	fcall	___flmul
  2874     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2875     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2876     0FCA  0839               	movf	?___flmul+3,w
  2877     0FCB  00D3               	movwf	?_scale+3
  2878     0FCC  0838               	movf	?___flmul+2,w
  2879     0FCD  00D2               	movwf	?_scale+2
  2880     0FCE  0837               	movf	?___flmul+1,w
  2881     0FCF  00D1               	movwf	?_scale+1
  2882     0FD0  0836               	movf	?___flmul,w
  2883     0FD1  00D0               	movwf	?_scale
  2884     0FD2  2FFF               	goto	l359
  2885     0FD3                     l3121:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2888     0FD3  0862               	movf	scale@scl,w
  2889     0FD4  00D4               	movwf	??_scale
  2890     0FD5  3001               	movlw	1
  2891     0FD6                     u4705:
  2892     0FD6  1003               	clrc
  2893     0FD7  0DD4               	rlf	??_scale,f
  2894     0FD8  3EFF               	addlw	-1
  2895     0FD9  1D03               	skipz
  2896     0FDA  2FD6               	goto	u4705
  2897     0FDB  1003               	clrc
  2898     0FDC  0D54               	rlf	??_scale,w
  2899     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2900     0FDE  0084               	movwf	4
  2901     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  2902     0FE4  00D5               	movwf	??_scale+1
  2903     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  2904     0FEA  00D6               	movwf	??_scale+2
  2905     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  2906     0FF0  00D7               	movwf	??_scale+3
  2907     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  2908     0FF6  00D8               	movwf	??_scale+4
  2909     0FF7  0858               	movf	??_scale+4,w
  2910     0FF8  00D3               	movwf	?_scale+3
  2911     0FF9  0857               	movf	??_scale+3,w
  2912     0FFA  00D2               	movwf	?_scale+2
  2913     0FFB  0856               	movf	??_scale+2,w
  2914     0FFC  00D1               	movwf	?_scale+1
  2915     0FFD  0855               	movf	??_scale+1,w
  2916     0FFE  00D0               	movwf	?_scale
  2917     0FFF                     l359:
  2918     0FFF  0008               	return
  2919     1000                     __end_of_scale:
  2920                           
  2921                           	psect	text3
  2922     1ADC                     __ptext3:	
  2923 ;; *************** function ___awmod *****************
  2924 ;; Defined at:
  2925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  divisor         2    6[BANK0 ] int 
  2928 ;;  dividend        2    8[BANK0 ] int 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  sign            1   12[BANK0 ] unsigned char 
  2931 ;;  counter         1   11[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2    6[BANK0 ] int 
  2934 ;; Registers used:
  2935 ;;		wreg, status,2, status,0
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2941 ;;      Params:         0       4       0       0       0
  2942 ;;      Locals:         0       2       0       0       0
  2943 ;;      Temps:          0       1       0       0       0
  2944 ;;      Totals:         0       7       0       0       0
  2945 ;;Total ram usage:        7 bytes
  2946 ;; Hardware stack levels used: 1
  2947 ;; Hardware stack levels required when called: 2
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_scale
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     1ADC                     ___awmod:	
  2956                           ;psect for function ___awmod
  2957                           
  2958     1ADC                     l2643:	
  2959                           ;incstack = 0
  2960                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2961                           
  2962     1ADC  1283               	bcf	3,5	;RP0=0, select bank0
  2963     1ADD  1303               	bcf	3,6	;RP1=0, select bank0
  2964     1ADE  01AC               	clrf	___awmod@sign
  2965     1ADF                     l2645:
  2966     1ADF  1FA9               	btfss	___awmod@dividend+1,7
  2967     1AE0  2AE2               	goto	u3401
  2968     1AE1  2AE3               	goto	u3400
  2969     1AE2                     u3401:
  2970     1AE2  2AEA               	goto	l2651
  2971     1AE3                     u3400:
  2972     1AE3                     l2647:
  2973     1AE3  09A8               	comf	___awmod@dividend,f
  2974     1AE4  09A9               	comf	___awmod@dividend+1,f
  2975     1AE5  0AA8               	incf	___awmod@dividend,f
  2976     1AE6  1903               	skipnz
  2977     1AE7  0AA9               	incf	___awmod@dividend+1,f
  2978     1AE8                     l2649:
  2979     1AE8  01AC               	clrf	___awmod@sign
  2980     1AE9  0AAC               	incf	___awmod@sign,f
  2981     1AEA                     l2651:
  2982     1AEA  1FA7               	btfss	___awmod@divisor+1,7
  2983     1AEB  2AED               	goto	u3411
  2984     1AEC  2AEE               	goto	u3410
  2985     1AED                     u3411:
  2986     1AED  2AF3               	goto	l2655
  2987     1AEE                     u3410:
  2988     1AEE                     l2653:
  2989     1AEE  09A6               	comf	___awmod@divisor,f
  2990     1AEF  09A7               	comf	___awmod@divisor+1,f
  2991     1AF0  0AA6               	incf	___awmod@divisor,f
  2992     1AF1  1903               	skipnz
  2993     1AF2  0AA7               	incf	___awmod@divisor+1,f
  2994     1AF3                     l2655:
  2995     1AF3  0826               	movf	___awmod@divisor,w
  2996     1AF4  0427               	iorwf	___awmod@divisor+1,w
  2997     1AF5  1903               	btfsc	3,2
  2998     1AF6  2AF8               	goto	u3421
  2999     1AF7  2AF9               	goto	u3420
  3000     1AF8                     u3421:
  3001     1AF8  2B28               	goto	l2673
  3002     1AF9                     u3420:
  3003     1AF9                     l2657:
  3004     1AF9  01AB               	clrf	___awmod@counter
  3005     1AFA  0AAB               	incf	___awmod@counter,f
  3006     1AFB  2B07               	goto	l2663
  3007     1AFC                     l2659:
  3008     1AFC  3001               	movlw	1
  3009     1AFD                     u3435:
  3010     1AFD  1003               	clrc
  3011     1AFE  0DA6               	rlf	___awmod@divisor,f
  3012     1AFF  0DA7               	rlf	___awmod@divisor+1,f
  3013     1B00  3EFF               	addlw	-1
  3014     1B01  1D03               	skipz
  3015     1B02  2AFD               	goto	u3435
  3016     1B03                     l2661:
  3017     1B03  3001               	movlw	1
  3018     1B04  00AA               	movwf	??___awmod
  3019     1B05  082A               	movf	??___awmod,w
  3020     1B06  07AB               	addwf	___awmod@counter,f
  3021     1B07                     l2663:
  3022     1B07  1FA7               	btfss	___awmod@divisor+1,7
  3023     1B08  2B0A               	goto	u3441
  3024     1B09  2B0B               	goto	u3440
  3025     1B0A                     u3441:
  3026     1B0A  2AFC               	goto	l2659
  3027     1B0B                     u3440:
  3028     1B0B                     l2665:
  3029     1B0B  0827               	movf	___awmod@divisor+1,w
  3030     1B0C  0229               	subwf	___awmod@dividend+1,w
  3031     1B0D  1D03               	skipz
  3032     1B0E  2B11               	goto	u3455
  3033     1B0F  0826               	movf	___awmod@divisor,w
  3034     1B10  0228               	subwf	___awmod@dividend,w
  3035     1B11                     u3455:
  3036     1B11  1C03               	skipc
  3037     1B12  2B14               	goto	u3451
  3038     1B13  2B15               	goto	u3450
  3039     1B14                     u3451:
  3040     1B14  2B1B               	goto	l2669
  3041     1B15                     u3450:
  3042     1B15                     l2667:
  3043     1B15  0826               	movf	___awmod@divisor,w
  3044     1B16  02A8               	subwf	___awmod@dividend,f
  3045     1B17  0827               	movf	___awmod@divisor+1,w
  3046     1B18  1C03               	skipc
  3047     1B19  03A9               	decf	___awmod@dividend+1,f
  3048     1B1A  02A9               	subwf	___awmod@dividend+1,f
  3049     1B1B                     l2669:
  3050     1B1B  3001               	movlw	1
  3051     1B1C                     u3465:
  3052     1B1C  1003               	clrc
  3053     1B1D  0CA7               	rrf	___awmod@divisor+1,f
  3054     1B1E  0CA6               	rrf	___awmod@divisor,f
  3055     1B1F  3EFF               	addlw	-1
  3056     1B20  1D03               	skipz
  3057     1B21  2B1C               	goto	u3465
  3058     1B22                     l2671:
  3059     1B22  3001               	movlw	1
  3060     1B23  02AB               	subwf	___awmod@counter,f
  3061     1B24  1D03               	btfss	3,2
  3062     1B25  2B27               	goto	u3471
  3063     1B26  2B28               	goto	u3470
  3064     1B27                     u3471:
  3065     1B27  2B0B               	goto	l2665
  3066     1B28                     u3470:
  3067     1B28                     l2673:
  3068     1B28  082C               	movf	___awmod@sign,w
  3069     1B29  1903               	btfsc	3,2
  3070     1B2A  2B2C               	goto	u3481
  3071     1B2B  2B2D               	goto	u3480
  3072     1B2C                     u3481:
  3073     1B2C  2B32               	goto	l2677
  3074     1B2D                     u3480:
  3075     1B2D                     l2675:
  3076     1B2D  09A8               	comf	___awmod@dividend,f
  3077     1B2E  09A9               	comf	___awmod@dividend+1,f
  3078     1B2F  0AA8               	incf	___awmod@dividend,f
  3079     1B30  1903               	skipnz
  3080     1B31  0AA9               	incf	___awmod@dividend+1,f
  3081     1B32                     l2677:
  3082     1B32  0829               	movf	___awmod@dividend+1,w
  3083     1B33  00A7               	movwf	?___awmod+1
  3084     1B34  0828               	movf	___awmod@dividend,w
  3085     1B35  00A6               	movwf	?___awmod
  3086     1B36                     l624:
  3087     1B36  0008               	return
  3088     1B37                     __end_of___awmod:
  3089                           
  3090                           	psect	text4
  3091     1C06                     __ptext4:	
  3092 ;; *************** function ___awdiv *****************
  3093 ;; Defined at:
  3094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  divisor         2   13[BANK0 ] int 
  3097 ;;  dividend        2   15[BANK0 ] int 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  quotient        2   20[BANK0 ] int 
  3100 ;;  sign            1   19[BANK0 ] unsigned char 
  3101 ;;  counter         1   18[BANK0 ] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2   13[BANK0 ] int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       4       0       0       0
  3112 ;;      Locals:         0       4       0       0       0
  3113 ;;      Temps:          0       1       0       0       0
  3114 ;;      Totals:         0       9       0       0       0
  3115 ;;Total ram usage:        9 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 2
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_scale
  3122 ;;		_sprintf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126     1C06                     ___awdiv:	
  3127                           ;psect for function ___awdiv
  3128                           
  3129     1C06                     l2599:	
  3130                           ;incstack = 0
  3131                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3132                           
  3133     1C06  1283               	bcf	3,5	;RP0=0, select bank0
  3134     1C07  1303               	bcf	3,6	;RP1=0, select bank0
  3135     1C08  01B3               	clrf	___awdiv@sign
  3136     1C09                     l2601:
  3137     1C09  1FAE               	btfss	___awdiv@divisor+1,7
  3138     1C0A  2C0C               	goto	u3301
  3139     1C0B  2C0D               	goto	u3300
  3140     1C0C                     u3301:
  3141     1C0C  2C14               	goto	l2607
  3142     1C0D                     u3300:
  3143     1C0D                     l2603:
  3144     1C0D  09AD               	comf	___awdiv@divisor,f
  3145     1C0E  09AE               	comf	___awdiv@divisor+1,f
  3146     1C0F  0AAD               	incf	___awdiv@divisor,f
  3147     1C10  1903               	skipnz
  3148     1C11  0AAE               	incf	___awdiv@divisor+1,f
  3149     1C12                     l2605:
  3150     1C12  01B3               	clrf	___awdiv@sign
  3151     1C13  0AB3               	incf	___awdiv@sign,f
  3152     1C14                     l2607:
  3153     1C14  1FB0               	btfss	___awdiv@dividend+1,7
  3154     1C15  2C17               	goto	u3311
  3155     1C16  2C18               	goto	u3310
  3156     1C17                     u3311:
  3157     1C17  2C21               	goto	l2613
  3158     1C18                     u3310:
  3159     1C18                     l2609:
  3160     1C18  09AF               	comf	___awdiv@dividend,f
  3161     1C19  09B0               	comf	___awdiv@dividend+1,f
  3162     1C1A  0AAF               	incf	___awdiv@dividend,f
  3163     1C1B  1903               	skipnz
  3164     1C1C  0AB0               	incf	___awdiv@dividend+1,f
  3165     1C1D                     l2611:
  3166     1C1D  3001               	movlw	1
  3167     1C1E  00B1               	movwf	??___awdiv
  3168     1C1F  0831               	movf	??___awdiv,w
  3169     1C20  06B3               	xorwf	___awdiv@sign,f
  3170     1C21                     l2613:
  3171     1C21  01B4               	clrf	___awdiv@quotient
  3172     1C22  01B5               	clrf	___awdiv@quotient+1
  3173     1C23                     l2615:
  3174     1C23  082D               	movf	___awdiv@divisor,w
  3175     1C24  042E               	iorwf	___awdiv@divisor+1,w
  3176     1C25  1903               	btfsc	3,2
  3177     1C26  2C28               	goto	u3321
  3178     1C27  2C29               	goto	u3320
  3179     1C28                     u3321:
  3180     1C28  2C60               	goto	l2635
  3181     1C29                     u3320:
  3182     1C29                     l2617:
  3183     1C29  01B2               	clrf	___awdiv@counter
  3184     1C2A  0AB2               	incf	___awdiv@counter,f
  3185     1C2B  2C37               	goto	l2623
  3186     1C2C                     l2619:
  3187     1C2C  3001               	movlw	1
  3188     1C2D                     u3335:
  3189     1C2D  1003               	clrc
  3190     1C2E  0DAD               	rlf	___awdiv@divisor,f
  3191     1C2F  0DAE               	rlf	___awdiv@divisor+1,f
  3192     1C30  3EFF               	addlw	-1
  3193     1C31  1D03               	skipz
  3194     1C32  2C2D               	goto	u3335
  3195     1C33                     l2621:
  3196     1C33  3001               	movlw	1
  3197     1C34  00B1               	movwf	??___awdiv
  3198     1C35  0831               	movf	??___awdiv,w
  3199     1C36  07B2               	addwf	___awdiv@counter,f
  3200     1C37                     l2623:
  3201     1C37  1FAE               	btfss	___awdiv@divisor+1,7
  3202     1C38  2C3A               	goto	u3341
  3203     1C39  2C3B               	goto	u3340
  3204     1C3A                     u3341:
  3205     1C3A  2C2C               	goto	l2619
  3206     1C3B                     u3340:
  3207     1C3B                     l2625:
  3208     1C3B  3001               	movlw	1
  3209     1C3C                     u3355:
  3210     1C3C  1003               	clrc
  3211     1C3D  0DB4               	rlf	___awdiv@quotient,f
  3212     1C3E  0DB5               	rlf	___awdiv@quotient+1,f
  3213     1C3F  3EFF               	addlw	-1
  3214     1C40  1D03               	skipz
  3215     1C41  2C3C               	goto	u3355
  3216     1C42  082E               	movf	___awdiv@divisor+1,w
  3217     1C43  0230               	subwf	___awdiv@dividend+1,w
  3218     1C44  1D03               	skipz
  3219     1C45  2C48               	goto	u3365
  3220     1C46  082D               	movf	___awdiv@divisor,w
  3221     1C47  022F               	subwf	___awdiv@dividend,w
  3222     1C48                     u3365:
  3223     1C48  1C03               	skipc
  3224     1C49  2C4B               	goto	u3361
  3225     1C4A  2C4C               	goto	u3360
  3226     1C4B                     u3361:
  3227     1C4B  2C53               	goto	l2631
  3228     1C4C                     u3360:
  3229     1C4C                     l2627:
  3230     1C4C  082D               	movf	___awdiv@divisor,w
  3231     1C4D  02AF               	subwf	___awdiv@dividend,f
  3232     1C4E  082E               	movf	___awdiv@divisor+1,w
  3233     1C4F  1C03               	skipc
  3234     1C50  03B0               	decf	___awdiv@dividend+1,f
  3235     1C51  02B0               	subwf	___awdiv@dividend+1,f
  3236     1C52                     l2629:
  3237     1C52  1434               	bsf	___awdiv@quotient,0
  3238     1C53                     l2631:
  3239     1C53  3001               	movlw	1
  3240     1C54                     u3375:
  3241     1C54  1003               	clrc
  3242     1C55  0CAE               	rrf	___awdiv@divisor+1,f
  3243     1C56  0CAD               	rrf	___awdiv@divisor,f
  3244     1C57  3EFF               	addlw	-1
  3245     1C58  1D03               	skipz
  3246     1C59  2C54               	goto	u3375
  3247     1C5A                     l2633:
  3248     1C5A  3001               	movlw	1
  3249     1C5B  02B2               	subwf	___awdiv@counter,f
  3250     1C5C  1D03               	btfss	3,2
  3251     1C5D  2C5F               	goto	u3381
  3252     1C5E  2C60               	goto	u3380
  3253     1C5F                     u3381:
  3254     1C5F  2C3B               	goto	l2625
  3255     1C60                     u3380:
  3256     1C60                     l2635:
  3257     1C60  0833               	movf	___awdiv@sign,w
  3258     1C61  1903               	btfsc	3,2
  3259     1C62  2C64               	goto	u3391
  3260     1C63  2C65               	goto	u3390
  3261     1C64                     u3391:
  3262     1C64  2C6A               	goto	l2639
  3263     1C65                     u3390:
  3264     1C65                     l2637:
  3265     1C65  09B4               	comf	___awdiv@quotient,f
  3266     1C66  09B5               	comf	___awdiv@quotient+1,f
  3267     1C67  0AB4               	incf	___awdiv@quotient,f
  3268     1C68  1903               	skipnz
  3269     1C69  0AB5               	incf	___awdiv@quotient+1,f
  3270     1C6A                     l2639:
  3271     1C6A  0835               	movf	___awdiv@quotient+1,w
  3272     1C6B  00AE               	movwf	?___awdiv+1
  3273     1C6C  0834               	movf	___awdiv@quotient,w
  3274     1C6D  00AD               	movwf	?___awdiv
  3275     1C6E                     l611:
  3276     1C6E  0008               	return
  3277     1C6F                     __end_of___awdiv:
  3278                           
  3279                           	psect	text5
  3280     1904                     __ptext5:	
  3281 ;; *************** function _isdigit *****************
  3282 ;; Defined at:
  3283 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  c               1    wreg     unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  c               1    7[BANK0 ] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;		None               void
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       0       0       0       0
  3298 ;;      Locals:         0       2       0       0       0
  3299 ;;      Temps:          0       0       0       0       0
  3300 ;;      Totals:         0       2       0       0       0
  3301 ;;Total ram usage:        2 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 2
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_sprintf
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311     1904                     _isdigit:	
  3312                           ;psect for function _isdigit
  3313                           
  3314                           
  3315                           ;incstack = 0
  3316                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3317                           ;isdigit@c stored from wreg
  3318     1904  1283               	bcf	3,5	;RP0=0, select bank0
  3319     1905  1303               	bcf	3,6	;RP1=0, select bank0
  3320     1906  00A7               	movwf	isdigit@c
  3321     1907                     l3125:
  3322     1907  01A6               	clrf	_isdigit$986
  3323     1908                     l3127:
  3324     1908  303A               	movlw	58
  3325     1909  0227               	subwf	isdigit@c,w
  3326     190A  1803               	skipnc
  3327     190B  290D               	goto	u4711
  3328     190C  290E               	goto	u4710
  3329     190D                     u4711:
  3330     190D  2916               	goto	l3133
  3331     190E                     u4710:
  3332     190E                     l3129:
  3333     190E  3030               	movlw	48
  3334     190F  0227               	subwf	isdigit@c,w
  3335     1910  1C03               	skipc
  3336     1911  2913               	goto	u4721
  3337     1912  2914               	goto	u4720
  3338     1913                     u4721:
  3339     1913  2916               	goto	l3133
  3340     1914                     u4720:
  3341     1914                     l3131:
  3342     1914  01A6               	clrf	_isdigit$986
  3343     1915  0AA6               	incf	_isdigit$986,f
  3344     1916                     l3133:
  3345     1916  0C26               	rrf	_isdigit$986,w
  3346     1917                     l945:
  3347     1917  0008               	return
  3348     1918                     __end_of_isdigit:
  3349                           
  3350                           	psect	text6
  3351     12AE                     __ptext6:	
  3352 ;; *************** function _fround *****************
  3353 ;; Defined at:
  3354 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  prec            1    wreg     unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  prec            1   67[BANK0 ] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  4   48[BANK0 ] unsigned char 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3368 ;;      Params:         0       4       0       0       0
  3369 ;;      Locals:         0       9       0       0       0
  3370 ;;      Temps:          0       7       0       0       0
  3371 ;;      Totals:         0      20       0       0       0
  3372 ;;Total ram usage:       20 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 4
  3375 ;; This function calls:
  3376 ;;		___flmul
  3377 ;;		___lwdiv
  3378 ;;		___lwmod
  3379 ;; This function is called by:
  3380 ;;		_sprintf
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384     12AE                     _fround:	
  3385                           ;psect for function _fround
  3386                           
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3390                           ;fround@prec stored from wreg
  3391     12AE  1283               	bcf	3,5	;RP0=0, select bank0
  3392     12AF  1303               	bcf	3,6	;RP1=0, select bank0
  3393     12B0  00E3               	movwf	fround@prec
  3394     12B1                     l3067:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3397     12B1  306E               	movlw	110
  3398     12B2  0263               	subwf	fround@prec,w
  3399     12B3  1C03               	skipc
  3400     12B4  2AB6               	goto	u4461
  3401     12B5  2AB7               	goto	u4460
  3402     12B6                     u4461:
  3403     12B6  2BC6               	goto	l3075
  3404     12B7                     u4460:
  3405     12B7                     l3069:
  3406                           
  3407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3408     12B7  303F               	movlw	63
  3409     12B8  00B9               	movwf	___flmul@b+3
  3410     12B9  3000               	movlw	0
  3411     12BA  00B8               	movwf	___flmul@b+2
  3412     12BB  3000               	movlw	0
  3413     12BC  00B7               	movwf	___flmul@b+1
  3414     12BD  3000               	movlw	0
  3415     12BE  00B6               	movwf	___flmul@b
  3416     12BF  3064               	movlw	100
  3417     12C0  00AC               	movwf	___lwdiv@divisor
  3418     12C1  3000               	movlw	0
  3419     12C2  00AD               	movwf	___lwdiv@divisor+1
  3420     12C3  0863               	movf	fround@prec,w
  3421     12C4  00D4               	movwf	??_fround
  3422     12C5  01D5               	clrf	??_fround+1
  3423     12C6  0854               	movf	??_fround,w
  3424     12C7  00AE               	movwf	___lwdiv@dividend
  3425     12C8  0855               	movf	??_fround+1,w
  3426     12C9  00AF               	movwf	___lwdiv@dividend+1
  3427     12CA  160A  158A  21F0  160A  118A  	fcall	___lwdiv
  3428     12CF  1283               	bcf	3,5	;RP0=0, select bank0
  3429     12D0  1303               	bcf	3,6	;RP1=0, select bank0
  3430     12D1  082C               	movf	?___lwdiv,w
  3431     12D2  00D6               	movwf	??_fround+2
  3432     12D3  3001               	movlw	1
  3433     12D4                     u4475:
  3434     12D4  1003               	clrc
  3435     12D5  0DD6               	rlf	??_fround+2,f
  3436     12D6  3EFF               	addlw	-1
  3437     12D7  1D03               	skipz
  3438     12D8  2AD4               	goto	u4475
  3439     12D9  1003               	clrc
  3440     12DA  0D56               	rlf	??_fround+2,w
  3441     12DB  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3442     12DC  0084               	movwf	4
  3443     12DD  160A  118A  200A  160A  118A  	fcall	stringdir
  3444     12E2  00D7               	movwf	??_fround+3
  3445     12E3  160A  118A  200A  160A  118A  	fcall	stringdir
  3446     12E8  00D8               	movwf	??_fround+4
  3447     12E9  160A  118A  200A  160A  118A  	fcall	stringdir
  3448     12EE  00D9               	movwf	??_fround+5
  3449     12EF  160A  118A  200A  160A  118A  	fcall	stringdir
  3450     12F4  00DA               	movwf	??_fround+6
  3451     12F5  085A               	movf	??_fround+6,w
  3452     12F6  00BD               	movwf	___flmul@a+3
  3453     12F7  0859               	movf	??_fround+5,w
  3454     12F8  00BC               	movwf	___flmul@a+2
  3455     12F9  0858               	movf	??_fround+4,w
  3456     12FA  00BB               	movwf	___flmul@a+1
  3457     12FB  0857               	movf	??_fround+3,w
  3458     12FC  00BA               	movwf	___flmul@a
  3459     12FD  160A  118A  24BB  160A  118A  	fcall	___flmul
  3460     1302  1283               	bcf	3,5	;RP0=0, select bank0
  3461     1303  1303               	bcf	3,6	;RP1=0, select bank0
  3462     1304  0839               	movf	?___flmul+3,w
  3463     1305  00E2               	movwf	_fround$1202+3
  3464     1306  0838               	movf	?___flmul+2,w
  3465     1307  00E1               	movwf	_fround$1202+2
  3466     1308  0837               	movf	?___flmul+1,w
  3467     1309  00E0               	movwf	_fround$1202+1
  3468     130A  0836               	movf	?___flmul,w
  3469     130B  00DF               	movwf	_fround$1202
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3472     130C  300A               	movlw	10
  3473     130D  00AC               	movwf	___lwdiv@divisor
  3474     130E  3000               	movlw	0
  3475     130F  00AD               	movwf	___lwdiv@divisor+1
  3476     1310  0863               	movf	fround@prec,w
  3477     1311  00D4               	movwf	??_fround
  3478     1312  01D5               	clrf	??_fround+1
  3479     1313  0854               	movf	??_fround,w
  3480     1314  00A8               	movwf	___lwmod@dividend
  3481     1315  0855               	movf	??_fround+1,w
  3482     1316  00A9               	movwf	___lwmod@dividend+1
  3483     1317  3064               	movlw	100
  3484     1318  00A6               	movwf	___lwmod@divisor
  3485     1319  3000               	movlw	0
  3486     131A  00A7               	movwf	___lwmod@divisor+1
  3487     131B  120A  158A  2002  160A  118A  	fcall	___lwmod
  3488     1320  1283               	bcf	3,5	;RP0=0, select bank0
  3489     1321  1303               	bcf	3,6	;RP1=0, select bank0
  3490     1322  0827               	movf	?___lwmod+1,w
  3491     1323  00AF               	movwf	___lwdiv@dividend+1
  3492     1324  0826               	movf	?___lwmod,w
  3493     1325  00AE               	movwf	___lwdiv@dividend
  3494     1326  160A  158A  21F0  160A  118A  	fcall	___lwdiv
  3495     132B  1283               	bcf	3,5	;RP0=0, select bank0
  3496     132C  1303               	bcf	3,6	;RP1=0, select bank0
  3497     132D  082C               	movf	?___lwdiv,w
  3498     132E  00D6               	movwf	??_fround+2
  3499     132F  3001               	movlw	1
  3500     1330                     u4485:
  3501     1330  1003               	clrc
  3502     1331  0DD6               	rlf	??_fround+2,f
  3503     1332  3EFF               	addlw	-1
  3504     1333  1D03               	skipz
  3505     1334  2B30               	goto	u4485
  3506     1335  1003               	clrc
  3507     1336  0D56               	rlf	??_fround+2,w
  3508     1337  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3509     1338  0084               	movwf	4
  3510     1339  160A  118A  200A  160A  118A  	fcall	stringdir
  3511     133E  00D7               	movwf	??_fround+3
  3512     133F  160A  118A  200A  160A  118A  	fcall	stringdir
  3513     1344  00D8               	movwf	??_fround+4
  3514     1345  160A  118A  200A  160A  118A  	fcall	stringdir
  3515     134A  00D9               	movwf	??_fround+5
  3516     134B  160A  118A  200A  160A  118A  	fcall	stringdir
  3517     1350  00DA               	movwf	??_fround+6
  3518     1351  085A               	movf	??_fround+6,w
  3519     1352  00B9               	movwf	___flmul@b+3
  3520     1353  0859               	movf	??_fround+5,w
  3521     1354  00B8               	movwf	___flmul@b+2
  3522     1355  0858               	movf	??_fround+4,w
  3523     1356  00B7               	movwf	___flmul@b+1
  3524     1357  0857               	movf	??_fround+3,w
  3525     1358  00B6               	movwf	___flmul@b
  3526     1359  0862               	movf	_fround$1202+3,w
  3527     135A  00BD               	movwf	___flmul@a+3
  3528     135B  0861               	movf	_fround$1202+2,w
  3529     135C  00BC               	movwf	___flmul@a+2
  3530     135D  0860               	movf	_fround$1202+1,w
  3531     135E  00BB               	movwf	___flmul@a+1
  3532     135F  085F               	movf	_fround$1202,w
  3533     1360  00BA               	movwf	___flmul@a
  3534     1361  160A  118A  24BB  160A  118A  	fcall	___flmul
  3535     1366  1283               	bcf	3,5	;RP0=0, select bank0
  3536     1367  1303               	bcf	3,6	;RP1=0, select bank0
  3537     1368  0839               	movf	?___flmul+3,w
  3538     1369  00DE               	movwf	_fround$1203+3
  3539     136A  0838               	movf	?___flmul+2,w
  3540     136B  00DD               	movwf	_fround$1203+2
  3541     136C  0837               	movf	?___flmul+1,w
  3542     136D  00DC               	movwf	_fround$1203+1
  3543     136E  0836               	movf	?___flmul,w
  3544     136F  00DB               	movwf	_fround$1203
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3547     1370  300A               	movlw	10
  3548     1371  00A6               	movwf	___lwmod@divisor
  3549     1372  3000               	movlw	0
  3550     1373  00A7               	movwf	___lwmod@divisor+1
  3551     1374  0863               	movf	fround@prec,w
  3552     1375  00D4               	movwf	??_fround
  3553     1376  01D5               	clrf	??_fround+1
  3554     1377  0854               	movf	??_fround,w
  3555     1378  00A8               	movwf	___lwmod@dividend
  3556     1379  0855               	movf	??_fround+1,w
  3557     137A  00A9               	movwf	___lwmod@dividend+1
  3558     137B  120A  158A  2002  160A  118A  	fcall	___lwmod
  3559     1380  1283               	bcf	3,5	;RP0=0, select bank0
  3560     1381  1303               	bcf	3,6	;RP1=0, select bank0
  3561     1382  0826               	movf	?___lwmod,w
  3562     1383  00D6               	movwf	??_fround+2
  3563     1384  3001               	movlw	1
  3564     1385                     u4495:
  3565     1385  1003               	clrc
  3566     1386  0DD6               	rlf	??_fround+2,f
  3567     1387  3EFF               	addlw	-1
  3568     1388  1D03               	skipz
  3569     1389  2B85               	goto	u4495
  3570     138A  1003               	clrc
  3571     138B  0D56               	rlf	??_fround+2,w
  3572     138C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3573     138D  0084               	movwf	4
  3574     138E  160A  118A  200A  160A  118A  	fcall	stringdir
  3575     1393  00D7               	movwf	??_fround+3
  3576     1394  160A  118A  200A  160A  118A  	fcall	stringdir
  3577     1399  00D8               	movwf	??_fround+4
  3578     139A  160A  118A  200A  160A  118A  	fcall	stringdir
  3579     139F  00D9               	movwf	??_fround+5
  3580     13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  3581     13A5  00DA               	movwf	??_fround+6
  3582     13A6  085A               	movf	??_fround+6,w
  3583     13A7  00B9               	movwf	___flmul@b+3
  3584     13A8  0859               	movf	??_fround+5,w
  3585     13A9  00B8               	movwf	___flmul@b+2
  3586     13AA  0858               	movf	??_fround+4,w
  3587     13AB  00B7               	movwf	___flmul@b+1
  3588     13AC  0857               	movf	??_fround+3,w
  3589     13AD  00B6               	movwf	___flmul@b
  3590     13AE  085E               	movf	_fround$1203+3,w
  3591     13AF  00BD               	movwf	___flmul@a+3
  3592     13B0  085D               	movf	_fround$1203+2,w
  3593     13B1  00BC               	movwf	___flmul@a+2
  3594     13B2  085C               	movf	_fround$1203+1,w
  3595     13B3  00BB               	movwf	___flmul@a+1
  3596     13B4  085B               	movf	_fround$1203,w
  3597     13B5  00BA               	movwf	___flmul@a
  3598     13B6  160A  118A  24BB  160A  118A  	fcall	___flmul
  3599     13BB  1283               	bcf	3,5	;RP0=0, select bank0
  3600     13BC  1303               	bcf	3,6	;RP1=0, select bank0
  3601     13BD  0839               	movf	?___flmul+3,w
  3602     13BE  00D3               	movwf	?_fround+3
  3603     13BF  0838               	movf	?___flmul+2,w
  3604     13C0  00D2               	movwf	?_fround+2
  3605     13C1  0837               	movf	?___flmul+1,w
  3606     13C2  00D1               	movwf	?_fround+1
  3607     13C3  0836               	movf	?___flmul,w
  3608     13C4  00D0               	movwf	?_fround
  3609     13C5  2CBA               	goto	l352
  3610     13C6                     l3075:
  3611     13C6  300B               	movlw	11
  3612     13C7  0263               	subwf	fround@prec,w
  3613     13C8  1C03               	skipc
  3614     13C9  2BCB               	goto	u4501
  3615     13CA  2BCC               	goto	u4500
  3616     13CB                     u4501:
  3617     13CB  2C77               	goto	l3081
  3618     13CC                     u4500:
  3619     13CC                     l3077:
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3622     13CC  303F               	movlw	63
  3623     13CD  00B9               	movwf	___flmul@b+3
  3624     13CE  3000               	movlw	0
  3625     13CF  00B8               	movwf	___flmul@b+2
  3626     13D0  3000               	movlw	0
  3627     13D1  00B7               	movwf	___flmul@b+1
  3628     13D2  3000               	movlw	0
  3629     13D3  00B6               	movwf	___flmul@b
  3630     13D4  300A               	movlw	10
  3631     13D5  00AC               	movwf	___lwdiv@divisor
  3632     13D6  3000               	movlw	0
  3633     13D7  00AD               	movwf	___lwdiv@divisor+1
  3634     13D8  0863               	movf	fround@prec,w
  3635     13D9  00D4               	movwf	??_fround
  3636     13DA  01D5               	clrf	??_fround+1
  3637     13DB  0854               	movf	??_fround,w
  3638     13DC  00AE               	movwf	___lwdiv@dividend
  3639     13DD  0855               	movf	??_fround+1,w
  3640     13DE  00AF               	movwf	___lwdiv@dividend+1
  3641     13DF  160A  158A  21F0  160A  118A  	fcall	___lwdiv
  3642     13E4  1283               	bcf	3,5	;RP0=0, select bank0
  3643     13E5  1303               	bcf	3,6	;RP1=0, select bank0
  3644     13E6  082C               	movf	?___lwdiv,w
  3645     13E7  00D6               	movwf	??_fround+2
  3646     13E8  3001               	movlw	1
  3647     13E9                     u4515:
  3648     13E9  1003               	clrc
  3649     13EA  0DD6               	rlf	??_fround+2,f
  3650     13EB  3EFF               	addlw	-1
  3651     13EC  1D03               	skipz
  3652     13ED  2BE9               	goto	u4515
  3653     13EE  1003               	clrc
  3654     13EF  0D56               	rlf	??_fround+2,w
  3655     13F0  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3656     13F1  0084               	movwf	4
  3657     13F2  160A  118A  200A  160A  118A  	fcall	stringdir
  3658     13F7  00D7               	movwf	??_fround+3
  3659     13F8  160A  118A  200A  160A  118A  	fcall	stringdir
  3660     13FD  00D8               	movwf	??_fround+4
  3661     13FE  160A  118A  200A  160A  118A  	fcall	stringdir
  3662     1403  00D9               	movwf	??_fround+5
  3663     1404  160A  118A  200A  160A  118A  	fcall	stringdir
  3664     1409  00DA               	movwf	??_fround+6
  3665     140A  085A               	movf	??_fround+6,w
  3666     140B  00BD               	movwf	___flmul@a+3
  3667     140C  0859               	movf	??_fround+5,w
  3668     140D  00BC               	movwf	___flmul@a+2
  3669     140E  0858               	movf	??_fround+4,w
  3670     140F  00BB               	movwf	___flmul@a+1
  3671     1410  0857               	movf	??_fround+3,w
  3672     1411  00BA               	movwf	___flmul@a
  3673     1412  160A  118A  24BB  160A  118A  	fcall	___flmul
  3674     1417  1283               	bcf	3,5	;RP0=0, select bank0
  3675     1418  1303               	bcf	3,6	;RP1=0, select bank0
  3676     1419  0839               	movf	?___flmul+3,w
  3677     141A  00E2               	movwf	_fround$1202+3
  3678     141B  0838               	movf	?___flmul+2,w
  3679     141C  00E1               	movwf	_fround$1202+2
  3680     141D  0837               	movf	?___flmul+1,w
  3681     141E  00E0               	movwf	_fround$1202+1
  3682     141F  0836               	movf	?___flmul,w
  3683     1420  00DF               	movwf	_fround$1202
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3686     1421  300A               	movlw	10
  3687     1422  00A6               	movwf	___lwmod@divisor
  3688     1423  3000               	movlw	0
  3689     1424  00A7               	movwf	___lwmod@divisor+1
  3690     1425  0863               	movf	fround@prec,w
  3691     1426  00D4               	movwf	??_fround
  3692     1427  01D5               	clrf	??_fround+1
  3693     1428  0854               	movf	??_fround,w
  3694     1429  00A8               	movwf	___lwmod@dividend
  3695     142A  0855               	movf	??_fround+1,w
  3696     142B  00A9               	movwf	___lwmod@dividend+1
  3697     142C  120A  158A  2002  160A  118A  	fcall	___lwmod
  3698     1431  1283               	bcf	3,5	;RP0=0, select bank0
  3699     1432  1303               	bcf	3,6	;RP1=0, select bank0
  3700     1433  0826               	movf	?___lwmod,w
  3701     1434  00D6               	movwf	??_fround+2
  3702     1435  3001               	movlw	1
  3703     1436                     u4525:
  3704     1436  1003               	clrc
  3705     1437  0DD6               	rlf	??_fround+2,f
  3706     1438  3EFF               	addlw	-1
  3707     1439  1D03               	skipz
  3708     143A  2C36               	goto	u4525
  3709     143B  1003               	clrc
  3710     143C  0D56               	rlf	??_fround+2,w
  3711     143D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3712     143E  0084               	movwf	4
  3713     143F  160A  118A  200A  160A  118A  	fcall	stringdir
  3714     1444  00D7               	movwf	??_fround+3
  3715     1445  160A  118A  200A  160A  118A  	fcall	stringdir
  3716     144A  00D8               	movwf	??_fround+4
  3717     144B  160A  118A  200A  160A  118A  	fcall	stringdir
  3718     1450  00D9               	movwf	??_fround+5
  3719     1451  160A  118A  200A  160A  118A  	fcall	stringdir
  3720     1456  00DA               	movwf	??_fround+6
  3721     1457  085A               	movf	??_fround+6,w
  3722     1458  00B9               	movwf	___flmul@b+3
  3723     1459  0859               	movf	??_fround+5,w
  3724     145A  00B8               	movwf	___flmul@b+2
  3725     145B  0858               	movf	??_fround+4,w
  3726     145C  00B7               	movwf	___flmul@b+1
  3727     145D  0857               	movf	??_fround+3,w
  3728     145E  00B6               	movwf	___flmul@b
  3729     145F  0862               	movf	_fround$1202+3,w
  3730     1460  00BD               	movwf	___flmul@a+3
  3731     1461  0861               	movf	_fround$1202+2,w
  3732     1462  00BC               	movwf	___flmul@a+2
  3733     1463  0860               	movf	_fround$1202+1,w
  3734     1464  00BB               	movwf	___flmul@a+1
  3735     1465  085F               	movf	_fround$1202,w
  3736     1466  00BA               	movwf	___flmul@a
  3737     1467  160A  118A  24BB  160A  118A  	fcall	___flmul
  3738     146C  1283               	bcf	3,5	;RP0=0, select bank0
  3739     146D  1303               	bcf	3,6	;RP1=0, select bank0
  3740     146E  0839               	movf	?___flmul+3,w
  3741     146F  00D3               	movwf	?_fround+3
  3742     1470  0838               	movf	?___flmul+2,w
  3743     1471  00D2               	movwf	?_fround+2
  3744     1472  0837               	movf	?___flmul+1,w
  3745     1473  00D1               	movwf	?_fround+1
  3746     1474  0836               	movf	?___flmul,w
  3747     1475  00D0               	movwf	?_fround
  3748     1476  2CBA               	goto	l352
  3749     1477                     l3081:
  3750                           
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3752     1477  303F               	movlw	63
  3753     1478  00B9               	movwf	___flmul@b+3
  3754     1479  3000               	movlw	0
  3755     147A  00B8               	movwf	___flmul@b+2
  3756     147B  3000               	movlw	0
  3757     147C  00B7               	movwf	___flmul@b+1
  3758     147D  3000               	movlw	0
  3759     147E  00B6               	movwf	___flmul@b
  3760     147F  0863               	movf	fround@prec,w
  3761     1480  00D4               	movwf	??_fround
  3762     1481  3001               	movlw	1
  3763     1482                     u4535:
  3764     1482  1003               	clrc
  3765     1483  0DD4               	rlf	??_fround,f
  3766     1484  3EFF               	addlw	-1
  3767     1485  1D03               	skipz
  3768     1486  2C82               	goto	u4535
  3769     1487  1003               	clrc
  3770     1488  0D54               	rlf	??_fround,w
  3771     1489  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3772     148A  0084               	movwf	4
  3773     148B  160A  118A  200A  160A  118A  	fcall	stringdir
  3774     1490  00D5               	movwf	??_fround+1
  3775     1491  160A  118A  200A  160A  118A  	fcall	stringdir
  3776     1496  00D6               	movwf	??_fround+2
  3777     1497  160A  118A  200A  160A  118A  	fcall	stringdir
  3778     149C  00D7               	movwf	??_fround+3
  3779     149D  160A  118A  200A  160A  118A  	fcall	stringdir
  3780     14A2  00D8               	movwf	??_fround+4
  3781     14A3  0858               	movf	??_fround+4,w
  3782     14A4  00BD               	movwf	___flmul@a+3
  3783     14A5  0857               	movf	??_fround+3,w
  3784     14A6  00BC               	movwf	___flmul@a+2
  3785     14A7  0856               	movf	??_fround+2,w
  3786     14A8  00BB               	movwf	___flmul@a+1
  3787     14A9  0855               	movf	??_fround+1,w
  3788     14AA  00BA               	movwf	___flmul@a
  3789     14AB  160A  118A  24BB  160A  118A  	fcall	___flmul
  3790     14B0  1283               	bcf	3,5	;RP0=0, select bank0
  3791     14B1  1303               	bcf	3,6	;RP1=0, select bank0
  3792     14B2  0839               	movf	?___flmul+3,w
  3793     14B3  00D3               	movwf	?_fround+3
  3794     14B4  0838               	movf	?___flmul+2,w
  3795     14B5  00D2               	movwf	?_fround+2
  3796     14B6  0837               	movf	?___flmul+1,w
  3797     14B7  00D1               	movwf	?_fround+1
  3798     14B8  0836               	movf	?___flmul,w
  3799     14B9  00D0               	movwf	?_fround
  3800     14BA                     l352:
  3801     14BA  0008               	return
  3802     14BB                     __end_of_fround:
  3803                           
  3804                           	psect	text7
  3805     0802                     __ptext7:	
  3806 ;; *************** function ___lwmod *****************
  3807 ;; Defined at:
  3808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  divisor         2    6[BANK0 ] unsigned int 
  3811 ;;  dividend        2    8[BANK0 ] unsigned int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  counter         1   11[BANK0 ] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  2    6[BANK0 ] unsigned int 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3823 ;;      Params:         0       4       0       0       0
  3824 ;;      Locals:         0       1       0       0       0
  3825 ;;      Temps:          0       1       0       0       0
  3826 ;;      Totals:         0       6       0       0       0
  3827 ;;Total ram usage:        6 bytes
  3828 ;; Hardware stack levels used: 1
  3829 ;; Hardware stack levels required when called: 2
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_fround
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837     0802                     ___lwmod:	
  3838                           ;psect for function ___lwmod
  3839                           
  3840     0802                     l2707:	
  3841                           ;incstack = 0
  3842                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3843                           
  3844     0802  1283               	bcf	3,5	;RP0=0, select bank0
  3845     0803  1303               	bcf	3,6	;RP1=0, select bank0
  3846     0804  0826               	movf	___lwmod@divisor,w
  3847     0805  0427               	iorwf	___lwmod@divisor+1,w
  3848     0806  1903               	btfsc	3,2
  3849     0807  2809               	goto	u3561
  3850     0808  280A               	goto	u3560
  3851     0809                     u3561:
  3852     0809  2839               	goto	l2725
  3853     080A                     u3560:
  3854     080A                     l2709:
  3855     080A  01AB               	clrf	___lwmod@counter
  3856     080B  0AAB               	incf	___lwmod@counter,f
  3857     080C  2818               	goto	l2715
  3858     080D                     l2711:
  3859     080D  3001               	movlw	1
  3860     080E                     u3575:
  3861     080E  1003               	clrc
  3862     080F  0DA6               	rlf	___lwmod@divisor,f
  3863     0810  0DA7               	rlf	___lwmod@divisor+1,f
  3864     0811  3EFF               	addlw	-1
  3865     0812  1D03               	skipz
  3866     0813  280E               	goto	u3575
  3867     0814                     l2713:
  3868     0814  3001               	movlw	1
  3869     0815  00AA               	movwf	??___lwmod
  3870     0816  082A               	movf	??___lwmod,w
  3871     0817  07AB               	addwf	___lwmod@counter,f
  3872     0818                     l2715:
  3873     0818  1FA7               	btfss	___lwmod@divisor+1,7
  3874     0819  281B               	goto	u3581
  3875     081A  281C               	goto	u3580
  3876     081B                     u3581:
  3877     081B  280D               	goto	l2711
  3878     081C                     u3580:
  3879     081C                     l2717:
  3880     081C  0827               	movf	___lwmod@divisor+1,w
  3881     081D  0229               	subwf	___lwmod@dividend+1,w
  3882     081E  1D03               	skipz
  3883     081F  2822               	goto	u3595
  3884     0820  0826               	movf	___lwmod@divisor,w
  3885     0821  0228               	subwf	___lwmod@dividend,w
  3886     0822                     u3595:
  3887     0822  1C03               	skipc
  3888     0823  2825               	goto	u3591
  3889     0824  2826               	goto	u3590
  3890     0825                     u3591:
  3891     0825  282C               	goto	l2721
  3892     0826                     u3590:
  3893     0826                     l2719:
  3894     0826  0826               	movf	___lwmod@divisor,w
  3895     0827  02A8               	subwf	___lwmod@dividend,f
  3896     0828  0827               	movf	___lwmod@divisor+1,w
  3897     0829  1C03               	skipc
  3898     082A  03A9               	decf	___lwmod@dividend+1,f
  3899     082B  02A9               	subwf	___lwmod@dividend+1,f
  3900     082C                     l2721:
  3901     082C  3001               	movlw	1
  3902     082D                     u3605:
  3903     082D  1003               	clrc
  3904     082E  0CA7               	rrf	___lwmod@divisor+1,f
  3905     082F  0CA6               	rrf	___lwmod@divisor,f
  3906     0830  3EFF               	addlw	-1
  3907     0831  1D03               	skipz
  3908     0832  282D               	goto	u3605
  3909     0833                     l2723:
  3910     0833  3001               	movlw	1
  3911     0834  02AB               	subwf	___lwmod@counter,f
  3912     0835  1D03               	btfss	3,2
  3913     0836  2838               	goto	u3611
  3914     0837  2839               	goto	u3610
  3915     0838                     u3611:
  3916     0838  281C               	goto	l2717
  3917     0839                     u3610:
  3918     0839                     l2725:
  3919     0839  0829               	movf	___lwmod@dividend+1,w
  3920     083A  00A7               	movwf	?___lwmod+1
  3921     083B  0828               	movf	___lwmod@dividend,w
  3922     083C  00A6               	movwf	?___lwmod
  3923     083D                     l774:
  3924     083D  0008               	return
  3925     083E                     __end_of___lwmod:
  3926                           
  3927                           	psect	text8
  3928     14BB                     __ptext8:	
  3929 ;; *************** function ___flmul *****************
  3930 ;; Defined at:
  3931 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  b               4   22[BANK0 ] unsigned int 
  3934 ;;  a               4   26[BANK0 ] unsigned int 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  prod            4   42[BANK0 ] struct .
  3937 ;;  grs             4   36[BANK0 ] unsigned long 
  3938 ;;  temp            2   46[BANK0 ] struct .
  3939 ;;  bexp            1   41[BANK0 ] unsigned char 
  3940 ;;  aexp            1   40[BANK0 ] unsigned char 
  3941 ;;  sign            1   35[BANK0 ] unsigned char 
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  4   22[BANK0 ] unsigned char 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3951 ;;      Params:         0       8       0       0       0
  3952 ;;      Locals:         0      13       0       0       0
  3953 ;;      Temps:          0       5       0       0       0
  3954 ;;      Totals:         0      26       0       0       0
  3955 ;;Total ram usage:       26 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 3
  3958 ;; This function calls:
  3959 ;;		__Umul8_16
  3960 ;; This function is called by:
  3961 ;;		_fround
  3962 ;;		_scale
  3963 ;;		_sprintf
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967     14BB                     ___flmul:	
  3968                           ;psect for function ___flmul
  3969                           
  3970     14BB                     l2923:	
  3971                           ;incstack = 0
  3972                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3973                           
  3974     14BB  1283               	bcf	3,5	;RP0=0, select bank0
  3975     14BC  1303               	bcf	3,6	;RP1=0, select bank0
  3976     14BD  0839               	movf	___flmul@b+3,w
  3977     14BE  3980               	andlw	128
  3978     14BF  00C3               	movwf	___flmul@sign
  3979     14C0                     l2925:
  3980     14C0  0839               	movf	___flmul@b+3,w
  3981     14C1  00BE               	movwf	??___flmul
  3982     14C2  073E               	addwf	??___flmul,w
  3983     14C3  00C9               	movwf	___flmul@bexp
  3984     14C4                     l2927:
  3985     14C4  1FB8               	btfss	___flmul@b+2,7
  3986     14C5  2CC7               	goto	u4081
  3987     14C6  2CC8               	goto	u4080
  3988     14C7                     u4081:
  3989     14C7  2CC9               	goto	l2931
  3990     14C8                     u4080:
  3991     14C8                     l2929:
  3992     14C8  1449               	bsf	___flmul@bexp,0
  3993     14C9                     l2931:
  3994     14C9  0849               	movf	___flmul@bexp,w
  3995     14CA  1903               	btfsc	3,2
  3996     14CB  2CCD               	goto	u4091
  3997     14CC  2CCE               	goto	u4090
  3998     14CD                     u4091:
  3999     14CD  2CDD               	goto	l2939
  4000     14CE                     u4090:
  4001     14CE                     l2933:
  4002     14CE  0A49               	incf	___flmul@bexp,w
  4003     14CF  1D03               	btfss	3,2
  4004     14D0  2CD2               	goto	u4101
  4005     14D1  2CD3               	goto	u4100
  4006     14D2                     u4101:
  4007     14D2  2CDB               	goto	l2937
  4008     14D3                     u4100:
  4009     14D3                     l2935:
  4010     14D3  3000               	movlw	0
  4011     14D4  00B9               	movwf	___flmul@b+3
  4012     14D5  3000               	movlw	0
  4013     14D6  00B8               	movwf	___flmul@b+2
  4014     14D7  3000               	movlw	0
  4015     14D8  00B7               	movwf	___flmul@b+1
  4016     14D9  3000               	movlw	0
  4017     14DA  00B6               	movwf	___flmul@b
  4018     14DB                     l2937:
  4019     14DB  17B8               	bsf	___flmul@b+2,7
  4020     14DC  2CE5               	goto	l2941
  4021     14DD                     l2939:
  4022     14DD  3000               	movlw	0
  4023     14DE  00B9               	movwf	___flmul@b+3
  4024     14DF  3000               	movlw	0
  4025     14E0  00B8               	movwf	___flmul@b+2
  4026     14E1  3000               	movlw	0
  4027     14E2  00B7               	movwf	___flmul@b+1
  4028     14E3  3000               	movlw	0
  4029     14E4  00B6               	movwf	___flmul@b
  4030     14E5                     l2941:
  4031     14E5  083D               	movf	___flmul@a+3,w
  4032     14E6  3980               	andlw	128
  4033     14E7  00BE               	movwf	??___flmul
  4034     14E8  083E               	movf	??___flmul,w
  4035     14E9  06C3               	xorwf	___flmul@sign,f
  4036     14EA                     l2943:
  4037     14EA  083D               	movf	___flmul@a+3,w
  4038     14EB  00BE               	movwf	??___flmul
  4039     14EC  073E               	addwf	??___flmul,w
  4040     14ED  00C8               	movwf	___flmul@aexp
  4041     14EE                     l2945:
  4042     14EE  1FBC               	btfss	___flmul@a+2,7
  4043     14EF  2CF1               	goto	u4111
  4044     14F0  2CF2               	goto	u4110
  4045     14F1                     u4111:
  4046     14F1  2CF3               	goto	l2949
  4047     14F2                     u4110:
  4048     14F2                     l2947:
  4049     14F2  1448               	bsf	___flmul@aexp,0
  4050     14F3                     l2949:
  4051     14F3  0848               	movf	___flmul@aexp,w
  4052     14F4  1903               	btfsc	3,2
  4053     14F5  2CF7               	goto	u4121
  4054     14F6  2CF8               	goto	u4120
  4055     14F7                     u4121:
  4056     14F7  2D07               	goto	l2957
  4057     14F8                     u4120:
  4058     14F8                     l2951:
  4059     14F8  0A48               	incf	___flmul@aexp,w
  4060     14F9  1D03               	btfss	3,2
  4061     14FA  2CFC               	goto	u4131
  4062     14FB  2CFD               	goto	u4130
  4063     14FC                     u4131:
  4064     14FC  2D05               	goto	l2955
  4065     14FD                     u4130:
  4066     14FD                     l2953:
  4067     14FD  3000               	movlw	0
  4068     14FE  00BD               	movwf	___flmul@a+3
  4069     14FF  3000               	movlw	0
  4070     1500  00BC               	movwf	___flmul@a+2
  4071     1501  3000               	movlw	0
  4072     1502  00BB               	movwf	___flmul@a+1
  4073     1503  3000               	movlw	0
  4074     1504  00BA               	movwf	___flmul@a
  4075     1505                     l2955:
  4076     1505  17BC               	bsf	___flmul@a+2,7
  4077     1506  2D0F               	goto	l2959
  4078     1507                     l2957:
  4079     1507  3000               	movlw	0
  4080     1508  00BD               	movwf	___flmul@a+3
  4081     1509  3000               	movlw	0
  4082     150A  00BC               	movwf	___flmul@a+2
  4083     150B  3000               	movlw	0
  4084     150C  00BB               	movwf	___flmul@a+1
  4085     150D  3000               	movlw	0
  4086     150E  00BA               	movwf	___flmul@a
  4087     150F                     l2959:
  4088     150F  0848               	movf	___flmul@aexp,w
  4089     1510  1903               	btfsc	3,2
  4090     1511  2D13               	goto	u4141
  4091     1512  2D14               	goto	u4140
  4092     1513                     u4141:
  4093     1513  2D19               	goto	l2963
  4094     1514                     u4140:
  4095     1514                     l2961:
  4096     1514  0849               	movf	___flmul@bexp,w
  4097     1515  1D03               	btfss	3,2
  4098     1516  2D18               	goto	u4151
  4099     1517  2D19               	goto	u4150
  4100     1518                     u4151:
  4101     1518  2D22               	goto	l2967
  4102     1519                     u4150:
  4103     1519                     l2963:
  4104     1519  3000               	movlw	0
  4105     151A  00B9               	movwf	?___flmul+3
  4106     151B  3000               	movlw	0
  4107     151C  00B8               	movwf	?___flmul+2
  4108     151D  3000               	movlw	0
  4109     151E  00B7               	movwf	?___flmul+1
  4110     151F  3000               	movlw	0
  4111     1520  00B6               	movwf	?___flmul
  4112     1521  2FFF               	goto	l881
  4113     1522                     l2967:
  4114     1522  0836               	movf	___flmul@b,w
  4115     1523  00A6               	movwf	__Umul8_16@multiplicand
  4116     1524  083C               	movf	___flmul@a+2,w
  4117     1525  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4118     152A  1283               	bcf	3,5	;RP0=0, select bank0
  4119     152B  1303               	bcf	3,6	;RP1=0, select bank0
  4120     152C  0827               	movf	?__Umul8_16+1,w
  4121     152D  00CF               	movwf	___flmul@temp+1
  4122     152E  0826               	movf	?__Umul8_16,w
  4123     152F  00CE               	movwf	___flmul@temp
  4124     1530                     l2969:
  4125     1530  084E               	movf	___flmul@temp,w
  4126     1531  00BE               	movwf	??___flmul
  4127     1532  01BF               	clrf	??___flmul+1
  4128     1533  01C0               	clrf	??___flmul+2
  4129     1534  01C1               	clrf	??___flmul+3
  4130     1535  0841               	movf	??___flmul+3,w
  4131     1536  00C7               	movwf	___flmul@grs+3
  4132     1537  0840               	movf	??___flmul+2,w
  4133     1538  00C6               	movwf	___flmul@grs+2
  4134     1539  083F               	movf	??___flmul+1,w
  4135     153A  00C5               	movwf	___flmul@grs+1
  4136     153B  083E               	movf	??___flmul,w
  4137     153C  00C4               	movwf	___flmul@grs
  4138     153D                     l2971:
  4139     153D  084F               	movf	___flmul@temp+1,w
  4140     153E  00BE               	movwf	??___flmul
  4141     153F  01BF               	clrf	??___flmul+1
  4142     1540  01C0               	clrf	??___flmul+2
  4143     1541  01C1               	clrf	??___flmul+3
  4144     1542  0841               	movf	??___flmul+3,w
  4145     1543  00CD               	movwf	___flmul@prod+3
  4146     1544  0840               	movf	??___flmul+2,w
  4147     1545  00CC               	movwf	___flmul@prod+2
  4148     1546  083F               	movf	??___flmul+1,w
  4149     1547  00CB               	movwf	___flmul@prod+1
  4150     1548  083E               	movf	??___flmul,w
  4151     1549  00CA               	movwf	___flmul@prod
  4152     154A  0837               	movf	___flmul@b+1,w
  4153     154B  00A6               	movwf	__Umul8_16@multiplicand
  4154     154C  083B               	movf	___flmul@a+1,w
  4155     154D  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4156     1552  1283               	bcf	3,5	;RP0=0, select bank0
  4157     1553  1303               	bcf	3,6	;RP1=0, select bank0
  4158     1554  0827               	movf	?__Umul8_16+1,w
  4159     1555  00CF               	movwf	___flmul@temp+1
  4160     1556  0826               	movf	?__Umul8_16,w
  4161     1557  00CE               	movwf	___flmul@temp
  4162     1558                     l2973:
  4163     1558  084E               	movf	___flmul@temp,w
  4164     1559  00BE               	movwf	??___flmul
  4165     155A  01BF               	clrf	??___flmul+1
  4166     155B  01C0               	clrf	??___flmul+2
  4167     155C  01C1               	clrf	??___flmul+3
  4168     155D  083E               	movf	??___flmul,w
  4169     155E  07C4               	addwf	___flmul@grs,f
  4170     155F  083F               	movf	??___flmul+1,w
  4171     1560  1103               	clrz
  4172     1561  1803               	skipnc
  4173     1562  3E01               	addlw	1
  4174     1563  1903               	skipnz
  4175     1564  2D66               	goto	u4161
  4176     1565  07C5               	addwf	___flmul@grs+1,f
  4177     1566                     u4161:
  4178     1566  0840               	movf	??___flmul+2,w
  4179     1567  1103               	clrz
  4180     1568  1803               	skipnc
  4181     1569  3E01               	addlw	1
  4182     156A  1903               	skipnz
  4183     156B  2D6D               	goto	u4162
  4184     156C  07C6               	addwf	___flmul@grs+2,f
  4185     156D                     u4162:
  4186     156D  0841               	movf	??___flmul+3,w
  4187     156E  1103               	clrz
  4188     156F  1803               	skipnc
  4189     1570  3E01               	addlw	1
  4190     1571  1903               	skipnz
  4191     1572  2D74               	goto	u4163
  4192     1573  07C7               	addwf	___flmul@grs+3,f
  4193     1574                     u4163:
  4194     1574                     l2975:
  4195     1574  084F               	movf	___flmul@temp+1,w
  4196     1575  00BE               	movwf	??___flmul
  4197     1576  01BF               	clrf	??___flmul+1
  4198     1577  01C0               	clrf	??___flmul+2
  4199     1578  01C1               	clrf	??___flmul+3
  4200     1579  083E               	movf	??___flmul,w
  4201     157A  07CA               	addwf	___flmul@prod,f
  4202     157B  083F               	movf	??___flmul+1,w
  4203     157C  1103               	clrz
  4204     157D  1803               	skipnc
  4205     157E  3E01               	addlw	1
  4206     157F  1903               	skipnz
  4207     1580  2D82               	goto	u4171
  4208     1581  07CB               	addwf	___flmul@prod+1,f
  4209     1582                     u4171:
  4210     1582  0840               	movf	??___flmul+2,w
  4211     1583  1103               	clrz
  4212     1584  1803               	skipnc
  4213     1585  3E01               	addlw	1
  4214     1586  1903               	skipnz
  4215     1587  2D89               	goto	u4172
  4216     1588  07CC               	addwf	___flmul@prod+2,f
  4217     1589                     u4172:
  4218     1589  0841               	movf	??___flmul+3,w
  4219     158A  1103               	clrz
  4220     158B  1803               	skipnc
  4221     158C  3E01               	addlw	1
  4222     158D  1903               	skipnz
  4223     158E  2D90               	goto	u4173
  4224     158F  07CD               	addwf	___flmul@prod+3,f
  4225     1590                     u4173:
  4226     1590  0838               	movf	___flmul@b+2,w
  4227     1591  00A6               	movwf	__Umul8_16@multiplicand
  4228     1592  083A               	movf	___flmul@a,w
  4229     1593  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4230     1598  1283               	bcf	3,5	;RP0=0, select bank0
  4231     1599  1303               	bcf	3,6	;RP1=0, select bank0
  4232     159A  0827               	movf	?__Umul8_16+1,w
  4233     159B  00CF               	movwf	___flmul@temp+1
  4234     159C  0826               	movf	?__Umul8_16,w
  4235     159D  00CE               	movwf	___flmul@temp
  4236     159E                     l2977:
  4237     159E  084E               	movf	___flmul@temp,w
  4238     159F  00BE               	movwf	??___flmul
  4239     15A0  01BF               	clrf	??___flmul+1
  4240     15A1  01C0               	clrf	??___flmul+2
  4241     15A2  01C1               	clrf	??___flmul+3
  4242     15A3  083E               	movf	??___flmul,w
  4243     15A4  07C4               	addwf	___flmul@grs,f
  4244     15A5  083F               	movf	??___flmul+1,w
  4245     15A6  1103               	clrz
  4246     15A7  1803               	skipnc
  4247     15A8  3E01               	addlw	1
  4248     15A9  1903               	skipnz
  4249     15AA  2DAC               	goto	u4181
  4250     15AB  07C5               	addwf	___flmul@grs+1,f
  4251     15AC                     u4181:
  4252     15AC  0840               	movf	??___flmul+2,w
  4253     15AD  1103               	clrz
  4254     15AE  1803               	skipnc
  4255     15AF  3E01               	addlw	1
  4256     15B0  1903               	skipnz
  4257     15B1  2DB3               	goto	u4182
  4258     15B2  07C6               	addwf	___flmul@grs+2,f
  4259     15B3                     u4182:
  4260     15B3  0841               	movf	??___flmul+3,w
  4261     15B4  1103               	clrz
  4262     15B5  1803               	skipnc
  4263     15B6  3E01               	addlw	1
  4264     15B7  1903               	skipnz
  4265     15B8  2DBA               	goto	u4183
  4266     15B9  07C7               	addwf	___flmul@grs+3,f
  4267     15BA                     u4183:
  4268     15BA                     l2979:
  4269     15BA  084F               	movf	___flmul@temp+1,w
  4270     15BB  00BE               	movwf	??___flmul
  4271     15BC  01BF               	clrf	??___flmul+1
  4272     15BD  01C0               	clrf	??___flmul+2
  4273     15BE  01C1               	clrf	??___flmul+3
  4274     15BF  083E               	movf	??___flmul,w
  4275     15C0  07CA               	addwf	___flmul@prod,f
  4276     15C1  083F               	movf	??___flmul+1,w
  4277     15C2  1103               	clrz
  4278     15C3  1803               	skipnc
  4279     15C4  3E01               	addlw	1
  4280     15C5  1903               	skipnz
  4281     15C6  2DC8               	goto	u4191
  4282     15C7  07CB               	addwf	___flmul@prod+1,f
  4283     15C8                     u4191:
  4284     15C8  0840               	movf	??___flmul+2,w
  4285     15C9  1103               	clrz
  4286     15CA  1803               	skipnc
  4287     15CB  3E01               	addlw	1
  4288     15CC  1903               	skipnz
  4289     15CD  2DCF               	goto	u4192
  4290     15CE  07CC               	addwf	___flmul@prod+2,f
  4291     15CF                     u4192:
  4292     15CF  0841               	movf	??___flmul+3,w
  4293     15D0  1103               	clrz
  4294     15D1  1803               	skipnc
  4295     15D2  3E01               	addlw	1
  4296     15D3  1903               	skipnz
  4297     15D4  2DD6               	goto	u4193
  4298     15D5  07CD               	addwf	___flmul@prod+3,f
  4299     15D6                     u4193:
  4300     15D6                     l2981:
  4301     15D6  3008               	movlw	8
  4302     15D7  00BE               	movwf	??___flmul
  4303     15D8                     u4205:
  4304     15D8  1003               	clrc
  4305     15D9  0DC4               	rlf	___flmul@grs,f
  4306     15DA  0DC5               	rlf	___flmul@grs+1,f
  4307     15DB  0DC6               	rlf	___flmul@grs+2,f
  4308     15DC  0DC7               	rlf	___flmul@grs+3,f
  4309     15DD  0BBE               	decfsz	??___flmul,f
  4310     15DE  2DD8               	goto	u4205
  4311     15DF                     l2983:
  4312     15DF  0837               	movf	___flmul@b+1,w
  4313     15E0  00A6               	movwf	__Umul8_16@multiplicand
  4314     15E1  083A               	movf	___flmul@a,w
  4315     15E2  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4316     15E7  1283               	bcf	3,5	;RP0=0, select bank0
  4317     15E8  1303               	bcf	3,6	;RP1=0, select bank0
  4318     15E9  0827               	movf	?__Umul8_16+1,w
  4319     15EA  00CF               	movwf	___flmul@temp+1
  4320     15EB  0826               	movf	?__Umul8_16,w
  4321     15EC  00CE               	movwf	___flmul@temp
  4322     15ED                     l2985:
  4323     15ED  084E               	movf	___flmul@temp,w
  4324     15EE  00BE               	movwf	??___flmul
  4325     15EF  084F               	movf	___flmul@temp+1,w
  4326     15F0  00BF               	movwf	??___flmul+1
  4327     15F1  01C0               	clrf	??___flmul+2
  4328     15F2  01C1               	clrf	??___flmul+3
  4329     15F3  083E               	movf	??___flmul,w
  4330     15F4  07C4               	addwf	___flmul@grs,f
  4331     15F5  083F               	movf	??___flmul+1,w
  4332     15F6  1103               	clrz
  4333     15F7  1803               	skipnc
  4334     15F8  3E01               	addlw	1
  4335     15F9  1903               	skipnz
  4336     15FA  2DFC               	goto	u4211
  4337     15FB  07C5               	addwf	___flmul@grs+1,f
  4338     15FC                     u4211:
  4339     15FC  0840               	movf	??___flmul+2,w
  4340     15FD  1103               	clrz
  4341     15FE  1803               	skipnc
  4342     15FF  3E01               	addlw	1
  4343     1600  1903               	skipnz
  4344     1601  2E03               	goto	u4212
  4345     1602  07C6               	addwf	___flmul@grs+2,f
  4346     1603                     u4212:
  4347     1603  0841               	movf	??___flmul+3,w
  4348     1604  1103               	clrz
  4349     1605  1803               	skipnc
  4350     1606  3E01               	addlw	1
  4351     1607  1903               	skipnz
  4352     1608  2E0A               	goto	u4213
  4353     1609  07C7               	addwf	___flmul@grs+3,f
  4354     160A                     u4213:
  4355     160A                     l2987:
  4356     160A  0836               	movf	___flmul@b,w
  4357     160B  00A6               	movwf	__Umul8_16@multiplicand
  4358     160C  083B               	movf	___flmul@a+1,w
  4359     160D  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4360     1612  1283               	bcf	3,5	;RP0=0, select bank0
  4361     1613  1303               	bcf	3,6	;RP1=0, select bank0
  4362     1614  0827               	movf	?__Umul8_16+1,w
  4363     1615  00CF               	movwf	___flmul@temp+1
  4364     1616  0826               	movf	?__Umul8_16,w
  4365     1617  00CE               	movwf	___flmul@temp
  4366     1618                     l2989:
  4367     1618  084E               	movf	___flmul@temp,w
  4368     1619  00BE               	movwf	??___flmul
  4369     161A  084F               	movf	___flmul@temp+1,w
  4370     161B  00BF               	movwf	??___flmul+1
  4371     161C  01C0               	clrf	??___flmul+2
  4372     161D  01C1               	clrf	??___flmul+3
  4373     161E  083E               	movf	??___flmul,w
  4374     161F  07C4               	addwf	___flmul@grs,f
  4375     1620  083F               	movf	??___flmul+1,w
  4376     1621  1103               	clrz
  4377     1622  1803               	skipnc
  4378     1623  3E01               	addlw	1
  4379     1624  1903               	skipnz
  4380     1625  2E27               	goto	u4221
  4381     1626  07C5               	addwf	___flmul@grs+1,f
  4382     1627                     u4221:
  4383     1627  0840               	movf	??___flmul+2,w
  4384     1628  1103               	clrz
  4385     1629  1803               	skipnc
  4386     162A  3E01               	addlw	1
  4387     162B  1903               	skipnz
  4388     162C  2E2E               	goto	u4222
  4389     162D  07C6               	addwf	___flmul@grs+2,f
  4390     162E                     u4222:
  4391     162E  0841               	movf	??___flmul+3,w
  4392     162F  1103               	clrz
  4393     1630  1803               	skipnc
  4394     1631  3E01               	addlw	1
  4395     1632  1903               	skipnz
  4396     1633  2E35               	goto	u4223
  4397     1634  07C7               	addwf	___flmul@grs+3,f
  4398     1635                     u4223:
  4399     1635                     l2991:
  4400     1635  3008               	movlw	8
  4401     1636  00BE               	movwf	??___flmul
  4402     1637                     u4235:
  4403     1637  1003               	clrc
  4404     1638  0DC4               	rlf	___flmul@grs,f
  4405     1639  0DC5               	rlf	___flmul@grs+1,f
  4406     163A  0DC6               	rlf	___flmul@grs+2,f
  4407     163B  0DC7               	rlf	___flmul@grs+3,f
  4408     163C  0BBE               	decfsz	??___flmul,f
  4409     163D  2E37               	goto	u4235
  4410     163E  0836               	movf	___flmul@b,w
  4411     163F  00A6               	movwf	__Umul8_16@multiplicand
  4412     1640  083A               	movf	___flmul@a,w
  4413     1641  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4414     1646  1283               	bcf	3,5	;RP0=0, select bank0
  4415     1647  1303               	bcf	3,6	;RP1=0, select bank0
  4416     1648  0827               	movf	?__Umul8_16+1,w
  4417     1649  00CF               	movwf	___flmul@temp+1
  4418     164A  0826               	movf	?__Umul8_16,w
  4419     164B  00CE               	movwf	___flmul@temp
  4420     164C                     l2993:
  4421     164C  084E               	movf	___flmul@temp,w
  4422     164D  00BE               	movwf	??___flmul
  4423     164E  084F               	movf	___flmul@temp+1,w
  4424     164F  00BF               	movwf	??___flmul+1
  4425     1650  01C0               	clrf	??___flmul+2
  4426     1651  01C1               	clrf	??___flmul+3
  4427     1652  083E               	movf	??___flmul,w
  4428     1653  07C4               	addwf	___flmul@grs,f
  4429     1654  083F               	movf	??___flmul+1,w
  4430     1655  1103               	clrz
  4431     1656  1803               	skipnc
  4432     1657  3E01               	addlw	1
  4433     1658  1903               	skipnz
  4434     1659  2E5B               	goto	u4241
  4435     165A  07C5               	addwf	___flmul@grs+1,f
  4436     165B                     u4241:
  4437     165B  0840               	movf	??___flmul+2,w
  4438     165C  1103               	clrz
  4439     165D  1803               	skipnc
  4440     165E  3E01               	addlw	1
  4441     165F  1903               	skipnz
  4442     1660  2E62               	goto	u4242
  4443     1661  07C6               	addwf	___flmul@grs+2,f
  4444     1662                     u4242:
  4445     1662  0841               	movf	??___flmul+3,w
  4446     1663  1103               	clrz
  4447     1664  1803               	skipnc
  4448     1665  3E01               	addlw	1
  4449     1666  1903               	skipnz
  4450     1667  2E69               	goto	u4243
  4451     1668  07C7               	addwf	___flmul@grs+3,f
  4452     1669                     u4243:
  4453     1669                     l2995:
  4454     1669  0837               	movf	___flmul@b+1,w
  4455     166A  00A6               	movwf	__Umul8_16@multiplicand
  4456     166B  083C               	movf	___flmul@a+2,w
  4457     166C  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4458     1671  1283               	bcf	3,5	;RP0=0, select bank0
  4459     1672  1303               	bcf	3,6	;RP1=0, select bank0
  4460     1673  0827               	movf	?__Umul8_16+1,w
  4461     1674  00CF               	movwf	___flmul@temp+1
  4462     1675  0826               	movf	?__Umul8_16,w
  4463     1676  00CE               	movwf	___flmul@temp
  4464     1677  084E               	movf	___flmul@temp,w
  4465     1678  00BE               	movwf	??___flmul
  4466     1679  084F               	movf	___flmul@temp+1,w
  4467     167A  00BF               	movwf	??___flmul+1
  4468     167B  01C0               	clrf	??___flmul+2
  4469     167C  01C1               	clrf	??___flmul+3
  4470     167D  083E               	movf	??___flmul,w
  4471     167E  07CA               	addwf	___flmul@prod,f
  4472     167F  083F               	movf	??___flmul+1,w
  4473     1680  1103               	clrz
  4474     1681  1803               	skipnc
  4475     1682  3E01               	addlw	1
  4476     1683  1903               	skipnz
  4477     1684  2E86               	goto	u4251
  4478     1685  07CB               	addwf	___flmul@prod+1,f
  4479     1686                     u4251:
  4480     1686  0840               	movf	??___flmul+2,w
  4481     1687  1103               	clrz
  4482     1688  1803               	skipnc
  4483     1689  3E01               	addlw	1
  4484     168A  1903               	skipnz
  4485     168B  2E8D               	goto	u4252
  4486     168C  07CC               	addwf	___flmul@prod+2,f
  4487     168D                     u4252:
  4488     168D  0841               	movf	??___flmul+3,w
  4489     168E  1103               	clrz
  4490     168F  1803               	skipnc
  4491     1690  3E01               	addlw	1
  4492     1691  1903               	skipnz
  4493     1692  2E94               	goto	u4253
  4494     1693  07CD               	addwf	___flmul@prod+3,f
  4495     1694                     u4253:
  4496     1694                     l2997:
  4497     1694  0838               	movf	___flmul@b+2,w
  4498     1695  00A6               	movwf	__Umul8_16@multiplicand
  4499     1696  083B               	movf	___flmul@a+1,w
  4500     1697  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4501     169C  1283               	bcf	3,5	;RP0=0, select bank0
  4502     169D  1303               	bcf	3,6	;RP1=0, select bank0
  4503     169E  0827               	movf	?__Umul8_16+1,w
  4504     169F  00CF               	movwf	___flmul@temp+1
  4505     16A0  0826               	movf	?__Umul8_16,w
  4506     16A1  00CE               	movwf	___flmul@temp
  4507     16A2                     l2999:
  4508     16A2  084E               	movf	___flmul@temp,w
  4509     16A3  00BE               	movwf	??___flmul
  4510     16A4  084F               	movf	___flmul@temp+1,w
  4511     16A5  00BF               	movwf	??___flmul+1
  4512     16A6  01C0               	clrf	??___flmul+2
  4513     16A7  01C1               	clrf	??___flmul+3
  4514     16A8  083E               	movf	??___flmul,w
  4515     16A9  07CA               	addwf	___flmul@prod,f
  4516     16AA  083F               	movf	??___flmul+1,w
  4517     16AB  1103               	clrz
  4518     16AC  1803               	skipnc
  4519     16AD  3E01               	addlw	1
  4520     16AE  1903               	skipnz
  4521     16AF  2EB1               	goto	u4261
  4522     16B0  07CB               	addwf	___flmul@prod+1,f
  4523     16B1                     u4261:
  4524     16B1  0840               	movf	??___flmul+2,w
  4525     16B2  1103               	clrz
  4526     16B3  1803               	skipnc
  4527     16B4  3E01               	addlw	1
  4528     16B5  1903               	skipnz
  4529     16B6  2EB8               	goto	u4262
  4530     16B7  07CC               	addwf	___flmul@prod+2,f
  4531     16B8                     u4262:
  4532     16B8  0841               	movf	??___flmul+3,w
  4533     16B9  1103               	clrz
  4534     16BA  1803               	skipnc
  4535     16BB  3E01               	addlw	1
  4536     16BC  1903               	skipnz
  4537     16BD  2EBF               	goto	u4263
  4538     16BE  07CD               	addwf	___flmul@prod+3,f
  4539     16BF                     u4263:
  4540     16BF  0838               	movf	___flmul@b+2,w
  4541     16C0  00A6               	movwf	__Umul8_16@multiplicand
  4542     16C1  083C               	movf	___flmul@a+2,w
  4543     16C2  160A  158A  2163  160A  118A  	fcall	__Umul8_16
  4544     16C7  1283               	bcf	3,5	;RP0=0, select bank0
  4545     16C8  1303               	bcf	3,6	;RP1=0, select bank0
  4546     16C9  0827               	movf	?__Umul8_16+1,w
  4547     16CA  00CF               	movwf	___flmul@temp+1
  4548     16CB  0826               	movf	?__Umul8_16,w
  4549     16CC  00CE               	movwf	___flmul@temp
  4550     16CD                     l3001:
  4551     16CD  084E               	movf	___flmul@temp,w
  4552     16CE  00BE               	movwf	??___flmul
  4553     16CF  084F               	movf	___flmul@temp+1,w
  4554     16D0  00BF               	movwf	??___flmul+1
  4555     16D1  01C0               	clrf	??___flmul+2
  4556     16D2  01C1               	clrf	??___flmul+3
  4557     16D3  3008               	movlw	8
  4558     16D4                     u4275:
  4559     16D4  1003               	clrc
  4560     16D5  0DBE               	rlf	??___flmul,f
  4561     16D6  0DBF               	rlf	??___flmul+1,f
  4562     16D7  0DC0               	rlf	??___flmul+2,f
  4563     16D8  0DC1               	rlf	??___flmul+3,f
  4564     16D9                     u4270:
  4565     16D9  3EFF               	addlw	-1
  4566     16DA  1D03               	skipz
  4567     16DB  2ED4               	goto	u4275
  4568     16DC  083E               	movf	??___flmul,w
  4569     16DD  07CA               	addwf	___flmul@prod,f
  4570     16DE  083F               	movf	??___flmul+1,w
  4571     16DF  1103               	clrz
  4572     16E0  1803               	skipnc
  4573     16E1  3E01               	addlw	1
  4574     16E2  1903               	skipnz
  4575     16E3  2EE5               	goto	u4281
  4576     16E4  07CB               	addwf	___flmul@prod+1,f
  4577     16E5                     u4281:
  4578     16E5  0840               	movf	??___flmul+2,w
  4579     16E6  1103               	clrz
  4580     16E7  1803               	skipnc
  4581     16E8  3E01               	addlw	1
  4582     16E9  1903               	skipnz
  4583     16EA  2EEC               	goto	u4282
  4584     16EB  07CC               	addwf	___flmul@prod+2,f
  4585     16EC                     u4282:
  4586     16EC  0841               	movf	??___flmul+3,w
  4587     16ED  1103               	clrz
  4588     16EE  1803               	skipnc
  4589     16EF  3E01               	addlw	1
  4590     16F0  1903               	skipnz
  4591     16F1  2EF3               	goto	u4283
  4592     16F2  07CD               	addwf	___flmul@prod+3,f
  4593     16F3                     u4283:
  4594     16F3                     l3003:
  4595     16F3  0844               	movf	___flmul@grs,w
  4596     16F4  00BE               	movwf	??___flmul
  4597     16F5  0845               	movf	___flmul@grs+1,w
  4598     16F6  00BF               	movwf	??___flmul+1
  4599     16F7  0846               	movf	___flmul@grs+2,w
  4600     16F8  00C0               	movwf	??___flmul+2
  4601     16F9  0847               	movf	___flmul@grs+3,w
  4602     16FA  00C1               	movwf	??___flmul+3
  4603     16FB  3018               	movlw	24
  4604     16FC                     u4295:
  4605     16FC  1003               	clrc
  4606     16FD  0CC1               	rrf	??___flmul+3,f
  4607     16FE  0CC0               	rrf	??___flmul+2,f
  4608     16FF  0CBF               	rrf	??___flmul+1,f
  4609     1700  0CBE               	rrf	??___flmul,f
  4610     1701                     u4290:
  4611     1701  3EFF               	addlw	-1
  4612     1702  1D03               	skipz
  4613     1703  2EFC               	goto	u4295
  4614     1704  083E               	movf	??___flmul,w
  4615     1705  07CA               	addwf	___flmul@prod,f
  4616     1706  083F               	movf	??___flmul+1,w
  4617     1707  1103               	clrz
  4618     1708  1803               	skipnc
  4619     1709  3E01               	addlw	1
  4620     170A  1903               	skipnz
  4621     170B  2F0D               	goto	u4301
  4622     170C  07CB               	addwf	___flmul@prod+1,f
  4623     170D                     u4301:
  4624     170D  0840               	movf	??___flmul+2,w
  4625     170E  1103               	clrz
  4626     170F  1803               	skipnc
  4627     1710  3E01               	addlw	1
  4628     1711  1903               	skipnz
  4629     1712  2F14               	goto	u4302
  4630     1713  07CC               	addwf	___flmul@prod+2,f
  4631     1714                     u4302:
  4632     1714  0841               	movf	??___flmul+3,w
  4633     1715  1103               	clrz
  4634     1716  1803               	skipnc
  4635     1717  3E01               	addlw	1
  4636     1718  1903               	skipnz
  4637     1719  2F1B               	goto	u4303
  4638     171A  07CD               	addwf	___flmul@prod+3,f
  4639     171B                     u4303:
  4640     171B                     l3005:
  4641     171B  3008               	movlw	8
  4642     171C  00BE               	movwf	??___flmul
  4643     171D                     u4315:
  4644     171D  1003               	clrc
  4645     171E  0DC4               	rlf	___flmul@grs,f
  4646     171F  0DC5               	rlf	___flmul@grs+1,f
  4647     1720  0DC6               	rlf	___flmul@grs+2,f
  4648     1721  0DC7               	rlf	___flmul@grs+3,f
  4649     1722  0BBE               	decfsz	??___flmul,f
  4650     1723  2F1D               	goto	u4315
  4651     1724                     l3007:
  4652     1724  0849               	movf	___flmul@bexp,w
  4653     1725  0748               	addwf	___flmul@aexp,w
  4654     1726  00BE               	movwf	??___flmul
  4655     1727  01BF               	clrf	??___flmul+1
  4656     1728  0DBF               	rlf	??___flmul+1,f
  4657     1729  083E               	movf	??___flmul,w
  4658     172A  3E82               	addlw	130
  4659     172B  00CE               	movwf	___flmul@temp
  4660     172C  083F               	movf	??___flmul+1,w
  4661     172D  1803               	skipnc
  4662     172E  3E01               	addlw	1
  4663     172F  3EFF               	addlw	255
  4664     1730  00CF               	movwf	___flmul@temp+1
  4665     1731  2F4F               	goto	l3019
  4666     1732                     l3009:
  4667     1732  3001               	movlw	1
  4668     1733  00BE               	movwf	??___flmul
  4669     1734                     u4325:
  4670     1734  1003               	clrc
  4671     1735  0DCA               	rlf	___flmul@prod,f
  4672     1736  0DCB               	rlf	___flmul@prod+1,f
  4673     1737  0DCC               	rlf	___flmul@prod+2,f
  4674     1738  0DCD               	rlf	___flmul@prod+3,f
  4675     1739  0BBE               	decfsz	??___flmul,f
  4676     173A  2F34               	goto	u4325
  4677     173B                     l3011:
  4678     173B  1FC7               	btfss	___flmul@grs+3,7
  4679     173C  2F3E               	goto	u4331
  4680     173D  2F3F               	goto	u4330
  4681     173E                     u4331:
  4682     173E  2F40               	goto	l3015
  4683     173F                     u4330:
  4684     173F                     l3013:
  4685     173F  144A               	bsf	___flmul@prod,0
  4686     1740                     l3015:
  4687     1740  3001               	movlw	1
  4688     1741  00BE               	movwf	??___flmul
  4689     1742                     u4345:
  4690     1742  1003               	clrc
  4691     1743  0DC4               	rlf	___flmul@grs,f
  4692     1744  0DC5               	rlf	___flmul@grs+1,f
  4693     1745  0DC6               	rlf	___flmul@grs+2,f
  4694     1746  0DC7               	rlf	___flmul@grs+3,f
  4695     1747  0BBE               	decfsz	??___flmul,f
  4696     1748  2F42               	goto	u4345
  4697     1749                     l3017:
  4698     1749  30FF               	movlw	255
  4699     174A  07CE               	addwf	___flmul@temp,f
  4700     174B  1803               	skipnc
  4701     174C  0ACF               	incf	___flmul@temp+1,f
  4702     174D  30FF               	movlw	255
  4703     174E  07CF               	addwf	___flmul@temp+1,f
  4704     174F                     l3019:
  4705     174F  1FCC               	btfss	___flmul@prod+2,7
  4706     1750  2F52               	goto	u4351
  4707     1751  2F53               	goto	u4350
  4708     1752                     u4351:
  4709     1752  2F32               	goto	l3009
  4710     1753                     u4350:
  4711     1753                     l3021:
  4712     1753  01C8               	clrf	___flmul@aexp
  4713     1754                     l3023:
  4714     1754  1FC7               	btfss	___flmul@grs+3,7
  4715     1755  2F57               	goto	u4361
  4716     1756  2F58               	goto	u4360
  4717     1757                     u4361:
  4718     1757  2F74               	goto	l3031
  4719     1758                     u4360:
  4720     1758                     l3025:
  4721     1758  30FF               	movlw	255
  4722     1759  0544               	andwf	___flmul@grs,w
  4723     175A  00BE               	movwf	??___flmul
  4724     175B  30FF               	movlw	255
  4725     175C  0545               	andwf	___flmul@grs+1,w
  4726     175D  00BF               	movwf	??___flmul+1
  4727     175E  30FF               	movlw	255
  4728     175F  0546               	andwf	___flmul@grs+2,w
  4729     1760  00C0               	movwf	??___flmul+2
  4730     1761  307F               	movlw	127
  4731     1762  0547               	andwf	___flmul@grs+3,w
  4732     1763  00C1               	movwf	??___flmul+3
  4733     1764  0841               	movf	??___flmul+3,w
  4734     1765  0440               	iorwf	??___flmul+2,w
  4735     1766  043F               	iorwf	??___flmul+1,w
  4736     1767  043E               	iorwf	??___flmul,w
  4737     1768  1903               	skipnz
  4738     1769  2F6B               	goto	u4371
  4739     176A  2F6C               	goto	u4370
  4740     176B                     u4371:
  4741     176B  2F6F               	goto	l887
  4742     176C                     u4370:
  4743     176C                     l3027:
  4744     176C  01C8               	clrf	___flmul@aexp
  4745     176D  0AC8               	incf	___flmul@aexp,f
  4746     176E  2F74               	goto	l3031
  4747     176F                     l887:
  4748     176F  1C4A               	btfss	___flmul@prod,0
  4749     1770  2F72               	goto	u4381
  4750     1771  2F73               	goto	u4380
  4751     1772                     u4381:
  4752     1772  2F74               	goto	l3031
  4753     1773                     u4380:
  4754     1773  2F6C               	goto	l3027
  4755     1774                     l3031:
  4756     1774  0848               	movf	___flmul@aexp,w
  4757     1775  1903               	btfsc	3,2
  4758     1776  2F78               	goto	u4391
  4759     1777  2F79               	goto	u4390
  4760     1778                     u4391:
  4761     1778  2FAA               	goto	l3041
  4762     1779                     u4390:
  4763     1779                     l3033:
  4764     1779  3001               	movlw	1
  4765     177A  07CA               	addwf	___flmul@prod,f
  4766     177B  3000               	movlw	0
  4767     177C  1803               	skipnc
  4768     177D  3001               	movlw	1
  4769     177E  07CB               	addwf	___flmul@prod+1,f
  4770     177F  3000               	movlw	0
  4771     1780  1803               	skipnc
  4772     1781  3001               	movlw	1
  4773     1782  07CC               	addwf	___flmul@prod+2,f
  4774     1783  3000               	movlw	0
  4775     1784  1803               	skipnc
  4776     1785  3001               	movlw	1
  4777     1786  07CD               	addwf	___flmul@prod+3,f
  4778     1787                     l3035:
  4779     1787  1C4D               	btfss	___flmul@prod+3,0
  4780     1788  2F8A               	goto	u4401
  4781     1789  2F8B               	goto	u4400
  4782     178A                     u4401:
  4783     178A  2FAA               	goto	l3041
  4784     178B                     u4400:
  4785     178B                     l3037:
  4786     178B  084A               	movf	___flmul@prod,w
  4787     178C  00BE               	movwf	??___flmul
  4788     178D  084B               	movf	___flmul@prod+1,w
  4789     178E  00BF               	movwf	??___flmul+1
  4790     178F  084C               	movf	___flmul@prod+2,w
  4791     1790  00C0               	movwf	??___flmul+2
  4792     1791  084D               	movf	___flmul@prod+3,w
  4793     1792  00C1               	movwf	??___flmul+3
  4794     1793  3001               	movlw	1
  4795     1794  00C2               	movwf	??___flmul+4
  4796     1795                     u4415:
  4797     1795  0D41               	rlf	??___flmul+3,w
  4798     1796  0CC1               	rrf	??___flmul+3,f
  4799     1797  0CC0               	rrf	??___flmul+2,f
  4800     1798  0CBF               	rrf	??___flmul+1,f
  4801     1799  0CBE               	rrf	??___flmul,f
  4802     179A                     u4410:
  4803     179A  0BC2               	decfsz	??___flmul+4,f
  4804     179B  2F95               	goto	u4415
  4805     179C  0841               	movf	??___flmul+3,w
  4806     179D  00CD               	movwf	___flmul@prod+3
  4807     179E  0840               	movf	??___flmul+2,w
  4808     179F  00CC               	movwf	___flmul@prod+2
  4809     17A0  083F               	movf	??___flmul+1,w
  4810     17A1  00CB               	movwf	___flmul@prod+1
  4811     17A2  083E               	movf	??___flmul,w
  4812     17A3  00CA               	movwf	___flmul@prod
  4813     17A4                     l3039:
  4814     17A4  3001               	movlw	1
  4815     17A5  07CE               	addwf	___flmul@temp,f
  4816     17A6  1803               	skipnc
  4817     17A7  0ACF               	incf	___flmul@temp+1,f
  4818     17A8  3000               	movlw	0
  4819     17A9  07CF               	addwf	___flmul@temp+1,f
  4820     17AA                     l3041:
  4821     17AA  084F               	movf	___flmul@temp+1,w
  4822     17AB  3A80               	xorlw	128
  4823     17AC  00FF               	movwf	btemp+1
  4824     17AD  3080               	movlw	128
  4825     17AE  027F               	subwf	btemp+1,w
  4826     17AF  1D03               	skipz
  4827     17B0  2FB3               	goto	u4425
  4828     17B1  30FF               	movlw	255
  4829     17B2  024E               	subwf	___flmul@temp,w
  4830     17B3                     u4425:
  4831     17B3  1C03               	skipc
  4832     17B4  2FB6               	goto	u4421
  4833     17B5  2FB7               	goto	u4420
  4834     17B6                     u4421:
  4835     17B6  2FC2               	goto	l3045
  4836     17B7                     u4420:
  4837     17B7                     l3043:
  4838     17B7  307F               	movlw	127
  4839     17B8  1283               	bcf	3,5	;RP0=0, select bank0
  4840     17B9  1303               	bcf	3,6	;RP1=0, select bank0
  4841     17BA  00CD               	movwf	___flmul@prod+3
  4842     17BB  3080               	movlw	128
  4843     17BC  00CC               	movwf	___flmul@prod+2
  4844     17BD  3000               	movlw	0
  4845     17BE  00CB               	movwf	___flmul@prod+1
  4846     17BF  3000               	movlw	0
  4847     17C0  00CA               	movwf	___flmul@prod
  4848     17C1  2FF3               	goto	l893
  4849     17C2                     l3045:
  4850     17C2  1283               	bcf	3,5	;RP0=0, select bank0
  4851     17C3  1303               	bcf	3,6	;RP1=0, select bank0
  4852     17C4  084F               	movf	___flmul@temp+1,w
  4853     17C5  3A80               	xorlw	128
  4854     17C6  00FF               	movwf	btemp+1
  4855     17C7  3080               	movlw	128
  4856     17C8  027F               	subwf	btemp+1,w
  4857     17C9  1D03               	skipz
  4858     17CA  2FCD               	goto	u4435
  4859     17CB  3001               	movlw	1
  4860     17CC  024E               	subwf	___flmul@temp,w
  4861     17CD                     u4435:
  4862     17CD  1803               	skipnc
  4863     17CE  2FD0               	goto	u4431
  4864     17CF  2FD1               	goto	u4430
  4865     17D0                     u4431:
  4866     17D0  2FDD               	goto	l3051
  4867     17D1                     u4430:
  4868     17D1                     l3047:
  4869     17D1  3000               	movlw	0
  4870     17D2  1283               	bcf	3,5	;RP0=0, select bank0
  4871     17D3  1303               	bcf	3,6	;RP1=0, select bank0
  4872     17D4  00CD               	movwf	___flmul@prod+3
  4873     17D5  3000               	movlw	0
  4874     17D6  00CC               	movwf	___flmul@prod+2
  4875     17D7  3000               	movlw	0
  4876     17D8  00CB               	movwf	___flmul@prod+1
  4877     17D9  3000               	movlw	0
  4878     17DA  00CA               	movwf	___flmul@prod
  4879     17DB                     l3049:
  4880     17DB  01C3               	clrf	___flmul@sign
  4881     17DC  2FF3               	goto	l893
  4882     17DD                     l3051:
  4883     17DD  1283               	bcf	3,5	;RP0=0, select bank0
  4884     17DE  1303               	bcf	3,6	;RP1=0, select bank0
  4885     17DF  084E               	movf	___flmul@temp,w
  4886     17E0  00C9               	movwf	___flmul@bexp
  4887     17E1  30FF               	movlw	255
  4888     17E2  05CA               	andwf	___flmul@prod,f
  4889     17E3  30FF               	movlw	255
  4890     17E4  05CB               	andwf	___flmul@prod+1,f
  4891     17E5  307F               	movlw	127
  4892     17E6  05CC               	andwf	___flmul@prod+2,f
  4893     17E7  3000               	movlw	0
  4894     17E8  05CD               	andwf	___flmul@prod+3,f
  4895     17E9                     l3053:
  4896     17E9  1C49               	btfss	___flmul@bexp,0
  4897     17EA  2FEC               	goto	u4441
  4898     17EB  2FED               	goto	u4440
  4899     17EC                     u4441:
  4900     17EC  2FEE               	goto	l3057
  4901     17ED                     u4440:
  4902     17ED                     l3055:
  4903     17ED  17CC               	bsf	___flmul@prod+2,7
  4904     17EE                     l3057:
  4905     17EE  0849               	movf	___flmul@bexp,w
  4906     17EF  00BE               	movwf	??___flmul
  4907     17F0  1003               	clrc
  4908     17F1  0C3E               	rrf	??___flmul,w
  4909     17F2  00CD               	movwf	___flmul@prod+3
  4910     17F3                     l893:
  4911     17F3  0843               	movf	___flmul@sign,w
  4912     17F4  00BE               	movwf	??___flmul
  4913     17F5  083E               	movf	??___flmul,w
  4914     17F6  04CD               	iorwf	___flmul@prod+3,f
  4915     17F7                     l3059:
  4916     17F7  084D               	movf	___flmul@prod+3,w
  4917     17F8  00B9               	movwf	?___flmul+3
  4918     17F9  084C               	movf	___flmul@prod+2,w
  4919     17FA  00B8               	movwf	?___flmul+2
  4920     17FB  084B               	movf	___flmul@prod+1,w
  4921     17FC  00B7               	movwf	?___flmul+1
  4922     17FD  084A               	movf	___flmul@prod,w
  4923     17FE  00B6               	movwf	?___flmul
  4924     17FF                     l881:
  4925     17FF  0008               	return
  4926     1800                     __end_of___flmul:
  4927                           
  4928                           	psect	text9
  4929     1963                     __ptext9:	
  4930 ;; *************** function __Umul8_16 *****************
  4931 ;; Defined at:
  4932 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  multiplier      1    wreg     unsigned char 
  4935 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  multiplier      1   14[BANK0 ] unsigned char 
  4938 ;;  word_mpld       2   12[BANK0 ] unsigned int 
  4939 ;;  product         2   10[BANK0 ] unsigned int 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  2    6[BANK0 ] unsigned int 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4949 ;;      Params:         0       2       0       0       0
  4950 ;;      Locals:         0       5       0       0       0
  4951 ;;      Temps:          0       2       0       0       0
  4952 ;;      Totals:         0       9       0       0       0
  4953 ;;Total ram usage:        9 bytes
  4954 ;; Hardware stack levels used: 1
  4955 ;; Hardware stack levels required when called: 2
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		___flmul
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963     1963                     __Umul8_16:	
  4964                           ;psect for function __Umul8_16
  4965                           
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4969                           ;__Umul8_16@multiplier stored from wreg
  4970     1963  1283               	bcf	3,5	;RP0=0, select bank0
  4971     1964  1303               	bcf	3,6	;RP1=0, select bank0
  4972     1965  00AE               	movwf	__Umul8_16@multiplier
  4973     1966                     l2585:
  4974     1966  01AA               	clrf	__Umul8_16@product
  4975     1967  01AB               	clrf	__Umul8_16@product+1
  4976     1968                     l2587:
  4977     1968  0826               	movf	__Umul8_16@multiplicand,w
  4978     1969  00A8               	movwf	??__Umul8_16
  4979     196A  01A9               	clrf	??__Umul8_16+1
  4980     196B  0828               	movf	??__Umul8_16,w
  4981     196C  00AC               	movwf	__Umul8_16@word_mpld
  4982     196D  0829               	movf	??__Umul8_16+1,w
  4983     196E  00AD               	movwf	__Umul8_16@word_mpld+1
  4984     196F                     l2589:
  4985     196F  1C2E               	btfss	__Umul8_16@multiplier,0
  4986     1970  2972               	goto	u3271
  4987     1971  2973               	goto	u3270
  4988     1972                     u3271:
  4989     1972  2979               	goto	l900
  4990     1973                     u3270:
  4991     1973                     l2591:
  4992     1973  082C               	movf	__Umul8_16@word_mpld,w
  4993     1974  07AA               	addwf	__Umul8_16@product,f
  4994     1975  1803               	skipnc
  4995     1976  0AAB               	incf	__Umul8_16@product+1,f
  4996     1977  082D               	movf	__Umul8_16@word_mpld+1,w
  4997     1978  07AB               	addwf	__Umul8_16@product+1,f
  4998     1979                     l900:
  4999     1979  3001               	movlw	1
  5000     197A                     u3285:
  5001     197A  1003               	clrc
  5002     197B  0DAC               	rlf	__Umul8_16@word_mpld,f
  5003     197C  0DAD               	rlf	__Umul8_16@word_mpld+1,f
  5004     197D  3EFF               	addlw	-1
  5005     197E  1D03               	skipz
  5006     197F  297A               	goto	u3285
  5007     1980  1003               	clrc
  5008     1981  0CAE               	rrf	__Umul8_16@multiplier,f
  5009     1982                     l2593:
  5010     1982  082E               	movf	__Umul8_16@multiplier,w
  5011     1983  1D03               	btfss	3,2
  5012     1984  2986               	goto	u3291
  5013     1985  2987               	goto	u3290
  5014     1986                     u3291:
  5015     1986  296F               	goto	l2589
  5016     1987                     u3290:
  5017     1987                     l2595:
  5018     1987  082B               	movf	__Umul8_16@product+1,w
  5019     1988  00A7               	movwf	?__Umul8_16+1
  5020     1989  082A               	movf	__Umul8_16@product,w
  5021     198A  00A6               	movwf	?__Umul8_16
  5022     198B                     l902:
  5023     198B  0008               	return
  5024     198C                     __end_of__Umul8_16:
  5025                           
  5026                           	psect	text10
  5027     0749                     __ptext10:	
  5028 ;; *************** function __tdiv_to_l_ *****************
  5029 ;; Defined at:
  5030 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  f1              4    6[BANK0 ] float 
  5033 ;;  f2              4   10[BANK0 ] float 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  quot            4   17[BANK0 ] unsigned long 
  5036 ;;  exp1            1   22[BANK0 ] unsigned char 
  5037 ;;  cntr            1   21[BANK0 ] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  4    6[BANK0 ] unsigned long 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5047 ;;      Params:         0       8       0       0       0
  5048 ;;      Locals:         0       6       0       0       0
  5049 ;;      Temps:          0       3       0       0       0
  5050 ;;      Totals:         0      17       0       0       0
  5051 ;;Total ram usage:       17 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 2
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_sprintf
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061     0749                     __tdiv_to_l_:	
  5062                           ;psect for function __tdiv_to_l_
  5063                           
  5064     0749                     l3137:	
  5065                           ;incstack = 0
  5066                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5067                           
  5068     0749  1283               	bcf	3,5	;RP0=0, select bank0
  5069     074A  1303               	bcf	3,6	;RP1=0, select bank0
  5070     074B  0826               	movf	__tdiv_to_l_@f1,w
  5071     074C  00AE               	movwf	??__tdiv_to_l_
  5072     074D  0827               	movf	__tdiv_to_l_@f1+1,w
  5073     074E  00AF               	movwf	??__tdiv_to_l_+1
  5074     074F  0828               	movf	__tdiv_to_l_@f1+2,w
  5075     0750  00B0               	movwf	??__tdiv_to_l_+2
  5076     0751  1003               	clrc
  5077     0752  0D2F               	rlf	??__tdiv_to_l_+1,w
  5078     0753  0D30               	rlf	??__tdiv_to_l_+2,w
  5079     0754  00B6               	movwf	__tdiv_to_l_@exp1
  5080     0755  0836               	movf	__tdiv_to_l_@exp1,w
  5081     0756  1D03               	btfss	3,2
  5082     0757  2F59               	goto	u4731
  5083     0758  2F5A               	goto	u4730
  5084     0759                     u4731:
  5085     0759  2F63               	goto	l3143
  5086     075A                     u4730:
  5087     075A                     l3139:
  5088     075A  3000               	movlw	0
  5089     075B  00A9               	movwf	?__tdiv_to_l_+3
  5090     075C  3000               	movlw	0
  5091     075D  00A8               	movwf	?__tdiv_to_l_+2
  5092     075E  3000               	movlw	0
  5093     075F  00A7               	movwf	?__tdiv_to_l_+1
  5094     0760  3000               	movlw	0
  5095     0761  00A6               	movwf	?__tdiv_to_l_
  5096     0762  2FFF               	goto	l675
  5097     0763                     l3143:
  5098     0763  082A               	movf	__tdiv_to_l_@f2,w
  5099     0764  00AE               	movwf	??__tdiv_to_l_
  5100     0765  082B               	movf	__tdiv_to_l_@f2+1,w
  5101     0766  00AF               	movwf	??__tdiv_to_l_+1
  5102     0767  082C               	movf	__tdiv_to_l_@f2+2,w
  5103     0768  00B0               	movwf	??__tdiv_to_l_+2
  5104     0769  1003               	clrc
  5105     076A  0D2F               	rlf	??__tdiv_to_l_+1,w
  5106     076B  0D30               	rlf	??__tdiv_to_l_+2,w
  5107     076C  00B5               	movwf	__tdiv_to_l_@cntr
  5108     076D  0835               	movf	__tdiv_to_l_@cntr,w
  5109     076E  1D03               	btfss	3,2
  5110     076F  2F71               	goto	u4741
  5111     0770  2F72               	goto	u4740
  5112     0771                     u4741:
  5113     0771  2F73               	goto	l676
  5114     0772                     u4740:
  5115     0772  2F5A               	goto	l3139
  5116     0773                     l676:
  5117     0773  17A7               	bsf	__tdiv_to_l_@f1+1,7
  5118     0774                     l3149:
  5119     0774  30FF               	movlw	255
  5120     0775  05A6               	andwf	__tdiv_to_l_@f1,f
  5121     0776  30FF               	movlw	255
  5122     0777  05A7               	andwf	__tdiv_to_l_@f1+1,f
  5123     0778  3000               	movlw	0
  5124     0779  05A8               	andwf	__tdiv_to_l_@f1+2,f
  5125     077A                     l3151:
  5126     077A  17AB               	bsf	__tdiv_to_l_@f2+1,7
  5127     077B  30FF               	movlw	255
  5128     077C  05AA               	andwf	__tdiv_to_l_@f2,f
  5129     077D  30FF               	movlw	255
  5130     077E  05AB               	andwf	__tdiv_to_l_@f2+1,f
  5131     077F  3000               	movlw	0
  5132     0780  05AC               	andwf	__tdiv_to_l_@f2+2,f
  5133     0781  3000               	movlw	0
  5134     0782  00B4               	movwf	__tdiv_to_l_@quot+3
  5135     0783  3000               	movlw	0
  5136     0784  00B3               	movwf	__tdiv_to_l_@quot+2
  5137     0785  3000               	movlw	0
  5138     0786  00B2               	movwf	__tdiv_to_l_@quot+1
  5139     0787  3000               	movlw	0
  5140     0788  00B1               	movwf	__tdiv_to_l_@quot
  5141     0789                     l3153:
  5142     0789  307F               	movlw	127
  5143     078A  02B6               	subwf	__tdiv_to_l_@exp1,f
  5144     078B                     l3155:
  5145     078B  3098               	movlw	152
  5146     078C  0735               	addwf	__tdiv_to_l_@cntr,w
  5147     078D  00AE               	movwf	??__tdiv_to_l_
  5148     078E  082E               	movf	??__tdiv_to_l_,w
  5149     078F  02B6               	subwf	__tdiv_to_l_@exp1,f
  5150     0790  3018               	movlw	24
  5151     0791  00B5               	movwf	__tdiv_to_l_@cntr
  5152     0792                     l3157:
  5153     0792  3001               	movlw	1
  5154     0793  00AE               	movwf	??__tdiv_to_l_
  5155     0794                     u4755:
  5156     0794  1003               	clrc
  5157     0795  0DB1               	rlf	__tdiv_to_l_@quot,f
  5158     0796  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  5159     0797  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  5160     0798  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  5161     0799  0BAE               	decfsz	??__tdiv_to_l_,f
  5162     079A  2F94               	goto	u4755
  5163     079B                     l3159:
  5164     079B  082C               	movf	__tdiv_to_l_@f2+2,w
  5165     079C  0228               	subwf	__tdiv_to_l_@f1+2,w
  5166     079D  1D03               	skipz
  5167     079E  2FA5               	goto	u4765
  5168     079F  082B               	movf	__tdiv_to_l_@f2+1,w
  5169     07A0  0227               	subwf	__tdiv_to_l_@f1+1,w
  5170     07A1  1D03               	skipz
  5171     07A2  2FA5               	goto	u4765
  5172     07A3  082A               	movf	__tdiv_to_l_@f2,w
  5173     07A4  0226               	subwf	__tdiv_to_l_@f1,w
  5174     07A5                     u4765:
  5175     07A5  1C03               	skipc
  5176     07A6  2FA8               	goto	u4761
  5177     07A7  2FA9               	goto	u4760
  5178     07A8                     u4761:
  5179     07A8  2FB4               	goto	l3165
  5180     07A9                     u4760:
  5181     07A9                     l3161:
  5182     07A9  082A               	movf	__tdiv_to_l_@f2,w
  5183     07AA  02A6               	subwf	__tdiv_to_l_@f1,f
  5184     07AB  082B               	movf	__tdiv_to_l_@f2+1,w
  5185     07AC  1C03               	skipc
  5186     07AD  0F2B               	incfsz	__tdiv_to_l_@f2+1,w
  5187     07AE  02A7               	subwf	__tdiv_to_l_@f1+1,f
  5188     07AF  082C               	movf	__tdiv_to_l_@f2+2,w
  5189     07B0  1C03               	skipc
  5190     07B1  0A2C               	incf	__tdiv_to_l_@f2+2,w
  5191     07B2  02A8               	subwf	__tdiv_to_l_@f1+2,f
  5192     07B3                     l3163:
  5193     07B3  1431               	bsf	__tdiv_to_l_@quot,0
  5194     07B4                     l3165:
  5195     07B4  3001               	movlw	1
  5196     07B5                     u4775:
  5197     07B5  1003               	clrc
  5198     07B6  0DA6               	rlf	__tdiv_to_l_@f1,f
  5199     07B7  0DA7               	rlf	__tdiv_to_l_@f1+1,f
  5200     07B8  0DA8               	rlf	__tdiv_to_l_@f1+2,f
  5201     07B9  3EFF               	addlw	-1
  5202     07BA  1D03               	skipz
  5203     07BB  2FB5               	goto	u4775
  5204     07BC                     l3167:
  5205     07BC  3001               	movlw	1
  5206     07BD  02B5               	subwf	__tdiv_to_l_@cntr,f
  5207     07BE  1D03               	btfss	3,2
  5208     07BF  2FC1               	goto	u4781
  5209     07C0  2FC2               	goto	u4780
  5210     07C1                     u4781:
  5211     07C1  2F92               	goto	l3157
  5212     07C2                     u4780:
  5213     07C2                     l679:
  5214     07C2  1FB6               	btfss	__tdiv_to_l_@exp1,7
  5215     07C3  2FC5               	goto	u4791
  5216     07C4  2FC6               	goto	u4790
  5217     07C5                     u4791:
  5218     07C5  2FE0               	goto	l3177
  5219     07C6                     u4790:
  5220     07C6                     l3169:
  5221     07C6  0836               	movf	__tdiv_to_l_@exp1,w
  5222     07C7  3A80               	xorlw	128
  5223     07C8  3E97               	addlw	151
  5224     07C9  1803               	skipnc
  5225     07CA  2FCC               	goto	u4801
  5226     07CB  2FCD               	goto	u4800
  5227     07CC                     u4801:
  5228     07CC  2FCE               	goto	l3175
  5229     07CD                     u4800:
  5230     07CD  2F5A               	goto	l3139
  5231     07CE                     l3175:
  5232     07CE  3001               	movlw	1
  5233     07CF                     u4815:
  5234     07CF  1003               	clrc
  5235     07D0  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  5236     07D1  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  5237     07D2  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  5238     07D3  0CB1               	rrf	__tdiv_to_l_@quot,f
  5239     07D4  3EFF               	addlw	-1
  5240     07D5  1D03               	skipz
  5241     07D6  2FCF               	goto	u4815
  5242     07D7  3001               	movlw	1
  5243     07D8  00AE               	movwf	??__tdiv_to_l_
  5244     07D9  082E               	movf	??__tdiv_to_l_,w
  5245     07DA  07B6               	addwf	__tdiv_to_l_@exp1,f
  5246     07DB  1D03               	btfss	3,2
  5247     07DC  2FDE               	goto	u4821
  5248     07DD  2FDF               	goto	u4820
  5249     07DE                     u4821:
  5250     07DE  2FCE               	goto	l3175
  5251     07DF                     u4820:
  5252     07DF  2FF7               	goto	l3185
  5253     07E0                     l3177:
  5254     07E0  3018               	movlw	24
  5255     07E1  0236               	subwf	__tdiv_to_l_@exp1,w
  5256     07E2  1C03               	skipc
  5257     07E3  2FE5               	goto	u4831
  5258     07E4  2FE6               	goto	u4830
  5259     07E5                     u4831:
  5260     07E5  2FF2               	goto	l686
  5261     07E6                     u4830:
  5262     07E6  2F5A               	goto	l3139
  5263     07E7                     l3183:
  5264     07E7  3001               	movlw	1
  5265     07E8  00AE               	movwf	??__tdiv_to_l_
  5266     07E9                     u4845:
  5267     07E9  1003               	clrc
  5268     07EA  0DB1               	rlf	__tdiv_to_l_@quot,f
  5269     07EB  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  5270     07EC  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  5271     07ED  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  5272     07EE  0BAE               	decfsz	??__tdiv_to_l_,f
  5273     07EF  2FE9               	goto	u4845
  5274     07F0  3001               	movlw	1
  5275     07F1  02B6               	subwf	__tdiv_to_l_@exp1,f
  5276     07F2                     l686:
  5277     07F2  0836               	movf	__tdiv_to_l_@exp1,w
  5278     07F3  1D03               	btfss	3,2
  5279     07F4  2FF6               	goto	u4851
  5280     07F5  2FF7               	goto	u4850
  5281     07F6                     u4851:
  5282     07F6  2FE7               	goto	l3183
  5283     07F7                     u4850:
  5284     07F7                     l3185:
  5285     07F7  0834               	movf	__tdiv_to_l_@quot+3,w
  5286     07F8  00A9               	movwf	?__tdiv_to_l_+3
  5287     07F9  0833               	movf	__tdiv_to_l_@quot+2,w
  5288     07FA  00A8               	movwf	?__tdiv_to_l_+2
  5289     07FB  0832               	movf	__tdiv_to_l_@quot+1,w
  5290     07FC  00A7               	movwf	?__tdiv_to_l_+1
  5291     07FD  0831               	movf	__tdiv_to_l_@quot,w
  5292     07FE  00A6               	movwf	?__tdiv_to_l_
  5293     07FF                     l675:
  5294     07FF  0008               	return
  5295     0800                     __end_of__tdiv_to_l_:
  5296                           
  5297                           	psect	text11
  5298     1E8E                     __ptext11:	
  5299 ;; *************** function __div_to_l_ *****************
  5300 ;; Defined at:
  5301 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  f1              4    6[BANK0 ] unsigned long 
  5304 ;;  f2              4   10[BANK0 ] unsigned long 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  quot            4   15[BANK0 ] unsigned long 
  5307 ;;  exp1            1   20[BANK0 ] unsigned char 
  5308 ;;  cntr            1   19[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  4    6[BANK0 ] unsigned long 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       8       0       0       0
  5319 ;;      Locals:         0       6       0       0       0
  5320 ;;      Temps:          0       1       0       0       0
  5321 ;;      Totals:         0      15       0       0       0
  5322 ;;Total ram usage:       15 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 2
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		_sprintf
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332     1E8E                     __div_to_l_:	
  5333                           ;psect for function __div_to_l_
  5334                           
  5335     1E8E                     l3189:	
  5336                           ;incstack = 0
  5337                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5338                           
  5339     1E8E  1003               	clrc
  5340     1E8F  1283               	bcf	3,5	;RP0=0, select bank0
  5341     1E90  1303               	bcf	3,6	;RP1=0, select bank0
  5342     1E91  0D28               	rlf	__div_to_l_@f1+2,w
  5343     1E92  0D29               	rlf	__div_to_l_@f1+3,w
  5344     1E93  00B4               	movwf	__div_to_l_@exp1
  5345     1E94  0834               	movf	__div_to_l_@exp1,w
  5346     1E95  1D03               	btfss	3,2
  5347     1E96  2E98               	goto	u4861
  5348     1E97  2E99               	goto	u4860
  5349     1E98                     u4861:
  5350     1E98  2EA2               	goto	l3195
  5351     1E99                     u4860:
  5352     1E99                     l3191:
  5353     1E99  3000               	movlw	0
  5354     1E9A  00A9               	movwf	?__div_to_l_+3
  5355     1E9B  3000               	movlw	0
  5356     1E9C  00A8               	movwf	?__div_to_l_+2
  5357     1E9D  3000               	movlw	0
  5358     1E9E  00A7               	movwf	?__div_to_l_+1
  5359     1E9F  3000               	movlw	0
  5360     1EA0  00A6               	movwf	?__div_to_l_
  5361     1EA1  2F45               	goto	l628
  5362     1EA2                     l3195:
  5363     1EA2  1003               	clrc
  5364     1EA3  0D2C               	rlf	__div_to_l_@f2+2,w
  5365     1EA4  0D2D               	rlf	__div_to_l_@f2+3,w
  5366     1EA5  00B3               	movwf	__div_to_l_@cntr
  5367     1EA6  0833               	movf	__div_to_l_@cntr,w
  5368     1EA7  1D03               	btfss	3,2
  5369     1EA8  2EAA               	goto	u4871
  5370     1EA9  2EAB               	goto	u4870
  5371     1EAA                     u4871:
  5372     1EAA  2EAC               	goto	l629
  5373     1EAB                     u4870:
  5374     1EAB  2E99               	goto	l3191
  5375     1EAC                     l629:
  5376     1EAC  17A8               	bsf	__div_to_l_@f1+2,7
  5377     1EAD                     l3201:
  5378     1EAD  30FF               	movlw	255
  5379     1EAE  05A6               	andwf	__div_to_l_@f1,f
  5380     1EAF  30FF               	movlw	255
  5381     1EB0  05A7               	andwf	__div_to_l_@f1+1,f
  5382     1EB1  30FF               	movlw	255
  5383     1EB2  05A8               	andwf	__div_to_l_@f1+2,f
  5384     1EB3  3000               	movlw	0
  5385     1EB4  05A9               	andwf	__div_to_l_@f1+3,f
  5386     1EB5                     l3203:
  5387     1EB5  17AC               	bsf	__div_to_l_@f2+2,7
  5388     1EB6  30FF               	movlw	255
  5389     1EB7  05AA               	andwf	__div_to_l_@f2,f
  5390     1EB8  30FF               	movlw	255
  5391     1EB9  05AB               	andwf	__div_to_l_@f2+1,f
  5392     1EBA  30FF               	movlw	255
  5393     1EBB  05AC               	andwf	__div_to_l_@f2+2,f
  5394     1EBC  3000               	movlw	0
  5395     1EBD  05AD               	andwf	__div_to_l_@f2+3,f
  5396     1EBE  3000               	movlw	0
  5397     1EBF  00B2               	movwf	__div_to_l_@quot+3
  5398     1EC0  3000               	movlw	0
  5399     1EC1  00B1               	movwf	__div_to_l_@quot+2
  5400     1EC2  3000               	movlw	0
  5401     1EC3  00B0               	movwf	__div_to_l_@quot+1
  5402     1EC4  3000               	movlw	0
  5403     1EC5  00AF               	movwf	__div_to_l_@quot
  5404     1EC6                     l3205:
  5405     1EC6  307F               	movlw	127
  5406     1EC7  02B4               	subwf	__div_to_l_@exp1,f
  5407     1EC8                     l3207:
  5408     1EC8  30A0               	movlw	160
  5409     1EC9  0733               	addwf	__div_to_l_@cntr,w
  5410     1ECA  00AE               	movwf	??__div_to_l_
  5411     1ECB  082E               	movf	??__div_to_l_,w
  5412     1ECC  02B4               	subwf	__div_to_l_@exp1,f
  5413     1ECD  3020               	movlw	32
  5414     1ECE  00B3               	movwf	__div_to_l_@cntr
  5415     1ECF                     l3209:
  5416     1ECF  3001               	movlw	1
  5417     1ED0  00AE               	movwf	??__div_to_l_
  5418     1ED1                     u4885:
  5419     1ED1  1003               	clrc
  5420     1ED2  0DAF               	rlf	__div_to_l_@quot,f
  5421     1ED3  0DB0               	rlf	__div_to_l_@quot+1,f
  5422     1ED4  0DB1               	rlf	__div_to_l_@quot+2,f
  5423     1ED5  0DB2               	rlf	__div_to_l_@quot+3,f
  5424     1ED6  0BAE               	decfsz	??__div_to_l_,f
  5425     1ED7  2ED1               	goto	u4885
  5426     1ED8                     l3211:
  5427     1ED8  082D               	movf	__div_to_l_@f2+3,w
  5428     1ED9  0229               	subwf	__div_to_l_@f1+3,w
  5429     1EDA  1D03               	skipz
  5430     1EDB  2EE6               	goto	u4895
  5431     1EDC  082C               	movf	__div_to_l_@f2+2,w
  5432     1EDD  0228               	subwf	__div_to_l_@f1+2,w
  5433     1EDE  1D03               	skipz
  5434     1EDF  2EE6               	goto	u4895
  5435     1EE0  082B               	movf	__div_to_l_@f2+1,w
  5436     1EE1  0227               	subwf	__div_to_l_@f1+1,w
  5437     1EE2  1D03               	skipz
  5438     1EE3  2EE6               	goto	u4895
  5439     1EE4  082A               	movf	__div_to_l_@f2,w
  5440     1EE5  0226               	subwf	__div_to_l_@f1,w
  5441     1EE6                     u4895:
  5442     1EE6  1C03               	skipc
  5443     1EE7  2EE9               	goto	u4891
  5444     1EE8  2EEA               	goto	u4890
  5445     1EE9                     u4891:
  5446     1EE9  2EF9               	goto	l3217
  5447     1EEA                     u4890:
  5448     1EEA                     l3213:
  5449     1EEA  082A               	movf	__div_to_l_@f2,w
  5450     1EEB  02A6               	subwf	__div_to_l_@f1,f
  5451     1EEC  082B               	movf	__div_to_l_@f2+1,w
  5452     1EED  1C03               	skipc
  5453     1EEE  0F2B               	incfsz	__div_to_l_@f2+1,w
  5454     1EEF  02A7               	subwf	__div_to_l_@f1+1,f
  5455     1EF0  082C               	movf	__div_to_l_@f2+2,w
  5456     1EF1  1C03               	skipc
  5457     1EF2  0F2C               	incfsz	__div_to_l_@f2+2,w
  5458     1EF3  02A8               	subwf	__div_to_l_@f1+2,f
  5459     1EF4  082D               	movf	__div_to_l_@f2+3,w
  5460     1EF5  1C03               	skipc
  5461     1EF6  0F2D               	incfsz	__div_to_l_@f2+3,w
  5462     1EF7  02A9               	subwf	__div_to_l_@f1+3,f
  5463     1EF8                     l3215:
  5464     1EF8  142F               	bsf	__div_to_l_@quot,0
  5465     1EF9                     l3217:
  5466     1EF9  3001               	movlw	1
  5467     1EFA  00AE               	movwf	??__div_to_l_
  5468     1EFB                     u4905:
  5469     1EFB  1003               	clrc
  5470     1EFC  0DA6               	rlf	__div_to_l_@f1,f
  5471     1EFD  0DA7               	rlf	__div_to_l_@f1+1,f
  5472     1EFE  0DA8               	rlf	__div_to_l_@f1+2,f
  5473     1EFF  0DA9               	rlf	__div_to_l_@f1+3,f
  5474     1F00  0BAE               	decfsz	??__div_to_l_,f
  5475     1F01  2EFB               	goto	u4905
  5476     1F02                     l3219:
  5477     1F02  3001               	movlw	1
  5478     1F03  02B3               	subwf	__div_to_l_@cntr,f
  5479     1F04  1D03               	btfss	3,2
  5480     1F05  2F07               	goto	u4911
  5481     1F06  2F08               	goto	u4910
  5482     1F07                     u4911:
  5483     1F07  2ECF               	goto	l3209
  5484     1F08                     u4910:
  5485     1F08                     l632:
  5486     1F08  1FB4               	btfss	__div_to_l_@exp1,7
  5487     1F09  2F0B               	goto	u4921
  5488     1F0A  2F0C               	goto	u4920
  5489     1F0B                     u4921:
  5490     1F0B  2F26               	goto	l3229
  5491     1F0C                     u4920:
  5492     1F0C                     l3221:
  5493     1F0C  0834               	movf	__div_to_l_@exp1,w
  5494     1F0D  3A80               	xorlw	128
  5495     1F0E  3E9F               	addlw	159
  5496     1F0F  1803               	skipnc
  5497     1F10  2F12               	goto	u4931
  5498     1F11  2F13               	goto	u4930
  5499     1F12                     u4931:
  5500     1F12  2F14               	goto	l3227
  5501     1F13                     u4930:
  5502     1F13  2E99               	goto	l3191
  5503     1F14                     l3227:
  5504     1F14  3001               	movlw	1
  5505     1F15                     u4945:
  5506     1F15  1003               	clrc
  5507     1F16  0CB2               	rrf	__div_to_l_@quot+3,f
  5508     1F17  0CB1               	rrf	__div_to_l_@quot+2,f
  5509     1F18  0CB0               	rrf	__div_to_l_@quot+1,f
  5510     1F19  0CAF               	rrf	__div_to_l_@quot,f
  5511     1F1A  3EFF               	addlw	-1
  5512     1F1B  1D03               	skipz
  5513     1F1C  2F15               	goto	u4945
  5514     1F1D  3001               	movlw	1
  5515     1F1E  00AE               	movwf	??__div_to_l_
  5516     1F1F  082E               	movf	??__div_to_l_,w
  5517     1F20  07B4               	addwf	__div_to_l_@exp1,f
  5518     1F21  1D03               	btfss	3,2
  5519     1F22  2F24               	goto	u4951
  5520     1F23  2F25               	goto	u4950
  5521     1F24                     u4951:
  5522     1F24  2F14               	goto	l3227
  5523     1F25                     u4950:
  5524     1F25  2F3D               	goto	l3237
  5525     1F26                     l3229:
  5526     1F26  3020               	movlw	32
  5527     1F27  0234               	subwf	__div_to_l_@exp1,w
  5528     1F28  1C03               	skipc
  5529     1F29  2F2B               	goto	u4961
  5530     1F2A  2F2C               	goto	u4960
  5531     1F2B                     u4961:
  5532     1F2B  2F38               	goto	l639
  5533     1F2C                     u4960:
  5534     1F2C  2E99               	goto	l3191
  5535     1F2D                     l3235:
  5536     1F2D  3001               	movlw	1
  5537     1F2E  00AE               	movwf	??__div_to_l_
  5538     1F2F                     u4975:
  5539     1F2F  1003               	clrc
  5540     1F30  0DAF               	rlf	__div_to_l_@quot,f
  5541     1F31  0DB0               	rlf	__div_to_l_@quot+1,f
  5542     1F32  0DB1               	rlf	__div_to_l_@quot+2,f
  5543     1F33  0DB2               	rlf	__div_to_l_@quot+3,f
  5544     1F34  0BAE               	decfsz	??__div_to_l_,f
  5545     1F35  2F2F               	goto	u4975
  5546     1F36  3001               	movlw	1
  5547     1F37  02B4               	subwf	__div_to_l_@exp1,f
  5548     1F38                     l639:
  5549     1F38  0834               	movf	__div_to_l_@exp1,w
  5550     1F39  1D03               	btfss	3,2
  5551     1F3A  2F3C               	goto	u4981
  5552     1F3B  2F3D               	goto	u4980
  5553     1F3C                     u4981:
  5554     1F3C  2F2D               	goto	l3235
  5555     1F3D                     u4980:
  5556     1F3D                     l3237:
  5557     1F3D  0832               	movf	__div_to_l_@quot+3,w
  5558     1F3E  00A9               	movwf	?__div_to_l_+3
  5559     1F3F  0831               	movf	__div_to_l_@quot+2,w
  5560     1F40  00A8               	movwf	?__div_to_l_+2
  5561     1F41  0830               	movf	__div_to_l_@quot+1,w
  5562     1F42  00A7               	movwf	?__div_to_l_+1
  5563     1F43  082F               	movf	__div_to_l_@quot,w
  5564     1F44  00A6               	movwf	?__div_to_l_
  5565     1F45                     l628:
  5566     1F45  0008               	return
  5567     1F46                     __end_of__div_to_l_:
  5568                           
  5569                           	psect	text12
  5570     1A86                     __ptext12:	
  5571 ;; *************** function ___llmod *****************
  5572 ;; Defined at:
  5573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  divisor         4   20[BANK0 ] unsigned long 
  5576 ;;  dividend        4   24[BANK0 ] unsigned long 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  counter         1   29[BANK0 ] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  4   20[BANK0 ] unsigned long 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5588 ;;      Params:         0       8       0       0       0
  5589 ;;      Locals:         0       1       0       0       0
  5590 ;;      Temps:          0       1       0       0       0
  5591 ;;      Totals:         0      10       0       0       0
  5592 ;;Total ram usage:       10 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 2
  5595 ;; This function calls:
  5596 ;;		Nothing
  5597 ;; This function is called by:
  5598 ;;		_sprintf
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602     1A86                     ___llmod:	
  5603                           ;psect for function ___llmod
  5604                           
  5605     1A86                     l3355:	
  5606                           ;incstack = 0
  5607                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5608                           
  5609     1A86  1283               	bcf	3,5	;RP0=0, select bank0
  5610     1A87  1303               	bcf	3,6	;RP1=0, select bank0
  5611     1A88  0837               	movf	___llmod@divisor+3,w
  5612     1A89  0436               	iorwf	___llmod@divisor+2,w
  5613     1A8A  0435               	iorwf	___llmod@divisor+1,w
  5614     1A8B  0434               	iorwf	___llmod@divisor,w
  5615     1A8C  1903               	skipnz
  5616     1A8D  2A8F               	goto	u5311
  5617     1A8E  2A90               	goto	u5310
  5618     1A8F                     u5311:
  5619     1A8F  2AD3               	goto	l3371
  5620     1A90                     u5310:
  5621     1A90                     l3357:
  5622     1A90  01BD               	clrf	___llmod@counter
  5623     1A91  0ABD               	incf	___llmod@counter,f
  5624     1A92  2AA0               	goto	l3361
  5625     1A93                     l3359:
  5626     1A93  3001               	movlw	1
  5627     1A94  00BC               	movwf	??___llmod
  5628     1A95                     u5325:
  5629     1A95  1003               	clrc
  5630     1A96  0DB4               	rlf	___llmod@divisor,f
  5631     1A97  0DB5               	rlf	___llmod@divisor+1,f
  5632     1A98  0DB6               	rlf	___llmod@divisor+2,f
  5633     1A99  0DB7               	rlf	___llmod@divisor+3,f
  5634     1A9A  0BBC               	decfsz	??___llmod,f
  5635     1A9B  2A95               	goto	u5325
  5636     1A9C  3001               	movlw	1
  5637     1A9D  00BC               	movwf	??___llmod
  5638     1A9E  083C               	movf	??___llmod,w
  5639     1A9F  07BD               	addwf	___llmod@counter,f
  5640     1AA0                     l3361:
  5641     1AA0  1FB7               	btfss	___llmod@divisor+3,7
  5642     1AA1  2AA3               	goto	u5331
  5643     1AA2  2AA4               	goto	u5330
  5644     1AA3                     u5331:
  5645     1AA3  2A93               	goto	l3359
  5646     1AA4                     u5330:
  5647     1AA4                     l3363:
  5648     1AA4  0837               	movf	___llmod@divisor+3,w
  5649     1AA5  023B               	subwf	___llmod@dividend+3,w
  5650     1AA6  1D03               	skipz
  5651     1AA7  2AB2               	goto	u5345
  5652     1AA8  0836               	movf	___llmod@divisor+2,w
  5653     1AA9  023A               	subwf	___llmod@dividend+2,w
  5654     1AAA  1D03               	skipz
  5655     1AAB  2AB2               	goto	u5345
  5656     1AAC  0835               	movf	___llmod@divisor+1,w
  5657     1AAD  0239               	subwf	___llmod@dividend+1,w
  5658     1AAE  1D03               	skipz
  5659     1AAF  2AB2               	goto	u5345
  5660     1AB0  0834               	movf	___llmod@divisor,w
  5661     1AB1  0238               	subwf	___llmod@dividend,w
  5662     1AB2                     u5345:
  5663     1AB2  1C03               	skipc
  5664     1AB3  2AB5               	goto	u5341
  5665     1AB4  2AB6               	goto	u5340
  5666     1AB5                     u5341:
  5667     1AB5  2AC4               	goto	l3367
  5668     1AB6                     u5340:
  5669     1AB6                     l3365:
  5670     1AB6  0834               	movf	___llmod@divisor,w
  5671     1AB7  02B8               	subwf	___llmod@dividend,f
  5672     1AB8  0835               	movf	___llmod@divisor+1,w
  5673     1AB9  1C03               	skipc
  5674     1ABA  0F35               	incfsz	___llmod@divisor+1,w
  5675     1ABB  02B9               	subwf	___llmod@dividend+1,f
  5676     1ABC  0836               	movf	___llmod@divisor+2,w
  5677     1ABD  1C03               	skipc
  5678     1ABE  0F36               	incfsz	___llmod@divisor+2,w
  5679     1ABF  02BA               	subwf	___llmod@dividend+2,f
  5680     1AC0  0837               	movf	___llmod@divisor+3,w
  5681     1AC1  1C03               	skipc
  5682     1AC2  0F37               	incfsz	___llmod@divisor+3,w
  5683     1AC3  02BB               	subwf	___llmod@dividend+3,f
  5684     1AC4                     l3367:
  5685     1AC4  3001               	movlw	1
  5686     1AC5                     u5355:
  5687     1AC5  1003               	clrc
  5688     1AC6  0CB7               	rrf	___llmod@divisor+3,f
  5689     1AC7  0CB6               	rrf	___llmod@divisor+2,f
  5690     1AC8  0CB5               	rrf	___llmod@divisor+1,f
  5691     1AC9  0CB4               	rrf	___llmod@divisor,f
  5692     1ACA  3EFF               	addlw	-1
  5693     1ACB  1D03               	skipz
  5694     1ACC  2AC5               	goto	u5355
  5695     1ACD                     l3369:
  5696     1ACD  3001               	movlw	1
  5697     1ACE  02BD               	subwf	___llmod@counter,f
  5698     1ACF  1D03               	btfss	3,2
  5699     1AD0  2AD2               	goto	u5361
  5700     1AD1  2AD3               	goto	u5360
  5701     1AD2                     u5361:
  5702     1AD2  2AA4               	goto	l3363
  5703     1AD3                     u5360:
  5704     1AD3                     l3371:
  5705     1AD3  083B               	movf	___llmod@dividend+3,w
  5706     1AD4  00B7               	movwf	?___llmod+3
  5707     1AD5  083A               	movf	___llmod@dividend+2,w
  5708     1AD6  00B6               	movwf	?___llmod+2
  5709     1AD7  0839               	movf	___llmod@dividend+1,w
  5710     1AD8  00B5               	movwf	?___llmod+1
  5711     1AD9  0838               	movf	___llmod@dividend,w
  5712     1ADA  00B4               	movwf	?___llmod
  5713     1ADB                     l714:
  5714     1ADB  0008               	return
  5715     1ADC                     __end_of___llmod:
  5716                           
  5717                           	psect	text13
  5718     1B9E                     __ptext13:	
  5719 ;; *************** function ___lldiv *****************
  5720 ;; Defined at:
  5721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  divisor         4    6[BANK0 ] unsigned long 
  5724 ;;  dividend        4   10[BANK0 ] unsigned long 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  quotient        4   15[BANK0 ] unsigned long 
  5727 ;;  counter         1   19[BANK0 ] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  4    6[BANK0 ] unsigned long 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         0       8       0       0       0
  5738 ;;      Locals:         0       5       0       0       0
  5739 ;;      Temps:          0       1       0       0       0
  5740 ;;      Totals:         0      14       0       0       0
  5741 ;;Total ram usage:       14 bytes
  5742 ;; Hardware stack levels used: 1
  5743 ;; Hardware stack levels required when called: 2
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_sprintf
  5748 ;;		_UART_Init
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752     1B9E                     ___lldiv:	
  5753                           ;psect for function ___lldiv
  5754                           
  5755     1B9E                     l3255:	
  5756                           ;incstack = 0
  5757                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5758                           
  5759     1B9E  3000               	movlw	0
  5760     1B9F  1283               	bcf	3,5	;RP0=0, select bank0
  5761     1BA0  1303               	bcf	3,6	;RP1=0, select bank0
  5762     1BA1  00B2               	movwf	___lldiv@quotient+3
  5763     1BA2  3000               	movlw	0
  5764     1BA3  00B1               	movwf	___lldiv@quotient+2
  5765     1BA4  3000               	movlw	0
  5766     1BA5  00B0               	movwf	___lldiv@quotient+1
  5767     1BA6  3000               	movlw	0
  5768     1BA7  00AF               	movwf	___lldiv@quotient
  5769     1BA8  0829               	movf	___lldiv@divisor+3,w
  5770     1BA9  0428               	iorwf	___lldiv@divisor+2,w
  5771     1BAA  0427               	iorwf	___lldiv@divisor+1,w
  5772     1BAB  0426               	iorwf	___lldiv@divisor,w
  5773     1BAC  1903               	skipnz
  5774     1BAD  2BAF               	goto	u5031
  5775     1BAE  2BB0               	goto	u5030
  5776     1BAF                     u5031:
  5777     1BAF  2BFD               	goto	l3275
  5778     1BB0                     u5030:
  5779     1BB0                     l3257:
  5780     1BB0  01B3               	clrf	___lldiv@counter
  5781     1BB1  0AB3               	incf	___lldiv@counter,f
  5782     1BB2  2BC0               	goto	l3261
  5783     1BB3                     l3259:
  5784     1BB3  3001               	movlw	1
  5785     1BB4  00AE               	movwf	??___lldiv
  5786     1BB5                     u5045:
  5787     1BB5  1003               	clrc
  5788     1BB6  0DA6               	rlf	___lldiv@divisor,f
  5789     1BB7  0DA7               	rlf	___lldiv@divisor+1,f
  5790     1BB8  0DA8               	rlf	___lldiv@divisor+2,f
  5791     1BB9  0DA9               	rlf	___lldiv@divisor+3,f
  5792     1BBA  0BAE               	decfsz	??___lldiv,f
  5793     1BBB  2BB5               	goto	u5045
  5794     1BBC  3001               	movlw	1
  5795     1BBD  00AE               	movwf	??___lldiv
  5796     1BBE  082E               	movf	??___lldiv,w
  5797     1BBF  07B3               	addwf	___lldiv@counter,f
  5798     1BC0                     l3261:
  5799     1BC0  1FA9               	btfss	___lldiv@divisor+3,7
  5800     1BC1  2BC3               	goto	u5051
  5801     1BC2  2BC4               	goto	u5050
  5802     1BC3                     u5051:
  5803     1BC3  2BB3               	goto	l3259
  5804     1BC4                     u5050:
  5805     1BC4                     l3263:
  5806     1BC4  3001               	movlw	1
  5807     1BC5  00AE               	movwf	??___lldiv
  5808     1BC6                     u5065:
  5809     1BC6  1003               	clrc
  5810     1BC7  0DAF               	rlf	___lldiv@quotient,f
  5811     1BC8  0DB0               	rlf	___lldiv@quotient+1,f
  5812     1BC9  0DB1               	rlf	___lldiv@quotient+2,f
  5813     1BCA  0DB2               	rlf	___lldiv@quotient+3,f
  5814     1BCB  0BAE               	decfsz	??___lldiv,f
  5815     1BCC  2BC6               	goto	u5065
  5816     1BCD                     l3265:
  5817     1BCD  0829               	movf	___lldiv@divisor+3,w
  5818     1BCE  022D               	subwf	___lldiv@dividend+3,w
  5819     1BCF  1D03               	skipz
  5820     1BD0  2BDB               	goto	u5075
  5821     1BD1  0828               	movf	___lldiv@divisor+2,w
  5822     1BD2  022C               	subwf	___lldiv@dividend+2,w
  5823     1BD3  1D03               	skipz
  5824     1BD4  2BDB               	goto	u5075
  5825     1BD5  0827               	movf	___lldiv@divisor+1,w
  5826     1BD6  022B               	subwf	___lldiv@dividend+1,w
  5827     1BD7  1D03               	skipz
  5828     1BD8  2BDB               	goto	u5075
  5829     1BD9  0826               	movf	___lldiv@divisor,w
  5830     1BDA  022A               	subwf	___lldiv@dividend,w
  5831     1BDB                     u5075:
  5832     1BDB  1C03               	skipc
  5833     1BDC  2BDE               	goto	u5071
  5834     1BDD  2BDF               	goto	u5070
  5835     1BDE                     u5071:
  5836     1BDE  2BEE               	goto	l3271
  5837     1BDF                     u5070:
  5838     1BDF                     l3267:
  5839     1BDF  0826               	movf	___lldiv@divisor,w
  5840     1BE0  02AA               	subwf	___lldiv@dividend,f
  5841     1BE1  0827               	movf	___lldiv@divisor+1,w
  5842     1BE2  1C03               	skipc
  5843     1BE3  0F27               	incfsz	___lldiv@divisor+1,w
  5844     1BE4  02AB               	subwf	___lldiv@dividend+1,f
  5845     1BE5  0828               	movf	___lldiv@divisor+2,w
  5846     1BE6  1C03               	skipc
  5847     1BE7  0F28               	incfsz	___lldiv@divisor+2,w
  5848     1BE8  02AC               	subwf	___lldiv@dividend+2,f
  5849     1BE9  0829               	movf	___lldiv@divisor+3,w
  5850     1BEA  1C03               	skipc
  5851     1BEB  0F29               	incfsz	___lldiv@divisor+3,w
  5852     1BEC  02AD               	subwf	___lldiv@dividend+3,f
  5853     1BED                     l3269:
  5854     1BED  142F               	bsf	___lldiv@quotient,0
  5855     1BEE                     l3271:
  5856     1BEE  3001               	movlw	1
  5857     1BEF                     u5085:
  5858     1BEF  1003               	clrc
  5859     1BF0  0CA9               	rrf	___lldiv@divisor+3,f
  5860     1BF1  0CA8               	rrf	___lldiv@divisor+2,f
  5861     1BF2  0CA7               	rrf	___lldiv@divisor+1,f
  5862     1BF3  0CA6               	rrf	___lldiv@divisor,f
  5863     1BF4  3EFF               	addlw	-1
  5864     1BF5  1D03               	skipz
  5865     1BF6  2BEF               	goto	u5085
  5866     1BF7                     l3273:
  5867     1BF7  3001               	movlw	1
  5868     1BF8  02B3               	subwf	___lldiv@counter,f
  5869     1BF9  1D03               	btfss	3,2
  5870     1BFA  2BFC               	goto	u5091
  5871     1BFB  2BFD               	goto	u5090
  5872     1BFC                     u5091:
  5873     1BFC  2BC4               	goto	l3263
  5874     1BFD                     u5090:
  5875     1BFD                     l3275:
  5876     1BFD  0832               	movf	___lldiv@quotient+3,w
  5877     1BFE  00A9               	movwf	?___lldiv+3
  5878     1BFF  0831               	movf	___lldiv@quotient+2,w
  5879     1C00  00A8               	movwf	?___lldiv+2
  5880     1C01  0830               	movf	___lldiv@quotient+1,w
  5881     1C02  00A7               	movwf	?___lldiv+1
  5882     1C03  082F               	movf	___lldiv@quotient,w
  5883     1C04  00A6               	movwf	?___lldiv
  5884     1C05                     l494:
  5885     1C05  0008               	return
  5886     1C06                     __end_of___lldiv:
  5887                           
  5888                           	psect	text14
  5889     1918                     __ptext14:	
  5890 ;; *************** function ___flsub *****************
  5891 ;; Defined at:
  5892 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  a               4   24[BANK1 ] unsigned long 
  5895 ;;  b               4   28[BANK1 ] unsigned long 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;		None
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  4   24[BANK1 ] unsigned long 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       0       8       0       0
  5908 ;;      Locals:         0       0       0       0       0
  5909 ;;      Temps:          0       0       0       0       0
  5910 ;;      Totals:         0       0       8       0       0
  5911 ;;Total ram usage:        8 bytes
  5912 ;; Hardware stack levels used: 1
  5913 ;; Hardware stack levels required when called: 3
  5914 ;; This function calls:
  5915 ;;		___fladd
  5916 ;; This function is called by:
  5917 ;;		_sprintf
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921     1918                     ___flsub:	
  5922                           ;psect for function ___flsub
  5923                           
  5924     1918                     l4219:	
  5925                           ;incstack = 0
  5926                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5927                           
  5928     1918  3080               	movlw	128
  5929     1919  1683               	bsf	3,5	;RP0=1, select bank1
  5930     191A  1303               	bcf	3,6	;RP1=0, select bank1
  5931     191B  06BB               	xorwf	(___flsub@a+3)^(0+128),f
  5932     191C                     l4221:
  5933     191C  083F               	movf	(___flsub@b+3)^(0+128),w
  5934     191D  00A3               	movwf	(___fladd@b+3)^(0+128)
  5935     191E  083E               	movf	(___flsub@b+2)^(0+128),w
  5936     191F  00A2               	movwf	(___fladd@b+2)^(0+128)
  5937     1920  083D               	movf	(___flsub@b+1)^(0+128),w
  5938     1921  00A1               	movwf	(___fladd@b+1)^(0+128)
  5939     1922  083C               	movf	___flsub@b^(0+128),w
  5940     1923  00A0               	movwf	___fladd@b^(0+128)
  5941     1924  083B               	movf	(___flsub@a+3)^(0+128),w
  5942     1925  00A7               	movwf	(___fladd@a+3)^(0+128)
  5943     1926  083A               	movf	(___flsub@a+2)^(0+128),w
  5944     1927  00A6               	movwf	(___fladd@a+2)^(0+128)
  5945     1928  0839               	movf	(___flsub@a+1)^(0+128),w
  5946     1929  00A5               	movwf	(___fladd@a+1)^(0+128)
  5947     192A  0838               	movf	___flsub@a^(0+128),w
  5948     192B  00A4               	movwf	___fladd@a^(0+128)
  5949     192C  120A  118A  24F1  160A  158A  	fcall	___fladd
  5950     1931  1683               	bsf	3,5	;RP0=1, select bank1
  5951     1932  1303               	bcf	3,6	;RP1=0, select bank1
  5952     1933  0823               	movf	(?___fladd+3)^(0+128),w
  5953     1934  00BB               	movwf	(?___flsub+3)^(0+128)
  5954     1935  0822               	movf	(?___fladd+2)^(0+128),w
  5955     1936  00BA               	movwf	(?___flsub+2)^(0+128)
  5956     1937  0821               	movf	(?___fladd+1)^(0+128),w
  5957     1938  00B9               	movwf	(?___flsub+1)^(0+128)
  5958     1939  0820               	movf	?___fladd^(0+128),w
  5959     193A  00B8               	movwf	?___flsub^(0+128)
  5960     193B                     l831:
  5961     193B  0008               	return
  5962     193C                     __end_of___flsub:
  5963                           
  5964                           	psect	text15
  5965     04F1                     __ptext15:	
  5966 ;; *************** function ___fladd *****************
  5967 ;; Defined at:
  5968 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  b               4    0[BANK1 ] unsigned long 
  5971 ;;  a               4    4[BANK1 ] unsigned long 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  grs             1   19[BANK1 ] unsigned char 
  5974 ;;  bexp            1   18[BANK1 ] unsigned char 
  5975 ;;  aexp            1   17[BANK1 ] unsigned char 
  5976 ;;  signs           1   16[BANK1 ] unsigned char 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  4    0[BANK1 ] unsigned char 
  5979 ;; Registers used:
  5980 ;;		wreg, status,2, status,0, btemp+1
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5986 ;;      Params:         0       0       8       0       0
  5987 ;;      Locals:         0       0       4       0       0
  5988 ;;      Temps:          0       0       8       0       0
  5989 ;;      Totals:         0       0      20       0       0
  5990 ;;Total ram usage:       20 bytes
  5991 ;; Hardware stack levels used: 1
  5992 ;; Hardware stack levels required when called: 2
  5993 ;; This function calls:
  5994 ;;		Nothing
  5995 ;; This function is called by:
  5996 ;;		_sprintf
  5997 ;;		___flsub
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001     04F1                     ___fladd:	
  6002                           ;psect for function ___fladd
  6003                           
  6004     04F1                     l3989:	
  6005                           ;incstack = 0
  6006                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6007                           
  6008     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  6009     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  6010     04F3  0823               	movf	(___fladd@b^(0+128)+3),w
  6011     04F4  3980               	andlw	128
  6012     04F5  00B0               	movwf	___fladd@signs^(0+128)
  6013     04F6                     l3991:
  6014     04F6  0823               	movf	(___fladd@b^(0+128)+3),w
  6015     04F7  00A8               	movwf	??___fladd^(0+128)
  6016     04F8  0728               	addwf	??___fladd^(0+128),w
  6017     04F9  00B2               	movwf	___fladd@bexp^(0+128)
  6018     04FA                     l3993:
  6019     04FA  1FA2               	btfss	(___fladd@b^(0+128)+2),7
  6020     04FB  2CFD               	goto	u6401
  6021     04FC  2CFE               	goto	u6400
  6022     04FD                     u6401:
  6023     04FD  2CFF               	goto	l3997
  6024     04FE                     u6400:
  6025     04FE                     l3995:
  6026     04FE  1432               	bsf	___fladd@bexp^(0+128),0
  6027     04FF                     l3997:
  6028     04FF  0832               	movf	___fladd@bexp^(0+128),w
  6029     0500  1903               	btfsc	3,2
  6030     0501  2D03               	goto	u6411
  6031     0502  2D04               	goto	u6410
  6032     0503                     u6411:
  6033     0503  2D14               	goto	l4007
  6034     0504                     u6410:
  6035     0504                     l3999:
  6036     0504  0A32               	incf	___fladd@bexp^(0+128),w
  6037     0505  1D03               	btfss	3,2
  6038     0506  2D08               	goto	u6421
  6039     0507  2D09               	goto	u6420
  6040     0508                     u6421:
  6041     0508  2D11               	goto	l4003
  6042     0509                     u6420:
  6043     0509                     l4001:
  6044     0509  3000               	movlw	0
  6045     050A  00A3               	movwf	(___fladd@b+3)^(0+128)
  6046     050B  3000               	movlw	0
  6047     050C  00A2               	movwf	(___fladd@b+2)^(0+128)
  6048     050D  3000               	movlw	0
  6049     050E  00A1               	movwf	(___fladd@b+1)^(0+128)
  6050     050F  3000               	movlw	0
  6051     0510  00A0               	movwf	___fladd@b^(0+128)
  6052     0511                     l4003:
  6053     0511  17A2               	bsf	(___fladd@b^(0+128)+2),7
  6054     0512                     l4005:
  6055     0512  01A3               	clrf	(___fladd@b^(0+128)+3)
  6056     0513  2D1C               	goto	l4009
  6057     0514                     l4007:
  6058     0514  3000               	movlw	0
  6059     0515  00A3               	movwf	(___fladd@b+3)^(0+128)
  6060     0516  3000               	movlw	0
  6061     0517  00A2               	movwf	(___fladd@b+2)^(0+128)
  6062     0518  3000               	movlw	0
  6063     0519  00A1               	movwf	(___fladd@b+1)^(0+128)
  6064     051A  3000               	movlw	0
  6065     051B  00A0               	movwf	___fladd@b^(0+128)
  6066     051C                     l4009:
  6067     051C  0827               	movf	(___fladd@a^(0+128)+3),w
  6068     051D  3980               	andlw	128
  6069     051E  00B1               	movwf	___fladd@aexp^(0+128)
  6070     051F                     l4011:
  6071     051F  0831               	movf	___fladd@aexp^(0+128),w
  6072     0520  0630               	xorwf	___fladd@signs^(0+128),w
  6073     0521  1903               	skipnz
  6074     0522  2D24               	goto	u6431
  6075     0523  2D25               	goto	u6430
  6076     0524                     u6431:
  6077     0524  2D26               	goto	l4015
  6078     0525                     u6430:
  6079     0525                     l4013:
  6080     0525  1730               	bsf	___fladd@signs^(0+128),6
  6081     0526                     l4015:
  6082     0526  0827               	movf	(___fladd@a^(0+128)+3),w
  6083     0527  00A8               	movwf	??___fladd^(0+128)
  6084     0528  0728               	addwf	??___fladd^(0+128),w
  6085     0529  00B1               	movwf	___fladd@aexp^(0+128)
  6086     052A                     l4017:
  6087     052A  1FA6               	btfss	(___fladd@a^(0+128)+2),7
  6088     052B  2D2D               	goto	u6441
  6089     052C  2D2E               	goto	u6440
  6090     052D                     u6441:
  6091     052D  2D2F               	goto	l4021
  6092     052E                     u6440:
  6093     052E                     l4019:
  6094     052E  1431               	bsf	___fladd@aexp^(0+128),0
  6095     052F                     l4021:
  6096     052F  0831               	movf	___fladd@aexp^(0+128),w
  6097     0530  1903               	btfsc	3,2
  6098     0531  2D33               	goto	u6451
  6099     0532  2D34               	goto	u6450
  6100     0533                     u6451:
  6101     0533  2D44               	goto	l4031
  6102     0534                     u6450:
  6103     0534                     l4023:
  6104     0534  0A31               	incf	___fladd@aexp^(0+128),w
  6105     0535  1D03               	btfss	3,2
  6106     0536  2D38               	goto	u6461
  6107     0537  2D39               	goto	u6460
  6108     0538                     u6461:
  6109     0538  2D41               	goto	l4027
  6110     0539                     u6460:
  6111     0539                     l4025:
  6112     0539  3000               	movlw	0
  6113     053A  00A7               	movwf	(___fladd@a+3)^(0+128)
  6114     053B  3000               	movlw	0
  6115     053C  00A6               	movwf	(___fladd@a+2)^(0+128)
  6116     053D  3000               	movlw	0
  6117     053E  00A5               	movwf	(___fladd@a+1)^(0+128)
  6118     053F  3000               	movlw	0
  6119     0540  00A4               	movwf	___fladd@a^(0+128)
  6120     0541                     l4027:
  6121     0541  17A6               	bsf	(___fladd@a^(0+128)+2),7
  6122     0542                     l4029:
  6123     0542  01A7               	clrf	(___fladd@a^(0+128)+3)
  6124     0543  2D4C               	goto	l785
  6125     0544                     l4031:
  6126     0544  3000               	movlw	0
  6127     0545  00A7               	movwf	(___fladd@a+3)^(0+128)
  6128     0546  3000               	movlw	0
  6129     0547  00A6               	movwf	(___fladd@a+2)^(0+128)
  6130     0548  3000               	movlw	0
  6131     0549  00A5               	movwf	(___fladd@a+1)^(0+128)
  6132     054A  3000               	movlw	0
  6133     054B  00A4               	movwf	___fladd@a^(0+128)
  6134     054C                     l785:
  6135     054C  0832               	movf	___fladd@bexp^(0+128),w
  6136     054D  0231               	subwf	___fladd@aexp^(0+128),w
  6137     054E  1803               	skipnc
  6138     054F  2D51               	goto	u6471
  6139     0550  2D52               	goto	u6470
  6140     0551                     u6471:
  6141     0551  2D78               	goto	l4067
  6142     0552                     u6470:
  6143     0552                     l4033:
  6144     0552  1F30               	btfss	___fladd@signs^(0+128),6
  6145     0553  2D55               	goto	u6481
  6146     0554  2D56               	goto	u6480
  6147     0555                     u6481:
  6148     0555  2D5A               	goto	l4037
  6149     0556                     u6480:
  6150     0556                     l4035:
  6151     0556  3080               	movlw	128
  6152     0557  00A8               	movwf	??___fladd^(0+128)
  6153     0558  0828               	movf	??___fladd^(0+128),w
  6154     0559  06B0               	xorwf	___fladd@signs^(0+128),f
  6155     055A                     l4037:
  6156     055A  0832               	movf	___fladd@bexp^(0+128),w
  6157     055B  00B3               	movwf	___fladd@grs^(0+128)
  6158     055C                     l4039:
  6159     055C  0831               	movf	___fladd@aexp^(0+128),w
  6160     055D  00B2               	movwf	___fladd@bexp^(0+128)
  6161     055E                     l4041:
  6162     055E  0833               	movf	___fladd@grs^(0+128),w
  6163     055F  00B1               	movwf	___fladd@aexp^(0+128)
  6164     0560                     l4043:
  6165     0560  0820               	movf	___fladd@b^(0+128),w
  6166     0561  00B3               	movwf	___fladd@grs^(0+128)
  6167     0562                     l4045:
  6168     0562  0824               	movf	___fladd@a^(0+128),w
  6169     0563  00A0               	movwf	___fladd@b^(0+128)
  6170     0564                     l4047:
  6171     0564  0833               	movf	___fladd@grs^(0+128),w
  6172     0565  00A4               	movwf	___fladd@a^(0+128)
  6173     0566                     l4049:
  6174     0566  0821               	movf	(___fladd@b^(0+128)+1),w
  6175     0567  00B3               	movwf	___fladd@grs^(0+128)
  6176     0568                     l4051:
  6177     0568  0825               	movf	(___fladd@a^(0+128)+1),w
  6178     0569  00A1               	movwf	(___fladd@b^(0+128)+1)
  6179     056A                     l4053:
  6180     056A  0833               	movf	___fladd@grs^(0+128),w
  6181     056B  00A5               	movwf	(___fladd@a^(0+128)+1)
  6182     056C                     l4055:
  6183     056C  0822               	movf	(___fladd@b^(0+128)+2),w
  6184     056D  00B3               	movwf	___fladd@grs^(0+128)
  6185     056E                     l4057:
  6186     056E  0826               	movf	(___fladd@a^(0+128)+2),w
  6187     056F  00A2               	movwf	(___fladd@b^(0+128)+2)
  6188     0570                     l4059:
  6189     0570  0833               	movf	___fladd@grs^(0+128),w
  6190     0571  00A6               	movwf	(___fladd@a^(0+128)+2)
  6191     0572                     l4061:
  6192     0572  0823               	movf	(___fladd@b^(0+128)+3),w
  6193     0573  00B3               	movwf	___fladd@grs^(0+128)
  6194     0574                     l4063:
  6195     0574  0827               	movf	(___fladd@a^(0+128)+3),w
  6196     0575  00A3               	movwf	(___fladd@b^(0+128)+3)
  6197     0576                     l4065:
  6198     0576  0833               	movf	___fladd@grs^(0+128),w
  6199     0577  00A7               	movwf	(___fladd@a^(0+128)+3)
  6200     0578                     l4067:
  6201     0578  01B3               	clrf	___fladd@grs^(0+128)
  6202     0579                     l4069:
  6203     0579  0831               	movf	___fladd@aexp^(0+128),w
  6204     057A  00A8               	movwf	??___fladd^(0+128)
  6205     057B  01A9               	clrf	(??___fladd^(0+128)+1)
  6206     057C  0829               	movf	(??___fladd+1)^(0+128),w
  6207     057D  00AB               	movwf	((??___fladd+2)^(0+128)+1)
  6208     057E  0832               	movf	___fladd@bexp^(0+128),w
  6209     057F  0228               	subwf	??___fladd^(0+128),w
  6210     0580  00AA               	movwf	(??___fladd+2)^(0+128)
  6211     0581  1C03               	skipc
  6212     0582  03AB               	decf	((??___fladd+2)^(0+128)+1),f
  6213     0583  082B               	movf	(??___fladd+3)^(0+128),w
  6214     0584  3A80               	xorlw	128
  6215     0585  00FF               	movwf	btemp+1
  6216     0586  3080               	movlw	128
  6217     0587  027F               	subwf	btemp+1,w
  6218     0588  1D03               	skipz
  6219     0589  2D8C               	goto	u6495
  6220     058A  301A               	movlw	26
  6221     058B  022A               	subwf	(??___fladd+2)^(0+128),w
  6222     058C                     u6495:
  6223     058C  1C03               	skipc
  6224     058D  2D8F               	goto	u6491
  6225     058E  2D90               	goto	u6490
  6226     058F                     u6491:
  6227     058F  2DC7               	goto	l4085
  6228     0590                     u6490:
  6229     0590                     l4071:
  6230     0590  1683               	bsf	3,5	;RP0=1, select bank1
  6231     0591  1303               	bcf	3,6	;RP1=0, select bank1
  6232     0592  0823               	movf	(___fladd@b+3)^(0+128),w
  6233     0593  0422               	iorwf	(___fladd@b+2)^(0+128),w
  6234     0594  0421               	iorwf	(___fladd@b+1)^(0+128),w
  6235     0595  0420               	iorwf	___fladd@b^(0+128),w
  6236     0596  1D03               	skipz
  6237     0597  2D99               	goto	u6501
  6238     0598  2D9B               	goto	u6500
  6239     0599                     u6501:
  6240     0599  3001               	movlw	1
  6241     059A  2D9C               	goto	u6510
  6242     059B                     u6500:
  6243     059B  3000               	movlw	0
  6244     059C                     u6510:
  6245     059C  00B3               	movwf	___fladd@grs^(0+128)
  6246     059D  3000               	movlw	0
  6247     059E  00A3               	movwf	(___fladd@b+3)^(0+128)
  6248     059F  3000               	movlw	0
  6249     05A0  00A2               	movwf	(___fladd@b+2)^(0+128)
  6250     05A1  3000               	movlw	0
  6251     05A2  00A1               	movwf	(___fladd@b+1)^(0+128)
  6252     05A3  3000               	movlw	0
  6253     05A4  00A0               	movwf	___fladd@b^(0+128)
  6254     05A5  0831               	movf	___fladd@aexp^(0+128),w
  6255     05A6  00B2               	movwf	___fladd@bexp^(0+128)
  6256     05A7  2DCF               	goto	l789
  6257     05A8                     l791:
  6258     05A8  1C33               	btfss	___fladd@grs^(0+128),0
  6259     05A9  2DAB               	goto	u6521
  6260     05AA  2DAC               	goto	u6520
  6261     05AB                     u6521:
  6262     05AB  2DB3               	goto	l4075
  6263     05AC                     u6520:
  6264     05AC                     l4073:
  6265     05AC  0833               	movf	___fladd@grs^(0+128),w
  6266     05AD  00A8               	movwf	??___fladd^(0+128)
  6267     05AE  1003               	clrc
  6268     05AF  0C28               	rrf	??___fladd^(0+128),w
  6269     05B0  3801               	iorlw	1
  6270     05B1  00B3               	movwf	___fladd@grs^(0+128)
  6271     05B2  2DB5               	goto	l4077
  6272     05B3                     l4075:
  6273     05B3  1003               	clrc
  6274     05B4  0CB3               	rrf	___fladd@grs^(0+128),f
  6275     05B5                     l4077:
  6276     05B5  1C20               	btfss	___fladd@b^(0+128),0
  6277     05B6  2DB8               	goto	u6531
  6278     05B7  2DB9               	goto	u6530
  6279     05B8                     u6531:
  6280     05B8  2DBA               	goto	l4081
  6281     05B9                     u6530:
  6282     05B9                     l4079:
  6283     05B9  17B3               	bsf	___fladd@grs^(0+128),7
  6284     05BA                     l4081:
  6285     05BA  3001               	movlw	1
  6286     05BB  00A8               	movwf	??___fladd^(0+128)
  6287     05BC                     u6545:
  6288     05BC  0D23               	rlf	(___fladd@b+3)^(0+128),w
  6289     05BD  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  6290     05BE  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  6291     05BF  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  6292     05C0  0CA0               	rrf	___fladd@b^(0+128),f
  6293     05C1  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  6294     05C2  2DBC               	goto	u6545
  6295     05C3                     l4083:
  6296     05C3  3001               	movlw	1
  6297     05C4  00A8               	movwf	??___fladd^(0+128)
  6298     05C5  0828               	movf	??___fladd^(0+128),w
  6299     05C6  07B2               	addwf	___fladd@bexp^(0+128),f
  6300     05C7                     l4085:
  6301     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  6302     05C8  1303               	bcf	3,6	;RP1=0, select bank1
  6303     05C9  0831               	movf	___fladd@aexp^(0+128),w
  6304     05CA  0232               	subwf	___fladd@bexp^(0+128),w
  6305     05CB  1C03               	skipc
  6306     05CC  2DCE               	goto	u6551
  6307     05CD  2DCF               	goto	u6550
  6308     05CE                     u6551:
  6309     05CE  2DA8               	goto	l791
  6310     05CF                     u6550:
  6311     05CF                     l789:
  6312     05CF  1B30               	btfsc	___fladd@signs^(0+128),6
  6313     05D0  2DD2               	goto	u6561
  6314     05D1  2DD3               	goto	u6560
  6315     05D2                     u6561:
  6316     05D2  2E1C               	goto	l4111
  6317     05D3                     u6560:
  6318     05D3                     l4087:
  6319     05D3  0832               	movf	___fladd@bexp^(0+128),w
  6320     05D4  1D03               	btfss	3,2
  6321     05D5  2DD7               	goto	u6571
  6322     05D6  2DD8               	goto	u6570
  6323     05D7                     u6571:
  6324     05D7  2DE1               	goto	l4093
  6325     05D8                     u6570:
  6326     05D8                     l4089:
  6327     05D8  3000               	movlw	0
  6328     05D9  00A3               	movwf	(?___fladd+3)^(0+128)
  6329     05DA  3000               	movlw	0
  6330     05DB  00A2               	movwf	(?___fladd+2)^(0+128)
  6331     05DC  3000               	movlw	0
  6332     05DD  00A1               	movwf	(?___fladd+1)^(0+128)
  6333     05DE  3000               	movlw	0
  6334     05DF  00A0               	movwf	?___fladd^(0+128)
  6335     05E0  2F48               	goto	l798
  6336     05E1                     l4093:
  6337     05E1  0824               	movf	___fladd@a^(0+128),w
  6338     05E2  07A0               	addwf	___fladd@b^(0+128),f
  6339     05E3  0825               	movf	(___fladd@a+1)^(0+128),w
  6340     05E4  1103               	clrz
  6341     05E5  1803               	skipnc
  6342     05E6  3E01               	addlw	1
  6343     05E7  1903               	skipnz
  6344     05E8  2DEA               	goto	u6581
  6345     05E9  07A1               	addwf	(___fladd@b+1)^(0+128),f
  6346     05EA                     u6581:
  6347     05EA  0826               	movf	(___fladd@a+2)^(0+128),w
  6348     05EB  1103               	clrz
  6349     05EC  1803               	skipnc
  6350     05ED  3E01               	addlw	1
  6351     05EE  1903               	skipnz
  6352     05EF  2DF1               	goto	u6582
  6353     05F0  07A2               	addwf	(___fladd@b+2)^(0+128),f
  6354     05F1                     u6582:
  6355     05F1  0827               	movf	(___fladd@a+3)^(0+128),w
  6356     05F2  1103               	clrz
  6357     05F3  1803               	skipnc
  6358     05F4  3E01               	addlw	1
  6359     05F5  1903               	skipnz
  6360     05F6  2DF8               	goto	u6583
  6361     05F7  07A3               	addwf	(___fladd@b+3)^(0+128),f
  6362     05F8                     u6583:
  6363     05F8                     l4095:
  6364     05F8  1C23               	btfss	(___fladd@b+3)^(0+128),0
  6365     05F9  2DFB               	goto	u6591
  6366     05FA  2DFC               	goto	u6590
  6367     05FB                     u6591:
  6368     05FB  2ED0               	goto	l4145
  6369     05FC                     u6590:
  6370     05FC                     l4097:
  6371     05FC  1C33               	btfss	___fladd@grs^(0+128),0
  6372     05FD  2DFF               	goto	u6601
  6373     05FE  2E00               	goto	u6600
  6374     05FF                     u6601:
  6375     05FF  2E07               	goto	l4101
  6376     0600                     u6600:
  6377     0600                     l4099:
  6378     0600  0833               	movf	___fladd@grs^(0+128),w
  6379     0601  00A8               	movwf	??___fladd^(0+128)
  6380     0602  1003               	clrc
  6381     0603  0C28               	rrf	??___fladd^(0+128),w
  6382     0604  3801               	iorlw	1
  6383     0605  00B3               	movwf	___fladd@grs^(0+128)
  6384     0606  2E09               	goto	l4103
  6385     0607                     l4101:
  6386     0607  1003               	clrc
  6387     0608  0CB3               	rrf	___fladd@grs^(0+128),f
  6388     0609                     l4103:
  6389     0609  1C20               	btfss	___fladd@b^(0+128),0
  6390     060A  2E0C               	goto	u6611
  6391     060B  2E0D               	goto	u6610
  6392     060C                     u6611:
  6393     060C  2E0E               	goto	l4107
  6394     060D                     u6610:
  6395     060D                     l4105:
  6396     060D  17B3               	bsf	___fladd@grs^(0+128),7
  6397     060E                     l4107:
  6398     060E  3001               	movlw	1
  6399     060F  00A8               	movwf	??___fladd^(0+128)
  6400     0610                     u6625:
  6401     0610  0D23               	rlf	(___fladd@b+3)^(0+128),w
  6402     0611  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  6403     0612  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  6404     0613  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  6405     0614  0CA0               	rrf	___fladd@b^(0+128),f
  6406     0615  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  6407     0616  2E10               	goto	u6625
  6408     0617                     l4109:
  6409     0617  3001               	movlw	1
  6410     0618  00A8               	movwf	??___fladd^(0+128)
  6411     0619  0828               	movf	??___fladd^(0+128),w
  6412     061A  07B2               	addwf	___fladd@bexp^(0+128),f
  6413     061B  2ED0               	goto	l4145
  6414     061C                     l4111:
  6415     061C  0823               	movf	(___fladd@b+3)^(0+128),w
  6416     061D  3A80               	xorlw	128
  6417     061E  00FF               	movwf	btemp+1
  6418     061F  0827               	movf	(___fladd@a+3)^(0+128),w
  6419     0620  3A80               	xorlw	128
  6420     0621  027F               	subwf	btemp+1,w
  6421     0622  1D03               	skipz
  6422     0623  2E2E               	goto	u6633
  6423     0624  0826               	movf	(___fladd@a+2)^(0+128),w
  6424     0625  0222               	subwf	(___fladd@b+2)^(0+128),w
  6425     0626  1D03               	skipz
  6426     0627  2E2E               	goto	u6633
  6427     0628  0825               	movf	(___fladd@a+1)^(0+128),w
  6428     0629  0221               	subwf	(___fladd@b+1)^(0+128),w
  6429     062A  1D03               	skipz
  6430     062B  2E2E               	goto	u6633
  6431     062C  0824               	movf	___fladd@a^(0+128),w
  6432     062D  0220               	subwf	___fladd@b^(0+128),w
  6433     062E                     u6633:
  6434     062E  1803               	skipnc
  6435     062F  2E31               	goto	u6631
  6436     0630  2E32               	goto	u6630
  6437     0631                     u6631:
  6438     0631  2E8A               	goto	l4121
  6439     0632                     u6630:
  6440     0632                     l4113:
  6441     0632  30FF               	movlw	255
  6442     0633  00A8               	movwf	??___fladd^(0+128)
  6443     0634  30FF               	movlw	255
  6444     0635  00A9               	movwf	(??___fladd^(0+128)+1)
  6445     0636  30FF               	movlw	255
  6446     0637  00AA               	movwf	(??___fladd^(0+128)+2)
  6447     0638  30FF               	movlw	255
  6448     0639  00AB               	movwf	(??___fladd^(0+128)+3)
  6449     063A  0824               	movf	___fladd@a^(0+128),w
  6450     063B  00AC               	movwf	(??___fladd+4)^(0+128)
  6451     063C  0825               	movf	(___fladd@a+1)^(0+128),w
  6452     063D  00AD               	movwf	((??___fladd+4)^(0+128)+1)
  6453     063E  0826               	movf	(___fladd@a+2)^(0+128),w
  6454     063F  00AE               	movwf	((??___fladd+4)^(0+128)+2)
  6455     0640  0827               	movf	(___fladd@a+3)^(0+128),w
  6456     0641  00AF               	movwf	((??___fladd+4)^(0+128)+3)
  6457     0642  0820               	movf	___fladd@b^(0+128),w
  6458     0643  02AC               	subwf	(??___fladd+4)^(0+128),f
  6459     0644  0821               	movf	(___fladd@b+1)^(0+128),w
  6460     0645  1C03               	skipc
  6461     0646  0F21               	incfsz	(___fladd@b+1)^(0+128),w
  6462     0647  2E49               	goto	u6641
  6463     0648  2E4A               	goto	u6642
  6464     0649                     u6641:
  6465     0649  02AD               	subwf	((??___fladd+4)^(0+128)+1),f
  6466     064A                     u6642:
  6467     064A  0822               	movf	(___fladd@b+2)^(0+128),w
  6468     064B  1C03               	skipc
  6469     064C  0F22               	incfsz	(___fladd@b+2)^(0+128),w
  6470     064D  2E4F               	goto	u6643
  6471     064E  2E50               	goto	u6644
  6472     064F                     u6643:
  6473     064F  02AE               	subwf	((??___fladd+4)^(0+128)+2),f
  6474     0650                     u6644:
  6475     0650  0823               	movf	(___fladd@b+3)^(0+128),w
  6476     0651  1C03               	skipc
  6477     0652  0F23               	incfsz	(___fladd@b+3)^(0+128),w
  6478     0653  2E55               	goto	u6645
  6479     0654  2E56               	goto	u6646
  6480     0655                     u6645:
  6481     0655  02AF               	subwf	((??___fladd+4)^(0+128)+3),f
  6482     0656                     u6646:
  6483     0656  082C               	movf	(??___fladd+4)^(0+128),w
  6484     0657  07A8               	addwf	??___fladd^(0+128),f
  6485     0658  082D               	movf	(??___fladd+5)^(0+128),w
  6486     0659  1803               	skipnc
  6487     065A  0F2D               	incfsz	(??___fladd+5)^(0+128),w
  6488     065B  2E5D               	goto	u6650
  6489     065C  2E5E               	goto	u6651
  6490     065D                     u6650:
  6491     065D  07A9               	addwf	(??___fladd^(0+128)+1),f
  6492     065E                     u6651:
  6493     065E  082E               	movf	(??___fladd+6)^(0+128),w
  6494     065F  1803               	skipnc
  6495     0660  0F2E               	incfsz	(??___fladd+6)^(0+128),w
  6496     0661  2E63               	goto	u6652
  6497     0662  2E64               	goto	u6653
  6498     0663                     u6652:
  6499     0663  07AA               	addwf	(??___fladd^(0+128)+2),f
  6500     0664                     u6653:
  6501     0664  082F               	movf	(??___fladd+7)^(0+128),w
  6502     0665  1803               	skipnc
  6503     0666  0A2F               	incf	(??___fladd+7)^(0+128),w
  6504     0667  07AB               	addwf	(??___fladd^(0+128)+3),f
  6505     0668  082B               	movf	(??___fladd+3)^(0+128),w
  6506     0669  00A3               	movwf	(___fladd@b+3)^(0+128)
  6507     066A  082A               	movf	(??___fladd+2)^(0+128),w
  6508     066B  00A2               	movwf	(___fladd@b+2)^(0+128)
  6509     066C  0829               	movf	(??___fladd+1)^(0+128),w
  6510     066D  00A1               	movwf	(___fladd@b+1)^(0+128)
  6511     066E  0828               	movf	??___fladd^(0+128),w
  6512     066F  00A0               	movwf	___fladd@b^(0+128)
  6513     0670                     l4115:
  6514     0670  3080               	movlw	128
  6515     0671  00A8               	movwf	??___fladd^(0+128)
  6516     0672  0828               	movf	??___fladd^(0+128),w
  6517     0673  06B0               	xorwf	___fladd@signs^(0+128),f
  6518     0674  09B3               	comf	___fladd@grs^(0+128),f
  6519     0675  0AB3               	incf	___fladd@grs^(0+128),f
  6520     0676                     l4117:
  6521     0676  0833               	movf	___fladd@grs^(0+128),w
  6522     0677  1D03               	btfss	3,2
  6523     0678  2E7A               	goto	u6661
  6524     0679  2E7B               	goto	u6660
  6525     067A                     u6661:
  6526     067A  2E98               	goto	l806
  6527     067B                     u6660:
  6528     067B                     l4119:
  6529     067B  3001               	movlw	1
  6530     067C  07A0               	addwf	___fladd@b^(0+128),f
  6531     067D  3000               	movlw	0
  6532     067E  1803               	skipnc
  6533     067F  3001               	movlw	1
  6534     0680  07A1               	addwf	(___fladd@b+1)^(0+128),f
  6535     0681  3000               	movlw	0
  6536     0682  1803               	skipnc
  6537     0683  3001               	movlw	1
  6538     0684  07A2               	addwf	(___fladd@b+2)^(0+128),f
  6539     0685  3000               	movlw	0
  6540     0686  1803               	skipnc
  6541     0687  3001               	movlw	1
  6542     0688  07A3               	addwf	(___fladd@b+3)^(0+128),f
  6543     0689  2E98               	goto	l806
  6544     068A                     l4121:
  6545     068A  0824               	movf	___fladd@a^(0+128),w
  6546     068B  02A0               	subwf	___fladd@b^(0+128),f
  6547     068C  0825               	movf	(___fladd@a+1)^(0+128),w
  6548     068D  1C03               	skipc
  6549     068E  0F25               	incfsz	(___fladd@a+1)^(0+128),w
  6550     068F  02A1               	subwf	(___fladd@b+1)^(0+128),f
  6551     0690  0826               	movf	(___fladd@a+2)^(0+128),w
  6552     0691  1C03               	skipc
  6553     0692  0F26               	incfsz	(___fladd@a+2)^(0+128),w
  6554     0693  02A2               	subwf	(___fladd@b+2)^(0+128),f
  6555     0694  0827               	movf	(___fladd@a+3)^(0+128),w
  6556     0695  1C03               	skipc
  6557     0696  0F27               	incfsz	(___fladd@a+3)^(0+128),w
  6558     0697  02A3               	subwf	(___fladd@b+3)^(0+128),f
  6559     0698                     l806:
  6560     0698  0823               	movf	(___fladd@b+3)^(0+128),w
  6561     0699  0422               	iorwf	(___fladd@b+2)^(0+128),w
  6562     069A  0421               	iorwf	(___fladd@b+1)^(0+128),w
  6563     069B  0420               	iorwf	___fladd@b^(0+128),w
  6564     069C  1D03               	skipz
  6565     069D  2E9F               	goto	u6671
  6566     069E  2EA0               	goto	u6670
  6567     069F                     u6671:
  6568     069F  2ECC               	goto	l4143
  6569     06A0                     u6670:
  6570     06A0                     l4123:
  6571     06A0  0833               	movf	___fladd@grs^(0+128),w
  6572     06A1  1D03               	btfss	3,2
  6573     06A2  2EA4               	goto	u6681
  6574     06A3  2EA5               	goto	u6680
  6575     06A4                     u6681:
  6576     06A4  2ECC               	goto	l4143
  6577     06A5                     u6680:
  6578     06A5                     l4125:
  6579     06A5  3000               	movlw	0
  6580     06A6  00A3               	movwf	(?___fladd+3)^(0+128)
  6581     06A7  3000               	movlw	0
  6582     06A8  00A2               	movwf	(?___fladd+2)^(0+128)
  6583     06A9  3000               	movlw	0
  6584     06AA  00A1               	movwf	(?___fladd+1)^(0+128)
  6585     06AB  3000               	movlw	0
  6586     06AC  00A0               	movwf	?___fladd^(0+128)
  6587     06AD  2F48               	goto	l798
  6588     06AE                     l4129:
  6589     06AE  3001               	movlw	1
  6590     06AF  00A8               	movwf	??___fladd^(0+128)
  6591     06B0                     u6695:
  6592     06B0  1003               	clrc
  6593     06B1  0DA0               	rlf	___fladd@b^(0+128),f
  6594     06B2  0DA1               	rlf	(___fladd@b+1)^(0+128),f
  6595     06B3  0DA2               	rlf	(___fladd@b+2)^(0+128),f
  6596     06B4  0DA3               	rlf	(___fladd@b+3)^(0+128),f
  6597     06B5  0BA8               	decfsz	??___fladd^(0+128),f
  6598     06B6  2EB0               	goto	u6695
  6599     06B7                     l4131:
  6600     06B7  1FB3               	btfss	___fladd@grs^(0+128),7
  6601     06B8  2EBA               	goto	u6701
  6602     06B9  2EBB               	goto	u6700
  6603     06BA                     u6701:
  6604     06BA  2EBC               	goto	l810
  6605     06BB                     u6700:
  6606     06BB                     l4133:
  6607     06BB  1420               	bsf	___fladd@b^(0+128),0
  6608     06BC                     l810:
  6609     06BC  1C33               	btfss	___fladd@grs^(0+128),0
  6610     06BD  2EBF               	goto	u6711
  6611     06BE  2EC0               	goto	u6710
  6612     06BF                     u6711:
  6613     06BF  2EC3               	goto	l4137
  6614     06C0                     u6710:
  6615     06C0                     l4135:
  6616     06C0  1403               	setc
  6617     06C1  0DB3               	rlf	___fladd@grs^(0+128),f
  6618     06C2  2EC5               	goto	l4139
  6619     06C3                     l4137:
  6620     06C3  1003               	clrc
  6621     06C4  0DB3               	rlf	___fladd@grs^(0+128),f
  6622     06C5                     l4139:
  6623     06C5  0832               	movf	___fladd@bexp^(0+128),w
  6624     06C6  1903               	btfsc	3,2
  6625     06C7  2EC9               	goto	u6721
  6626     06C8  2ECA               	goto	u6720
  6627     06C9                     u6721:
  6628     06C9  2ECC               	goto	l4143
  6629     06CA                     u6720:
  6630     06CA                     l4141:
  6631     06CA  3001               	movlw	1
  6632     06CB  02B2               	subwf	___fladd@bexp^(0+128),f
  6633     06CC                     l4143:
  6634     06CC  1FA2               	btfss	(___fladd@b+2)^(0+128),7
  6635     06CD  2ECF               	goto	u6731
  6636     06CE  2ED0               	goto	u6730
  6637     06CF                     u6731:
  6638     06CF  2EAE               	goto	l4129
  6639     06D0                     u6730:
  6640     06D0                     l4145:
  6641     06D0  01B1               	clrf	___fladd@aexp^(0+128)
  6642     06D1                     l4147:
  6643     06D1  1FB3               	btfss	___fladd@grs^(0+128),7
  6644     06D2  2ED4               	goto	u6741
  6645     06D3  2ED5               	goto	u6740
  6646     06D4                     u6741:
  6647     06D4  2EE3               	goto	l4155
  6648     06D5                     u6740:
  6649     06D5                     l4149:
  6650     06D5  0833               	movf	___fladd@grs^(0+128),w
  6651     06D6  397F               	andlw	127
  6652     06D7  1903               	btfsc	3,2
  6653     06D8  2EDA               	goto	u6751
  6654     06D9  2EDB               	goto	u6750
  6655     06DA                     u6751:
  6656     06DA  2EDE               	goto	l816
  6657     06DB                     u6750:
  6658     06DB                     l4151:
  6659     06DB  01B1               	clrf	___fladd@aexp^(0+128)
  6660     06DC  0AB1               	incf	___fladd@aexp^(0+128),f
  6661     06DD  2EE3               	goto	l4155
  6662     06DE                     l816:
  6663     06DE  1C20               	btfss	___fladd@b^(0+128),0
  6664     06DF  2EE1               	goto	u6761
  6665     06E0  2EE2               	goto	u6760
  6666     06E1                     u6761:
  6667     06E1  2EE3               	goto	l4155
  6668     06E2                     u6760:
  6669     06E2  2EDB               	goto	l4151
  6670     06E3                     l4155:
  6671     06E3  0831               	movf	___fladd@aexp^(0+128),w
  6672     06E4  1903               	btfsc	3,2
  6673     06E5  2EE7               	goto	u6771
  6674     06E6  2EE8               	goto	u6770
  6675     06E7                     u6771:
  6676     06E7  2F1C               	goto	l819
  6677     06E8                     u6770:
  6678     06E8                     l4157:
  6679     06E8  3001               	movlw	1
  6680     06E9  07A0               	addwf	___fladd@b^(0+128),f
  6681     06EA  3000               	movlw	0
  6682     06EB  1803               	skipnc
  6683     06EC  3001               	movlw	1
  6684     06ED  07A1               	addwf	(___fladd@b+1)^(0+128),f
  6685     06EE  3000               	movlw	0
  6686     06EF  1803               	skipnc
  6687     06F0  3001               	movlw	1
  6688     06F1  07A2               	addwf	(___fladd@b+2)^(0+128),f
  6689     06F2  3000               	movlw	0
  6690     06F3  1803               	skipnc
  6691     06F4  3001               	movlw	1
  6692     06F5  07A3               	addwf	(___fladd@b+3)^(0+128),f
  6693     06F6                     l4159:
  6694     06F6  1C23               	btfss	(___fladd@b+3)^(0+128),0
  6695     06F7  2EF9               	goto	u6781
  6696     06F8  2EFA               	goto	u6780
  6697     06F9                     u6781:
  6698     06F9  2F1C               	goto	l819
  6699     06FA                     u6780:
  6700     06FA                     l4161:
  6701     06FA  0820               	movf	___fladd@b^(0+128),w
  6702     06FB  00A8               	movwf	??___fladd^(0+128)
  6703     06FC  0821               	movf	(___fladd@b+1)^(0+128),w
  6704     06FD  00A9               	movwf	(??___fladd^(0+128)+1)
  6705     06FE  0822               	movf	(___fladd@b+2)^(0+128),w
  6706     06FF  00AA               	movwf	(??___fladd^(0+128)+2)
  6707     0700  0823               	movf	(___fladd@b+3)^(0+128),w
  6708     0701  00AB               	movwf	(??___fladd^(0+128)+3)
  6709     0702  3001               	movlw	1
  6710     0703  00AC               	movwf	(??___fladd+4)^(0+128)
  6711     0704                     u6795:
  6712     0704  0D2B               	rlf	(??___fladd^(0+128)+3),w
  6713     0705  0CAB               	rrf	(??___fladd^(0+128)+3),f
  6714     0706  0CAA               	rrf	(??___fladd^(0+128)+2),f
  6715     0707  0CA9               	rrf	(??___fladd^(0+128)+1),f
  6716     0708  0CA8               	rrf	??___fladd^(0+128),f
  6717     0709                     u6790:
  6718     0709  0BAC               	decfsz	(??___fladd+4)^(0+128),f
  6719     070A  2F04               	goto	u6795
  6720     070B  082B               	movf	(??___fladd+3)^(0+128),w
  6721     070C  00A3               	movwf	(___fladd@b+3)^(0+128)
  6722     070D  082A               	movf	(??___fladd+2)^(0+128),w
  6723     070E  00A2               	movwf	(___fladd@b+2)^(0+128)
  6724     070F  0829               	movf	(??___fladd+1)^(0+128),w
  6725     0710  00A1               	movwf	(___fladd@b+1)^(0+128)
  6726     0711  0828               	movf	??___fladd^(0+128),w
  6727     0712  00A0               	movwf	___fladd@b^(0+128)
  6728     0713  0A32               	incf	___fladd@bexp^(0+128),w
  6729     0714  1903               	btfsc	3,2
  6730     0715  2F17               	goto	u6801
  6731     0716  2F18               	goto	u6800
  6732     0717                     u6801:
  6733     0717  2F1C               	goto	l819
  6734     0718                     u6800:
  6735     0718                     l4163:
  6736     0718  3001               	movlw	1
  6737     0719  00A8               	movwf	??___fladd^(0+128)
  6738     071A  0828               	movf	??___fladd^(0+128),w
  6739     071B  07B2               	addwf	___fladd@bexp^(0+128),f
  6740     071C                     l819:
  6741     071C  0A32               	incf	___fladd@bexp^(0+128),w
  6742     071D  1903               	btfsc	3,2
  6743     071E  2F20               	goto	u6811
  6744     071F  2F21               	goto	u6810
  6745     0720                     u6811:
  6746     0720  2F26               	goto	l4167
  6747     0721                     u6810:
  6748     0721                     l4165:
  6749     0721  0832               	movf	___fladd@bexp^(0+128),w
  6750     0722  1D03               	btfss	3,2
  6751     0723  2F25               	goto	u6821
  6752     0724  2F26               	goto	u6820
  6753     0725                     u6821:
  6754     0725  2F34               	goto	l4173
  6755     0726                     u6820:
  6756     0726                     l4167:
  6757     0726  3000               	movlw	0
  6758     0727  00A3               	movwf	(___fladd@b+3)^(0+128)
  6759     0728  3000               	movlw	0
  6760     0729  00A2               	movwf	(___fladd@b+2)^(0+128)
  6761     072A  3000               	movlw	0
  6762     072B  00A1               	movwf	(___fladd@b+1)^(0+128)
  6763     072C  3000               	movlw	0
  6764     072D  00A0               	movwf	___fladd@b^(0+128)
  6765     072E                     l4169:
  6766     072E  0832               	movf	___fladd@bexp^(0+128),w
  6767     072F  1D03               	btfss	3,2
  6768     0730  2F32               	goto	u6831
  6769     0731  2F33               	goto	u6830
  6770     0732                     u6831:
  6771     0732  2F34               	goto	l4173
  6772     0733                     u6830:
  6773     0733                     l4171:
  6774     0733  01B0               	clrf	___fladd@signs^(0+128)
  6775     0734                     l4173:
  6776     0734  1C32               	btfss	___fladd@bexp^(0+128),0
  6777     0735  2F37               	goto	u6841
  6778     0736  2F38               	goto	u6840
  6779     0737                     u6841:
  6780     0737  2F3A               	goto	l4177
  6781     0738                     u6840:
  6782     0738                     l4175:
  6783     0738  17A2               	bsf	(___fladd@b^(0+128)+2),7
  6784     0739  2F3E               	goto	l827
  6785     073A                     l4177:
  6786     073A  307F               	movlw	127
  6787     073B  00A8               	movwf	??___fladd^(0+128)
  6788     073C  0828               	movf	??___fladd^(0+128),w
  6789     073D  05A2               	andwf	(___fladd@b^(0+128)+2),f
  6790     073E                     l827:
  6791     073E  0832               	movf	___fladd@bexp^(0+128),w
  6792     073F  00A8               	movwf	??___fladd^(0+128)
  6793     0740  1003               	clrc
  6794     0741  0C28               	rrf	??___fladd^(0+128),w
  6795     0742  00A3               	movwf	(___fladd@b^(0+128)+3)
  6796     0743                     l4179:
  6797     0743  1FB0               	btfss	___fladd@signs^(0+128),7
  6798     0744  2F46               	goto	u6851
  6799     0745  2F47               	goto	u6850
  6800     0746                     u6851:
  6801     0746  2F48               	goto	l828
  6802     0747                     u6850:
  6803     0747                     l4181:
  6804     0747  17A3               	bsf	(___fladd@b^(0+128)+3),7
  6805     0748                     l828:
  6806     0748                     l798:
  6807     0748  0008               	return
  6808     0749                     __end_of___fladd:
  6809                           
  6810                           	psect	text16
  6811     18DB                     __ptext16:	
  6812 ;; *************** function ___flneg *****************
  6813 ;; Defined at:
  6814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;  f1              4    6[BANK0 ] unsigned char 
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4    6[BANK0 ] unsigned char 
  6821 ;; Registers used:
  6822 ;;		wreg
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6828 ;;      Params:         0       4       0       0       0
  6829 ;;      Locals:         0       0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0
  6831 ;;      Totals:         0       4       0       0       0
  6832 ;;Total ram usage:        4 bytes
  6833 ;; Hardware stack levels used: 1
  6834 ;; Hardware stack levels required when called: 2
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_sprintf
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842     18DB                     ___flneg:	
  6843                           ;psect for function ___flneg
  6844                           
  6845     18DB                     l3311:	
  6846                           ;incstack = 0
  6847                           ; Regs used in ___flneg: [wreg]
  6848                           
  6849     18DB  1283               	bcf	3,5	;RP0=0, select bank0
  6850     18DC  1303               	bcf	3,6	;RP1=0, select bank0
  6851     18DD  0829               	movf	___flneg@f1+3,w
  6852     18DE  0428               	iorwf	___flneg@f1+2,w
  6853     18DF  0427               	iorwf	___flneg@f1+1,w
  6854     18E0  0426               	iorwf	___flneg@f1,w
  6855     18E1  1903               	skipnz
  6856     18E2  28E4               	goto	u5201
  6857     18E3  28E5               	goto	u5200
  6858     18E4                     u5201:
  6859     18E4  28E7               	goto	l3315
  6860     18E5                     u5200:
  6861     18E5                     l3313:
  6862     18E5  3080               	movlw	128
  6863     18E6  06A9               	xorwf	___flneg@f1+3,f
  6864     18E7                     l3315:
  6865     18E7                     l657:
  6866     18E7  0008               	return
  6867     18E8                     __end_of___flneg:
  6868                           
  6869                           	psect	text17
  6870     10BF                     __ptext17:	
  6871 ;; *************** function ___flge *****************
  6872 ;; Defined at:
  6873 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  6874 ;; Parameters:    Size  Location     Type
  6875 ;;  ff1             4    6[BANK0 ] unsigned char 
  6876 ;;  ff2             4   10[BANK0 ] unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;		None               void
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6888 ;;      Params:         0       8       0       0       0
  6889 ;;      Locals:         0       0       0       0       0
  6890 ;;      Temps:          0       4       0       0       0
  6891 ;;      Totals:         0      12       0       0       0
  6892 ;;Total ram usage:       12 bytes
  6893 ;; Hardware stack levels used: 1
  6894 ;; Hardware stack levels required when called: 2
  6895 ;; This function calls:
  6896 ;;		Nothing
  6897 ;; This function is called by:
  6898 ;;		_sprintf
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902     10BF                     ___flge:	
  6903                           ;psect for function ___flge
  6904                           
  6905     10BF                     l3291:	
  6906                           ;incstack = 0
  6907                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6908                           
  6909     10BF  3000               	movlw	0
  6910     10C0  1283               	bcf	3,5	;RP0=0, select bank0
  6911     10C1  1303               	bcf	3,6	;RP1=0, select bank0
  6912     10C2  0526               	andwf	___flge@ff1,w
  6913     10C3  00AE               	movwf	??___flge
  6914     10C4  3000               	movlw	0
  6915     10C5  0527               	andwf	___flge@ff1+1,w
  6916     10C6  00AF               	movwf	??___flge+1
  6917     10C7  3080               	movlw	128
  6918     10C8  0528               	andwf	___flge@ff1+2,w
  6919     10C9  00B0               	movwf	??___flge+2
  6920     10CA  307F               	movlw	127
  6921     10CB  0529               	andwf	___flge@ff1+3,w
  6922     10CC  00B1               	movwf	??___flge+3
  6923     10CD  0831               	movf	??___flge+3,w
  6924     10CE  0430               	iorwf	??___flge+2,w
  6925     10CF  042F               	iorwf	??___flge+1,w
  6926     10D0  042E               	iorwf	??___flge,w
  6927     10D1  1D03               	skipz
  6928     10D2  28D4               	goto	u5131
  6929     10D3  28D5               	goto	u5130
  6930     10D4                     u5131:
  6931     10D4  28DD               	goto	l649
  6932     10D5                     u5130:
  6933     10D5                     l3293:
  6934     10D5  3000               	movlw	0
  6935     10D6  00A9               	movwf	___flge@ff1+3
  6936     10D7  3000               	movlw	0
  6937     10D8  00A8               	movwf	___flge@ff1+2
  6938     10D9  3000               	movlw	0
  6939     10DA  00A7               	movwf	___flge@ff1+1
  6940     10DB  3000               	movlw	0
  6941     10DC  00A6               	movwf	___flge@ff1
  6942     10DD                     l649:
  6943     10DD  3000               	movlw	0
  6944     10DE  052A               	andwf	___flge@ff2,w
  6945     10DF  00AE               	movwf	??___flge
  6946     10E0  3000               	movlw	0
  6947     10E1  052B               	andwf	___flge@ff2+1,w
  6948     10E2  00AF               	movwf	??___flge+1
  6949     10E3  3080               	movlw	128
  6950     10E4  052C               	andwf	___flge@ff2+2,w
  6951     10E5  00B0               	movwf	??___flge+2
  6952     10E6  307F               	movlw	127
  6953     10E7  052D               	andwf	___flge@ff2+3,w
  6954     10E8  00B1               	movwf	??___flge+3
  6955     10E9  0831               	movf	??___flge+3,w
  6956     10EA  0430               	iorwf	??___flge+2,w
  6957     10EB  042F               	iorwf	??___flge+1,w
  6958     10EC  042E               	iorwf	??___flge,w
  6959     10ED  1D03               	skipz
  6960     10EE  28F0               	goto	u5141
  6961     10EF  28F1               	goto	u5140
  6962     10F0                     u5141:
  6963     10F0  28F9               	goto	l3297
  6964     10F1                     u5140:
  6965     10F1                     l3295:
  6966     10F1  3000               	movlw	0
  6967     10F2  00AD               	movwf	___flge@ff2+3
  6968     10F3  3000               	movlw	0
  6969     10F4  00AC               	movwf	___flge@ff2+2
  6970     10F5  3000               	movlw	0
  6971     10F6  00AB               	movwf	___flge@ff2+1
  6972     10F7  3000               	movlw	0
  6973     10F8  00AA               	movwf	___flge@ff2
  6974     10F9                     l3297:
  6975     10F9  1FA9               	btfss	___flge@ff1+3,7
  6976     10FA  28FC               	goto	u5151
  6977     10FB  28FD               	goto	u5150
  6978     10FC                     u5151:
  6979     10FC  2921               	goto	l3301
  6980     10FD                     u5150:
  6981     10FD                     l3299:
  6982     10FD  3000               	movlw	0
  6983     10FE  00AE               	movwf	??___flge
  6984     10FF  3000               	movlw	0
  6985     1100  00AF               	movwf	??___flge+1
  6986     1101  3000               	movlw	0
  6987     1102  00B0               	movwf	??___flge+2
  6988     1103  3080               	movlw	128
  6989     1104  00B1               	movwf	??___flge+3
  6990     1105  0826               	movf	___flge@ff1,w
  6991     1106  02AE               	subwf	??___flge,f
  6992     1107  0827               	movf	___flge@ff1+1,w
  6993     1108  1C03               	skipc
  6994     1109  0F27               	incfsz	___flge@ff1+1,w
  6995     110A  290C               	goto	u5161
  6996     110B  290D               	goto	u5162
  6997     110C                     u5161:
  6998     110C  02AF               	subwf	??___flge+1,f
  6999     110D                     u5162:
  7000     110D  0828               	movf	___flge@ff1+2,w
  7001     110E  1C03               	skipc
  7002     110F  0F28               	incfsz	___flge@ff1+2,w
  7003     1110  2912               	goto	u5163
  7004     1111  2913               	goto	u5164
  7005     1112                     u5163:
  7006     1112  02B0               	subwf	??___flge+2,f
  7007     1113                     u5164:
  7008     1113  0829               	movf	___flge@ff1+3,w
  7009     1114  1C03               	skipc
  7010     1115  0F29               	incfsz	___flge@ff1+3,w
  7011     1116  2918               	goto	u5165
  7012     1117  2919               	goto	u5166
  7013     1118                     u5165:
  7014     1118  02B1               	subwf	??___flge+3,f
  7015     1119                     u5166:
  7016     1119  0831               	movf	??___flge+3,w
  7017     111A  00A9               	movwf	___flge@ff1+3
  7018     111B  0830               	movf	??___flge+2,w
  7019     111C  00A8               	movwf	___flge@ff1+2
  7020     111D  082F               	movf	??___flge+1,w
  7021     111E  00A7               	movwf	___flge@ff1+1
  7022     111F  082E               	movf	??___flge,w
  7023     1120  00A6               	movwf	___flge@ff1
  7024     1121                     l3301:
  7025     1121  1FAD               	btfss	___flge@ff2+3,7
  7026     1122  2924               	goto	u5171
  7027     1123  2925               	goto	u5170
  7028     1124                     u5171:
  7029     1124  2949               	goto	l652
  7030     1125                     u5170:
  7031     1125                     l3303:
  7032     1125  3000               	movlw	0
  7033     1126  00AE               	movwf	??___flge
  7034     1127  3000               	movlw	0
  7035     1128  00AF               	movwf	??___flge+1
  7036     1129  3000               	movlw	0
  7037     112A  00B0               	movwf	??___flge+2
  7038     112B  3080               	movlw	128
  7039     112C  00B1               	movwf	??___flge+3
  7040     112D  082A               	movf	___flge@ff2,w
  7041     112E  02AE               	subwf	??___flge,f
  7042     112F  082B               	movf	___flge@ff2+1,w
  7043     1130  1C03               	skipc
  7044     1131  0F2B               	incfsz	___flge@ff2+1,w
  7045     1132  2934               	goto	u5181
  7046     1133  2935               	goto	u5182
  7047     1134                     u5181:
  7048     1134  02AF               	subwf	??___flge+1,f
  7049     1135                     u5182:
  7050     1135  082C               	movf	___flge@ff2+2,w
  7051     1136  1C03               	skipc
  7052     1137  0F2C               	incfsz	___flge@ff2+2,w
  7053     1138  293A               	goto	u5183
  7054     1139  293B               	goto	u5184
  7055     113A                     u5183:
  7056     113A  02B0               	subwf	??___flge+2,f
  7057     113B                     u5184:
  7058     113B  082D               	movf	___flge@ff2+3,w
  7059     113C  1C03               	skipc
  7060     113D  0F2D               	incfsz	___flge@ff2+3,w
  7061     113E  2940               	goto	u5185
  7062     113F  2941               	goto	u5186
  7063     1140                     u5185:
  7064     1140  02B1               	subwf	??___flge+3,f
  7065     1141                     u5186:
  7066     1141  0831               	movf	??___flge+3,w
  7067     1142  00AD               	movwf	___flge@ff2+3
  7068     1143  0830               	movf	??___flge+2,w
  7069     1144  00AC               	movwf	___flge@ff2+2
  7070     1145  082F               	movf	??___flge+1,w
  7071     1146  00AB               	movwf	___flge@ff2+1
  7072     1147  082E               	movf	??___flge,w
  7073     1148  00AA               	movwf	___flge@ff2
  7074     1149                     l652:
  7075     1149  3080               	movlw	128
  7076     114A  06A9               	xorwf	___flge@ff1+3,f
  7077     114B  3080               	movlw	128
  7078     114C  06AD               	xorwf	___flge@ff2+3,f
  7079     114D  082D               	movf	___flge@ff2+3,w
  7080     114E  0229               	subwf	___flge@ff1+3,w
  7081     114F  1D03               	skipz
  7082     1150  295B               	goto	u5195
  7083     1151  082C               	movf	___flge@ff2+2,w
  7084     1152  0228               	subwf	___flge@ff1+2,w
  7085     1153  1D03               	skipz
  7086     1154  295B               	goto	u5195
  7087     1155  082B               	movf	___flge@ff2+1,w
  7088     1156  0227               	subwf	___flge@ff1+1,w
  7089     1157  1D03               	skipz
  7090     1158  295B               	goto	u5195
  7091     1159  082A               	movf	___flge@ff2,w
  7092     115A  0226               	subwf	___flge@ff1,w
  7093     115B                     u5195:
  7094     115B  1803               	skipnc
  7095     115C  295E               	goto	u5191
  7096     115D  295F               	goto	u5190
  7097     115E                     u5191:
  7098     115E  2961               	goto	l3307
  7099     115F                     u5190:
  7100     115F                     l3305:
  7101     115F  1003               	clrc
  7102     1160  2962               	goto	l653
  7103     1161                     l3307:
  7104     1161  1403               	setc
  7105     1162                     l653:
  7106     1162  0008               	return
  7107     1163                     __end_of___flge:
  7108                           
  7109                           	psect	text18
  7110     1A36                     __ptext18:	
  7111 ;; *************** function ___fleq *****************
  7112 ;; Defined at:
  7113 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  ff1             4    6[BANK0 ] unsigned char 
  7116 ;;  ff2             4   10[BANK0 ] unsigned char 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;		None               void
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       8       0       0       0
  7129 ;;      Locals:         0       0       0       0       0
  7130 ;;      Temps:          0       4       0       0       0
  7131 ;;      Totals:         0      12       0       0       0
  7132 ;;Total ram usage:       12 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 2
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_sprintf
  7139 ;; This function uses a non-reentrant model
  7140 ;;
  7141                           
  7142     1A36                     ___fleq:	
  7143                           ;psect for function ___fleq
  7144                           
  7145     1A36                     l3279:	
  7146                           ;incstack = 0
  7147                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7148                           
  7149     1A36  3000               	movlw	0
  7150     1A37  1283               	bcf	3,5	;RP0=0, select bank0
  7151     1A38  1303               	bcf	3,6	;RP1=0, select bank0
  7152     1A39  0526               	andwf	___fleq@ff1,w
  7153     1A3A  00AE               	movwf	??___fleq
  7154     1A3B  3000               	movlw	0
  7155     1A3C  0527               	andwf	___fleq@ff1+1,w
  7156     1A3D  00AF               	movwf	??___fleq+1
  7157     1A3E  3080               	movlw	128
  7158     1A3F  0528               	andwf	___fleq@ff1+2,w
  7159     1A40  00B0               	movwf	??___fleq+2
  7160     1A41  307F               	movlw	127
  7161     1A42  0529               	andwf	___fleq@ff1+3,w
  7162     1A43  00B1               	movwf	??___fleq+3
  7163     1A44  0831               	movf	??___fleq+3,w
  7164     1A45  0430               	iorwf	??___fleq+2,w
  7165     1A46  042F               	iorwf	??___fleq+1,w
  7166     1A47  042E               	iorwf	??___fleq,w
  7167     1A48  1D03               	skipz
  7168     1A49  2A4B               	goto	u5101
  7169     1A4A  2A4C               	goto	u5100
  7170     1A4B                     u5101:
  7171     1A4B  2A54               	goto	l644
  7172     1A4C                     u5100:
  7173     1A4C                     l3281:
  7174     1A4C  3000               	movlw	0
  7175     1A4D  00A9               	movwf	___fleq@ff1+3
  7176     1A4E  3000               	movlw	0
  7177     1A4F  00A8               	movwf	___fleq@ff1+2
  7178     1A50  3000               	movlw	0
  7179     1A51  00A7               	movwf	___fleq@ff1+1
  7180     1A52  3000               	movlw	0
  7181     1A53  00A6               	movwf	___fleq@ff1
  7182     1A54                     l644:
  7183     1A54  3000               	movlw	0
  7184     1A55  052A               	andwf	___fleq@ff2,w
  7185     1A56  00AE               	movwf	??___fleq
  7186     1A57  3000               	movlw	0
  7187     1A58  052B               	andwf	___fleq@ff2+1,w
  7188     1A59  00AF               	movwf	??___fleq+1
  7189     1A5A  3080               	movlw	128
  7190     1A5B  052C               	andwf	___fleq@ff2+2,w
  7191     1A5C  00B0               	movwf	??___fleq+2
  7192     1A5D  307F               	movlw	127
  7193     1A5E  052D               	andwf	___fleq@ff2+3,w
  7194     1A5F  00B1               	movwf	??___fleq+3
  7195     1A60  0831               	movf	??___fleq+3,w
  7196     1A61  0430               	iorwf	??___fleq+2,w
  7197     1A62  042F               	iorwf	??___fleq+1,w
  7198     1A63  042E               	iorwf	??___fleq,w
  7199     1A64  1D03               	skipz
  7200     1A65  2A67               	goto	u5111
  7201     1A66  2A68               	goto	u5110
  7202     1A67                     u5111:
  7203     1A67  2A70               	goto	l645
  7204     1A68                     u5110:
  7205     1A68                     l3283:
  7206     1A68  3000               	movlw	0
  7207     1A69  00AD               	movwf	___fleq@ff2+3
  7208     1A6A  3000               	movlw	0
  7209     1A6B  00AC               	movwf	___fleq@ff2+2
  7210     1A6C  3000               	movlw	0
  7211     1A6D  00AB               	movwf	___fleq@ff2+1
  7212     1A6E  3000               	movlw	0
  7213     1A6F  00AA               	movwf	___fleq@ff2
  7214     1A70                     l645:
  7215     1A70  082D               	movf	___fleq@ff2+3,w
  7216     1A71  0629               	xorwf	___fleq@ff1+3,w
  7217     1A72  1D03               	skipz
  7218     1A73  2A7E               	goto	u5125
  7219     1A74  082C               	movf	___fleq@ff2+2,w
  7220     1A75  0628               	xorwf	___fleq@ff1+2,w
  7221     1A76  1D03               	skipz
  7222     1A77  2A7E               	goto	u5125
  7223     1A78  082B               	movf	___fleq@ff2+1,w
  7224     1A79  0627               	xorwf	___fleq@ff1+1,w
  7225     1A7A  1D03               	skipz
  7226     1A7B  2A7E               	goto	u5125
  7227     1A7C  082A               	movf	___fleq@ff2,w
  7228     1A7D  0626               	xorwf	___fleq@ff1,w
  7229     1A7E                     u5125:
  7230     1A7E  1903               	skipnz
  7231     1A7F  2A81               	goto	u5121
  7232     1A80  2A82               	goto	u5120
  7233     1A81                     u5121:
  7234     1A81  2A84               	goto	l3287
  7235     1A82                     u5120:
  7236     1A82                     l3285:
  7237     1A82  1003               	clrc
  7238     1A83  2A85               	goto	l646
  7239     1A84                     l3287:
  7240     1A84  1403               	setc
  7241     1A85                     l646:
  7242     1A85  0008               	return
  7243     1A86                     __end_of___fleq:
  7244                           
  7245                           	psect	text19
  7246     19B9                     __ptext19:	
  7247 ;; *************** function _setup *****************
  7248 ;; Defined at:
  7249 ;;		line 111 in file "postlab2.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, status,2, status,0
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7263 ;;      Params:         0       0       0       0       0
  7264 ;;      Locals:         0       0       0       0       0
  7265 ;;      Temps:          0       1       0       0       0
  7266 ;;      Totals:         0       1       0       0       0
  7267 ;;Total ram usage:        1 bytes
  7268 ;; Hardware stack levels used: 1
  7269 ;; Hardware stack levels required when called: 2
  7270 ;; This function calls:
  7271 ;;		Nothing
  7272 ;; This function is called by:
  7273 ;;		_main
  7274 ;; This function uses a non-reentrant model
  7275 ;;
  7276                           
  7277     19B9                     _setup:	
  7278                           ;psect for function _setup
  7279                           
  7280     19B9                     l3425:	
  7281                           ;incstack = 0
  7282                           ; Regs used in _setup: [wreg+status,2+status,0]
  7283                           
  7284                           
  7285                           ;postlab2.c: 112:     ANSEL = 0b00000011;
  7286     19B9  3003               	movlw	3
  7287     19BA  1683               	bsf	3,5	;RP0=1, select bank3
  7288     19BB  1703               	bsf	3,6	;RP1=1, select bank3
  7289     19BC  0088               	movwf	8	;volatile
  7290     19BD                     l3427:
  7291                           
  7292                           ;postlab2.c: 113:     ANSELH = 0;
  7293     19BD  0189               	clrf	9	;volatile
  7294     19BE                     l3429:
  7295                           
  7296                           ;postlab2.c: 115:     TRISA = 0xFF;
  7297     19BE  30FF               	movlw	255
  7298     19BF  1683               	bsf	3,5	;RP0=1, select bank1
  7299     19C0  1303               	bcf	3,6	;RP1=0, select bank1
  7300     19C1  0085               	movwf	5	;volatile
  7301     19C2                     l3431:
  7302                           
  7303                           ;postlab2.c: 116:     TRISB = 0b11111111;
  7304     19C2  30FF               	movlw	255
  7305     19C3  0086               	movwf	6	;volatile
  7306     19C4                     l3433:
  7307                           
  7308                           ;postlab2.c: 117:     TRISD = 0;
  7309     19C4  0188               	clrf	8	;volatile
  7310     19C5                     l3435:
  7311                           
  7312                           ;postlab2.c: 118:     TRISE = 0;
  7313     19C5  0189               	clrf	9	;volatile
  7314     19C6                     l3437:
  7315                           
  7316                           ;postlab2.c: 119:     OPTION_REGbits.nRBPU = 0;
  7317     19C6  1381               	bcf	1,7	;volatile
  7318     19C7                     l3439:
  7319                           
  7320                           ;postlab2.c: 120:     WPUB = 0b111111;
  7321     19C7  303F               	movlw	63
  7322     19C8  0095               	movwf	21	;volatile
  7323                           
  7324                           ;postlab2.c: 123:     PORTD = 0;
  7325     19C9  1283               	bcf	3,5	;RP0=0, select bank0
  7326     19CA  1303               	bcf	3,6	;RP1=0, select bank0
  7327     19CB  0188               	clrf	8	;volatile
  7328                           
  7329                           ;postlab2.c: 124:     PORTE = 0;
  7330     19CC  0189               	clrf	9	;volatile
  7331     19CD                     l3441:
  7332                           
  7333                           ;postlab2.c: 130:     OSCCONbits.IRCF = 0b0111;
  7334     19CD  3070               	movlw	112
  7335     19CE  1683               	bsf	3,5	;RP0=1, select bank1
  7336     19CF  1303               	bcf	3,6	;RP1=0, select bank1
  7337     19D0  048F               	iorwf	15,f	;volatile
  7338     19D1                     l3443:
  7339                           
  7340                           ;postlab2.c: 131:     OSCCONbits.SCS = 1;
  7341     19D1  140F               	bsf	15,0	;volatile
  7342     19D2                     l3445:
  7343                           
  7344                           ;postlab2.c: 134:     ADCON1bits.ADFM = 0;
  7345     19D2  139F               	bcf	31,7	;volatile
  7346     19D3                     l3447:
  7347                           
  7348                           ;postlab2.c: 135:     ADCON1bits.VCFG0 = 0;
  7349     19D3  121F               	bcf	31,4	;volatile
  7350     19D4                     l3449:
  7351                           
  7352                           ;postlab2.c: 136:     ADCON1bits.VCFG1 = 0;
  7353     19D4  129F               	bcf	31,5	;volatile
  7354     19D5                     l3451:
  7355                           
  7356                           ;postlab2.c: 138:     ADCON0bits.ADCS = 0b01;
  7357     19D5  1283               	bcf	3,5	;RP0=0, select bank0
  7358     19D6  1303               	bcf	3,6	;RP1=0, select bank0
  7359     19D7  081F               	movf	31,w	;volatile
  7360     19D8  393F               	andlw	-193
  7361     19D9  3840               	iorlw	64
  7362     19DA  009F               	movwf	31	;volatile
  7363     19DB                     l3453:
  7364                           
  7365                           ;postlab2.c: 139:     ADCON0bits.CHS = 0;
  7366     19DB  30C3               	movlw	-61
  7367     19DC  059F               	andwf	31,f	;volatile
  7368     19DD                     l3455:
  7369                           
  7370                           ;postlab2.c: 140:     ADCON0bits.ADON= 1;
  7371     19DD  141F               	bsf	31,0	;volatile
  7372     19DE                     l3457:
  7373                           
  7374                           ;postlab2.c: 141:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  7375     19DE  3020               	movlw	32
  7376     19DF  1283               	bcf	3,5	;RP0=0, select bank0
  7377     19E0  1303               	bcf	3,6	;RP1=0, select bank0
  7378     19E1  00A6               	movwf	??_setup
  7379     19E2                     u7487:
  7380     19E2  0BA6               	decfsz	??_setup,f
  7381     19E3  29E2               	goto	u7487
  7382     19E4  0000               	nop
  7383     19E5                     l3459:
  7384                           
  7385                           ;postlab2.c: 145:     PIR1bits.ADIF = 0;
  7386     19E5  1283               	bcf	3,5	;RP0=0, select bank0
  7387     19E6  1303               	bcf	3,6	;RP1=0, select bank0
  7388     19E7  130C               	bcf	12,6	;volatile
  7389     19E8                     l3461:
  7390                           
  7391                           ;postlab2.c: 146:     PIE1bits.ADIE = 1;
  7392     19E8  1683               	bsf	3,5	;RP0=1, select bank1
  7393     19E9  1303               	bcf	3,6	;RP1=0, select bank1
  7394     19EA  170C               	bsf	12,6	;volatile
  7395     19EB                     l3463:
  7396                           
  7397                           ;postlab2.c: 148:     INTCONbits.RBIE = 0;
  7398     19EB  118B               	bcf	11,3	;volatile
  7399     19EC                     l3465:
  7400                           
  7401                           ;postlab2.c: 149:     INTCONbits.RBIF = 1;
  7402     19EC  140B               	bsf	11,0	;volatile
  7403     19ED                     l3467:
  7404                           
  7405                           ;postlab2.c: 151:     INTCONbits.PEIE = 1;
  7406     19ED  170B               	bsf	11,6	;volatile
  7407     19EE                     l3469:
  7408                           
  7409                           ;postlab2.c: 152:     INTCONbits.GIE = 1;
  7410     19EE  178B               	bsf	11,7	;volatile
  7411     19EF                     l194:
  7412     19EF  0008               	return
  7413     19F0                     __end_of_setup:
  7414                           
  7415                           	psect	text20
  7416     1D52                     __ptext20:	
  7417 ;; *************** function _map *****************
  7418 ;; Defined at:
  7419 ;;		line 156 in file "postlab2.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  varmap          2   24[BANK1 ] unsigned int 
  7422 ;;  minval          2   26[BANK1 ] unsigned int 
  7423 ;;  maxval          2   28[BANK1 ] unsigned int 
  7424 ;;  minsal          2   30[BANK1 ] unsigned int 
  7425 ;;  maxsal          2   32[BANK1 ] unsigned int 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  valmap          4   40[BANK1 ] float 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  2   24[BANK1 ] unsigned int 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, pclath, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7437 ;;      Params:         0       0      10       0       0
  7438 ;;      Locals:         0       0       4       0       0
  7439 ;;      Temps:          0       0       6       0       0
  7440 ;;      Totals:         0       0      20       0       0
  7441 ;;Total ram usage:       20 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 3
  7444 ;; This function calls:
  7445 ;;		___fltol
  7446 ;;		___lwdiv
  7447 ;;		___wmul
  7448 ;;		___xxtofl
  7449 ;; This function is called by:
  7450 ;;		_main
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454     1D52                     _map:	
  7455                           ;psect for function _map
  7456                           
  7457     1D52                     l4225:	
  7458                           ;incstack = 0
  7459                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  7460                           
  7461                           
  7462                           ;postlab2.c: 157:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval - mi
      +                          nval) + minsal;
  7463     1D52  1683               	bsf	3,5	;RP0=1, select bank1
  7464     1D53  1303               	bcf	3,6	;RP1=0, select bank1
  7465     1D54  083E               	movf	map@minsal^(0+128),w
  7466     1D55  0240               	subwf	map@maxsal^(0+128),w
  7467     1D56  1283               	bcf	3,5	;RP0=0, select bank0
  7468     1D57  1303               	bcf	3,6	;RP1=0, select bank0
  7469     1D58  00A8               	movwf	___wmul@multiplicand
  7470     1D59  1683               	bsf	3,5	;RP0=1, select bank1
  7471     1D5A  1303               	bcf	3,6	;RP1=0, select bank1
  7472     1D5B  083F               	movf	(map@minsal+1)^(0+128),w
  7473     1D5C  1C03               	skipc
  7474     1D5D  0A3F               	incf	(map@minsal+1)^(0+128),w
  7475     1D5E  0241               	subwf	(map@maxsal+1)^(0+128),w
  7476     1D5F  1283               	bcf	3,5	;RP0=0, select bank0
  7477     1D60  1303               	bcf	3,6	;RP1=0, select bank0
  7478     1D61  00A9               	movwf	___wmul@multiplicand+1
  7479     1D62  1683               	bsf	3,5	;RP0=1, select bank1
  7480     1D63  1303               	bcf	3,6	;RP1=0, select bank1
  7481     1D64  083A               	movf	map@minval^(0+128),w
  7482     1D65  0238               	subwf	map@varmap^(0+128),w
  7483     1D66  1283               	bcf	3,5	;RP0=0, select bank0
  7484     1D67  1303               	bcf	3,6	;RP1=0, select bank0
  7485     1D68  00A6               	movwf	___wmul@multiplier
  7486     1D69  1683               	bsf	3,5	;RP0=1, select bank1
  7487     1D6A  1303               	bcf	3,6	;RP1=0, select bank1
  7488     1D6B  083B               	movf	(map@minval+1)^(0+128),w
  7489     1D6C  1C03               	skipc
  7490     1D6D  0A3B               	incf	(map@minval+1)^(0+128),w
  7491     1D6E  0239               	subwf	(map@varmap+1)^(0+128),w
  7492     1D6F  1283               	bcf	3,5	;RP0=0, select bank0
  7493     1D70  1303               	bcf	3,6	;RP1=0, select bank0
  7494     1D71  00A7               	movwf	___wmul@multiplier+1
  7495     1D72  160A  158A  213C  160A  158A  	fcall	___wmul
  7496     1D77  1283               	bcf	3,5	;RP0=0, select bank0
  7497     1D78  1303               	bcf	3,6	;RP1=0, select bank0
  7498     1D79  0827               	movf	?___wmul+1,w
  7499     1D7A  00AF               	movwf	___lwdiv@dividend+1
  7500     1D7B  0826               	movf	?___wmul,w
  7501     1D7C  00AE               	movwf	___lwdiv@dividend
  7502     1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  7503     1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  7504     1D7F  083A               	movf	map@minval^(0+128),w
  7505     1D80  023C               	subwf	map@maxval^(0+128),w
  7506     1D81  1283               	bcf	3,5	;RP0=0, select bank0
  7507     1D82  1303               	bcf	3,6	;RP1=0, select bank0
  7508     1D83  00AC               	movwf	___lwdiv@divisor
  7509     1D84  1683               	bsf	3,5	;RP0=1, select bank1
  7510     1D85  1303               	bcf	3,6	;RP1=0, select bank1
  7511     1D86  083B               	movf	(map@minval+1)^(0+128),w
  7512     1D87  1C03               	skipc
  7513     1D88  0A3B               	incf	(map@minval+1)^(0+128),w
  7514     1D89  023D               	subwf	(map@maxval+1)^(0+128),w
  7515     1D8A  1283               	bcf	3,5	;RP0=0, select bank0
  7516     1D8B  1303               	bcf	3,6	;RP1=0, select bank0
  7517     1D8C  00AD               	movwf	___lwdiv@divisor+1
  7518     1D8D  160A  158A  21F0  160A  158A  	fcall	___lwdiv
  7519     1D92  1683               	bsf	3,5	;RP0=1, select bank1
  7520     1D93  1303               	bcf	3,6	;RP1=0, select bank1
  7521     1D94  083E               	movf	map@minsal^(0+128),w
  7522     1D95  1283               	bcf	3,5	;RP0=0, select bank0
  7523     1D96  1303               	bcf	3,6	;RP1=0, select bank0
  7524     1D97  072C               	addwf	?___lwdiv,w
  7525     1D98  1683               	bsf	3,5	;RP0=1, select bank1
  7526     1D99  1303               	bcf	3,6	;RP1=0, select bank1
  7527     1D9A  00C2               	movwf	??_map^(0+128)
  7528     1D9B  083F               	movf	(map@minsal+1)^(0+128),w
  7529     1D9C  1803               	skipnc
  7530     1D9D  0A3F               	incf	(map@minsal+1)^(0+128),w
  7531     1D9E  1283               	bcf	3,5	;RP0=0, select bank0
  7532     1D9F  1303               	bcf	3,6	;RP1=0, select bank0
  7533     1DA0  072D               	addwf	?___lwdiv+1,w
  7534     1DA1  1683               	bsf	3,5	;RP0=1, select bank1
  7535     1DA2  1303               	bcf	3,6	;RP1=0, select bank1
  7536     1DA3  00C3               	movwf	(??_map+1)^(0+128)
  7537     1DA4  0842               	movf	??_map^(0+128),w
  7538     1DA5  00C4               	movwf	(??_map+2)^(0+128)
  7539     1DA6  0843               	movf	(??_map+1)^(0+128),w
  7540     1DA7  00C5               	movwf	((??_map+2)^(0+128)+1)
  7541     1DA8  01C6               	clrf	((??_map+2)^(0+128)+2)
  7542     1DA9  01C7               	clrf	((??_map+2)^(0+128)+3)
  7543     1DAA  0847               	movf	(??_map+5)^(0+128),w
  7544     1DAB  00AD               	movwf	(___xxtofl@val+3)^(0+128)
  7545     1DAC  0846               	movf	(??_map+4)^(0+128),w
  7546     1DAD  00AC               	movwf	(___xxtofl@val+2)^(0+128)
  7547     1DAE  0845               	movf	(??_map+3)^(0+128),w
  7548     1DAF  00AB               	movwf	(___xxtofl@val+1)^(0+128)
  7549     1DB0  0844               	movf	(??_map+2)^(0+128),w
  7550     1DB1  00AA               	movwf	___xxtofl@val^(0+128)
  7551     1DB2  3000               	movlw	0
  7552     1DB3  160A  158A  2746  160A  158A  	fcall	___xxtofl
  7553     1DB8  1683               	bsf	3,5	;RP0=1, select bank1
  7554     1DB9  1303               	bcf	3,6	;RP1=0, select bank1
  7555     1DBA  082D               	movf	(?___xxtofl+3)^(0+128),w
  7556     1DBB  00CB               	movwf	(map@valmap+3)^(0+128)
  7557     1DBC  082C               	movf	(?___xxtofl+2)^(0+128),w
  7558     1DBD  00CA               	movwf	(map@valmap+2)^(0+128)
  7559     1DBE  082B               	movf	(?___xxtofl+1)^(0+128),w
  7560     1DBF  00C9               	movwf	(map@valmap+1)^(0+128)
  7561     1DC0  082A               	movf	?___xxtofl^(0+128),w
  7562     1DC1  00C8               	movwf	map@valmap^(0+128)
  7563                           
  7564                           ;postlab2.c: 158:   return valmap;
  7565     1DC2  084B               	movf	(map@valmap+3)^(0+128),w
  7566     1DC3  00A3               	movwf	(___fltol@f1+3)^(0+128)
  7567     1DC4  084A               	movf	(map@valmap+2)^(0+128),w
  7568     1DC5  00A2               	movwf	(___fltol@f1+2)^(0+128)
  7569     1DC6  0849               	movf	(map@valmap+1)^(0+128),w
  7570     1DC7  00A1               	movwf	(___fltol@f1+1)^(0+128)
  7571     1DC8  0848               	movf	map@valmap^(0+128),w
  7572     1DC9  00A0               	movwf	___fltol@f1^(0+128)
  7573     1DCA  160A  158A  24DA  160A  158A  	fcall	___fltol
  7574     1DCF  1683               	bsf	3,5	;RP0=1, select bank1
  7575     1DD0  1303               	bcf	3,6	;RP1=0, select bank1
  7576     1DD1  0821               	movf	(?___fltol+1)^(0+128),w
  7577     1DD2  00B9               	movwf	(?_map+1)^(0+128)
  7578     1DD3  0820               	movf	?___fltol^(0+128),w
  7579     1DD4  00B8               	movwf	?_map^(0+128)
  7580     1DD5                     l197:
  7581     1DD5  0008               	return
  7582     1DD6                     __end_of_map:
  7583                           
  7584                           	psect	text21
  7585     1F46                     __ptext21:	
  7586 ;; *************** function ___xxtofl *****************
  7587 ;; Defined at:
  7588 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;  sign            1    wreg     unsigned char 
  7591 ;;  val             4   10[BANK1 ] long 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  sign            1   18[BANK1 ] unsigned char 
  7594 ;;  arg             4   20[BANK1 ] unsigned long 
  7595 ;;  exp             1   19[BANK1 ] unsigned char 
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  4   10[BANK1 ] unsigned char 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7605 ;;      Params:         0       0       4       0       0
  7606 ;;      Locals:         0       0       6       0       0
  7607 ;;      Temps:          0       0       4       0       0
  7608 ;;      Totals:         0       0      14       0       0
  7609 ;;Total ram usage:       14 bytes
  7610 ;; Hardware stack levels used: 1
  7611 ;; Hardware stack levels required when called: 2
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_main
  7616 ;;		_map
  7617 ;;		_sprintf
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621     1F46                     ___xxtofl:	
  7622                           ;psect for function ___xxtofl
  7623                           
  7624                           
  7625                           ;incstack = 0
  7626                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7627                           ;___xxtofl@sign stored from wreg
  7628     1F46  1683               	bsf	3,5	;RP0=1, select bank1
  7629     1F47  1303               	bcf	3,6	;RP1=0, select bank1
  7630     1F48  00B2               	movwf	___xxtofl@sign^(0+128)
  7631     1F49                     l3381:
  7632     1F49  0832               	movf	___xxtofl@sign^(0+128),w
  7633     1F4A  1903               	btfsc	3,2
  7634     1F4B  2F4D               	goto	u5371
  7635     1F4C  2F4E               	goto	u5370
  7636     1F4D                     u5371:
  7637     1F4D  2F62               	goto	l3387
  7638     1F4E                     u5370:
  7639     1F4E                     l3383:
  7640     1F4E  1FAD               	btfss	(___xxtofl@val+3)^(0+128),7
  7641     1F4F  2F51               	goto	u5381
  7642     1F50  2F52               	goto	u5380
  7643     1F51                     u5381:
  7644     1F51  2F62               	goto	l3387
  7645     1F52                     u5380:
  7646     1F52                     l3385:
  7647     1F52  092A               	comf	___xxtofl@val^(0+128),w
  7648     1F53  00B4               	movwf	___xxtofl@arg^(0+128)
  7649     1F54  092B               	comf	(___xxtofl@val^(0+128)+1),w
  7650     1F55  00B5               	movwf	(___xxtofl@arg+1)^(0+128)
  7651     1F56  092C               	comf	(___xxtofl@val^(0+128)+2),w
  7652     1F57  00B6               	movwf	(___xxtofl@arg+2)^(0+128)
  7653     1F58  092D               	comf	(___xxtofl@val^(0+128)+3),w
  7654     1F59  00B7               	movwf	(___xxtofl@arg+3)^(0+128)
  7655     1F5A  0AB4               	incf	___xxtofl@arg^(0+128),f
  7656     1F5B  1903               	skipnz
  7657     1F5C  0AB5               	incf	(___xxtofl@arg+1)^(0+128),f
  7658     1F5D  1903               	skipnz
  7659     1F5E  0AB6               	incf	(___xxtofl@arg+2)^(0+128),f
  7660     1F5F  1903               	skipnz
  7661     1F60  0AB7               	incf	(___xxtofl@arg+3)^(0+128),f
  7662     1F61  2F6A               	goto	l925
  7663     1F62                     l3387:
  7664     1F62  082D               	movf	(___xxtofl@val+3)^(0+128),w
  7665     1F63  00B7               	movwf	(___xxtofl@arg+3)^(0+128)
  7666     1F64  082C               	movf	(___xxtofl@val+2)^(0+128),w
  7667     1F65  00B6               	movwf	(___xxtofl@arg+2)^(0+128)
  7668     1F66  082B               	movf	(___xxtofl@val+1)^(0+128),w
  7669     1F67  00B5               	movwf	(___xxtofl@arg+1)^(0+128)
  7670     1F68  082A               	movf	___xxtofl@val^(0+128),w
  7671     1F69  00B4               	movwf	___xxtofl@arg^(0+128)
  7672     1F6A                     l925:
  7673     1F6A  082D               	movf	(___xxtofl@val+3)^(0+128),w
  7674     1F6B  042C               	iorwf	(___xxtofl@val+2)^(0+128),w
  7675     1F6C  042B               	iorwf	(___xxtofl@val+1)^(0+128),w
  7676     1F6D  042A               	iorwf	___xxtofl@val^(0+128),w
  7677     1F6E  1D03               	skipz
  7678     1F6F  2F71               	goto	u5391
  7679     1F70  2F72               	goto	u5390
  7680     1F71                     u5391:
  7681     1F71  2F7B               	goto	l3393
  7682     1F72                     u5390:
  7683     1F72                     l3389:
  7684     1F72  3000               	movlw	0
  7685     1F73  00AD               	movwf	(?___xxtofl+3)^(0+128)
  7686     1F74  3000               	movlw	0
  7687     1F75  00AC               	movwf	(?___xxtofl+2)^(0+128)
  7688     1F76  3000               	movlw	0
  7689     1F77  00AB               	movwf	(?___xxtofl+1)^(0+128)
  7690     1F78  3000               	movlw	0
  7691     1F79  00AA               	movwf	?___xxtofl^(0+128)
  7692     1F7A  2FFF               	goto	l927
  7693     1F7B                     l3393:
  7694     1F7B  3096               	movlw	150
  7695     1F7C  00B3               	movwf	___xxtofl@exp^(0+128)
  7696     1F7D  2F8B               	goto	l3397
  7697     1F7E                     l3395:
  7698     1F7E  3001               	movlw	1
  7699     1F7F  00AE               	movwf	??___xxtofl^(0+128)
  7700     1F80  082E               	movf	??___xxtofl^(0+128),w
  7701     1F81  07B3               	addwf	___xxtofl@exp^(0+128),f
  7702     1F82  3001               	movlw	1
  7703     1F83                     u5405:
  7704     1F83  1003               	clrc
  7705     1F84  0CB7               	rrf	(___xxtofl@arg+3)^(0+128),f
  7706     1F85  0CB6               	rrf	(___xxtofl@arg+2)^(0+128),f
  7707     1F86  0CB5               	rrf	(___xxtofl@arg+1)^(0+128),f
  7708     1F87  0CB4               	rrf	___xxtofl@arg^(0+128),f
  7709     1F88  3EFF               	addlw	-1
  7710     1F89  1D03               	skipz
  7711     1F8A  2F83               	goto	u5405
  7712     1F8B                     l3397:
  7713     1F8B  30FE               	movlw	254
  7714     1F8C  0537               	andwf	(___xxtofl@arg+3)^(0+128),w
  7715     1F8D  1D03               	btfss	3,2
  7716     1F8E  2F90               	goto	u5411
  7717     1F8F  2F91               	goto	u5410
  7718     1F90                     u5411:
  7719     1F90  2F7E               	goto	l3395
  7720     1F91                     u5410:
  7721     1F91  2FAD               	goto	l931
  7722     1F92                     l3399:
  7723     1F92  3001               	movlw	1
  7724     1F93  00AE               	movwf	??___xxtofl^(0+128)
  7725     1F94  082E               	movf	??___xxtofl^(0+128),w
  7726     1F95  07B3               	addwf	___xxtofl@exp^(0+128),f
  7727     1F96                     l3401:
  7728     1F96  3001               	movlw	1
  7729     1F97  07B4               	addwf	___xxtofl@arg^(0+128),f
  7730     1F98  3000               	movlw	0
  7731     1F99  1803               	skipnc
  7732     1F9A  3001               	movlw	1
  7733     1F9B  07B5               	addwf	(___xxtofl@arg+1)^(0+128),f
  7734     1F9C  3000               	movlw	0
  7735     1F9D  1803               	skipnc
  7736     1F9E  3001               	movlw	1
  7737     1F9F  07B6               	addwf	(___xxtofl@arg+2)^(0+128),f
  7738     1FA0  3000               	movlw	0
  7739     1FA1  1803               	skipnc
  7740     1FA2  3001               	movlw	1
  7741     1FA3  07B7               	addwf	(___xxtofl@arg+3)^(0+128),f
  7742     1FA4                     l3403:
  7743     1FA4  3001               	movlw	1
  7744     1FA5                     u5425:
  7745     1FA5  1003               	clrc
  7746     1FA6  0CB7               	rrf	(___xxtofl@arg+3)^(0+128),f
  7747     1FA7  0CB6               	rrf	(___xxtofl@arg+2)^(0+128),f
  7748     1FA8  0CB5               	rrf	(___xxtofl@arg+1)^(0+128),f
  7749     1FA9  0CB4               	rrf	___xxtofl@arg^(0+128),f
  7750     1FAA  3EFF               	addlw	-1
  7751     1FAB  1D03               	skipz
  7752     1FAC  2FA5               	goto	u5425
  7753     1FAD                     l931:
  7754     1FAD  30FF               	movlw	255
  7755     1FAE  0537               	andwf	(___xxtofl@arg+3)^(0+128),w
  7756     1FAF  1D03               	btfss	3,2
  7757     1FB0  2FB2               	goto	u5431
  7758     1FB1  2FB3               	goto	u5430
  7759     1FB2                     u5431:
  7760     1FB2  2F92               	goto	l3399
  7761     1FB3                     u5430:
  7762     1FB3  2FBF               	goto	l3407
  7763     1FB4                     l3405:
  7764     1FB4  3001               	movlw	1
  7765     1FB5  02B3               	subwf	___xxtofl@exp^(0+128),f
  7766     1FB6  3001               	movlw	1
  7767     1FB7  00AE               	movwf	??___xxtofl^(0+128)
  7768     1FB8                     u5445:
  7769     1FB8  1003               	clrc
  7770     1FB9  0DB4               	rlf	___xxtofl@arg^(0+128),f
  7771     1FBA  0DB5               	rlf	(___xxtofl@arg+1)^(0+128),f
  7772     1FBB  0DB6               	rlf	(___xxtofl@arg+2)^(0+128),f
  7773     1FBC  0DB7               	rlf	(___xxtofl@arg+3)^(0+128),f
  7774     1FBD  0BAE               	decfsz	??___xxtofl^(0+128),f
  7775     1FBE  2FB8               	goto	u5445
  7776     1FBF                     l3407:
  7777     1FBF  1BB6               	btfsc	(___xxtofl@arg+2)^(0+128),7
  7778     1FC0  2FC2               	goto	u5451
  7779     1FC1  2FC3               	goto	u5450
  7780     1FC2                     u5451:
  7781     1FC2  2FC9               	goto	l938
  7782     1FC3                     u5450:
  7783     1FC3                     l3409:
  7784     1FC3  3002               	movlw	2
  7785     1FC4  0233               	subwf	___xxtofl@exp^(0+128),w
  7786     1FC5  1803               	skipnc
  7787     1FC6  2FC8               	goto	u5461
  7788     1FC7  2FC9               	goto	u5460
  7789     1FC8                     u5461:
  7790     1FC8  2FB4               	goto	l3405
  7791     1FC9                     u5460:
  7792     1FC9                     l938:
  7793     1FC9  1833               	btfsc	___xxtofl@exp^(0+128),0
  7794     1FCA  2FCC               	goto	u5471
  7795     1FCB  2FCD               	goto	u5470
  7796     1FCC                     u5471:
  7797     1FCC  2FD5               	goto	l939
  7798     1FCD                     u5470:
  7799     1FCD                     l3411:
  7800     1FCD  30FF               	movlw	255
  7801     1FCE  05B4               	andwf	___xxtofl@arg^(0+128),f
  7802     1FCF  30FF               	movlw	255
  7803     1FD0  05B5               	andwf	(___xxtofl@arg+1)^(0+128),f
  7804     1FD1  307F               	movlw	127
  7805     1FD2  05B6               	andwf	(___xxtofl@arg+2)^(0+128),f
  7806     1FD3  30FF               	movlw	255
  7807     1FD4  05B7               	andwf	(___xxtofl@arg+3)^(0+128),f
  7808     1FD5                     l939:
  7809     1FD5  1003               	clrc
  7810     1FD6  0CB3               	rrf	___xxtofl@exp^(0+128),f
  7811     1FD7                     l3413:
  7812     1FD7  0833               	movf	___xxtofl@exp^(0+128),w
  7813     1FD8  00AE               	movwf	??___xxtofl^(0+128)
  7814     1FD9  01AF               	clrf	(??___xxtofl^(0+128)+1)
  7815     1FDA  01B0               	clrf	(??___xxtofl^(0+128)+2)
  7816     1FDB  01B1               	clrf	(??___xxtofl^(0+128)+3)
  7817     1FDC  3018               	movlw	24
  7818     1FDD                     u5485:
  7819     1FDD  1003               	clrc
  7820     1FDE  0DAE               	rlf	??___xxtofl^(0+128),f
  7821     1FDF  0DAF               	rlf	(??___xxtofl^(0+128)+1),f
  7822     1FE0  0DB0               	rlf	(??___xxtofl^(0+128)+2),f
  7823     1FE1  0DB1               	rlf	(??___xxtofl^(0+128)+3),f
  7824     1FE2                     u5480:
  7825     1FE2  3EFF               	addlw	-1
  7826     1FE3  1D03               	skipz
  7827     1FE4  2FDD               	goto	u5485
  7828     1FE5  082E               	movf	??___xxtofl^(0+128),w
  7829     1FE6  04B4               	iorwf	___xxtofl@arg^(0+128),f
  7830     1FE7  082F               	movf	(??___xxtofl+1)^(0+128),w
  7831     1FE8  04B5               	iorwf	(___xxtofl@arg+1)^(0+128),f
  7832     1FE9  0830               	movf	(??___xxtofl+2)^(0+128),w
  7833     1FEA  04B6               	iorwf	(___xxtofl@arg+2)^(0+128),f
  7834     1FEB  0831               	movf	(??___xxtofl+3)^(0+128),w
  7835     1FEC  04B7               	iorwf	(___xxtofl@arg+3)^(0+128),f
  7836     1FED                     l3415:
  7837     1FED  0832               	movf	___xxtofl@sign^(0+128),w
  7838     1FEE  1903               	btfsc	3,2
  7839     1FEF  2FF1               	goto	u5491
  7840     1FF0  2FF2               	goto	u5490
  7841     1FF1                     u5491:
  7842     1FF1  2FF7               	goto	l3421
  7843     1FF2                     u5490:
  7844     1FF2                     l3417:
  7845     1FF2  1FAD               	btfss	(___xxtofl@val+3)^(0+128),7
  7846     1FF3  2FF5               	goto	u5501
  7847     1FF4  2FF6               	goto	u5500
  7848     1FF5                     u5501:
  7849     1FF5  2FF7               	goto	l3421
  7850     1FF6                     u5500:
  7851     1FF6                     l3419:
  7852     1FF6  17B7               	bsf	(___xxtofl@arg^(0+128)+3),7
  7853     1FF7                     l3421:
  7854     1FF7  0837               	movf	(___xxtofl@arg+3)^(0+128),w
  7855     1FF8  00AD               	movwf	(?___xxtofl+3)^(0+128)
  7856     1FF9  0836               	movf	(___xxtofl@arg+2)^(0+128),w
  7857     1FFA  00AC               	movwf	(?___xxtofl+2)^(0+128)
  7858     1FFB  0835               	movf	(___xxtofl@arg+1)^(0+128),w
  7859     1FFC  00AB               	movwf	(?___xxtofl+1)^(0+128)
  7860     1FFD  0834               	movf	___xxtofl@arg^(0+128),w
  7861     1FFE  00AA               	movwf	?___xxtofl^(0+128)
  7862     1FFF                     l927:
  7863     1FFF  0008               	return
  7864     2000                     __end_of___xxtofl:
  7865                           
  7866                           	psect	text22
  7867     193C                     __ptext22:	
  7868 ;; *************** function ___wmul *****************
  7869 ;; Defined at:
  7870 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  multiplier      2    6[BANK0 ] unsigned int 
  7873 ;;  multiplicand    2    8[BANK0 ] unsigned int 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  product         2   10[BANK0 ] unsigned int 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  2    6[BANK0 ] unsigned int 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7885 ;;      Params:         0       4       0       0       0
  7886 ;;      Locals:         0       2       0       0       0
  7887 ;;      Temps:          0       0       0       0       0
  7888 ;;      Totals:         0       6       0       0       0
  7889 ;;Total ram usage:        6 bytes
  7890 ;; Hardware stack levels used: 1
  7891 ;; Hardware stack levels required when called: 2
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_map
  7896 ;;		_sprintf
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900     193C                     ___wmul:	
  7901                           ;psect for function ___wmul
  7902                           
  7903     193C                     l3241:	
  7904                           ;incstack = 0
  7905                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7906                           
  7907     193C  1283               	bcf	3,5	;RP0=0, select bank0
  7908     193D  1303               	bcf	3,6	;RP1=0, select bank0
  7909     193E  01AA               	clrf	___wmul@product
  7910     193F  01AB               	clrf	___wmul@product+1
  7911     1940                     l3243:
  7912     1940  1C26               	btfss	___wmul@multiplier,0
  7913     1941  2943               	goto	u4991
  7914     1942  2944               	goto	u4990
  7915     1943                     u4991:
  7916     1943  294A               	goto	l458
  7917     1944                     u4990:
  7918     1944                     l3245:
  7919     1944  0828               	movf	___wmul@multiplicand,w
  7920     1945  07AA               	addwf	___wmul@product,f
  7921     1946  1803               	skipnc
  7922     1947  0AAB               	incf	___wmul@product+1,f
  7923     1948  0829               	movf	___wmul@multiplicand+1,w
  7924     1949  07AB               	addwf	___wmul@product+1,f
  7925     194A                     l458:
  7926     194A  3001               	movlw	1
  7927     194B                     u5005:
  7928     194B  1003               	clrc
  7929     194C  0DA8               	rlf	___wmul@multiplicand,f
  7930     194D  0DA9               	rlf	___wmul@multiplicand+1,f
  7931     194E  3EFF               	addlw	-1
  7932     194F  1D03               	skipz
  7933     1950  294B               	goto	u5005
  7934     1951                     l3247:
  7935     1951  3001               	movlw	1
  7936     1952                     u5015:
  7937     1952  1003               	clrc
  7938     1953  0CA7               	rrf	___wmul@multiplier+1,f
  7939     1954  0CA6               	rrf	___wmul@multiplier,f
  7940     1955  3EFF               	addlw	-1
  7941     1956  1D03               	skipz
  7942     1957  2952               	goto	u5015
  7943     1958                     l3249:
  7944     1958  0826               	movf	___wmul@multiplier,w
  7945     1959  0427               	iorwf	___wmul@multiplier+1,w
  7946     195A  1D03               	btfss	3,2
  7947     195B  295D               	goto	u5021
  7948     195C  295E               	goto	u5020
  7949     195D                     u5021:
  7950     195D  2940               	goto	l3243
  7951     195E                     u5020:
  7952     195E                     l3251:
  7953     195E  082B               	movf	___wmul@product+1,w
  7954     195F  00A7               	movwf	?___wmul+1
  7955     1960  082A               	movf	___wmul@product,w
  7956     1961  00A6               	movwf	?___wmul
  7957     1962                     l460:
  7958     1962  0008               	return
  7959     1963                     __end_of___wmul:
  7960                           
  7961                           	psect	text23
  7962     19F0                     __ptext23:	
  7963 ;; *************** function ___lwdiv *****************
  7964 ;; Defined at:
  7965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  divisor         2   12[BANK0 ] unsigned int 
  7968 ;;  dividend        2   14[BANK0 ] unsigned int 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  quotient        2   17[BANK0 ] unsigned int 
  7971 ;;  counter         1   19[BANK0 ] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  2   12[BANK0 ] unsigned int 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7981 ;;      Params:         0       4       0       0       0
  7982 ;;      Locals:         0       3       0       0       0
  7983 ;;      Temps:          0       1       0       0       0
  7984 ;;      Totals:         0       8       0       0       0
  7985 ;;Total ram usage:        8 bytes
  7986 ;; Hardware stack levels used: 1
  7987 ;; Hardware stack levels required when called: 2
  7988 ;; This function calls:
  7989 ;;		Nothing
  7990 ;; This function is called by:
  7991 ;;		_map
  7992 ;;		_fround
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996     19F0                     ___lwdiv:	
  7997                           ;psect for function ___lwdiv
  7998                           
  7999     19F0                     l2681:	
  8000                           ;incstack = 0
  8001                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8002                           
  8003     19F0  1283               	bcf	3,5	;RP0=0, select bank0
  8004     19F1  1303               	bcf	3,6	;RP1=0, select bank0
  8005     19F2  01B1               	clrf	___lwdiv@quotient
  8006     19F3  01B2               	clrf	___lwdiv@quotient+1
  8007     19F4                     l2683:
  8008     19F4  082C               	movf	___lwdiv@divisor,w
  8009     19F5  042D               	iorwf	___lwdiv@divisor+1,w
  8010     19F6  1903               	btfsc	3,2
  8011     19F7  29F9               	goto	u3491
  8012     19F8  29FA               	goto	u3490
  8013     19F9                     u3491:
  8014     19F9  2A31               	goto	l2703
  8015     19FA                     u3490:
  8016     19FA                     l2685:
  8017     19FA  01B3               	clrf	___lwdiv@counter
  8018     19FB  0AB3               	incf	___lwdiv@counter,f
  8019     19FC  2A08               	goto	l2691
  8020     19FD                     l2687:
  8021     19FD  3001               	movlw	1
  8022     19FE                     u3505:
  8023     19FE  1003               	clrc
  8024     19FF  0DAC               	rlf	___lwdiv@divisor,f
  8025     1A00  0DAD               	rlf	___lwdiv@divisor+1,f
  8026     1A01  3EFF               	addlw	-1
  8027     1A02  1D03               	skipz
  8028     1A03  29FE               	goto	u3505
  8029     1A04                     l2689:
  8030     1A04  3001               	movlw	1
  8031     1A05  00B0               	movwf	??___lwdiv
  8032     1A06  0830               	movf	??___lwdiv,w
  8033     1A07  07B3               	addwf	___lwdiv@counter,f
  8034     1A08                     l2691:
  8035     1A08  1FAD               	btfss	___lwdiv@divisor+1,7
  8036     1A09  2A0B               	goto	u3511
  8037     1A0A  2A0C               	goto	u3510
  8038     1A0B                     u3511:
  8039     1A0B  29FD               	goto	l2687
  8040     1A0C                     u3510:
  8041     1A0C                     l2693:
  8042     1A0C  3001               	movlw	1
  8043     1A0D                     u3525:
  8044     1A0D  1003               	clrc
  8045     1A0E  0DB1               	rlf	___lwdiv@quotient,f
  8046     1A0F  0DB2               	rlf	___lwdiv@quotient+1,f
  8047     1A10  3EFF               	addlw	-1
  8048     1A11  1D03               	skipz
  8049     1A12  2A0D               	goto	u3525
  8050     1A13  082D               	movf	___lwdiv@divisor+1,w
  8051     1A14  022F               	subwf	___lwdiv@dividend+1,w
  8052     1A15  1D03               	skipz
  8053     1A16  2A19               	goto	u3535
  8054     1A17  082C               	movf	___lwdiv@divisor,w
  8055     1A18  022E               	subwf	___lwdiv@dividend,w
  8056     1A19                     u3535:
  8057     1A19  1C03               	skipc
  8058     1A1A  2A1C               	goto	u3531
  8059     1A1B  2A1D               	goto	u3530
  8060     1A1C                     u3531:
  8061     1A1C  2A24               	goto	l2699
  8062     1A1D                     u3530:
  8063     1A1D                     l2695:
  8064     1A1D  082C               	movf	___lwdiv@divisor,w
  8065     1A1E  02AE               	subwf	___lwdiv@dividend,f
  8066     1A1F  082D               	movf	___lwdiv@divisor+1,w
  8067     1A20  1C03               	skipc
  8068     1A21  03AF               	decf	___lwdiv@dividend+1,f
  8069     1A22  02AF               	subwf	___lwdiv@dividend+1,f
  8070     1A23                     l2697:
  8071     1A23  1431               	bsf	___lwdiv@quotient,0
  8072     1A24                     l2699:
  8073     1A24  3001               	movlw	1
  8074     1A25                     u3545:
  8075     1A25  1003               	clrc
  8076     1A26  0CAD               	rrf	___lwdiv@divisor+1,f
  8077     1A27  0CAC               	rrf	___lwdiv@divisor,f
  8078     1A28  3EFF               	addlw	-1
  8079     1A29  1D03               	skipz
  8080     1A2A  2A25               	goto	u3545
  8081     1A2B                     l2701:
  8082     1A2B  3001               	movlw	1
  8083     1A2C  02B3               	subwf	___lwdiv@counter,f
  8084     1A2D  1D03               	btfss	3,2
  8085     1A2E  2A30               	goto	u3551
  8086     1A2F  2A31               	goto	u3550
  8087     1A30                     u3551:
  8088     1A30  2A0C               	goto	l2693
  8089     1A31                     u3550:
  8090     1A31                     l2703:
  8091     1A31  0832               	movf	___lwdiv@quotient+1,w
  8092     1A32  00AD               	movwf	?___lwdiv+1
  8093     1A33  0831               	movf	___lwdiv@quotient,w
  8094     1A34  00AC               	movwf	?___lwdiv
  8095     1A35                     l764:
  8096     1A35  0008               	return
  8097     1A36                     __end_of___lwdiv:
  8098                           
  8099                           	psect	text24
  8100     1CDA                     __ptext24:	
  8101 ;; *************** function ___fltol *****************
  8102 ;; Defined at:
  8103 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  f1              4    0[BANK1 ] unsigned int 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;  exp1            1    9[BANK1 ] unsigned char 
  8108 ;;  sign1           1    8[BANK1 ] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  4    0[BANK1 ] long 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8118 ;;      Params:         0       0       4       0       0
  8119 ;;      Locals:         0       0       2       0       0
  8120 ;;      Temps:          0       0       4       0       0
  8121 ;;      Totals:         0       0      10       0       0
  8122 ;;Total ram usage:       10 bytes
  8123 ;; Hardware stack levels used: 1
  8124 ;; Hardware stack levels required when called: 2
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_main
  8129 ;;		_map
  8130 ;;		_sprintf
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134     1CDA                     ___fltol:	
  8135                           ;psect for function ___fltol
  8136                           
  8137     1CDA                     l4183:	
  8138                           ;incstack = 0
  8139                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8140                           
  8141     1CDA  1003               	clrc
  8142     1CDB  1683               	bsf	3,5	;RP0=1, select bank1
  8143     1CDC  1303               	bcf	3,6	;RP1=0, select bank1
  8144     1CDD  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  8145     1CDE  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  8146     1CDF  00A9               	movwf	___fltol@exp1^(0+128)
  8147     1CE0  0829               	movf	___fltol@exp1^(0+128),w
  8148     1CE1  1D03               	btfss	3,2
  8149     1CE2  2CE4               	goto	u6861
  8150     1CE3  2CE5               	goto	u6860
  8151     1CE4                     u6861:
  8152     1CE4  2CEE               	goto	l4189
  8153     1CE5                     u6860:
  8154     1CE5                     l4185:
  8155     1CE5  3000               	movlw	0
  8156     1CE6  00A3               	movwf	(?___fltol+3)^(0+128)
  8157     1CE7  3000               	movlw	0
  8158     1CE8  00A2               	movwf	(?___fltol+2)^(0+128)
  8159     1CE9  3000               	movlw	0
  8160     1CEA  00A1               	movwf	(?___fltol+1)^(0+128)
  8161     1CEB  3000               	movlw	0
  8162     1CEC  00A0               	movwf	?___fltol^(0+128)
  8163     1CED  2D51               	goto	l661
  8164     1CEE                     l4189:
  8165     1CEE  0820               	movf	___fltol@f1^(0+128),w
  8166     1CEF  00A4               	movwf	??___fltol^(0+128)
  8167     1CF0  0821               	movf	(___fltol@f1+1)^(0+128),w
  8168     1CF1  00A5               	movwf	(??___fltol^(0+128)+1)
  8169     1CF2  0822               	movf	(___fltol@f1+2)^(0+128),w
  8170     1CF3  00A6               	movwf	(??___fltol^(0+128)+2)
  8171     1CF4  0823               	movf	(___fltol@f1+3)^(0+128),w
  8172     1CF5  00A7               	movwf	(??___fltol^(0+128)+3)
  8173     1CF6  301F               	movlw	31
  8174     1CF7                     u6875:
  8175     1CF7  1003               	clrc
  8176     1CF8  0CA7               	rrf	(??___fltol^(0+128)+3),f
  8177     1CF9  0CA6               	rrf	(??___fltol^(0+128)+2),f
  8178     1CFA  0CA5               	rrf	(??___fltol^(0+128)+1),f
  8179     1CFB  0CA4               	rrf	??___fltol^(0+128),f
  8180     1CFC                     u6870:
  8181     1CFC  3EFF               	addlw	-1
  8182     1CFD  1D03               	skipz
  8183     1CFE  2CF7               	goto	u6875
  8184     1CFF  0824               	movf	??___fltol^(0+128),w
  8185     1D00  00A8               	movwf	___fltol@sign1^(0+128)
  8186     1D01                     l4191:
  8187     1D01  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  8188     1D02                     l4193:
  8189     1D02  30FF               	movlw	255
  8190     1D03  05A0               	andwf	___fltol@f1^(0+128),f
  8191     1D04  30FF               	movlw	255
  8192     1D05  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  8193     1D06  30FF               	movlw	255
  8194     1D07  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  8195     1D08  3000               	movlw	0
  8196     1D09  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  8197     1D0A                     l4195:
  8198     1D0A  3096               	movlw	150
  8199     1D0B  02A9               	subwf	___fltol@exp1^(0+128),f
  8200     1D0C                     l4197:
  8201     1D0C  1FA9               	btfss	___fltol@exp1^(0+128),7
  8202     1D0D  2D0F               	goto	u6881
  8203     1D0E  2D10               	goto	u6880
  8204     1D0F                     u6881:
  8205     1D0F  2D2A               	goto	l4207
  8206     1D10                     u6880:
  8207     1D10                     l4199:
  8208     1D10  0829               	movf	___fltol@exp1^(0+128),w
  8209     1D11  3A80               	xorlw	128
  8210     1D12  3E97               	addlw	151
  8211     1D13  1803               	skipnc
  8212     1D14  2D16               	goto	u6891
  8213     1D15  2D17               	goto	u6890
  8214     1D16                     u6891:
  8215     1D16  2D18               	goto	l4205
  8216     1D17                     u6890:
  8217     1D17  2CE5               	goto	l4185
  8218     1D18                     l4205:
  8219     1D18  3001               	movlw	1
  8220     1D19                     u6905:
  8221     1D19  1003               	clrc
  8222     1D1A  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  8223     1D1B  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  8224     1D1C  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  8225     1D1D  0CA0               	rrf	___fltol@f1^(0+128),f
  8226     1D1E  3EFF               	addlw	-1
  8227     1D1F  1D03               	skipz
  8228     1D20  2D19               	goto	u6905
  8229     1D21  3001               	movlw	1
  8230     1D22  00A4               	movwf	??___fltol^(0+128)
  8231     1D23  0824               	movf	??___fltol^(0+128),w
  8232     1D24  07A9               	addwf	___fltol@exp1^(0+128),f
  8233     1D25  1D03               	btfss	3,2
  8234     1D26  2D28               	goto	u6911
  8235     1D27  2D29               	goto	u6910
  8236     1D28                     u6911:
  8237     1D28  2D18               	goto	l4205
  8238     1D29                     u6910:
  8239     1D29  2D41               	goto	l4215
  8240     1D2A                     l4207:
  8241     1D2A  3020               	movlw	32
  8242     1D2B  0229               	subwf	___fltol@exp1^(0+128),w
  8243     1D2C  1C03               	skipc
  8244     1D2D  2D2F               	goto	u6921
  8245     1D2E  2D30               	goto	u6920
  8246     1D2F                     u6921:
  8247     1D2F  2D3C               	goto	l668
  8248     1D30                     u6920:
  8249     1D30  2CE5               	goto	l4185
  8250     1D31                     l4213:
  8251     1D31  3001               	movlw	1
  8252     1D32  00A4               	movwf	??___fltol^(0+128)
  8253     1D33                     u6935:
  8254     1D33  1003               	clrc
  8255     1D34  0DA0               	rlf	___fltol@f1^(0+128),f
  8256     1D35  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  8257     1D36  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  8258     1D37  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  8259     1D38  0BA4               	decfsz	??___fltol^(0+128),f
  8260     1D39  2D33               	goto	u6935
  8261     1D3A  3001               	movlw	1
  8262     1D3B  02A9               	subwf	___fltol@exp1^(0+128),f
  8263     1D3C                     l668:
  8264     1D3C  0829               	movf	___fltol@exp1^(0+128),w
  8265     1D3D  1D03               	btfss	3,2
  8266     1D3E  2D40               	goto	u6941
  8267     1D3F  2D41               	goto	u6940
  8268     1D40                     u6941:
  8269     1D40  2D31               	goto	l4213
  8270     1D41                     u6940:
  8271     1D41                     l4215:
  8272     1D41  0828               	movf	___fltol@sign1^(0+128),w
  8273     1D42  1903               	btfsc	3,2
  8274     1D43  2D45               	goto	u6951
  8275     1D44  2D46               	goto	u6950
  8276     1D45                     u6951:
  8277     1D45  2D51               	goto	l671
  8278     1D46                     u6950:
  8279     1D46                     l4217:
  8280     1D46  09A0               	comf	___fltol@f1^(0+128),f
  8281     1D47  09A1               	comf	(___fltol@f1+1)^(0+128),f
  8282     1D48  09A2               	comf	(___fltol@f1+2)^(0+128),f
  8283     1D49  09A3               	comf	(___fltol@f1+3)^(0+128),f
  8284     1D4A  0AA0               	incf	___fltol@f1^(0+128),f
  8285     1D4B  1903               	skipnz
  8286     1D4C  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  8287     1D4D  1903               	skipnz
  8288     1D4E  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  8289     1D4F  1903               	skipnz
  8290     1D50  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  8291     1D51                     l671:
  8292     1D51                     l661:
  8293     1D51  0008               	return
  8294     1D52                     __end_of___fltol:
  8295                           
  8296                           	psect	text25
  8297     198C                     __ptext25:	
  8298 ;; *************** function _UART_Print *****************
  8299 ;; Defined at:
  8300 ;;		line 65 in file "USARTmodl.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;  data            2    7[BANK0 ] PTR const unsigned char 
  8303 ;;		 -> main@s(9), STR_1(3), 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  i               1   10[BANK0 ] unsigned char 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8315 ;;      Params:         0       2       0       0       0
  8316 ;;      Locals:         0       1       0       0       0
  8317 ;;      Temps:          0       1       0       0       0
  8318 ;;      Totals:         0       4       0       0       0
  8319 ;;Total ram usage:        4 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 3
  8322 ;; This function calls:
  8323 ;;		_UART_PutC
  8324 ;; This function is called by:
  8325 ;;		_main
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329     198C                     _UART_Print:	
  8330                           ;psect for function _UART_Print
  8331                           
  8332     198C                     l3471:	
  8333                           ;incstack = 0
  8334                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8335                           
  8336                           
  8337                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  8338     198C  1283               	bcf	3,5	;RP0=0, select bank0
  8339     198D  1303               	bcf	3,6	;RP1=0, select bank0
  8340     198E  01AA               	clrf	UART_Print@i
  8341                           
  8342                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  8343     198F  29A7               	goto	l3477
  8344     1990                     l3473:
  8345                           
  8346                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  8347     1990  082A               	movf	UART_Print@i,w
  8348     1991  0727               	addwf	UART_Print@data,w
  8349     1992  0084               	movwf	4
  8350     1993  0828               	movf	UART_Print@data+1,w
  8351     1994  1803               	skipnc
  8352     1995  0A28               	incf	UART_Print@data+1,w
  8353     1996  00FF               	movwf	btemp+1
  8354     1997  160A  118A  2000  160A  158A  	fcall	stringtab
  8355     199C  160A  158A  20F6  160A  158A  	fcall	_UART_PutC
  8356     19A1                     l3475:
  8357     19A1  3001               	movlw	1
  8358     19A2  1283               	bcf	3,5	;RP0=0, select bank0
  8359     19A3  1303               	bcf	3,6	;RP1=0, select bank0
  8360     19A4  00A9               	movwf	??_UART_Print
  8361     19A5  0829               	movf	??_UART_Print,w
  8362     19A6  07AA               	addwf	UART_Print@i,f
  8363     19A7                     l3477:
  8364                           
  8365                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  8366     19A7  082A               	movf	UART_Print@i,w
  8367     19A8  0727               	addwf	UART_Print@data,w
  8368     19A9  0084               	movwf	4
  8369     19AA  0828               	movf	UART_Print@data+1,w
  8370     19AB  1803               	skipnc
  8371     19AC  0A28               	incf	UART_Print@data+1,w
  8372     19AD  00FF               	movwf	btemp+1
  8373     19AE  160A  118A  2000  160A  158A  	fcall	stringtab
  8374     19B3  3A00               	xorlw	0
  8375     19B4  1D03               	skipz
  8376     19B5  29B7               	goto	u5511
  8377     19B6  29B8               	goto	u5510
  8378     19B7                     u5511:
  8379     19B7  2990               	goto	l3473
  8380     19B8                     u5510:
  8381     19B8                     l250:
  8382     19B8  0008               	return
  8383     19B9                     __end_of_UART_Print:
  8384                           
  8385                           	psect	text26
  8386     18F6                     __ptext26:	
  8387 ;; *************** function _UART_PutC *****************
  8388 ;; Defined at:
  8389 ;;		line 59 in file "USARTmodl.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  data            1    wreg     const unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  data            1    6[BANK0 ] const unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         0       0       0       0       0
  8404 ;;      Locals:         0       1       0       0       0
  8405 ;;      Temps:          0       0       0       0       0
  8406 ;;      Totals:         0       1       0       0       0
  8407 ;;Total ram usage:        1 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 2
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;;		_UART_Print
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418     18F6                     _UART_PutC:	
  8419                           ;psect for function _UART_PutC
  8420                           
  8421                           
  8422                           ;incstack = 0
  8423                           ; Regs used in _UART_PutC: [wreg]
  8424                           ;UART_PutC@data stored from wreg
  8425     18F6  1283               	bcf	3,5	;RP0=0, select bank0
  8426     18F7  1303               	bcf	3,6	;RP1=0, select bank0
  8427     18F8  00A6               	movwf	UART_PutC@data
  8428     18F9                     l3063:
  8429     18F9                     l241:	
  8430                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  8431                           
  8432     18F9  1683               	bsf	3,5	;RP0=1, select bank1
  8433     18FA  1303               	bcf	3,6	;RP1=0, select bank1
  8434     18FB  1C98               	btfss	24,1	;volatile
  8435     18FC  28FE               	goto	u4451
  8436     18FD  28FF               	goto	u4450
  8437     18FE                     u4451:
  8438     18FE  28F9               	goto	l241
  8439     18FF                     u4450:
  8440     18FF                     l3065:
  8441                           
  8442                           ;USARTmodl.c: 62:   TXREG = data;
  8443     18FF  1283               	bcf	3,5	;RP0=0, select bank0
  8444     1900  1303               	bcf	3,6	;RP1=0, select bank0
  8445     1901  0826               	movf	UART_PutC@data,w
  8446     1902  0099               	movwf	25	;volatile
  8447     1903                     l244:
  8448     1903  0008               	return
  8449     1904                     __end_of_UART_PutC:
  8450                           
  8451                           	psect	text27
  8452     18E8                     __ptext27:	
  8453 ;; *************** function _UART_GetC *****************
  8454 ;; Defined at:
  8455 ;;		line 46 in file "USARTmodl.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8469 ;;      Params:         0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0
  8472 ;;      Totals:         0       0       0       0       0
  8473 ;;Total ram usage:        0 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 2
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_main
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483     18E8                     _UART_GetC:	
  8484                           ;psect for function _UART_GetC
  8485                           
  8486     18E8                     l3777:	
  8487                           ;incstack = 0
  8488                           ; Regs used in _UART_GetC: [wreg]
  8489                           
  8490     18E8                     l234:	
  8491                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  8492                           
  8493     18E8  1283               	bcf	3,5	;RP0=0, select bank0
  8494     18E9  1303               	bcf	3,6	;RP1=0, select bank0
  8495     18EA  1E8C               	btfss	12,5	;volatile
  8496     18EB  28ED               	goto	u6021
  8497     18EC  28EE               	goto	u6020
  8498     18ED                     u6021:
  8499     18ED  28E8               	goto	l234
  8500     18EE                     u6020:
  8501     18EE                     l236:
  8502                           
  8503                           ;USARTmodl.c: 49:   if (OERR)
  8504     18EE  1C98               	btfss	24,1	;volatile
  8505     18EF  28F1               	goto	u6031
  8506     18F0  28F2               	goto	u6030
  8507     18F1                     u6031:
  8508     18F1  28F4               	goto	l3781
  8509     18F2                     u6030:
  8510     18F2                     l3779:
  8511                           
  8512                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  8513     18F2  1218               	bcf	24,4	;volatile
  8514                           
  8515                           ;USARTmodl.c: 52:     CREN = 1;
  8516     18F3  1618               	bsf	24,4	;volatile
  8517     18F4                     l3781:
  8518                           
  8519                           ;USARTmodl.c: 54:   return RCREG;
  8520     18F4  081A               	movf	26,w	;volatile
  8521     18F5                     l238:
  8522     18F5  0008               	return
  8523     18F6                     __end_of_UART_GetC:
  8524                           
  8525                           	psect	text28
  8526     18D1                     __ptext28:	
  8527 ;; *************** function _UART_Data_Ready *****************
  8528 ;; Defined at:
  8529 ;;		line 41 in file "USARTmodl.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;		None               void
  8536 ;; Registers used:
  8537 ;;		status,2, status,0
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8543 ;;      Params:         0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0
  8546 ;;      Totals:         0       0       0       0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; Hardware stack levels required when called: 2
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557     18D1                     _UART_Data_Ready:	
  8558                           ;psect for function _UART_Data_Ready
  8559                           
  8560     18D1                     l3769:	
  8561                           ;incstack = 0
  8562                           ; Regs used in _UART_Data_Ready: [status]
  8563                           
  8564                           
  8565                           ;USARTmodl.c: 43:   return RCIF;
  8566     18D1  1283               	bcf	3,5	;RP0=0, select bank0
  8567     18D2  1303               	bcf	3,6	;RP1=0, select bank0
  8568     18D3  1A8C               	btfsc	12,5	;volatile
  8569     18D4  28D6               	goto	u6011
  8570     18D5  28D7               	goto	u6010
  8571     18D6                     u6011:
  8572     18D6  28D9               	goto	l3773
  8573     18D7                     u6010:
  8574     18D7                     l3771:
  8575     18D7  1003               	clrc
  8576     18D8  28DA               	goto	l231
  8577     18D9                     l3773:
  8578     18D9  1403               	setc
  8579     18DA                     l231:
  8580     18DA  0008               	return
  8581     18DB                     __end_of_UART_Data_Ready:
  8582                           
  8583                           	psect	text29
  8584     1C6F                     __ptext29:	
  8585 ;; *************** function _isr *****************
  8586 ;; Defined at:
  8587 ;;		line 36 in file "postlab2.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0, pclath, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8601 ;;      Params:         0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0
  8603 ;;      Temps:          0       6       0       0       0
  8604 ;;      Totals:         0       6       0       0       0
  8605 ;;Total ram usage:        6 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 1
  8608 ;; This function calls:
  8609 ;;		i1___awdiv
  8610 ;;		i1___xxtofl
  8611 ;; This function is called by:
  8612 ;;		Interrupt level 1
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616     1C6F                     _isr:	
  8617                           ;psect for function _isr
  8618                           
  8619     1C6F                     i1l3873:
  8620                           
  8621                           ;postlab2.c: 38: if(PIR1bits.ADIF){
  8622     1C6F  1F0C               	btfss	12,6	;volatile
  8623     1C70  2C72               	goto	u628_21
  8624     1C71  2C73               	goto	u628_20
  8625     1C72                     u628_21:
  8626     1C72  2CD3               	goto	i1l173
  8627     1C73                     u628_20:
  8628     1C73                     i1l3875:
  8629                           
  8630                           ;postlab2.c: 40:        if (ADCON0bits.CHS ==1){
  8631     1C73  0C1F               	rrf	31,w	;volatile
  8632     1C74  00A0               	movwf	??_isr
  8633     1C75  0C20               	rrf	??_isr,w
  8634     1C76  390F               	andlw	15
  8635     1C77  3A01               	xorlw	1
  8636     1C78  1D03               	skipz
  8637     1C79  2C7B               	goto	u629_21
  8638     1C7A  2C7C               	goto	u629_20
  8639     1C7B                     u629_21:
  8640     1C7B  2C93               	goto	i1l3879
  8641     1C7C                     u629_20:
  8642     1C7C                     i1l3877:
  8643                           
  8644                           ;postlab2.c: 42:               valpot0 =5/ ADRESH;
  8645     1C7C  081E               	movf	30,w	;volatile
  8646     1C7D  00A0               	movwf	??_isr
  8647     1C7E  01A1               	clrf	??_isr+1
  8648     1C7F  0820               	movf	??_isr,w
  8649     1C80  00F0               	movwf	i1___awdiv@divisor
  8650     1C81  0821               	movf	??_isr+1,w
  8651     1C82  00F1               	movwf	i1___awdiv@divisor+1
  8652     1C83  3005               	movlw	5
  8653     1C84  00F2               	movwf	i1___awdiv@dividend
  8654     1C85  3000               	movlw	0
  8655     1C86  00F3               	movwf	i1___awdiv@dividend+1
  8656     1C87  160A  158A  2337  160A  158A  	fcall	i1___awdiv
  8657     1C8C  0871               	movf	?i1___awdiv+1,w
  8658     1C8D  1283               	bcf	3,5	;RP0=0, select bank0
  8659     1C8E  1303               	bcf	3,6	;RP1=0, select bank0
  8660     1C8F  00E7               	movwf	_valpot0+1
  8661     1C90  0870               	movf	?i1___awdiv,w
  8662     1C91  00E6               	movwf	_valpot0
  8663                           
  8664                           ;postlab2.c: 44:         }
  8665     1C92  2CD0               	goto	i1l3887
  8666     1C93                     i1l3879:
  8667     1C93  0C1F               	rrf	31,w	;volatile
  8668     1C94  00A0               	movwf	??_isr
  8669     1C95  0C20               	rrf	??_isr,w
  8670     1C96  390F               	andlw	15
  8671     1C97  3A00               	xorlw	0
  8672     1C98  1D03               	skipz
  8673     1C99  2C9B               	goto	u630_21
  8674     1C9A  2C9C               	goto	u630_20
  8675     1C9B                     u630_21:
  8676     1C9B  2CBA               	goto	i1l3883
  8677     1C9C                     u630_20:
  8678     1C9C                     i1l3881:
  8679                           
  8680                           ;postlab2.c: 47:          varvolt = ADRESH;
  8681     1C9C  081E               	movf	30,w	;volatile
  8682     1C9D  00A0               	movwf	??_isr
  8683     1C9E  01A1               	clrf	??_isr+1
  8684     1C9F  01A2               	clrf	??_isr+2
  8685     1CA0  01A3               	clrf	??_isr+3
  8686     1CA1  0823               	movf	??_isr+3,w
  8687     1CA2  00F3               	movwf	i1___xxtofl@val+3
  8688     1CA3  0822               	movf	??_isr+2,w
  8689     1CA4  00F2               	movwf	i1___xxtofl@val+2
  8690     1CA5  0821               	movf	??_isr+1,w
  8691     1CA6  00F1               	movwf	i1___xxtofl@val+1
  8692     1CA7  0820               	movf	??_isr,w
  8693     1CA8  00F0               	movwf	i1___xxtofl@val
  8694     1CA9  3000               	movlw	0
  8695     1CAA  160A  158A  25D6  160A  158A  	fcall	i1___xxtofl
  8696     1CAF  0873               	movf	?i1___xxtofl+3,w
  8697     1CB0  1683               	bsf	3,5	;RP0=1, select bank3
  8698     1CB1  1703               	bsf	3,6	;RP1=1, select bank3
  8699     1CB2  00A7               	movwf	(_varvolt+3)^(0+384)
  8700     1CB3  0872               	movf	?i1___xxtofl+2,w
  8701     1CB4  00A6               	movwf	(_varvolt+2)^(0+384)
  8702     1CB5  0871               	movf	?i1___xxtofl+1,w
  8703     1CB6  00A5               	movwf	(_varvolt+1)^(0+384)
  8704     1CB7  0870               	movf	?i1___xxtofl,w
  8705     1CB8  00A4               	movwf	_varvolt^(0+384)
  8706                           
  8707                           ;postlab2.c: 48:         }
  8708     1CB9  2CD0               	goto	i1l3887
  8709     1CBA                     i1l3883:
  8710     1CBA  0C1F               	rrf	31,w	;volatile
  8711     1CBB  00A0               	movwf	??_isr
  8712     1CBC  0C20               	rrf	??_isr,w
  8713     1CBD  390F               	andlw	15
  8714     1CBE  3A02               	xorlw	2
  8715     1CBF  1D03               	skipz
  8716     1CC0  2CC2               	goto	u631_21
  8717     1CC1  2CC3               	goto	u631_20
  8718     1CC2                     u631_21:
  8719     1CC2  2CD0               	goto	i1l3887
  8720     1CC3                     u631_20:
  8721     1CC3                     i1l3885:
  8722                           
  8723                           ;postlab2.c: 50:             val = ADRESH;
  8724     1CC3  081E               	movf	30,w	;volatile
  8725     1CC4  00A0               	movwf	??_isr
  8726     1CC5  01A1               	clrf	??_isr+1
  8727     1CC6  0820               	movf	??_isr,w
  8728     1CC7  1683               	bsf	3,5	;RP0=1, select bank1
  8729     1CC8  1303               	bcf	3,6	;RP1=0, select bank1
  8730     1CC9  00E6               	movwf	_val^(0+128)
  8731     1CCA  1283               	bcf	3,5	;RP0=0, select bank0
  8732     1CCB  1303               	bcf	3,6	;RP1=0, select bank0
  8733     1CCC  0821               	movf	??_isr+1,w
  8734     1CCD  1683               	bsf	3,5	;RP0=1, select bank1
  8735     1CCE  1303               	bcf	3,6	;RP1=0, select bank1
  8736     1CCF  00E7               	movwf	(_val+1)^(0+128)
  8737     1CD0                     i1l3887:
  8738                           
  8739                           ;postlab2.c: 52:             PIR1bits.ADIF =0;
  8740     1CD0  1283               	bcf	3,5	;RP0=0, select bank0
  8741     1CD1  1303               	bcf	3,6	;RP1=0, select bank0
  8742     1CD2  130C               	bcf	12,6	;volatile
  8743     1CD3                     i1l173:
  8744     1CD3  0825               	movf	??_isr+5,w
  8745     1CD4  008A               	movwf	10
  8746     1CD5  0E24               	swapf	??_isr+4,w
  8747     1CD6  0083               	movwf	3
  8748     1CD7  0EFE               	swapf	btemp,f
  8749     1CD8  0E7E               	swapf	btemp,w
  8750     1CD9  0009               	retfie
  8751     1CDA                     __end_of_isr:
  8752                           
  8753                           	psect	intentry
  8754     0004                     __pintentry:	
  8755                           ;incstack = 0
  8756                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  8757                           
  8758     0004                     interrupt_function:
  8759     007E                     saved_w	set	btemp
  8760     0004  00FE               	movwf	btemp
  8761     0005  0E03               	swapf	3,w
  8762     0006  1283               	bcf	3,5	;RP0=0, select bank0
  8763     0007  1303               	bcf	3,6	;RP1=0, select bank0
  8764     0008  00A4               	movwf	??_isr+4
  8765     0009  080A               	movf	10,w
  8766     000A  00A5               	movwf	??_isr+5
  8767     000B  160A  158A  2C6F   	ljmp	_isr
  8768                           
  8769                           	psect	text30
  8770     1DD6                     __ptext30:	
  8771 ;; *************** function i1___xxtofl *****************
  8772 ;; Defined at:
  8773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  sign            1    wreg     unsigned char 
  8776 ;;  val             4    0[COMMON] long 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  sign            1    8[COMMON] unsigned char 
  8779 ;;  arg             4   10[COMMON] unsigned long 
  8780 ;;  exp             1    9[COMMON] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  4    0[COMMON] unsigned char 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         4       0       0       0       0
  8791 ;;      Locals:         6       0       0       0       0
  8792 ;;      Temps:          4       0       0       0       0
  8793 ;;      Totals:        14       0       0       0       0
  8794 ;;Total ram usage:       14 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_isr
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803     1DD6                     i1___xxtofl:	
  8804                           ;psect for function i1___xxtofl
  8805                           
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
  8809                           ;i1___xxtofl@sign stored from wreg
  8810     1DD6  00F8               	movwf	i1___xxtofl@sign
  8811     1DD7                     i1l3829:
  8812     1DD7  0878               	movf	i1___xxtofl@sign,w
  8813     1DD8  1903               	btfsc	3,2
  8814     1DD9  2DDB               	goto	u614_21
  8815     1DDA  2DDC               	goto	u614_20
  8816     1DDB                     u614_21:
  8817     1DDB  2DF0               	goto	i1l3835
  8818     1DDC                     u614_20:
  8819     1DDC                     i1l3831:
  8820     1DDC  1FF3               	btfss	i1___xxtofl@val+3,7
  8821     1DDD  2DDF               	goto	u615_21
  8822     1DDE  2DE0               	goto	u615_20
  8823     1DDF                     u615_21:
  8824     1DDF  2DF0               	goto	i1l3835
  8825     1DE0                     u615_20:
  8826     1DE0                     i1l3833:
  8827     1DE0  0970               	comf	i1___xxtofl@val,w
  8828     1DE1  00FA               	movwf	i1___xxtofl@arg
  8829     1DE2  0971               	comf	i1___xxtofl@val+1,w
  8830     1DE3  00FB               	movwf	i1___xxtofl@arg+1
  8831     1DE4  0972               	comf	i1___xxtofl@val+2,w
  8832     1DE5  00FC               	movwf	i1___xxtofl@arg+2
  8833     1DE6  0973               	comf	i1___xxtofl@val+3,w
  8834     1DE7  00FD               	movwf	i1___xxtofl@arg+3
  8835     1DE8  0AFA               	incf	i1___xxtofl@arg,f
  8836     1DE9  1903               	skipnz
  8837     1DEA  0AFB               	incf	i1___xxtofl@arg+1,f
  8838     1DEB  1903               	skipnz
  8839     1DEC  0AFC               	incf	i1___xxtofl@arg+2,f
  8840     1DED  1903               	skipnz
  8841     1DEE  0AFD               	incf	i1___xxtofl@arg+3,f
  8842     1DEF  2DF8               	goto	i1l925
  8843     1DF0                     i1l3835:
  8844     1DF0  0873               	movf	i1___xxtofl@val+3,w
  8845     1DF1  00FD               	movwf	i1___xxtofl@arg+3
  8846     1DF2  0872               	movf	i1___xxtofl@val+2,w
  8847     1DF3  00FC               	movwf	i1___xxtofl@arg+2
  8848     1DF4  0871               	movf	i1___xxtofl@val+1,w
  8849     1DF5  00FB               	movwf	i1___xxtofl@arg+1
  8850     1DF6  0870               	movf	i1___xxtofl@val,w
  8851     1DF7  00FA               	movwf	i1___xxtofl@arg
  8852     1DF8                     i1l925:
  8853     1DF8  0873               	movf	i1___xxtofl@val+3,w
  8854     1DF9  0472               	iorwf	i1___xxtofl@val+2,w
  8855     1DFA  0471               	iorwf	i1___xxtofl@val+1,w
  8856     1DFB  0470               	iorwf	i1___xxtofl@val,w
  8857     1DFC  1D03               	skipz
  8858     1DFD  2DFF               	goto	u616_21
  8859     1DFE  2E00               	goto	u616_20
  8860     1DFF                     u616_21:
  8861     1DFF  2E09               	goto	i1l3841
  8862     1E00                     u616_20:
  8863     1E00                     i1l3837:
  8864     1E00  3000               	movlw	0
  8865     1E01  00F3               	movwf	?i1___xxtofl+3
  8866     1E02  3000               	movlw	0
  8867     1E03  00F2               	movwf	?i1___xxtofl+2
  8868     1E04  3000               	movlw	0
  8869     1E05  00F1               	movwf	?i1___xxtofl+1
  8870     1E06  3000               	movlw	0
  8871     1E07  00F0               	movwf	?i1___xxtofl
  8872     1E08  2E8D               	goto	i1l927
  8873     1E09                     i1l3841:
  8874     1E09  3096               	movlw	150
  8875     1E0A  00F9               	movwf	i1___xxtofl@exp
  8876     1E0B  2E19               	goto	i1l3845
  8877     1E0C                     i1l3843:
  8878     1E0C  3001               	movlw	1
  8879     1E0D  00F4               	movwf	??i1___xxtofl
  8880     1E0E  0874               	movf	??i1___xxtofl,w
  8881     1E0F  07F9               	addwf	i1___xxtofl@exp,f
  8882     1E10  3001               	movlw	1
  8883     1E11                     u617_25:
  8884     1E11  1003               	clrc
  8885     1E12  0CFD               	rrf	i1___xxtofl@arg+3,f
  8886     1E13  0CFC               	rrf	i1___xxtofl@arg+2,f
  8887     1E14  0CFB               	rrf	i1___xxtofl@arg+1,f
  8888     1E15  0CFA               	rrf	i1___xxtofl@arg,f
  8889     1E16  3EFF               	addlw	-1
  8890     1E17  1D03               	skipz
  8891     1E18  2E11               	goto	u617_25
  8892     1E19                     i1l3845:
  8893     1E19  30FE               	movlw	254
  8894     1E1A  057D               	andwf	i1___xxtofl@arg+3,w
  8895     1E1B  1D03               	btfss	3,2
  8896     1E1C  2E1E               	goto	u618_21
  8897     1E1D  2E1F               	goto	u618_20
  8898     1E1E                     u618_21:
  8899     1E1E  2E0C               	goto	i1l3843
  8900     1E1F                     u618_20:
  8901     1E1F  2E3B               	goto	i1l931
  8902     1E20                     i1l3847:
  8903     1E20  3001               	movlw	1
  8904     1E21  00F4               	movwf	??i1___xxtofl
  8905     1E22  0874               	movf	??i1___xxtofl,w
  8906     1E23  07F9               	addwf	i1___xxtofl@exp,f
  8907     1E24                     i1l3849:
  8908     1E24  3001               	movlw	1
  8909     1E25  07FA               	addwf	i1___xxtofl@arg,f
  8910     1E26  3000               	movlw	0
  8911     1E27  1803               	skipnc
  8912     1E28  3001               	movlw	1
  8913     1E29  07FB               	addwf	i1___xxtofl@arg+1,f
  8914     1E2A  3000               	movlw	0
  8915     1E2B  1803               	skipnc
  8916     1E2C  3001               	movlw	1
  8917     1E2D  07FC               	addwf	i1___xxtofl@arg+2,f
  8918     1E2E  3000               	movlw	0
  8919     1E2F  1803               	skipnc
  8920     1E30  3001               	movlw	1
  8921     1E31  07FD               	addwf	i1___xxtofl@arg+3,f
  8922     1E32                     i1l3851:
  8923     1E32  3001               	movlw	1
  8924     1E33                     u619_25:
  8925     1E33  1003               	clrc
  8926     1E34  0CFD               	rrf	i1___xxtofl@arg+3,f
  8927     1E35  0CFC               	rrf	i1___xxtofl@arg+2,f
  8928     1E36  0CFB               	rrf	i1___xxtofl@arg+1,f
  8929     1E37  0CFA               	rrf	i1___xxtofl@arg,f
  8930     1E38  3EFF               	addlw	-1
  8931     1E39  1D03               	skipz
  8932     1E3A  2E33               	goto	u619_25
  8933     1E3B                     i1l931:
  8934     1E3B  30FF               	movlw	255
  8935     1E3C  057D               	andwf	i1___xxtofl@arg+3,w
  8936     1E3D  1D03               	btfss	3,2
  8937     1E3E  2E40               	goto	u620_21
  8938     1E3F  2E41               	goto	u620_20
  8939     1E40                     u620_21:
  8940     1E40  2E20               	goto	i1l3847
  8941     1E41                     u620_20:
  8942     1E41  2E4D               	goto	i1l3855
  8943     1E42                     i1l3853:
  8944     1E42  3001               	movlw	1
  8945     1E43  02F9               	subwf	i1___xxtofl@exp,f
  8946     1E44  3001               	movlw	1
  8947     1E45  00F4               	movwf	??i1___xxtofl
  8948     1E46                     u621_25:
  8949     1E46  1003               	clrc
  8950     1E47  0DFA               	rlf	i1___xxtofl@arg,f
  8951     1E48  0DFB               	rlf	i1___xxtofl@arg+1,f
  8952     1E49  0DFC               	rlf	i1___xxtofl@arg+2,f
  8953     1E4A  0DFD               	rlf	i1___xxtofl@arg+3,f
  8954     1E4B  0BF4               	decfsz	??i1___xxtofl,f
  8955     1E4C  2E46               	goto	u621_25
  8956     1E4D                     i1l3855:
  8957     1E4D  1BFC               	btfsc	i1___xxtofl@arg+2,7
  8958     1E4E  2E50               	goto	u622_21
  8959     1E4F  2E51               	goto	u622_20
  8960     1E50                     u622_21:
  8961     1E50  2E57               	goto	i1l938
  8962     1E51                     u622_20:
  8963     1E51                     i1l3857:
  8964     1E51  3002               	movlw	2
  8965     1E52  0279               	subwf	i1___xxtofl@exp,w
  8966     1E53  1803               	skipnc
  8967     1E54  2E56               	goto	u623_21
  8968     1E55  2E57               	goto	u623_20
  8969     1E56                     u623_21:
  8970     1E56  2E42               	goto	i1l3853
  8971     1E57                     u623_20:
  8972     1E57                     i1l938:
  8973     1E57  1879               	btfsc	i1___xxtofl@exp,0
  8974     1E58  2E5A               	goto	u624_21
  8975     1E59  2E5B               	goto	u624_20
  8976     1E5A                     u624_21:
  8977     1E5A  2E63               	goto	i1l939
  8978     1E5B                     u624_20:
  8979     1E5B                     i1l3859:
  8980     1E5B  30FF               	movlw	255
  8981     1E5C  05FA               	andwf	i1___xxtofl@arg,f
  8982     1E5D  30FF               	movlw	255
  8983     1E5E  05FB               	andwf	i1___xxtofl@arg+1,f
  8984     1E5F  307F               	movlw	127
  8985     1E60  05FC               	andwf	i1___xxtofl@arg+2,f
  8986     1E61  30FF               	movlw	255
  8987     1E62  05FD               	andwf	i1___xxtofl@arg+3,f
  8988     1E63                     i1l939:
  8989     1E63  1003               	clrc
  8990     1E64  0CF9               	rrf	i1___xxtofl@exp,f
  8991     1E65                     i1l3861:
  8992     1E65  0879               	movf	i1___xxtofl@exp,w
  8993     1E66  00F4               	movwf	??i1___xxtofl
  8994     1E67  01F5               	clrf	??i1___xxtofl+1
  8995     1E68  01F6               	clrf	??i1___xxtofl+2
  8996     1E69  01F7               	clrf	??i1___xxtofl+3
  8997     1E6A  3018               	movlw	24
  8998     1E6B                     u625_25:
  8999     1E6B  1003               	clrc
  9000     1E6C  0DF4               	rlf	??i1___xxtofl,f
  9001     1E6D  0DF5               	rlf	??i1___xxtofl+1,f
  9002     1E6E  0DF6               	rlf	??i1___xxtofl+2,f
  9003     1E6F  0DF7               	rlf	??i1___xxtofl+3,f
  9004     1E70                     u625_20:
  9005     1E70  3EFF               	addlw	-1
  9006     1E71  1D03               	skipz
  9007     1E72  2E6B               	goto	u625_25
  9008     1E73  0874               	movf	??i1___xxtofl,w
  9009     1E74  04FA               	iorwf	i1___xxtofl@arg,f
  9010     1E75  0875               	movf	??i1___xxtofl+1,w
  9011     1E76  04FB               	iorwf	i1___xxtofl@arg+1,f
  9012     1E77  0876               	movf	??i1___xxtofl+2,w
  9013     1E78  04FC               	iorwf	i1___xxtofl@arg+2,f
  9014     1E79  0877               	movf	??i1___xxtofl+3,w
  9015     1E7A  04FD               	iorwf	i1___xxtofl@arg+3,f
  9016     1E7B                     i1l3863:
  9017     1E7B  0878               	movf	i1___xxtofl@sign,w
  9018     1E7C  1903               	btfsc	3,2
  9019     1E7D  2E7F               	goto	u626_21
  9020     1E7E  2E80               	goto	u626_20
  9021     1E7F                     u626_21:
  9022     1E7F  2E85               	goto	i1l3869
  9023     1E80                     u626_20:
  9024     1E80                     i1l3865:
  9025     1E80  1FF3               	btfss	i1___xxtofl@val+3,7
  9026     1E81  2E83               	goto	u627_21
  9027     1E82  2E84               	goto	u627_20
  9028     1E83                     u627_21:
  9029     1E83  2E85               	goto	i1l3869
  9030     1E84                     u627_20:
  9031     1E84                     i1l3867:
  9032     1E84  17FD               	bsf	i1___xxtofl@arg+3,7
  9033     1E85                     i1l3869:
  9034     1E85  087D               	movf	i1___xxtofl@arg+3,w
  9035     1E86  00F3               	movwf	?i1___xxtofl+3
  9036     1E87  087C               	movf	i1___xxtofl@arg+2,w
  9037     1E88  00F2               	movwf	?i1___xxtofl+2
  9038     1E89  087B               	movf	i1___xxtofl@arg+1,w
  9039     1E8A  00F1               	movwf	?i1___xxtofl+1
  9040     1E8B  087A               	movf	i1___xxtofl@arg,w
  9041     1E8C  00F0               	movwf	?i1___xxtofl
  9042     1E8D                     i1l927:
  9043     1E8D  0008               	return
  9044     1E8E                     __end_ofi1___xxtofl:
  9045                           
  9046                           	psect	text31
  9047     1B37                     __ptext31:	
  9048 ;; *************** function i1___awdiv *****************
  9049 ;; Defined at:
  9050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  divisor         2    0[COMMON] int 
  9053 ;;  dividend        2    2[COMMON] int 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  quotient        2    7[COMMON] int 
  9056 ;;  sign            1    6[COMMON] unsigned char 
  9057 ;;  counter         1    5[COMMON] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  2    0[COMMON] int 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9067 ;;      Params:         4       0       0       0       0
  9068 ;;      Locals:         4       0       0       0       0
  9069 ;;      Temps:          1       0       0       0       0
  9070 ;;      Totals:         9       0       0       0       0
  9071 ;;Total ram usage:        9 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_isr
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080     1B37                     i1___awdiv:	
  9081                           ;psect for function i1___awdiv
  9082                           
  9083     1B37                     i1l3785:	
  9084                           ;incstack = 0
  9085                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  9086                           
  9087     1B37  01F6               	clrf	i1___awdiv@sign
  9088     1B38                     i1l3787:
  9089     1B38  1FF1               	btfss	i1___awdiv@divisor+1,7
  9090     1B39  2B3B               	goto	u604_21
  9091     1B3A  2B3C               	goto	u604_20
  9092     1B3B                     u604_21:
  9093     1B3B  2B43               	goto	i1l3793
  9094     1B3C                     u604_20:
  9095     1B3C                     i1l3789:
  9096     1B3C  09F0               	comf	i1___awdiv@divisor,f
  9097     1B3D  09F1               	comf	i1___awdiv@divisor+1,f
  9098     1B3E  0AF0               	incf	i1___awdiv@divisor,f
  9099     1B3F  1903               	skipnz
  9100     1B40  0AF1               	incf	i1___awdiv@divisor+1,f
  9101     1B41                     i1l3791:
  9102     1B41  01F6               	clrf	i1___awdiv@sign
  9103     1B42  0AF6               	incf	i1___awdiv@sign,f
  9104     1B43                     i1l3793:
  9105     1B43  1FF3               	btfss	i1___awdiv@dividend+1,7
  9106     1B44  2B46               	goto	u605_21
  9107     1B45  2B47               	goto	u605_20
  9108     1B46                     u605_21:
  9109     1B46  2B50               	goto	i1l3799
  9110     1B47                     u605_20:
  9111     1B47                     i1l3795:
  9112     1B47  09F2               	comf	i1___awdiv@dividend,f
  9113     1B48  09F3               	comf	i1___awdiv@dividend+1,f
  9114     1B49  0AF2               	incf	i1___awdiv@dividend,f
  9115     1B4A  1903               	skipnz
  9116     1B4B  0AF3               	incf	i1___awdiv@dividend+1,f
  9117     1B4C                     i1l3797:
  9118     1B4C  3001               	movlw	1
  9119     1B4D  00F4               	movwf	??i1___awdiv
  9120     1B4E  0874               	movf	??i1___awdiv,w
  9121     1B4F  06F6               	xorwf	i1___awdiv@sign,f
  9122     1B50                     i1l3799:
  9123     1B50  01F7               	clrf	i1___awdiv@quotient
  9124     1B51  01F8               	clrf	i1___awdiv@quotient+1
  9125     1B52                     i1l3801:
  9126     1B52  0870               	movf	i1___awdiv@divisor,w
  9127     1B53  0471               	iorwf	i1___awdiv@divisor+1,w
  9128     1B54  1903               	btfsc	3,2
  9129     1B55  2B57               	goto	u606_21
  9130     1B56  2B58               	goto	u606_20
  9131     1B57                     u606_21:
  9132     1B57  2B8F               	goto	i1l3821
  9133     1B58                     u606_20:
  9134     1B58                     i1l3803:
  9135     1B58  01F5               	clrf	i1___awdiv@counter
  9136     1B59  0AF5               	incf	i1___awdiv@counter,f
  9137     1B5A  2B66               	goto	i1l3809
  9138     1B5B                     i1l3805:
  9139     1B5B  3001               	movlw	1
  9140     1B5C                     u607_25:
  9141     1B5C  1003               	clrc
  9142     1B5D  0DF0               	rlf	i1___awdiv@divisor,f
  9143     1B5E  0DF1               	rlf	i1___awdiv@divisor+1,f
  9144     1B5F  3EFF               	addlw	-1
  9145     1B60  1D03               	skipz
  9146     1B61  2B5C               	goto	u607_25
  9147     1B62                     i1l3807:
  9148     1B62  3001               	movlw	1
  9149     1B63  00F4               	movwf	??i1___awdiv
  9150     1B64  0874               	movf	??i1___awdiv,w
  9151     1B65  07F5               	addwf	i1___awdiv@counter,f
  9152     1B66                     i1l3809:
  9153     1B66  1FF1               	btfss	i1___awdiv@divisor+1,7
  9154     1B67  2B69               	goto	u608_21
  9155     1B68  2B6A               	goto	u608_20
  9156     1B69                     u608_21:
  9157     1B69  2B5B               	goto	i1l3805
  9158     1B6A                     u608_20:
  9159     1B6A                     i1l3811:
  9160     1B6A  3001               	movlw	1
  9161     1B6B                     u609_25:
  9162     1B6B  1003               	clrc
  9163     1B6C  0DF7               	rlf	i1___awdiv@quotient,f
  9164     1B6D  0DF8               	rlf	i1___awdiv@quotient+1,f
  9165     1B6E  3EFF               	addlw	-1
  9166     1B6F  1D03               	skipz
  9167     1B70  2B6B               	goto	u609_25
  9168     1B71  0871               	movf	i1___awdiv@divisor+1,w
  9169     1B72  0273               	subwf	i1___awdiv@dividend+1,w
  9170     1B73  1D03               	skipz
  9171     1B74  2B77               	goto	u610_25
  9172     1B75  0870               	movf	i1___awdiv@divisor,w
  9173     1B76  0272               	subwf	i1___awdiv@dividend,w
  9174     1B77                     u610_25:
  9175     1B77  1C03               	skipc
  9176     1B78  2B7A               	goto	u610_21
  9177     1B79  2B7B               	goto	u610_20
  9178     1B7A                     u610_21:
  9179     1B7A  2B82               	goto	i1l3817
  9180     1B7B                     u610_20:
  9181     1B7B                     i1l3813:
  9182     1B7B  0870               	movf	i1___awdiv@divisor,w
  9183     1B7C  02F2               	subwf	i1___awdiv@dividend,f
  9184     1B7D  0871               	movf	i1___awdiv@divisor+1,w
  9185     1B7E  1C03               	skipc
  9186     1B7F  03F3               	decf	i1___awdiv@dividend+1,f
  9187     1B80  02F3               	subwf	i1___awdiv@dividend+1,f
  9188     1B81                     i1l3815:
  9189     1B81  1477               	bsf	i1___awdiv@quotient,0
  9190     1B82                     i1l3817:
  9191     1B82  3001               	movlw	1
  9192     1B83                     u611_25:
  9193     1B83  1003               	clrc
  9194     1B84  0CF1               	rrf	i1___awdiv@divisor+1,f
  9195     1B85  0CF0               	rrf	i1___awdiv@divisor,f
  9196     1B86  3EFF               	addlw	-1
  9197     1B87  1D03               	skipz
  9198     1B88  2B83               	goto	u611_25
  9199     1B89                     i1l3819:
  9200     1B89  3001               	movlw	1
  9201     1B8A  02F5               	subwf	i1___awdiv@counter,f
  9202     1B8B  1D03               	btfss	3,2
  9203     1B8C  2B8E               	goto	u612_21
  9204     1B8D  2B8F               	goto	u612_20
  9205     1B8E                     u612_21:
  9206     1B8E  2B6A               	goto	i1l3811
  9207     1B8F                     u612_20:
  9208     1B8F                     i1l3821:
  9209     1B8F  0876               	movf	i1___awdiv@sign,w
  9210     1B90  1903               	btfsc	3,2
  9211     1B91  2B93               	goto	u613_21
  9212     1B92  2B94               	goto	u613_20
  9213     1B93                     u613_21:
  9214     1B93  2B99               	goto	i1l3825
  9215     1B94                     u613_20:
  9216     1B94                     i1l3823:
  9217     1B94  09F7               	comf	i1___awdiv@quotient,f
  9218     1B95  09F8               	comf	i1___awdiv@quotient+1,f
  9219     1B96  0AF7               	incf	i1___awdiv@quotient,f
  9220     1B97  1903               	skipnz
  9221     1B98  0AF8               	incf	i1___awdiv@quotient+1,f
  9222     1B99                     i1l3825:
  9223     1B99  0878               	movf	i1___awdiv@quotient+1,w
  9224     1B9A  00F1               	movwf	?i1___awdiv+1
  9225     1B9B  0877               	movf	i1___awdiv@quotient,w
  9226     1B9C  00F0               	movwf	?i1___awdiv
  9227     1B9D                     i1l611:
  9228     1B9D  0008               	return
  9229     1B9E                     __end_ofi1___awdiv:
  9230     007E                     btemp	set	126	;btemp
  9231     007E                     wtemp0	set	126
  9232                           
  9233                           	psect	idloc
  9234                           
  9235                           ;Config register IDLOC0 @ 0x2000
  9236                           ;	unspecified, using default values
  9237     2000                     	org	8192
  9238     2000  3FFF               	dw	16383
  9239                           
  9240                           ;Config register IDLOC1 @ 0x2001
  9241                           ;	unspecified, using default values
  9242     2001                     	org	8193
  9243     2001  3FFF               	dw	16383
  9244                           
  9245                           ;Config register IDLOC2 @ 0x2002
  9246                           ;	unspecified, using default values
  9247     2002                     	org	8194
  9248     2002  3FFF               	dw	16383
  9249                           
  9250                           ;Config register IDLOC3 @ 0x2003
  9251                           ;	unspecified, using default values
  9252     2003                     	org	8195
  9253     2003  3FFF               	dw	16383
  9254                           
  9255                           	psect	config
  9256                           
  9257                           ;Config register CONFIG1 @ 0x2007
  9258                           ;	Oscillator Selection bits
  9259                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9260                           ;	Watchdog Timer Enable bit
  9261                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9262                           ;	Power-up Timer Enable bit
  9263                           ;	PWRTE = OFF, PWRT disabled
  9264                           ;	RE3/MCLR pin function select bit
  9265                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9266                           ;	Code Protection bit
  9267                           ;	CP = OFF, Program memory code protection is disabled
  9268                           ;	Data Code Protection bit
  9269                           ;	CPD = OFF, Data memory code protection is disabled
  9270                           ;	Brown Out Reset Selection bits
  9271                           ;	BOREN = OFF, BOR disabled
  9272                           ;	Internal External Switchover bit
  9273                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9274                           ;	Fail-Safe Clock Monitor Enabled bit
  9275                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9276                           ;	Low Voltage Programming Enable bit
  9277                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9278                           ;	In-Circuit Debugger Mode bit
  9279                           ;	DEBUG = 0x1, unprogrammed default
  9280     2007                     	org	8199
  9281     2007  20D5               	dw	8405
  9282                           
  9283                           ;Config register CONFIG2 @ 0x2008
  9284                           ;	Brown-out Reset Selection bit
  9285                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9286                           ;	Flash Program Memory Self Write Enable bits
  9287                           ;	WRT = OFF, Write protection off
  9288     2008                     	org	8200
  9289     2008  3FFF               	dw	16383
  9290                           
  9291                           	psect	text1_split_1
  9292     094A                     u7000:
  9293     094A                     l4273:
  9294                           
  9295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  9296     094A  1683               	bsf	3,5	;RP0=1, select bank1
  9297     094B  1303               	bcf	3,6	;RP1=0, select bank1
  9298     094C  0862               	movf	(sprintf@fval+3)^(0+128),w
  9299     094D  1283               	bcf	3,5	;RP0=0, select bank0
  9300     094E  1303               	bcf	3,6	;RP1=0, select bank0
  9301     094F  00A9               	movwf	___flneg@f1+3
  9302     0950  1683               	bsf	3,5	;RP0=1, select bank1
  9303     0951  1303               	bcf	3,6	;RP1=0, select bank1
  9304     0952  0861               	movf	(sprintf@fval+2)^(0+128),w
  9305     0953  1283               	bcf	3,5	;RP0=0, select bank0
  9306     0954  1303               	bcf	3,6	;RP1=0, select bank0
  9307     0955  00A8               	movwf	___flneg@f1+2
  9308     0956  1683               	bsf	3,5	;RP0=1, select bank1
  9309     0957  1303               	bcf	3,6	;RP1=0, select bank1
  9310     0958  0860               	movf	(sprintf@fval+1)^(0+128),w
  9311     0959  1283               	bcf	3,5	;RP0=0, select bank0
  9312     095A  1303               	bcf	3,6	;RP1=0, select bank0
  9313     095B  00A7               	movwf	___flneg@f1+1
  9314     095C  1683               	bsf	3,5	;RP0=1, select bank1
  9315     095D  1303               	bcf	3,6	;RP1=0, select bank1
  9316     095E  085F               	movf	sprintf@fval^(0+128),w
  9317     095F  1283               	bcf	3,5	;RP0=0, select bank0
  9318     0960  1303               	bcf	3,6	;RP1=0, select bank0
  9319     0961  00A6               	movwf	___flneg@f1
  9320     0962  160A  158A  20DB  120A  158A  	fcall	___flneg
  9321     0967  1283               	bcf	3,5	;RP0=0, select bank0
  9322     0968  1303               	bcf	3,6	;RP1=0, select bank0
  9323     0969  0829               	movf	?___flneg+3,w
  9324     096A  1683               	bsf	3,5	;RP0=1, select bank1
  9325     096B  1303               	bcf	3,6	;RP1=0, select bank1
  9326     096C  00E2               	movwf	(sprintf@fval+3)^(0+128)
  9327     096D  1283               	bcf	3,5	;RP0=0, select bank0
  9328     096E  1303               	bcf	3,6	;RP1=0, select bank0
  9329     096F  0828               	movf	?___flneg+2,w
  9330     0970  1683               	bsf	3,5	;RP0=1, select bank1
  9331     0971  1303               	bcf	3,6	;RP1=0, select bank1
  9332     0972  00E1               	movwf	(sprintf@fval+2)^(0+128)
  9333     0973  1283               	bcf	3,5	;RP0=0, select bank0
  9334     0974  1303               	bcf	3,6	;RP1=0, select bank0
  9335     0975  0827               	movf	?___flneg+1,w
  9336     0976  1683               	bsf	3,5	;RP0=1, select bank1
  9337     0977  1303               	bcf	3,6	;RP1=0, select bank1
  9338     0978  00E0               	movwf	(sprintf@fval+1)^(0+128)
  9339     0979  1283               	bcf	3,5	;RP0=0, select bank0
  9340     097A  1303               	bcf	3,6	;RP1=0, select bank0
  9341     097B  0826               	movf	?___flneg,w
  9342     097C  1683               	bsf	3,5	;RP0=1, select bank1
  9343     097D  1303               	bcf	3,6	;RP1=0, select bank1
  9344     097E  00DF               	movwf	sprintf@fval^(0+128)
  9345     097F                     l4275:
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  9348     097F  3003               	movlw	3
  9349     0980  04D5               	iorwf	sprintf@flag^(0+128),f
  9350     0981  3000               	movlw	0
  9351     0982  04D6               	iorwf	(sprintf@flag+1)^(0+128),f
  9352     0983                     l4277:
  9353                           
  9354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  9355     0983  1683               	bsf	3,5	;RP0=1, select bank1
  9356     0984  1303               	bcf	3,6	;RP1=0, select bank1
  9357     0985  01DD               	clrf	sprintf@eexp^(0+128)
  9358     0986  01DE               	clrf	(sprintf@eexp+1)^(0+128)
  9359     0987                     l4279:
  9360                           
  9361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  9362     0987  0862               	movf	(sprintf@fval+3)^(0+128),w
  9363     0988  1283               	bcf	3,5	;RP0=0, select bank0
  9364     0989  1303               	bcf	3,6	;RP1=0, select bank0
  9365     098A  00A9               	movwf	___fleq@ff1+3
  9366     098B  1683               	bsf	3,5	;RP0=1, select bank1
  9367     098C  1303               	bcf	3,6	;RP1=0, select bank1
  9368     098D  0861               	movf	(sprintf@fval+2)^(0+128),w
  9369     098E  1283               	bcf	3,5	;RP0=0, select bank0
  9370     098F  1303               	bcf	3,6	;RP1=0, select bank0
  9371     0990  00A8               	movwf	___fleq@ff1+2
  9372     0991  1683               	bsf	3,5	;RP0=1, select bank1
  9373     0992  1303               	bcf	3,6	;RP1=0, select bank1
  9374     0993  0860               	movf	(sprintf@fval+1)^(0+128),w
  9375     0994  1283               	bcf	3,5	;RP0=0, select bank0
  9376     0995  1303               	bcf	3,6	;RP1=0, select bank0
  9377     0996  00A7               	movwf	___fleq@ff1+1
  9378     0997  1683               	bsf	3,5	;RP0=1, select bank1
  9379     0998  1303               	bcf	3,6	;RP1=0, select bank1
  9380     0999  085F               	movf	sprintf@fval^(0+128),w
  9381     099A  1283               	bcf	3,5	;RP0=0, select bank0
  9382     099B  1303               	bcf	3,6	;RP1=0, select bank0
  9383     099C  00A6               	movwf	___fleq@ff1
  9384     099D  3000               	movlw	0
  9385     099E  00AD               	movwf	___fleq@ff2+3
  9386     099F  3000               	movlw	0
  9387     09A0  00AC               	movwf	___fleq@ff2+2
  9388     09A1  3000               	movlw	0
  9389     09A2  00AB               	movwf	___fleq@ff2+1
  9390     09A3  3000               	movlw	0
  9391     09A4  00AA               	movwf	___fleq@ff2
  9392     09A5  160A  158A  2236  120A  158A  	fcall	___fleq
  9393     09AA  1803               	btfsc	3,0
  9394     09AB  29AD               	goto	u7011
  9395     09AC  29AE               	goto	u7010
  9396     09AD                     u7011:
  9397     09AD  2ADA               	goto	l4305
  9398     09AE                     u7010:
  9399     09AE                     l4281:
  9400                           
  9401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  9402     09AE  1003               	clrc
  9403     09AF  1683               	bsf	3,5	;RP0=1, select bank1
  9404     09B0  1303               	bcf	3,6	;RP1=0, select bank1
  9405     09B1  0D61               	rlf	(sprintf@fval+2)^(0+128),w
  9406     09B2  0D62               	rlf	(sprintf@fval+3)^(0+128),w
  9407     09B3  3E82               	addlw	130
  9408     09B4  00DD               	movwf	sprintf@eexp^(0+128)
  9409     09B5  30FF               	movlw	255
  9410     09B6  1803               	skipnc
  9411     09B7  3000               	movlw	0
  9412     09B8  00DE               	movwf	(sprintf@eexp^(0+128)+1)
  9413     09B9                     l4283:
  9414                           
  9415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  9416     09B9  30FF               	movlw	255
  9417     09BA  07DD               	addwf	sprintf@eexp^(0+128),f
  9418     09BB  1803               	skipnc
  9419     09BC  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9420     09BD  30FF               	movlw	255
  9421     09BE  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9422     09BF                     l4285:
  9423                           
  9424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  9425     09BF  3003               	movlw	3
  9426     09C0  1283               	bcf	3,5	;RP0=0, select bank0
  9427     09C1  1303               	bcf	3,6	;RP1=0, select bank0
  9428     09C2  00A6               	movwf	___wmul@multiplier
  9429     09C3  3000               	movlw	0
  9430     09C4  00A7               	movwf	___wmul@multiplier+1
  9431     09C5  1683               	bsf	3,5	;RP0=1, select bank1
  9432     09C6  1303               	bcf	3,6	;RP1=0, select bank1
  9433     09C7  085E               	movf	(sprintf@eexp+1)^(0+128),w
  9434     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  9435     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  9436     09CA  00A9               	movwf	___wmul@multiplicand+1
  9437     09CB  1683               	bsf	3,5	;RP0=1, select bank1
  9438     09CC  1303               	bcf	3,6	;RP1=0, select bank1
  9439     09CD  085D               	movf	sprintf@eexp^(0+128),w
  9440     09CE  1283               	bcf	3,5	;RP0=0, select bank0
  9441     09CF  1303               	bcf	3,6	;RP1=0, select bank0
  9442     09D0  00A8               	movwf	___wmul@multiplicand
  9443     09D1  160A  158A  213C  120A  158A  	fcall	___wmul
  9444     09D6  1283               	bcf	3,5	;RP0=0, select bank0
  9445     09D7  1303               	bcf	3,6	;RP1=0, select bank0
  9446     09D8  0827               	movf	?___wmul+1,w
  9447     09D9  1683               	bsf	3,5	;RP0=1, select bank1
  9448     09DA  1303               	bcf	3,6	;RP1=0, select bank1
  9449     09DB  00DE               	movwf	(sprintf@eexp+1)^(0+128)
  9450     09DC  1283               	bcf	3,5	;RP0=0, select bank0
  9451     09DD  1303               	bcf	3,6	;RP1=0, select bank0
  9452     09DE  0826               	movf	?___wmul,w
  9453     09DF  1683               	bsf	3,5	;RP0=1, select bank1
  9454     09E0  1303               	bcf	3,6	;RP1=0, select bank1
  9455     09E1  00DD               	movwf	sprintf@eexp^(0+128)
  9456     09E2                     l4287:
  9457                           
  9458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  9459     09E2  300A               	movlw	10
  9460     09E3  1283               	bcf	3,5	;RP0=0, select bank0
  9461     09E4  1303               	bcf	3,6	;RP1=0, select bank0
  9462     09E5  00AD               	movwf	___awdiv@divisor
  9463     09E6  3000               	movlw	0
  9464     09E7  00AE               	movwf	___awdiv@divisor+1
  9465     09E8  1683               	bsf	3,5	;RP0=1, select bank1
  9466     09E9  1303               	bcf	3,6	;RP1=0, select bank1
  9467     09EA  085E               	movf	(sprintf@eexp+1)^(0+128),w
  9468     09EB  1283               	bcf	3,5	;RP0=0, select bank0
  9469     09EC  1303               	bcf	3,6	;RP1=0, select bank0
  9470     09ED  00B0               	movwf	___awdiv@dividend+1
  9471     09EE  1683               	bsf	3,5	;RP0=1, select bank1
  9472     09EF  1303               	bcf	3,6	;RP1=0, select bank1
  9473     09F0  085D               	movf	sprintf@eexp^(0+128),w
  9474     09F1  1283               	bcf	3,5	;RP0=0, select bank0
  9475     09F2  1303               	bcf	3,6	;RP1=0, select bank0
  9476     09F3  00AF               	movwf	___awdiv@dividend
  9477     09F4  160A  158A  2406  120A  158A  	fcall	___awdiv
  9478     09F9  1283               	bcf	3,5	;RP0=0, select bank0
  9479     09FA  1303               	bcf	3,6	;RP1=0, select bank0
  9480     09FB  082E               	movf	?___awdiv+1,w
  9481     09FC  1683               	bsf	3,5	;RP0=1, select bank1
  9482     09FD  1303               	bcf	3,6	;RP1=0, select bank1
  9483     09FE  00DE               	movwf	(sprintf@eexp+1)^(0+128)
  9484     09FF  1283               	bcf	3,5	;RP0=0, select bank0
  9485     0A00  1303               	bcf	3,6	;RP1=0, select bank0
  9486     0A01  082D               	movf	?___awdiv,w
  9487     0A02  1683               	bsf	3,5	;RP0=1, select bank1
  9488     0A03  1303               	bcf	3,6	;RP1=0, select bank1
  9489     0A04  00DD               	movwf	sprintf@eexp^(0+128)
  9490     0A05                     l4289:
  9491                           
  9492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  9493     0A05  1FDE               	btfss	(sprintf@eexp+1)^(0+128),7
  9494     0A06  2A08               	goto	u7021
  9495     0A07  2A09               	goto	u7020
  9496     0A08                     u7021:
  9497     0A08  2A0F               	goto	l4293
  9498     0A09                     u7020:
  9499     0A09                     l4291:
  9500                           
  9501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  9502     0A09  30FF               	movlw	255
  9503     0A0A  07DD               	addwf	sprintf@eexp^(0+128),f
  9504     0A0B  1803               	skipnc
  9505     0A0C  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9506     0A0D  30FF               	movlw	255
  9507     0A0E  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9508     0A0F                     l4293:
  9509                           
  9510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  9511     0A0F  035D               	decf	sprintf@eexp^(0+128),w
  9512     0A10  3AFF               	xorlw	255
  9513     0A11  120A  158A  249D  120A  158A  	fcall	_scale
  9514     0A16  1283               	bcf	3,5	;RP0=0, select bank0
  9515     0A17  1303               	bcf	3,6	;RP1=0, select bank0
  9516     0A18  0853               	movf	?_scale+3,w
  9517     0A19  1683               	bsf	3,5	;RP0=1, select bank1
  9518     0A1A  1303               	bcf	3,6	;RP1=0, select bank1
  9519     0A1B  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  9520     0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  9521     0A1D  1303               	bcf	3,6	;RP1=0, select bank0
  9522     0A1E  0852               	movf	?_scale+2,w
  9523     0A1F  1683               	bsf	3,5	;RP0=1, select bank1
  9524     0A20  1303               	bcf	3,6	;RP1=0, select bank1
  9525     0A21  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  9526     0A22  1283               	bcf	3,5	;RP0=0, select bank0
  9527     0A23  1303               	bcf	3,6	;RP1=0, select bank0
  9528     0A24  0851               	movf	?_scale+1,w
  9529     0A25  1683               	bsf	3,5	;RP0=1, select bank1
  9530     0A26  1303               	bcf	3,6	;RP1=0, select bank1
  9531     0A27  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  9532     0A28  1283               	bcf	3,5	;RP0=0, select bank0
  9533     0A29  1303               	bcf	3,6	;RP1=0, select bank0
  9534     0A2A  0850               	movf	?_scale,w
  9535     0A2B  1683               	bsf	3,5	;RP0=1, select bank1
  9536     0A2C  1303               	bcf	3,6	;RP1=0, select bank1
  9537     0A2D  00D7               	movwf	sprintf@tmpval^(0+128)
  9538     0A2E                     l4295:
  9539                           
  9540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  9541     0A2E  0862               	movf	(sprintf@fval+3)^(0+128),w
  9542     0A2F  1283               	bcf	3,5	;RP0=0, select bank0
  9543     0A30  1303               	bcf	3,6	;RP1=0, select bank0
  9544     0A31  00B9               	movwf	___flmul@b+3
  9545     0A32  1683               	bsf	3,5	;RP0=1, select bank1
  9546     0A33  1303               	bcf	3,6	;RP1=0, select bank1
  9547     0A34  0861               	movf	(sprintf@fval+2)^(0+128),w
  9548     0A35  1283               	bcf	3,5	;RP0=0, select bank0
  9549     0A36  1303               	bcf	3,6	;RP1=0, select bank0
  9550     0A37  00B8               	movwf	___flmul@b+2
  9551     0A38  1683               	bsf	3,5	;RP0=1, select bank1
  9552     0A39  1303               	bcf	3,6	;RP1=0, select bank1
  9553     0A3A  0860               	movf	(sprintf@fval+1)^(0+128),w
  9554     0A3B  1283               	bcf	3,5	;RP0=0, select bank0
  9555     0A3C  1303               	bcf	3,6	;RP1=0, select bank0
  9556     0A3D  00B7               	movwf	___flmul@b+1
  9557     0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  9558     0A3F  1303               	bcf	3,6	;RP1=0, select bank1
  9559     0A40  085F               	movf	sprintf@fval^(0+128),w
  9560     0A41  1283               	bcf	3,5	;RP0=0, select bank0
  9561     0A42  1303               	bcf	3,6	;RP1=0, select bank0
  9562     0A43  00B6               	movwf	___flmul@b
  9563     0A44  1683               	bsf	3,5	;RP0=1, select bank1
  9564     0A45  1303               	bcf	3,6	;RP1=0, select bank1
  9565     0A46  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  9566     0A47  1283               	bcf	3,5	;RP0=0, select bank0
  9567     0A48  1303               	bcf	3,6	;RP1=0, select bank0
  9568     0A49  00BD               	movwf	___flmul@a+3
  9569     0A4A  1683               	bsf	3,5	;RP0=1, select bank1
  9570     0A4B  1303               	bcf	3,6	;RP1=0, select bank1
  9571     0A4C  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  9572     0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  9573     0A4E  1303               	bcf	3,6	;RP1=0, select bank0
  9574     0A4F  00BC               	movwf	___flmul@a+2
  9575     0A50  1683               	bsf	3,5	;RP0=1, select bank1
  9576     0A51  1303               	bcf	3,6	;RP1=0, select bank1
  9577     0A52  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  9578     0A53  1283               	bcf	3,5	;RP0=0, select bank0
  9579     0A54  1303               	bcf	3,6	;RP1=0, select bank0
  9580     0A55  00BB               	movwf	___flmul@a+1
  9581     0A56  1683               	bsf	3,5	;RP0=1, select bank1
  9582     0A57  1303               	bcf	3,6	;RP1=0, select bank1
  9583     0A58  0857               	movf	sprintf@tmpval^(0+128),w
  9584     0A59  1283               	bcf	3,5	;RP0=0, select bank0
  9585     0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  9586     0A5B  00BA               	movwf	___flmul@a
  9587     0A5C  160A  118A  24BB  120A  158A  	fcall	___flmul
  9588     0A61  1283               	bcf	3,5	;RP0=0, select bank0
  9589     0A62  1303               	bcf	3,6	;RP1=0, select bank0
  9590     0A63  0839               	movf	?___flmul+3,w
  9591     0A64  1683               	bsf	3,5	;RP0=1, select bank1
  9592     0A65  1303               	bcf	3,6	;RP1=0, select bank1
  9593     0A66  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  9594     0A67  1283               	bcf	3,5	;RP0=0, select bank0
  9595     0A68  1303               	bcf	3,6	;RP1=0, select bank0
  9596     0A69  0838               	movf	?___flmul+2,w
  9597     0A6A  1683               	bsf	3,5	;RP0=1, select bank1
  9598     0A6B  1303               	bcf	3,6	;RP1=0, select bank1
  9599     0A6C  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  9600     0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  9601     0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  9602     0A6F  0837               	movf	?___flmul+1,w
  9603     0A70  1683               	bsf	3,5	;RP0=1, select bank1
  9604     0A71  1303               	bcf	3,6	;RP1=0, select bank1
  9605     0A72  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  9606     0A73  1283               	bcf	3,5	;RP0=0, select bank0
  9607     0A74  1303               	bcf	3,6	;RP1=0, select bank0
  9608     0A75  0836               	movf	?___flmul,w
  9609     0A76  1683               	bsf	3,5	;RP0=1, select bank1
  9610     0A77  1303               	bcf	3,6	;RP1=0, select bank1
  9611     0A78  00D7               	movwf	sprintf@tmpval^(0+128)
  9612     0A79                     l4297:
  9613                           
  9614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  9615     0A79  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  9616     0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  9617     0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  9618     0A7C  00A9               	movwf	___flge@ff1+3
  9619     0A7D  1683               	bsf	3,5	;RP0=1, select bank1
  9620     0A7E  1303               	bcf	3,6	;RP1=0, select bank1
  9621     0A7F  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  9622     0A80  1283               	bcf	3,5	;RP0=0, select bank0
  9623     0A81  1303               	bcf	3,6	;RP1=0, select bank0
  9624     0A82  00A8               	movwf	___flge@ff1+2
  9625     0A83  1683               	bsf	3,5	;RP0=1, select bank1
  9626     0A84  1303               	bcf	3,6	;RP1=0, select bank1
  9627     0A85  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  9628     0A86  1283               	bcf	3,5	;RP0=0, select bank0
  9629     0A87  1303               	bcf	3,6	;RP1=0, select bank0
  9630     0A88  00A7               	movwf	___flge@ff1+1
  9631     0A89  1683               	bsf	3,5	;RP0=1, select bank1
  9632     0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  9633     0A8B  0857               	movf	sprintf@tmpval^(0+128),w
  9634     0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  9635     0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  9636     0A8E  00A6               	movwf	___flge@ff1
  9637     0A8F  303F               	movlw	63
  9638     0A90  00AD               	movwf	___flge@ff2+3
  9639     0A91  3080               	movlw	128
  9640     0A92  00AC               	movwf	___flge@ff2+2
  9641     0A93  3000               	movlw	0
  9642     0A94  00AB               	movwf	___flge@ff2+1
  9643     0A95  3000               	movlw	0
  9644     0A96  00AA               	movwf	___flge@ff2
  9645     0A97  160A  118A  20BF  120A  158A  	fcall	___flge
  9646     0A9C  1803               	btfsc	3,0
  9647     0A9D  2A9F               	goto	u7031
  9648     0A9E  2AA0               	goto	u7030
  9649     0A9F                     u7031:
  9650     0A9F  2AA9               	goto	l4301
  9651     0AA0                     u7030:
  9652     0AA0                     l4299:
  9653                           
  9654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  9655     0AA0  30FF               	movlw	255
  9656     0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  9657     0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  9658     0AA3  07DD               	addwf	sprintf@eexp^(0+128),f
  9659     0AA4  1803               	skipnc
  9660     0AA5  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9661     0AA6  30FF               	movlw	255
  9662     0AA7  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9663     0AA8  2ADA               	goto	l4305
  9664     0AA9                     l4301:
  9665     0AA9  1683               	bsf	3,5	;RP0=1, select bank1
  9666     0AAA  1303               	bcf	3,6	;RP1=0, select bank1
  9667     0AAB  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  9668     0AAC  1283               	bcf	3,5	;RP0=0, select bank0
  9669     0AAD  1303               	bcf	3,6	;RP1=0, select bank0
  9670     0AAE  00A9               	movwf	___flge@ff1+3
  9671     0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  9672     0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  9673     0AB1  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  9674     0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  9675     0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  9676     0AB4  00A8               	movwf	___flge@ff1+2
  9677     0AB5  1683               	bsf	3,5	;RP0=1, select bank1
  9678     0AB6  1303               	bcf	3,6	;RP1=0, select bank1
  9679     0AB7  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  9680     0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  9681     0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  9682     0ABA  00A7               	movwf	___flge@ff1+1
  9683     0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  9684     0ABC  1303               	bcf	3,6	;RP1=0, select bank1
  9685     0ABD  0857               	movf	sprintf@tmpval^(0+128),w
  9686     0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  9687     0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  9688     0AC0  00A6               	movwf	___flge@ff1
  9689     0AC1  3041               	movlw	65
  9690     0AC2  00AD               	movwf	___flge@ff2+3
  9691     0AC3  3020               	movlw	32
  9692     0AC4  00AC               	movwf	___flge@ff2+2
  9693     0AC5  3000               	movlw	0
  9694     0AC6  00AB               	movwf	___flge@ff2+1
  9695     0AC7  3000               	movlw	0
  9696     0AC8  00AA               	movwf	___flge@ff2
  9697     0AC9  160A  118A  20BF  120A  158A  	fcall	___flge
  9698     0ACE  1C03               	btfss	3,0
  9699     0ACF  2AD1               	goto	u7041
  9700     0AD0  2AD2               	goto	u7040
  9701     0AD1                     u7041:
  9702     0AD1  2ADA               	goto	l4305
  9703     0AD2                     u7040:
  9704     0AD2                     l4303:
  9705                           
  9706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  9707     0AD2  3001               	movlw	1
  9708     0AD3  1683               	bsf	3,5	;RP0=1, select bank1
  9709     0AD4  1303               	bcf	3,6	;RP1=0, select bank1
  9710     0AD5  07DD               	addwf	sprintf@eexp^(0+128),f
  9711     0AD6  1803               	skipnc
  9712     0AD7  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9713     0AD8  3000               	movlw	0
  9714     0AD9  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9715     0ADA                     l4305:
  9716     0ADA                     l4307:	
  9717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  9718                           
  9719                           
  9720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  9721     0ADA  3006               	movlw	6
  9722     0ADB  160A  118A  22AE  120A  158A  	fcall	_fround
  9723     0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  9724     0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  9725     0AE2  0853               	movf	?_fround+3,w
  9726     0AE3  1683               	bsf	3,5	;RP0=1, select bank1
  9727     0AE4  1303               	bcf	3,6	;RP1=0, select bank1
  9728     0AE5  00A3               	movwf	(___fladd@b+3)^(0+128)
  9729     0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  9730     0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  9731     0AE8  0852               	movf	?_fround+2,w
  9732     0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  9733     0AEA  1303               	bcf	3,6	;RP1=0, select bank1
  9734     0AEB  00A2               	movwf	(___fladd@b+2)^(0+128)
  9735     0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  9736     0AED  1303               	bcf	3,6	;RP1=0, select bank0
  9737     0AEE  0851               	movf	?_fround+1,w
  9738     0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  9739     0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  9740     0AF1  00A1               	movwf	(___fladd@b+1)^(0+128)
  9741     0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  9742     0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  9743     0AF4  0850               	movf	?_fround,w
  9744     0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  9745     0AF6  1303               	bcf	3,6	;RP1=0, select bank1
  9746     0AF7  00A0               	movwf	___fladd@b^(0+128)
  9747     0AF8  0862               	movf	(sprintf@fval+3)^(0+128),w
  9748     0AF9  00A7               	movwf	(___fladd@a+3)^(0+128)
  9749     0AFA  0861               	movf	(sprintf@fval+2)^(0+128),w
  9750     0AFB  00A6               	movwf	(___fladd@a+2)^(0+128)
  9751     0AFC  0860               	movf	(sprintf@fval+1)^(0+128),w
  9752     0AFD  00A5               	movwf	(___fladd@a+1)^(0+128)
  9753     0AFE  085F               	movf	sprintf@fval^(0+128),w
  9754     0AFF  00A4               	movwf	___fladd@a^(0+128)
  9755     0B00  120A  118A  24F1  120A  158A  	fcall	___fladd
  9756     0B05  1683               	bsf	3,5	;RP0=1, select bank1
  9757     0B06  1303               	bcf	3,6	;RP1=0, select bank1
  9758     0B07  0823               	movf	(?___fladd+3)^(0+128),w
  9759     0B08  00E2               	movwf	(sprintf@fval+3)^(0+128)
  9760     0B09  0822               	movf	(?___fladd+2)^(0+128),w
  9761     0B0A  00E1               	movwf	(sprintf@fval+2)^(0+128)
  9762     0B0B  0821               	movf	(?___fladd+1)^(0+128),w
  9763     0B0C  00E0               	movwf	(sprintf@fval+1)^(0+128)
  9764     0B0D  0820               	movf	?___fladd^(0+128),w
  9765     0B0E  00DF               	movwf	sprintf@fval^(0+128)
  9766     0B0F                     l4309:
  9767                           
  9768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  9769     0B0F  085E               	movf	(sprintf@eexp+1)^(0+128),w
  9770     0B10  3A80               	xorlw	128
  9771     0B11  00FF               	movwf	btemp+1
  9772     0B12  3080               	movlw	128
  9773     0B13  027F               	subwf	btemp+1,w
  9774     0B14  1D03               	skipz
  9775     0B15  2B18               	goto	u7055
  9776     0B16  300A               	movlw	10
  9777     0B17  025D               	subwf	sprintf@eexp^(0+128),w
  9778     0B18                     u7055:
  9779     0B18  1803               	skipnc
  9780     0B19  2B1B               	goto	u7051
  9781     0B1A  2B1C               	goto	u7050
  9782     0B1B                     u7051:
  9783     0B1B  2B6B               	goto	l4317
  9784     0B1C                     u7050:
  9785     0B1C                     l4311:
  9786     0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  9787     0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  9788     0B1E  0862               	movf	(sprintf@fval+3)^(0+128),w
  9789     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  9790     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  9791     0B21  00A9               	movwf	___fleq@ff1+3
  9792     0B22  1683               	bsf	3,5	;RP0=1, select bank1
  9793     0B23  1303               	bcf	3,6	;RP1=0, select bank1
  9794     0B24  0861               	movf	(sprintf@fval+2)^(0+128),w
  9795     0B25  1283               	bcf	3,5	;RP0=0, select bank0
  9796     0B26  1303               	bcf	3,6	;RP1=0, select bank0
  9797     0B27  00A8               	movwf	___fleq@ff1+2
  9798     0B28  1683               	bsf	3,5	;RP0=1, select bank1
  9799     0B29  1303               	bcf	3,6	;RP1=0, select bank1
  9800     0B2A  0860               	movf	(sprintf@fval+1)^(0+128),w
  9801     0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  9802     0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  9803     0B2D  00A7               	movwf	___fleq@ff1+1
  9804     0B2E  1683               	bsf	3,5	;RP0=1, select bank1
  9805     0B2F  1303               	bcf	3,6	;RP1=0, select bank1
  9806     0B30  085F               	movf	sprintf@fval^(0+128),w
  9807     0B31  1283               	bcf	3,5	;RP0=0, select bank0
  9808     0B32  1303               	bcf	3,6	;RP1=0, select bank0
  9809     0B33  00A6               	movwf	___fleq@ff1
  9810     0B34  3000               	movlw	0
  9811     0B35  00AD               	movwf	___fleq@ff2+3
  9812     0B36  3000               	movlw	0
  9813     0B37  00AC               	movwf	___fleq@ff2+2
  9814     0B38  3000               	movlw	0
  9815     0B39  00AB               	movwf	___fleq@ff2+1
  9816     0B3A  3000               	movlw	0
  9817     0B3B  00AA               	movwf	___fleq@ff2
  9818     0B3C  160A  158A  2236  120A  158A  	fcall	___fleq
  9819     0B41  1803               	btfsc	3,0
  9820     0B42  2B44               	goto	u7061
  9821     0B43  2B45               	goto	u7060
  9822     0B44                     u7061:
  9823     0B44  2C17               	goto	l4331
  9824     0B45                     u7060:
  9825     0B45                     l4313:
  9826     0B45  1683               	bsf	3,5	;RP0=1, select bank1
  9827     0B46  1303               	bcf	3,6	;RP1=0, select bank1
  9828     0B47  0862               	movf	(sprintf@fval+3)^(0+128),w
  9829     0B48  00A3               	movwf	(___fltol@f1+3)^(0+128)
  9830     0B49  0861               	movf	(sprintf@fval+2)^(0+128),w
  9831     0B4A  00A2               	movwf	(___fltol@f1+2)^(0+128)
  9832     0B4B  0860               	movf	(sprintf@fval+1)^(0+128),w
  9833     0B4C  00A1               	movwf	(___fltol@f1+1)^(0+128)
  9834     0B4D  085F               	movf	sprintf@fval^(0+128),w
  9835     0B4E  00A0               	movwf	___fltol@f1^(0+128)
  9836     0B4F  160A  158A  24DA  120A  158A  	fcall	___fltol
  9837     0B54  1683               	bsf	3,5	;RP0=1, select bank1
  9838     0B55  1303               	bcf	3,6	;RP1=0, select bank1
  9839     0B56  0823               	movf	(?___fltol+3)^(0+128),w
  9840     0B57  0422               	iorwf	(?___fltol+2)^(0+128),w
  9841     0B58  0421               	iorwf	(?___fltol+1)^(0+128),w
  9842     0B59  0420               	iorwf	?___fltol^(0+128),w
  9843     0B5A  1D03               	skipz
  9844     0B5B  2B5D               	goto	u7071
  9845     0B5C  2B5E               	goto	u7070
  9846     0B5D                     u7071:
  9847     0B5D  2C17               	goto	l4331
  9848     0B5E                     u7070:
  9849     0B5E                     l4315:
  9850     0B5E  085E               	movf	(sprintf@eexp+1)^(0+128),w
  9851     0B5F  3A80               	xorlw	128
  9852     0B60  00FF               	movwf	btemp+1
  9853     0B61  3080               	movlw	128
  9854     0B62  027F               	subwf	btemp+1,w
  9855     0B63  1D03               	skipz
  9856     0B64  2B67               	goto	u7085
  9857     0B65  3002               	movlw	2
  9858     0B66  025D               	subwf	sprintf@eexp^(0+128),w
  9859     0B67                     u7085:
  9860     0B67  1C03               	skipc
  9861     0B68  2B6A               	goto	u7081
  9862     0B69  2B6B               	goto	u7080
  9863     0B6A                     u7081:
  9864     0B6A  2C17               	goto	l4331
  9865     0B6B                     u7080:
  9866     0B6B                     l4317:
  9867                           
  9868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9869     0B6B  1683               	bsf	3,5	;RP0=1, select bank1
  9870     0B6C  1303               	bcf	3,6	;RP1=0, select bank1
  9871     0B6D  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  9872     0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  9873     0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  9874     0B70  00A9               	movwf	___flge@ff1+3
  9875     0B71  1683               	bsf	3,5	;RP0=1, select bank1
  9876     0B72  1303               	bcf	3,6	;RP1=0, select bank1
  9877     0B73  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  9878     0B74  1283               	bcf	3,5	;RP0=0, select bank0
  9879     0B75  1303               	bcf	3,6	;RP1=0, select bank0
  9880     0B76  00A8               	movwf	___flge@ff1+2
  9881     0B77  1683               	bsf	3,5	;RP0=1, select bank1
  9882     0B78  1303               	bcf	3,6	;RP1=0, select bank1
  9883     0B79  0858               	movf	(sprintf@tmpval+1)^(0+128),w
  9884     0B7A  1283               	bcf	3,5	;RP0=0, select bank0
  9885     0B7B  1303               	bcf	3,6	;RP1=0, select bank0
  9886     0B7C  00A7               	movwf	___flge@ff1+1
  9887     0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  9888     0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  9889     0B7F  0857               	movf	sprintf@tmpval^(0+128),w
  9890     0B80  1283               	bcf	3,5	;RP0=0, select bank0
  9891     0B81  1303               	bcf	3,6	;RP1=0, select bank0
  9892     0B82  00A6               	movwf	___flge@ff1
  9893     0B83  3040               	movlw	64
  9894     0B84  00AD               	movwf	___flge@ff2+3
  9895     0B85  3089               	movlw	137
  9896     0B86  00AC               	movwf	___flge@ff2+2
  9897     0B87  3070               	movlw	112
  9898     0B88  00AB               	movwf	___flge@ff2+1
  9899     0B89  305F               	movlw	95
  9900     0B8A  00AA               	movwf	___flge@ff2
  9901     0B8B  160A  118A  20BF  120A  158A  	fcall	___flge
  9902     0B90  1803               	btfsc	3,0
  9903     0B91  2B93               	goto	u7091
  9904     0B92  2B94               	goto	u7090
  9905     0B93                     u7091:
  9906     0B93  2B9D               	goto	l4321
  9907     0B94                     u7090:
  9908     0B94                     l4319:
  9909                           
  9910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9911     0B94  30F7               	movlw	247
  9912     0B95  1683               	bsf	3,5	;RP0=1, select bank1
  9913     0B96  1303               	bcf	3,6	;RP1=0, select bank1
  9914     0B97  07DD               	addwf	sprintf@eexp^(0+128),f
  9915     0B98  1803               	skipnc
  9916     0B99  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9917     0B9A  30FF               	movlw	255
  9918     0B9B  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9919                           
  9920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9921     0B9C  2BA5               	goto	l4323
  9922     0B9D                     l4321:
  9923                           
  9924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9925     0B9D  30F8               	movlw	248
  9926     0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  9927     0B9F  1303               	bcf	3,6	;RP1=0, select bank1
  9928     0BA0  07DD               	addwf	sprintf@eexp^(0+128),f
  9929     0BA1  1803               	skipnc
  9930     0BA2  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
  9931     0BA3  30FF               	movlw	255
  9932     0BA4  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
  9933     0BA5                     l4323:
  9934                           
  9935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9936     0BA5  085D               	movf	sprintf@eexp^(0+128),w
  9937     0BA6  120A  158A  249D  120A  158A  	fcall	_scale
  9938     0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  9939     0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  9940     0BAD  0853               	movf	?_scale+3,w
  9941     0BAE  1683               	bsf	3,5	;RP0=1, select bank1
  9942     0BAF  1303               	bcf	3,6	;RP1=0, select bank1
  9943     0BB0  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
  9944     0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  9945     0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  9946     0BB3  0852               	movf	?_scale+2,w
  9947     0BB4  1683               	bsf	3,5	;RP0=1, select bank1
  9948     0BB5  1303               	bcf	3,6	;RP1=0, select bank1
  9949     0BB6  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
  9950     0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  9951     0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  9952     0BB9  0851               	movf	?_scale+1,w
  9953     0BBA  1683               	bsf	3,5	;RP0=1, select bank1
  9954     0BBB  1303               	bcf	3,6	;RP1=0, select bank1
  9955     0BBC  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
  9956     0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  9957     0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  9958     0BBF  0850               	movf	?_scale,w
  9959     0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  9960     0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  9961     0BC2  00D7               	movwf	sprintf@tmpval^(0+128)
  9962     0BC3                     l4325:
  9963     0BC3  0862               	movf	(sprintf@fval+3)^(0+128),w
  9964     0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  9965     0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  9966     0BC6  00A9               	movwf	__div_to_l_@f1+3
  9967     0BC7  1683               	bsf	3,5	;RP0=1, select bank1
  9968     0BC8  1303               	bcf	3,6	;RP1=0, select bank1
  9969     0BC9  0861               	movf	(sprintf@fval+2)^(0+128),w
  9970     0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  9971     0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  9972     0BCC  00A8               	movwf	__div_to_l_@f1+2
  9973     0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  9974     0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  9975     0BCF  0860               	movf	(sprintf@fval+1)^(0+128),w
  9976     0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  9977     0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  9978     0BD2  00A7               	movwf	__div_to_l_@f1+1
  9979     0BD3  1683               	bsf	3,5	;RP0=1, select bank1
  9980     0BD4  1303               	bcf	3,6	;RP1=0, select bank1
  9981     0BD5  085F               	movf	sprintf@fval^(0+128),w
  9982     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  9983     0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  9984     0BD8  00A6               	movwf	__div_to_l_@f1
  9985     0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  9986     0BDA  1303               	bcf	3,6	;RP1=0, select bank1
  9987     0BDB  085A               	movf	(sprintf@tmpval+3)^(0+128),w
  9988     0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  9989     0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  9990     0BDE  00AD               	movwf	__div_to_l_@f2+3
  9991     0BDF  1683               	bsf	3,5	;RP0=1, select bank1
  9992     0BE0  1303               	bcf	3,6	;RP1=0, select bank1
  9993     0BE1  0859               	movf	(sprintf@tmpval+2)^(0+128),w
  9994     0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  9995     0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  9996     0BE4  00AC               	movwf	__div_to_l_@f2+2
  9997     0BE5  1683               	bsf	3,5	;RP0=1, select bank1
  9998     0BE6  1303               	bcf	3,6	;RP1=0, select bank1
  9999     0BE7  0858               	movf	(sprintf@tmpval+1)^(0+128),w
 10000     0BE8  1283               	bcf	3,5	;RP0=0, select bank0
 10001     0BE9  1303               	bcf	3,6	;RP1=0, select bank0
 10002     0BEA  00AB               	movwf	__div_to_l_@f2+1
 10003     0BEB  1683               	bsf	3,5	;RP0=1, select bank1
 10004     0BEC  1303               	bcf	3,6	;RP1=0, select bank1
 10005     0BED  0857               	movf	sprintf@tmpval^(0+128),w
 10006     0BEE  1283               	bcf	3,5	;RP0=0, select bank0
 10007     0BEF  1303               	bcf	3,6	;RP1=0, select bank0
 10008     0BF0  00AA               	movwf	__div_to_l_@f2
 10009     0BF1  160A  158A  268E  120A  158A  	fcall	__div_to_l_
 10010     0BF6  1283               	bcf	3,5	;RP0=0, select bank0
 10011     0BF7  1303               	bcf	3,6	;RP1=0, select bank0
 10012     0BF8  0829               	movf	?__div_to_l_+3,w
 10013     0BF9  1683               	bsf	3,5	;RP0=1, select bank1
 10014     0BFA  1303               	bcf	3,6	;RP1=0, select bank1
 10015     0BFB  00D2               	movwf	(sprintf@val+3)^(0+128)
 10016     0BFC  1283               	bcf	3,5	;RP0=0, select bank0
 10017     0BFD  1303               	bcf	3,6	;RP1=0, select bank0
 10018     0BFE  0828               	movf	?__div_to_l_+2,w
 10019     0BFF  1683               	bsf	3,5	;RP0=1, select bank1
 10020     0C00  1303               	bcf	3,6	;RP1=0, select bank1
 10021     0C01  00D1               	movwf	(sprintf@val+2)^(0+128)
 10022     0C02  1283               	bcf	3,5	;RP0=0, select bank0
 10023     0C03  1303               	bcf	3,6	;RP1=0, select bank0
 10024     0C04  0827               	movf	?__div_to_l_+1,w
 10025     0C05  1683               	bsf	3,5	;RP0=1, select bank1
 10026     0C06  1303               	bcf	3,6	;RP1=0, select bank1
 10027     0C07  00D0               	movwf	(sprintf@val+1)^(0+128)
 10028     0C08  1283               	bcf	3,5	;RP0=0, select bank0
 10029     0C09  1303               	bcf	3,6	;RP1=0, select bank0
 10030     0C0A  0826               	movf	?__div_to_l_,w
 10031     0C0B  1683               	bsf	3,5	;RP0=1, select bank1
 10032     0C0C  1303               	bcf	3,6	;RP1=0, select bank1
 10033     0C0D  00CF               	movwf	sprintf@val^(0+128)
 10034     0C0E                     l4329:
 10035                           
 10036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10037     0C0E  3000               	movlw	0
 10038     0C0F  00E2               	movwf	(sprintf@fval+3)^(0+128)
 10039     0C10  3000               	movlw	0
 10040     0C11  00E1               	movwf	(sprintf@fval+2)^(0+128)
 10041     0C12  3000               	movlw	0
 10042     0C13  00E0               	movwf	(sprintf@fval+1)^(0+128)
 10043     0C14  3000               	movlw	0
 10044     0C15  00DF               	movwf	sprintf@fval^(0+128)
 10045                           
 10046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10047     0C16  2C61               	goto	l4337
 10048     0C17                     l4331:
 10049                           
 10050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10051     0C17  1683               	bsf	3,5	;RP0=1, select bank1
 10052     0C18  1303               	bcf	3,6	;RP1=0, select bank1
 10053     0C19  0862               	movf	(sprintf@fval+3)^(0+128),w
 10054     0C1A  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10055     0C1B  0861               	movf	(sprintf@fval+2)^(0+128),w
 10056     0C1C  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10057     0C1D  0860               	movf	(sprintf@fval+1)^(0+128),w
 10058     0C1E  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10059     0C1F  085F               	movf	sprintf@fval^(0+128),w
 10060     0C20  00A0               	movwf	___fltol@f1^(0+128)
 10061     0C21  160A  158A  24DA  120A  158A  	fcall	___fltol
 10062     0C26  1683               	bsf	3,5	;RP0=1, select bank1
 10063     0C27  1303               	bcf	3,6	;RP1=0, select bank1
 10064     0C28  0823               	movf	(?___fltol+3)^(0+128),w
 10065     0C29  00D2               	movwf	(sprintf@val+3)^(0+128)
 10066     0C2A  0822               	movf	(?___fltol+2)^(0+128),w
 10067     0C2B  00D1               	movwf	(sprintf@val+2)^(0+128)
 10068     0C2C  0821               	movf	(?___fltol+1)^(0+128),w
 10069     0C2D  00D0               	movwf	(sprintf@val+1)^(0+128)
 10070     0C2E  0820               	movf	?___fltol^(0+128),w
 10071     0C2F  00CF               	movwf	sprintf@val^(0+128)
 10072     0C30                     l4333:
 10073                           
 10074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10075     0C30  0852               	movf	(sprintf@val+3)^(0+128),w
 10076     0C31  00AD               	movwf	(___xxtofl@val+3)^(0+128)
 10077     0C32  0851               	movf	(sprintf@val+2)^(0+128),w
 10078     0C33  00AC               	movwf	(___xxtofl@val+2)^(0+128)
 10079     0C34  0850               	movf	(sprintf@val+1)^(0+128),w
 10080     0C35  00AB               	movwf	(___xxtofl@val+1)^(0+128)
 10081     0C36  084F               	movf	sprintf@val^(0+128),w
 10082     0C37  00AA               	movwf	___xxtofl@val^(0+128)
 10083     0C38  3000               	movlw	0
 10084     0C39  160A  158A  2746  120A  158A  	fcall	___xxtofl
 10085     0C3E  1683               	bsf	3,5	;RP0=1, select bank1
 10086     0C3F  1303               	bcf	3,6	;RP1=0, select bank1
 10087     0C40  082D               	movf	(?___xxtofl+3)^(0+128),w
 10088     0C41  00BB               	movwf	(___flsub@a+3)^(0+128)
 10089     0C42  082C               	movf	(?___xxtofl+2)^(0+128),w
 10090     0C43  00BA               	movwf	(___flsub@a+2)^(0+128)
 10091     0C44  082B               	movf	(?___xxtofl+1)^(0+128),w
 10092     0C45  00B9               	movwf	(___flsub@a+1)^(0+128)
 10093     0C46  082A               	movf	?___xxtofl^(0+128),w
 10094     0C47  00B8               	movwf	___flsub@a^(0+128)
 10095     0C48  0862               	movf	(sprintf@fval+3)^(0+128),w
 10096     0C49  00BF               	movwf	(___flsub@b+3)^(0+128)
 10097     0C4A  0861               	movf	(sprintf@fval+2)^(0+128),w
 10098     0C4B  00BE               	movwf	(___flsub@b+2)^(0+128)
 10099     0C4C  0860               	movf	(sprintf@fval+1)^(0+128),w
 10100     0C4D  00BD               	movwf	(___flsub@b+1)^(0+128)
 10101     0C4E  085F               	movf	sprintf@fval^(0+128),w
 10102     0C4F  00BC               	movwf	___flsub@b^(0+128)
 10103     0C50  160A  158A  2118  120A  158A  	fcall	___flsub
 10104     0C55  1683               	bsf	3,5	;RP0=1, select bank1
 10105     0C56  1303               	bcf	3,6	;RP1=0, select bank1
 10106     0C57  083B               	movf	(?___flsub+3)^(0+128),w
 10107     0C58  00E2               	movwf	(sprintf@fval+3)^(0+128)
 10108     0C59  083A               	movf	(?___flsub+2)^(0+128),w
 10109     0C5A  00E1               	movwf	(sprintf@fval+2)^(0+128)
 10110     0C5B  0839               	movf	(?___flsub+1)^(0+128),w
 10111     0C5C  00E0               	movwf	(sprintf@fval+1)^(0+128)
 10112     0C5D  0838               	movf	?___flsub^(0+128),w
 10113     0C5E  00DF               	movwf	sprintf@fval^(0+128)
 10114     0C5F                     l4335:
 10115                           
 10116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10117     0C5F  01DD               	clrf	sprintf@eexp^(0+128)
 10118     0C60  01DE               	clrf	(sprintf@eexp+1)^(0+128)
 10119     0C61                     l4337:
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10122     0C61  01E4               	clrf	sprintf@c^(0+128)
 10123     0C62  0AE4               	incf	sprintf@c^(0+128),f
 10124     0C63                     l4343:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10127     0C63  0864               	movf	sprintf@c^(0+128),w
 10128     0C64  00C5               	movwf	??_sprintf^(0+128)
 10129     0C65  3001               	movlw	1
 10130     0C66                     u7105:
 10131     0C66  1003               	clrc
 10132     0C67  0DC5               	rlf	??_sprintf^(0+128),f
 10133     0C68  3EFF               	addlw	-1
 10134     0C69  1D03               	skipz
 10135     0C6A  2C66               	goto	u7105
 10136     0C6B  1003               	clrc
 10137     0C6C  0D45               	rlf	??_sprintf^(0+128),w
 10138     0C6D  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10139     0C6E  0084               	movwf	4
 10140     0C6F  160A  118A  200A  120A  158A  	fcall	stringdir
 10141     0C74  00C6               	movwf	(??_sprintf+1)^(0+128)
 10142     0C75  160A  118A  200A  120A  158A  	fcall	stringdir
 10143     0C7A  00C7               	movwf	((??_sprintf+1)^(0+128)+1)
 10144     0C7B  160A  118A  200A  120A  158A  	fcall	stringdir
 10145     0C80  00C8               	movwf	((??_sprintf+1)^(0+128)+2)
 10146     0C81  160A  118A  200A  120A  158A  	fcall	stringdir
 10147     0C86  00C9               	movwf	((??_sprintf+1)^(0+128)+3)
 10148     0C87  0849               	movf	(??_sprintf+4)^(0+128),w
 10149     0C88  0252               	subwf	(sprintf@val+3)^(0+128),w
 10150     0C89  1D03               	skipz
 10151     0C8A  2C95               	goto	u7115
 10152     0C8B  0848               	movf	(??_sprintf+3)^(0+128),w
 10153     0C8C  0251               	subwf	(sprintf@val+2)^(0+128),w
 10154     0C8D  1D03               	skipz
 10155     0C8E  2C95               	goto	u7115
 10156     0C8F  0847               	movf	(??_sprintf+2)^(0+128),w
 10157     0C90  0250               	subwf	(sprintf@val+1)^(0+128),w
 10158     0C91  1D03               	skipz
 10159     0C92  2C95               	goto	u7115
 10160     0C93  0846               	movf	(??_sprintf+1)^(0+128),w
 10161     0C94  024F               	subwf	sprintf@val^(0+128),w
 10162     0C95                     u7115:
 10163     0C95  1803               	skipnc
 10164     0C96  2C9A               	goto	u7111
 10165     0C97  120A  118A  2829   	goto	u7110
 10166     0C9A                     u7111:
 10167     0C9A  120A  118A  282A   	goto	l4347
 10168                           
 10169                           	psect	text1_split_2
 10170     0029                     u7110:
 10171     0029  2836               	goto	l4349
 10172     002A                     l4347:
 10173     002A  3001               	movlw	1
 10174     002B  00C5               	movwf	??_sprintf^(0+128)
 10175     002C  0845               	movf	??_sprintf^(0+128),w
 10176     002D  07E4               	addwf	sprintf@c^(0+128),f
 10177     002E  300A               	movlw	10
 10178     002F  0664               	xorwf	sprintf@c^(0+128),w
 10179     0030  1D03               	btfss	3,2
 10180     0031  2833               	goto	u7121
 10181     0032  2836               	goto	u7120
 10182     0033                     u7121:
 10183     0033  120A  158A  2C63   	goto	l4343
 10184     0036                     u7120:
 10185     0036                     l4349:
 10186                           
 10187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10188     0036  0864               	movf	sprintf@c^(0+128),w
 10189     0037  0753               	addwf	sprintf@prec^(0+128),w
 10190     0038  00C5               	movwf	??_sprintf^(0+128)
 10191     0039  0854               	movf	(sprintf@prec+1)^(0+128),w
 10192     003A  1803               	skipnc
 10193     003B  0A54               	incf	(sprintf@prec+1)^(0+128),w
 10194     003C  00C6               	movwf	(??_sprintf^(0+128)+1)
 10195     003D  085D               	movf	sprintf@eexp^(0+128),w
 10196     003E  0745               	addwf	??_sprintf^(0+128),w
 10197     003F  00C7               	movwf	(??_sprintf+2)^(0+128)
 10198     0040  085E               	movf	(sprintf@eexp+1)^(0+128),w
 10199     0041  1803               	skipnc
 10200     0042  0A5E               	incf	(sprintf@eexp+1)^(0+128),w
 10201     0043  0746               	addwf	(??_sprintf+1)^(0+128),w
 10202     0044  00C8               	movwf	(??_sprintf+3)^(0+128)
 10203     0045  0847               	movf	(??_sprintf+2)^(0+128),w
 10204     0046  02DB               	subwf	sprintf@width^(0+128),f
 10205     0047  0848               	movf	(??_sprintf+3)^(0+128),w
 10206     0048  1C03               	skipc
 10207     0049  03DC               	decf	(sprintf@width+1)^(0+128),f
 10208     004A  02DC               	subwf	(sprintf@width+1)^(0+128),f
 10209                           
 10210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1169:     if(
 10211     004B  0853               	movf	sprintf@prec^(0+128),w
 10212     004C  0454               	iorwf	(sprintf@prec+1)^(0+128),w
 10213     004D  1903               	btfsc	3,2
 10214     004E  2850               	goto	u7131
 10215     004F  2851               	goto	u7130
 10216     0050                     u7131:
 10217     0050  2857               	goto	l4353
 10218     0051                     u7130:
 10219     0051                     l4351:
 10220                           
 10221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10222     0051  30FF               	movlw	255
 10223     0052  07DB               	addwf	sprintf@width^(0+128),f
 10224     0053  1803               	skipnc
 10225     0054  0ADC               	incf	(sprintf@width+1)^(0+128),f
 10226     0055  30FF               	movlw	255
 10227     0056  07DC               	addwf	(sprintf@width+1)^(0+128),f
 10228     0057                     l4353:
 10229                           
 10230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10231     0057  3003               	movlw	3
 10232     0058  0555               	andwf	sprintf@flag^(0+128),w
 10233     0059  00C5               	movwf	??_sprintf^(0+128)
 10234     005A  3000               	movlw	0
 10235     005B  0556               	andwf	(sprintf@flag+1)^(0+128),w
 10236     005C  00C6               	movwf	(??_sprintf+1)^(0+128)
 10237     005D  0845               	movf	??_sprintf^(0+128),w
 10238     005E  0446               	iorwf	(??_sprintf^(0+128)+1),w
 10239     005F  1903               	btfsc	3,2
 10240     0060  2862               	goto	u7141
 10241     0061  2863               	goto	u7140
 10242     0062                     u7141:
 10243     0062  2869               	goto	l4357
 10244     0063                     u7140:
 10245     0063                     l4355:
 10246                           
 10247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10248     0063  30FF               	movlw	255
 10249     0064  07DB               	addwf	sprintf@width^(0+128),f
 10250     0065  1803               	skipnc
 10251     0066  0ADC               	incf	(sprintf@width+1)^(0+128),f
 10252     0067  30FF               	movlw	255
 10253     0068  07DC               	addwf	(sprintf@width+1)^(0+128),f
 10254     0069                     l4357:
 10255                           
 10256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
 10257     0069  1D55               	btfss	sprintf@flag^(0+128),2
 10258     006A  286C               	goto	u7151
 10259     006B  286D               	goto	u7150
 10260     006C                     u7151:
 10261     006C  28B3               	goto	l4379
 10262     006D                     u7150:
 10263     006D                     l4359:
 10264                           
 10265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
 10266     006D  3003               	movlw	3
 10267     006E  0555               	andwf	sprintf@flag^(0+128),w
 10268     006F  00C5               	movwf	??_sprintf^(0+128)
 10269     0070  3000               	movlw	0
 10270     0071  0556               	andwf	(sprintf@flag+1)^(0+128),w
 10271     0072  00C6               	movwf	(??_sprintf+1)^(0+128)
 10272     0073  0845               	movf	??_sprintf^(0+128),w
 10273     0074  0446               	iorwf	(??_sprintf^(0+128)+1),w
 10274     0075  1903               	btfsc	3,2
 10275     0076  2878               	goto	u7161
 10276     0077  2879               	goto	u7160
 10277     0078                     u7161:
 10278     0078  2894               	goto	l4371
 10279     0079                     u7160:
 10280     0079                     l4361:
 10281                           
 10282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
 10283     0079  0863               	movf	sprintf@sp^(0+128),w
 10284     007A  0084               	movwf	4
 10285     007B  302D               	movlw	45
 10286     007C  1783               	bsf	3,7	;select IRP bank2
 10287     007D  0080               	movwf	0
 10288     007E                     l4363:
 10289     007E  3001               	movlw	1
 10290     007F  00C5               	movwf	??_sprintf^(0+128)
 10291     0080  0845               	movf	??_sprintf^(0+128),w
 10292     0081  07E3               	addwf	sprintf@sp^(0+128),f
 10293     0082  2894               	goto	l4371
 10294     0083                     l4365:
 10295                           
 10296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
 10297     0083  1683               	bsf	3,5	;RP0=1, select bank1
 10298     0084  1303               	bcf	3,6	;RP1=0, select bank1
 10299     0085  0863               	movf	sprintf@sp^(0+128),w
 10300     0086  0084               	movwf	4
 10301     0087  3030               	movlw	48
 10302     0088  1783               	bsf	3,7	;select IRP bank2
 10303     0089  0080               	movwf	0
 10304     008A                     l4367:
 10305     008A  3001               	movlw	1
 10306     008B  00C5               	movwf	??_sprintf^(0+128)
 10307     008C  0845               	movf	??_sprintf^(0+128),w
 10308     008D  07E3               	addwf	sprintf@sp^(0+128),f
 10309     008E                     l4369:
 10310                           
 10311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
 10312     008E  30FF               	movlw	255
 10313     008F  07DB               	addwf	sprintf@width^(0+128),f
 10314     0090  1803               	skipnc
 10315     0091  0ADC               	incf	(sprintf@width+1)^(0+128),f
 10316     0092  30FF               	movlw	255
 10317     0093  07DC               	addwf	(sprintf@width+1)^(0+128),f
 10318     0094                     l4371:
 10319                           
 10320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
 10321     0094  085C               	movf	(sprintf@width+1)^(0+128),w
 10322     0095  3A80               	xorlw	128
 10323     0096  00FF               	movwf	btemp+1
 10324     0097  3080               	movlw	128
 10325     0098  027F               	subwf	btemp+1,w
 10326     0099  1D03               	skipz
 10327     009A  289D               	goto	u7175
 10328     009B  3001               	movlw	1
 10329     009C  025B               	subwf	sprintf@width^(0+128),w
 10330     009D                     u7175:
 10331     009D  1803               	skipnc
 10332     009E  28A0               	goto	u7171
 10333     009F  28A1               	goto	u7170
 10334     00A0                     u7171:
 10335     00A0  2883               	goto	l4365
 10336     00A1                     u7170:
 10337     00A1  297C               	goto	l419
 10338     00A2                     l4373:
 10339                           
 10340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10341     00A2  1683               	bsf	3,5	;RP0=1, select bank1
 10342     00A3  1303               	bcf	3,6	;RP1=0, select bank1
 10343     00A4  0863               	movf	sprintf@sp^(0+128),w
 10344     00A5  0084               	movwf	4
 10345     00A6  3020               	movlw	32
 10346     00A7  1783               	bsf	3,7	;select IRP bank2
 10347     00A8  0080               	movwf	0
 10348     00A9                     l4375:
 10349     00A9  3001               	movlw	1
 10350     00AA  00C5               	movwf	??_sprintf^(0+128)
 10351     00AB  0845               	movf	??_sprintf^(0+128),w
 10352     00AC  07E3               	addwf	sprintf@sp^(0+128),f
 10353     00AD                     l4377:
 10354                           
 10355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
 10356     00AD  30FF               	movlw	255
 10357     00AE  07DB               	addwf	sprintf@width^(0+128),f
 10358     00AF  1803               	skipnc
 10359     00B0  0ADC               	incf	(sprintf@width+1)^(0+128),f
 10360     00B1  30FF               	movlw	255
 10361     00B2  07DC               	addwf	(sprintf@width+1)^(0+128),f
 10362     00B3                     l4379:
 10363                           
 10364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10365     00B3  085C               	movf	(sprintf@width+1)^(0+128),w
 10366     00B4  3A80               	xorlw	128
 10367     00B5  00FF               	movwf	btemp+1
 10368     00B6  3080               	movlw	128
 10369     00B7  027F               	subwf	btemp+1,w
 10370     00B8  1D03               	skipz
 10371     00B9  28BC               	goto	u7185
 10372     00BA  3001               	movlw	1
 10373     00BB  025B               	subwf	sprintf@width^(0+128),w
 10374     00BC                     u7185:
 10375     00BC  1803               	skipnc
 10376     00BD  28BF               	goto	u7181
 10377     00BE  28C0               	goto	u7180
 10378     00BF                     u7181:
 10379     00BF  28A2               	goto	l4373
 10380     00C0                     u7180:
 10381     00C0                     l4381:
 10382                           
 10383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10384     00C0  3003               	movlw	3
 10385     00C1  1683               	bsf	3,5	;RP0=1, select bank1
 10386     00C2  1303               	bcf	3,6	;RP1=0, select bank1
 10387     00C3  0555               	andwf	sprintf@flag^(0+128),w
 10388     00C4  00C5               	movwf	??_sprintf^(0+128)
 10389     00C5  3000               	movlw	0
 10390     00C6  0556               	andwf	(sprintf@flag+1)^(0+128),w
 10391     00C7  00C6               	movwf	(??_sprintf+1)^(0+128)
 10392     00C8  0845               	movf	??_sprintf^(0+128),w
 10393     00C9  0446               	iorwf	(??_sprintf^(0+128)+1),w
 10394     00CA  1903               	btfsc	3,2
 10395     00CB  28CD               	goto	u7191
 10396     00CC  28CE               	goto	u7190
 10397     00CD                     u7191:
 10398     00CD  297C               	goto	l419
 10399     00CE                     u7190:
 10400     00CE                     l4383:
 10401                           
 10402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10403     00CE  0863               	movf	sprintf@sp^(0+128),w
 10404     00CF  0084               	movwf	4
 10405     00D0  302D               	movlw	45
 10406     00D1  1783               	bsf	3,7	;select IRP bank2
 10407     00D2  0080               	movwf	0
 10408     00D3                     l4385:
 10409     00D3  3001               	movlw	1
 10410     00D4  00C5               	movwf	??_sprintf^(0+128)
 10411     00D5  0845               	movf	??_sprintf^(0+128),w
 10412     00D6  07E3               	addwf	sprintf@sp^(0+128),f
 10413     00D7  297C               	goto	l419
 10414     00D8                     l4387:
 10415                           
 10416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10417     00D8  0864               	movf	sprintf@c^(0+128),w
 10418     00D9  00C5               	movwf	??_sprintf^(0+128)
 10419     00DA  3001               	movlw	1
 10420     00DB                     u7205:
 10421     00DB  1003               	clrc
 10422     00DC  0DC5               	rlf	??_sprintf^(0+128),f
 10423     00DD  3EFF               	addlw	-1
 10424     00DE  1D03               	skipz
 10425     00DF  28DB               	goto	u7205
 10426     00E0  1003               	clrc
 10427     00E1  0D45               	rlf	??_sprintf^(0+128),w
 10428     00E2  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10429     00E3  0084               	movwf	4
 10430     00E4  160A  118A  200A  120A  118A  	fcall	stringdir
 10431     00E9  1283               	bcf	3,5	;RP0=0, select bank0
 10432     00EA  1303               	bcf	3,6	;RP1=0, select bank0
 10433     00EB  00A6               	movwf	___lldiv@divisor
 10434     00EC  160A  118A  200A  120A  118A  	fcall	stringdir
 10435     00F1  00A7               	movwf	___lldiv@divisor+1
 10436     00F2  160A  118A  200A  120A  118A  	fcall	stringdir
 10437     00F7  00A8               	movwf	___lldiv@divisor+2
 10438     00F8  160A  118A  200A  120A  118A  	fcall	stringdir
 10439     00FD  00A9               	movwf	___lldiv@divisor+3
 10440     00FE  1683               	bsf	3,5	;RP0=1, select bank1
 10441     00FF  1303               	bcf	3,6	;RP1=0, select bank1
 10442     0100  0852               	movf	(sprintf@val+3)^(0+128),w
 10443     0101  1283               	bcf	3,5	;RP0=0, select bank0
 10444     0102  1303               	bcf	3,6	;RP1=0, select bank0
 10445     0103  00AD               	movwf	___lldiv@dividend+3
 10446     0104  1683               	bsf	3,5	;RP0=1, select bank1
 10447     0105  1303               	bcf	3,6	;RP1=0, select bank1
 10448     0106  0851               	movf	(sprintf@val+2)^(0+128),w
 10449     0107  1283               	bcf	3,5	;RP0=0, select bank0
 10450     0108  1303               	bcf	3,6	;RP1=0, select bank0
 10451     0109  00AC               	movwf	___lldiv@dividend+2
 10452     010A  1683               	bsf	3,5	;RP0=1, select bank1
 10453     010B  1303               	bcf	3,6	;RP1=0, select bank1
 10454     010C  0850               	movf	(sprintf@val+1)^(0+128),w
 10455     010D  1283               	bcf	3,5	;RP0=0, select bank0
 10456     010E  1303               	bcf	3,6	;RP1=0, select bank0
 10457     010F  00AB               	movwf	___lldiv@dividend+1
 10458     0110  1683               	bsf	3,5	;RP0=1, select bank1
 10459     0111  1303               	bcf	3,6	;RP1=0, select bank1
 10460     0112  084F               	movf	sprintf@val^(0+128),w
 10461     0113  1283               	bcf	3,5	;RP0=0, select bank0
 10462     0114  1303               	bcf	3,6	;RP1=0, select bank0
 10463     0115  00AA               	movwf	___lldiv@dividend
 10464     0116  160A  158A  239E  120A  118A  	fcall	___lldiv
 10465     011B  1283               	bcf	3,5	;RP0=0, select bank0
 10466     011C  1303               	bcf	3,6	;RP1=0, select bank0
 10467     011D  0829               	movf	?___lldiv+3,w
 10468     011E  1683               	bsf	3,5	;RP0=1, select bank1
 10469     011F  1303               	bcf	3,6	;RP1=0, select bank1
 10470     0120  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
 10471     0121  1283               	bcf	3,5	;RP0=0, select bank0
 10472     0122  1303               	bcf	3,6	;RP1=0, select bank0
 10473     0123  0828               	movf	?___lldiv+2,w
 10474     0124  1683               	bsf	3,5	;RP0=1, select bank1
 10475     0125  1303               	bcf	3,6	;RP1=0, select bank1
 10476     0126  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
 10477     0127  1283               	bcf	3,5	;RP0=0, select bank0
 10478     0128  1303               	bcf	3,6	;RP1=0, select bank0
 10479     0129  0827               	movf	?___lldiv+1,w
 10480     012A  1683               	bsf	3,5	;RP0=1, select bank1
 10481     012B  1303               	bcf	3,6	;RP1=0, select bank1
 10482     012C  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
 10483     012D  1283               	bcf	3,5	;RP0=0, select bank0
 10484     012E  1303               	bcf	3,6	;RP1=0, select bank0
 10485     012F  0826               	movf	?___lldiv,w
 10486     0130  1683               	bsf	3,5	;RP0=1, select bank1
 10487     0131  1303               	bcf	3,6	;RP1=0, select bank1
 10488     0132  00D7               	movwf	sprintf@tmpval^(0+128)
 10489     0133                     l4389:
 10490                           
 10491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10492     0133  3000               	movlw	0
 10493     0134  1283               	bcf	3,5	;RP0=0, select bank0
 10494     0135  1303               	bcf	3,6	;RP1=0, select bank0
 10495     0136  00B7               	movwf	___llmod@divisor+3
 10496     0137  3000               	movlw	0
 10497     0138  00B6               	movwf	___llmod@divisor+2
 10498     0139  3000               	movlw	0
 10499     013A  00B5               	movwf	___llmod@divisor+1
 10500     013B  300A               	movlw	10
 10501     013C  00B4               	movwf	___llmod@divisor
 10502     013D  1683               	bsf	3,5	;RP0=1, select bank1
 10503     013E  1303               	bcf	3,6	;RP1=0, select bank1
 10504     013F  085A               	movf	(sprintf@tmpval+3)^(0+128),w
 10505     0140  1283               	bcf	3,5	;RP0=0, select bank0
 10506     0141  1303               	bcf	3,6	;RP1=0, select bank0
 10507     0142  00BB               	movwf	___llmod@dividend+3
 10508     0143  1683               	bsf	3,5	;RP0=1, select bank1
 10509     0144  1303               	bcf	3,6	;RP1=0, select bank1
 10510     0145  0859               	movf	(sprintf@tmpval+2)^(0+128),w
 10511     0146  1283               	bcf	3,5	;RP0=0, select bank0
 10512     0147  1303               	bcf	3,6	;RP1=0, select bank0
 10513     0148  00BA               	movwf	___llmod@dividend+2
 10514     0149  1683               	bsf	3,5	;RP0=1, select bank1
 10515     014A  1303               	bcf	3,6	;RP1=0, select bank1
 10516     014B  0858               	movf	(sprintf@tmpval+1)^(0+128),w
 10517     014C  1283               	bcf	3,5	;RP0=0, select bank0
 10518     014D  1303               	bcf	3,6	;RP1=0, select bank0
 10519     014E  00B9               	movwf	___llmod@dividend+1
 10520     014F  1683               	bsf	3,5	;RP0=1, select bank1
 10521     0150  1303               	bcf	3,6	;RP1=0, select bank1
 10522     0151  0857               	movf	sprintf@tmpval^(0+128),w
 10523     0152  1283               	bcf	3,5	;RP0=0, select bank0
 10524     0153  1303               	bcf	3,6	;RP1=0, select bank0
 10525     0154  00B8               	movwf	___llmod@dividend
 10526     0155  160A  158A  2286  120A  118A  	fcall	___llmod
 10527     015A  1283               	bcf	3,5	;RP0=0, select bank0
 10528     015B  1303               	bcf	3,6	;RP1=0, select bank0
 10529     015C  0837               	movf	?___llmod+3,w
 10530     015D  1683               	bsf	3,5	;RP0=1, select bank1
 10531     015E  1303               	bcf	3,6	;RP1=0, select bank1
 10532     015F  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
 10533     0160  1283               	bcf	3,5	;RP0=0, select bank0
 10534     0161  1303               	bcf	3,6	;RP1=0, select bank0
 10535     0162  0836               	movf	?___llmod+2,w
 10536     0163  1683               	bsf	3,5	;RP0=1, select bank1
 10537     0164  1303               	bcf	3,6	;RP1=0, select bank1
 10538     0165  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
 10539     0166  1283               	bcf	3,5	;RP0=0, select bank0
 10540     0167  1303               	bcf	3,6	;RP1=0, select bank0
 10541     0168  0835               	movf	?___llmod+1,w
 10542     0169  1683               	bsf	3,5	;RP0=1, select bank1
 10543     016A  1303               	bcf	3,6	;RP1=0, select bank1
 10544     016B  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
 10545     016C  1283               	bcf	3,5	;RP0=0, select bank0
 10546     016D  1303               	bcf	3,6	;RP1=0, select bank0
 10547     016E  0834               	movf	?___llmod,w
 10548     016F  1683               	bsf	3,5	;RP0=1, select bank1
 10549     0170  1303               	bcf	3,6	;RP1=0, select bank1
 10550     0171  00D7               	movwf	sprintf@tmpval^(0+128)
 10551     0172                     l4391:
 10552                           
 10553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10554     0172  0863               	movf	sprintf@sp^(0+128),w
 10555     0173  0084               	movwf	4
 10556     0174  0857               	movf	sprintf@tmpval^(0+128),w
 10557     0175  3E30               	addlw	48
 10558     0176  1783               	bsf	3,7	;select IRP bank2
 10559     0177  0080               	movwf	0
 10560     0178  3001               	movlw	1
 10561     0179  00C5               	movwf	??_sprintf^(0+128)
 10562     017A  0845               	movf	??_sprintf^(0+128),w
 10563     017B  07E3               	addwf	sprintf@sp^(0+128),f
 10564     017C                     l419:	
 10565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
 10566                           
 10567                           
 10568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10569     017C  3001               	movlw	1
 10570     017D  1683               	bsf	3,5	;RP0=1, select bank1
 10571     017E  1303               	bcf	3,6	;RP1=0, select bank1
 10572     017F  02E4               	subwf	sprintf@c^(0+128),f
 10573     0180  0A64               	incf	sprintf@c^(0+128),w
 10574     0181  1D03               	btfss	3,2
 10575     0182  2984               	goto	u7211
 10576     0183  2985               	goto	u7210
 10577     0184                     u7211:
 10578     0184  28D8               	goto	l4387
 10579     0185                     u7210:
 10580     0185  2997               	goto	l4399
 10581     0186                     l4393:
 10582                           
 10583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10584     0186  1683               	bsf	3,5	;RP0=1, select bank1
 10585     0187  1303               	bcf	3,6	;RP1=0, select bank1
 10586     0188  0863               	movf	sprintf@sp^(0+128),w
 10587     0189  0084               	movwf	4
 10588     018A  3030               	movlw	48
 10589     018B  1783               	bsf	3,7	;select IRP bank2
 10590     018C  0080               	movwf	0
 10591     018D                     l4395:
 10592     018D  3001               	movlw	1
 10593     018E  00C5               	movwf	??_sprintf^(0+128)
 10594     018F  0845               	movf	??_sprintf^(0+128),w
 10595     0190  07E3               	addwf	sprintf@sp^(0+128),f
 10596     0191                     l4397:
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10599     0191  30FF               	movlw	255
 10600     0192  07DD               	addwf	sprintf@eexp^(0+128),f
 10601     0193  1803               	skipnc
 10602     0194  0ADE               	incf	(sprintf@eexp+1)^(0+128),f
 10603     0195  30FF               	movlw	255
 10604     0196  07DE               	addwf	(sprintf@eexp+1)^(0+128),f
 10605     0197                     l4399:
 10606                           
 10607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10608     0197  085E               	movf	(sprintf@eexp+1)^(0+128),w
 10609     0198  3A80               	xorlw	128
 10610     0199  00FF               	movwf	btemp+1
 10611     019A  3080               	movlw	128
 10612     019B  027F               	subwf	btemp+1,w
 10613     019C  1D03               	skipz
 10614     019D  29A0               	goto	u7225
 10615     019E  3001               	movlw	1
 10616     019F  025D               	subwf	sprintf@eexp^(0+128),w
 10617     01A0                     u7225:
 10618     01A0  1803               	skipnc
 10619     01A1  29A3               	goto	u7221
 10620     01A2  29A4               	goto	u7220
 10621     01A3                     u7221:
 10622     01A3  2986               	goto	l4393
 10623     01A4                     u7220:
 10624     01A4                     l4401:
 10625                           
 10626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10627     01A4  1683               	bsf	3,5	;RP0=1, select bank1
 10628     01A5  1303               	bcf	3,6	;RP1=0, select bank1
 10629     01A6  0854               	movf	(sprintf@prec+1)^(0+128),w
 10630     01A7  3A80               	xorlw	128
 10631     01A8  00FF               	movwf	btemp+1
 10632     01A9  3080               	movlw	128
 10633     01AA  027F               	subwf	btemp+1,w
 10634     01AB  1D03               	skipz
 10635     01AC  29AF               	goto	u7235
 10636     01AD  3009               	movlw	9
 10637     01AE  0253               	subwf	sprintf@prec^(0+128),w
 10638     01AF                     u7235:
 10639     01AF  1C03               	skipc
 10640     01B0  29B2               	goto	u7231
 10641     01B1  29B3               	goto	u7230
 10642     01B2                     u7231:
 10643     01B2  29B8               	goto	l4405
 10644     01B3                     u7230:
 10645     01B3                     l4403:
 10646                           
 10647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10648     01B3  3008               	movlw	8
 10649     01B4  1683               	bsf	3,5	;RP0=1, select bank1
 10650     01B5  1303               	bcf	3,6	;RP1=0, select bank1
 10651     01B6  00E4               	movwf	sprintf@c^(0+128)
 10652     01B7  29BC               	goto	l426
 10653     01B8                     l4405:
 10654                           
 10655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10656     01B8  1683               	bsf	3,5	;RP0=1, select bank1
 10657     01B9  1303               	bcf	3,6	;RP1=0, select bank1
 10658     01BA  0853               	movf	sprintf@prec^(0+128),w
 10659     01BB  00E4               	movwf	sprintf@c^(0+128)
 10660     01BC                     l426:
 10661                           
 10662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10663     01BC  0864               	movf	sprintf@c^(0+128),w
 10664     01BD  00C5               	movwf	??_sprintf^(0+128)
 10665     01BE  01C6               	clrf	(??_sprintf^(0+128)+1)
 10666     01BF  0845               	movf	??_sprintf^(0+128),w
 10667     01C0  02D3               	subwf	sprintf@prec^(0+128),f
 10668     01C1  0846               	movf	(??_sprintf+1)^(0+128),w
 10669     01C2  1C03               	skipc
 10670     01C3  03D4               	decf	(sprintf@prec+1)^(0+128),f
 10671     01C4  02D4               	subwf	(sprintf@prec+1)^(0+128),f
 10672     01C5                     l4407:
 10673                           
 10674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10675     01C5  0864               	movf	sprintf@c^(0+128),w
 10676     01C6  1903               	btfsc	3,2
 10677     01C7  29C9               	goto	u7241
 10678     01C8  29CA               	goto	u7240
 10679     01C9                     u7241:
 10680     01C9  29D3               	goto	l4413
 10681     01CA                     u7240:
 10682     01CA                     l4409:
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10685     01CA  0863               	movf	sprintf@sp^(0+128),w
 10686     01CB  0084               	movwf	4
 10687     01CC  302E               	movlw	46
 10688     01CD  1783               	bsf	3,7	;select IRP bank2
 10689     01CE  0080               	movwf	0
 10690     01CF                     l4411:
 10691     01CF  3001               	movlw	1
 10692     01D0  00C5               	movwf	??_sprintf^(0+128)
 10693     01D1  0845               	movf	??_sprintf^(0+128),w
 10694     01D2  07E3               	addwf	sprintf@sp^(0+128),f
 10695     01D3                     l4413:
 10696                           
 10697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10698     01D3  0864               	movf	sprintf@c^(0+128),w
 10699     01D4  120A  158A  249D  120A  118A  	fcall	_scale
 10700     01D9  1283               	bcf	3,5	;RP0=0, select bank0
 10701     01DA  1303               	bcf	3,6	;RP1=0, select bank0
 10702     01DB  0853               	movf	?_scale+3,w
 10703     01DC  1683               	bsf	3,5	;RP0=1, select bank1
 10704     01DD  1303               	bcf	3,6	;RP1=0, select bank1
 10705     01DE  00CD               	movwf	(_sprintf$1205+3)^(0+128)
 10706     01DF  1283               	bcf	3,5	;RP0=0, select bank0
 10707     01E0  1303               	bcf	3,6	;RP1=0, select bank0
 10708     01E1  0852               	movf	?_scale+2,w
 10709     01E2  1683               	bsf	3,5	;RP0=1, select bank1
 10710     01E3  1303               	bcf	3,6	;RP1=0, select bank1
 10711     01E4  00CC               	movwf	(_sprintf$1205+2)^(0+128)
 10712     01E5  1283               	bcf	3,5	;RP0=0, select bank0
 10713     01E6  1303               	bcf	3,6	;RP1=0, select bank0
 10714     01E7  0851               	movf	?_scale+1,w
 10715     01E8  1683               	bsf	3,5	;RP0=1, select bank1
 10716     01E9  1303               	bcf	3,6	;RP1=0, select bank1
 10717     01EA  00CB               	movwf	(_sprintf$1205+1)^(0+128)
 10718     01EB  1283               	bcf	3,5	;RP0=0, select bank0
 10719     01EC  1303               	bcf	3,6	;RP1=0, select bank0
 10720     01ED  0850               	movf	?_scale,w
 10721     01EE  1683               	bsf	3,5	;RP0=1, select bank1
 10722     01EF  1303               	bcf	3,6	;RP1=0, select bank1
 10723     01F0  00CA               	movwf	_sprintf$1205^(0+128)
 10724     01F1                     l4415:
 10725                           
 10726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10727     01F1  084D               	movf	(_sprintf$1205+3)^(0+128),w
 10728     01F2  1283               	bcf	3,5	;RP0=0, select bank0
 10729     01F3  1303               	bcf	3,6	;RP1=0, select bank0
 10730     01F4  00BD               	movwf	___flmul@a+3
 10731     01F5  1683               	bsf	3,5	;RP0=1, select bank1
 10732     01F6  1303               	bcf	3,6	;RP1=0, select bank1
 10733     01F7  084C               	movf	(_sprintf$1205+2)^(0+128),w
 10734     01F8  1283               	bcf	3,5	;RP0=0, select bank0
 10735     01F9  1303               	bcf	3,6	;RP1=0, select bank0
 10736     01FA  00BC               	movwf	___flmul@a+2
 10737     01FB  1683               	bsf	3,5	;RP0=1, select bank1
 10738     01FC  1303               	bcf	3,6	;RP1=0, select bank1
 10739     01FD  084B               	movf	(_sprintf$1205+1)^(0+128),w
 10740     01FE  1283               	bcf	3,5	;RP0=0, select bank0
 10741     01FF  1303               	bcf	3,6	;RP1=0, select bank0
 10742     0200  00BB               	movwf	___flmul@a+1
 10743     0201  1683               	bsf	3,5	;RP0=1, select bank1
 10744     0202  1303               	bcf	3,6	;RP1=0, select bank1
 10745     0203  084A               	movf	_sprintf$1205^(0+128),w
 10746     0204  1283               	bcf	3,5	;RP0=0, select bank0
 10747     0205  1303               	bcf	3,6	;RP1=0, select bank0
 10748     0206  00BA               	movwf	___flmul@a
 10749     0207  1683               	bsf	3,5	;RP0=1, select bank1
 10750     0208  1303               	bcf	3,6	;RP1=0, select bank1
 10751     0209  0862               	movf	(sprintf@fval+3)^(0+128),w
 10752     020A  1283               	bcf	3,5	;RP0=0, select bank0
 10753     020B  1303               	bcf	3,6	;RP1=0, select bank0
 10754     020C  00B9               	movwf	___flmul@b+3
 10755     020D  1683               	bsf	3,5	;RP0=1, select bank1
 10756     020E  1303               	bcf	3,6	;RP1=0, select bank1
 10757     020F  0861               	movf	(sprintf@fval+2)^(0+128),w
 10758     0210  1283               	bcf	3,5	;RP0=0, select bank0
 10759     0211  1303               	bcf	3,6	;RP1=0, select bank0
 10760     0212  00B8               	movwf	___flmul@b+2
 10761     0213  1683               	bsf	3,5	;RP0=1, select bank1
 10762     0214  1303               	bcf	3,6	;RP1=0, select bank1
 10763     0215  0860               	movf	(sprintf@fval+1)^(0+128),w
 10764     0216  1283               	bcf	3,5	;RP0=0, select bank0
 10765     0217  1303               	bcf	3,6	;RP1=0, select bank0
 10766     0218  00B7               	movwf	___flmul@b+1
 10767     0219  1683               	bsf	3,5	;RP0=1, select bank1
 10768     021A  1303               	bcf	3,6	;RP1=0, select bank1
 10769     021B  085F               	movf	sprintf@fval^(0+128),w
 10770     021C  1283               	bcf	3,5	;RP0=0, select bank0
 10771     021D  1303               	bcf	3,6	;RP1=0, select bank0
 10772     021E  00B6               	movwf	___flmul@b
 10773     021F  160A  118A  24BB  120A  118A  	fcall	___flmul
 10774     0224  1283               	bcf	3,5	;RP0=0, select bank0
 10775     0225  1303               	bcf	3,6	;RP1=0, select bank0
 10776     0226  0839               	movf	?___flmul+3,w
 10777     0227  1683               	bsf	3,5	;RP0=1, select bank1
 10778     0228  1303               	bcf	3,6	;RP1=0, select bank1
 10779     0229  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10780     022A  1283               	bcf	3,5	;RP0=0, select bank0
 10781     022B  1303               	bcf	3,6	;RP1=0, select bank0
 10782     022C  0838               	movf	?___flmul+2,w
 10783     022D  1683               	bsf	3,5	;RP0=1, select bank1
 10784     022E  1303               	bcf	3,6	;RP1=0, select bank1
 10785     022F  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10786     0230  1283               	bcf	3,5	;RP0=0, select bank0
 10787     0231  1303               	bcf	3,6	;RP1=0, select bank0
 10788     0232  0837               	movf	?___flmul+1,w
 10789     0233  1683               	bsf	3,5	;RP0=1, select bank1
 10790     0234  1303               	bcf	3,6	;RP1=0, select bank1
 10791     0235  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10792     0236  1283               	bcf	3,5	;RP0=0, select bank0
 10793     0237  1303               	bcf	3,6	;RP1=0, select bank0
 10794     0238  0836               	movf	?___flmul,w
 10795     0239  1683               	bsf	3,5	;RP0=1, select bank1
 10796     023A  1303               	bcf	3,6	;RP1=0, select bank1
 10797     023B  00A0               	movwf	___fltol@f1^(0+128)
 10798     023C  160A  158A  24DA  120A  118A  	fcall	___fltol
 10799     0241  1683               	bsf	3,5	;RP0=1, select bank1
 10800     0242  1303               	bcf	3,6	;RP1=0, select bank1
 10801     0243  0823               	movf	(?___fltol+3)^(0+128),w
 10802     0244  00D2               	movwf	(sprintf@val+3)^(0+128)
 10803     0245  0822               	movf	(?___fltol+2)^(0+128),w
 10804     0246  00D1               	movwf	(sprintf@val+2)^(0+128)
 10805     0247  0821               	movf	(?___fltol+1)^(0+128),w
 10806     0248  00D0               	movwf	(sprintf@val+1)^(0+128)
 10807     0249  0820               	movf	?___fltol^(0+128),w
 10808     024A  00CF               	movwf	sprintf@val^(0+128)
 10809                           
 10810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10811     024B  2B4B               	goto	l4425
 10812     024C                     l4417:
 10813                           
 10814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10815     024C  0864               	movf	sprintf@c^(0+128),w
 10816     024D  00C5               	movwf	??_sprintf^(0+128)
 10817     024E  3001               	movlw	1
 10818     024F                     u7255:
 10819     024F  1003               	clrc
 10820     0250  0DC5               	rlf	??_sprintf^(0+128),f
 10821     0251  3EFF               	addlw	-1
 10822     0252  1D03               	skipz
 10823     0253  2A4F               	goto	u7255
 10824     0254  1003               	clrc
 10825     0255  0D45               	rlf	??_sprintf^(0+128),w
 10826     0256  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10827     0257  0084               	movwf	4
 10828     0258  160A  118A  200A  120A  118A  	fcall	stringdir
 10829     025D  1283               	bcf	3,5	;RP0=0, select bank0
 10830     025E  1303               	bcf	3,6	;RP1=0, select bank0
 10831     025F  00A6               	movwf	___lldiv@divisor
 10832     0260  160A  118A  200A  120A  118A  	fcall	stringdir
 10833     0265  00A7               	movwf	___lldiv@divisor+1
 10834     0266  160A  118A  200A  120A  118A  	fcall	stringdir
 10835     026B  00A8               	movwf	___lldiv@divisor+2
 10836     026C  160A  118A  200A  120A  118A  	fcall	stringdir
 10837     0271  00A9               	movwf	___lldiv@divisor+3
 10838     0272  1683               	bsf	3,5	;RP0=1, select bank1
 10839     0273  1303               	bcf	3,6	;RP1=0, select bank1
 10840     0274  0852               	movf	(sprintf@val+3)^(0+128),w
 10841     0275  1283               	bcf	3,5	;RP0=0, select bank0
 10842     0276  1303               	bcf	3,6	;RP1=0, select bank0
 10843     0277  00AD               	movwf	___lldiv@dividend+3
 10844     0278  1683               	bsf	3,5	;RP0=1, select bank1
 10845     0279  1303               	bcf	3,6	;RP1=0, select bank1
 10846     027A  0851               	movf	(sprintf@val+2)^(0+128),w
 10847     027B  1283               	bcf	3,5	;RP0=0, select bank0
 10848     027C  1303               	bcf	3,6	;RP1=0, select bank0
 10849     027D  00AC               	movwf	___lldiv@dividend+2
 10850     027E  1683               	bsf	3,5	;RP0=1, select bank1
 10851     027F  1303               	bcf	3,6	;RP1=0, select bank1
 10852     0280  0850               	movf	(sprintf@val+1)^(0+128),w
 10853     0281  1283               	bcf	3,5	;RP0=0, select bank0
 10854     0282  1303               	bcf	3,6	;RP1=0, select bank0
 10855     0283  00AB               	movwf	___lldiv@dividend+1
 10856     0284  1683               	bsf	3,5	;RP0=1, select bank1
 10857     0285  1303               	bcf	3,6	;RP1=0, select bank1
 10858     0286  084F               	movf	sprintf@val^(0+128),w
 10859     0287  1283               	bcf	3,5	;RP0=0, select bank0
 10860     0288  1303               	bcf	3,6	;RP1=0, select bank0
 10861     0289  00AA               	movwf	___lldiv@dividend
 10862     028A  160A  158A  239E  120A  118A  	fcall	___lldiv
 10863     028F  1283               	bcf	3,5	;RP0=0, select bank0
 10864     0290  1303               	bcf	3,6	;RP1=0, select bank0
 10865     0291  0829               	movf	?___lldiv+3,w
 10866     0292  1683               	bsf	3,5	;RP0=1, select bank1
 10867     0293  1303               	bcf	3,6	;RP1=0, select bank1
 10868     0294  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
 10869     0295  1283               	bcf	3,5	;RP0=0, select bank0
 10870     0296  1303               	bcf	3,6	;RP1=0, select bank0
 10871     0297  0828               	movf	?___lldiv+2,w
 10872     0298  1683               	bsf	3,5	;RP0=1, select bank1
 10873     0299  1303               	bcf	3,6	;RP1=0, select bank1
 10874     029A  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
 10875     029B  1283               	bcf	3,5	;RP0=0, select bank0
 10876     029C  1303               	bcf	3,6	;RP1=0, select bank0
 10877     029D  0827               	movf	?___lldiv+1,w
 10878     029E  1683               	bsf	3,5	;RP0=1, select bank1
 10879     029F  1303               	bcf	3,6	;RP1=0, select bank1
 10880     02A0  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
 10881     02A1  1283               	bcf	3,5	;RP0=0, select bank0
 10882     02A2  1303               	bcf	3,6	;RP1=0, select bank0
 10883     02A3  0826               	movf	?___lldiv,w
 10884     02A4  1683               	bsf	3,5	;RP0=1, select bank1
 10885     02A5  1303               	bcf	3,6	;RP1=0, select bank1
 10886     02A6  00D7               	movwf	sprintf@tmpval^(0+128)
 10887     02A7                     l4419:
 10888                           
 10889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10890     02A7  3000               	movlw	0
 10891     02A8  1283               	bcf	3,5	;RP0=0, select bank0
 10892     02A9  1303               	bcf	3,6	;RP1=0, select bank0
 10893     02AA  00B7               	movwf	___llmod@divisor+3
 10894     02AB  3000               	movlw	0
 10895     02AC  00B6               	movwf	___llmod@divisor+2
 10896     02AD  3000               	movlw	0
 10897     02AE  00B5               	movwf	___llmod@divisor+1
 10898     02AF  300A               	movlw	10
 10899     02B0  00B4               	movwf	___llmod@divisor
 10900     02B1  1683               	bsf	3,5	;RP0=1, select bank1
 10901     02B2  1303               	bcf	3,6	;RP1=0, select bank1
 10902     02B3  085A               	movf	(sprintf@tmpval+3)^(0+128),w
 10903     02B4  1283               	bcf	3,5	;RP0=0, select bank0
 10904     02B5  1303               	bcf	3,6	;RP1=0, select bank0
 10905     02B6  00BB               	movwf	___llmod@dividend+3
 10906     02B7  1683               	bsf	3,5	;RP0=1, select bank1
 10907     02B8  1303               	bcf	3,6	;RP1=0, select bank1
 10908     02B9  0859               	movf	(sprintf@tmpval+2)^(0+128),w
 10909     02BA  1283               	bcf	3,5	;RP0=0, select bank0
 10910     02BB  1303               	bcf	3,6	;RP1=0, select bank0
 10911     02BC  00BA               	movwf	___llmod@dividend+2
 10912     02BD  1683               	bsf	3,5	;RP0=1, select bank1
 10913     02BE  1303               	bcf	3,6	;RP1=0, select bank1
 10914     02BF  0858               	movf	(sprintf@tmpval+1)^(0+128),w
 10915     02C0  1283               	bcf	3,5	;RP0=0, select bank0
 10916     02C1  1303               	bcf	3,6	;RP1=0, select bank0
 10917     02C2  00B9               	movwf	___llmod@dividend+1
 10918     02C3  1683               	bsf	3,5	;RP0=1, select bank1
 10919     02C4  1303               	bcf	3,6	;RP1=0, select bank1
 10920     02C5  0857               	movf	sprintf@tmpval^(0+128),w
 10921     02C6  1283               	bcf	3,5	;RP0=0, select bank0
 10922     02C7  1303               	bcf	3,6	;RP1=0, select bank0
 10923     02C8  00B8               	movwf	___llmod@dividend
 10924     02C9  160A  158A  2286  120A  118A  	fcall	___llmod
 10925     02CE  1283               	bcf	3,5	;RP0=0, select bank0
 10926     02CF  1303               	bcf	3,6	;RP1=0, select bank0
 10927     02D0  0837               	movf	?___llmod+3,w
 10928     02D1  1683               	bsf	3,5	;RP0=1, select bank1
 10929     02D2  1303               	bcf	3,6	;RP1=0, select bank1
 10930     02D3  00DA               	movwf	(sprintf@tmpval+3)^(0+128)
 10931     02D4  1283               	bcf	3,5	;RP0=0, select bank0
 10932     02D5  1303               	bcf	3,6	;RP1=0, select bank0
 10933     02D6  0836               	movf	?___llmod+2,w
 10934     02D7  1683               	bsf	3,5	;RP0=1, select bank1
 10935     02D8  1303               	bcf	3,6	;RP1=0, select bank1
 10936     02D9  00D9               	movwf	(sprintf@tmpval+2)^(0+128)
 10937     02DA  1283               	bcf	3,5	;RP0=0, select bank0
 10938     02DB  1303               	bcf	3,6	;RP1=0, select bank0
 10939     02DC  0835               	movf	?___llmod+1,w
 10940     02DD  1683               	bsf	3,5	;RP0=1, select bank1
 10941     02DE  1303               	bcf	3,6	;RP1=0, select bank1
 10942     02DF  00D8               	movwf	(sprintf@tmpval+1)^(0+128)
 10943     02E0  1283               	bcf	3,5	;RP0=0, select bank0
 10944     02E1  1303               	bcf	3,6	;RP1=0, select bank0
 10945     02E2  0834               	movf	?___llmod,w
 10946     02E3  1683               	bsf	3,5	;RP0=1, select bank1
 10947     02E4  1303               	bcf	3,6	;RP1=0, select bank1
 10948     02E5  00D7               	movwf	sprintf@tmpval^(0+128)
 10949     02E6                     l4421:
 10950                           
 10951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10952     02E6  0863               	movf	sprintf@sp^(0+128),w
 10953     02E7  0084               	movwf	4
 10954     02E8  0857               	movf	sprintf@tmpval^(0+128),w
 10955     02E9  3E30               	addlw	48
 10956     02EA  1783               	bsf	3,7	;select IRP bank2
 10957     02EB  0080               	movwf	0
 10958     02EC  3001               	movlw	1
 10959     02ED  00C5               	movwf	??_sprintf^(0+128)
 10960     02EE  0845               	movf	??_sprintf^(0+128),w
 10961     02EF  07E3               	addwf	sprintf@sp^(0+128),f
 10962     02F0                     l4423:
 10963                           
 10964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10965     02F0  0864               	movf	sprintf@c^(0+128),w
 10966     02F1  00C5               	movwf	??_sprintf^(0+128)
 10967     02F2  3001               	movlw	1
 10968     02F3                     u7265:
 10969     02F3  1003               	clrc
 10970     02F4  0DC5               	rlf	??_sprintf^(0+128),f
 10971     02F5  3EFF               	addlw	-1
 10972     02F6  1D03               	skipz
 10973     02F7  2AF3               	goto	u7265
 10974     02F8  1003               	clrc
 10975     02F9  0D45               	rlf	??_sprintf^(0+128),w
 10976     02FA  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10977     02FB  0084               	movwf	4
 10978     02FC  160A  118A  200A  120A  118A  	fcall	stringdir
 10979     0301  1283               	bcf	3,5	;RP0=0, select bank0
 10980     0302  1303               	bcf	3,6	;RP1=0, select bank0
 10981     0303  00B4               	movwf	___llmod@divisor
 10982     0304  160A  118A  200A  120A  118A  	fcall	stringdir
 10983     0309  00B5               	movwf	___llmod@divisor+1
 10984     030A  160A  118A  200A  120A  118A  	fcall	stringdir
 10985     030F  00B6               	movwf	___llmod@divisor+2
 10986     0310  160A  118A  200A  120A  118A  	fcall	stringdir
 10987     0315  00B7               	movwf	___llmod@divisor+3
 10988     0316  1683               	bsf	3,5	;RP0=1, select bank1
 10989     0317  1303               	bcf	3,6	;RP1=0, select bank1
 10990     0318  0852               	movf	(sprintf@val+3)^(0+128),w
 10991     0319  1283               	bcf	3,5	;RP0=0, select bank0
 10992     031A  1303               	bcf	3,6	;RP1=0, select bank0
 10993     031B  00BB               	movwf	___llmod@dividend+3
 10994     031C  1683               	bsf	3,5	;RP0=1, select bank1
 10995     031D  1303               	bcf	3,6	;RP1=0, select bank1
 10996     031E  0851               	movf	(sprintf@val+2)^(0+128),w
 10997     031F  1283               	bcf	3,5	;RP0=0, select bank0
 10998     0320  1303               	bcf	3,6	;RP1=0, select bank0
 10999     0321  00BA               	movwf	___llmod@dividend+2
 11000     0322  1683               	bsf	3,5	;RP0=1, select bank1
 11001     0323  1303               	bcf	3,6	;RP1=0, select bank1
 11002     0324  0850               	movf	(sprintf@val+1)^(0+128),w
 11003     0325  1283               	bcf	3,5	;RP0=0, select bank0
 11004     0326  1303               	bcf	3,6	;RP1=0, select bank0
 11005     0327  00B9               	movwf	___llmod@dividend+1
 11006     0328  1683               	bsf	3,5	;RP0=1, select bank1
 11007     0329  1303               	bcf	3,6	;RP1=0, select bank1
 11008     032A  084F               	movf	sprintf@val^(0+128),w
 11009     032B  1283               	bcf	3,5	;RP0=0, select bank0
 11010     032C  1303               	bcf	3,6	;RP1=0, select bank0
 11011     032D  00B8               	movwf	___llmod@dividend
 11012     032E  160A  158A  2286  120A  118A  	fcall	___llmod
 11013     0333  1283               	bcf	3,5	;RP0=0, select bank0
 11014     0334  1303               	bcf	3,6	;RP1=0, select bank0
 11015     0335  0837               	movf	?___llmod+3,w
 11016     0336  1683               	bsf	3,5	;RP0=1, select bank1
 11017     0337  1303               	bcf	3,6	;RP1=0, select bank1
 11018     0338  00D2               	movwf	(sprintf@val+3)^(0+128)
 11019     0339  1283               	bcf	3,5	;RP0=0, select bank0
 11020     033A  1303               	bcf	3,6	;RP1=0, select bank0
 11021     033B  0836               	movf	?___llmod+2,w
 11022     033C  1683               	bsf	3,5	;RP0=1, select bank1
 11023     033D  1303               	bcf	3,6	;RP1=0, select bank1
 11024     033E  00D1               	movwf	(sprintf@val+2)^(0+128)
 11025     033F  1283               	bcf	3,5	;RP0=0, select bank0
 11026     0340  1303               	bcf	3,6	;RP1=0, select bank0
 11027     0341  0835               	movf	?___llmod+1,w
 11028     0342  1683               	bsf	3,5	;RP0=1, select bank1
 11029     0343  1303               	bcf	3,6	;RP1=0, select bank1
 11030     0344  00D0               	movwf	(sprintf@val+1)^(0+128)
 11031     0345  1283               	bcf	3,5	;RP0=0, select bank0
 11032     0346  1303               	bcf	3,6	;RP1=0, select bank0
 11033     0347  0834               	movf	?___llmod,w
 11034     0348  1683               	bsf	3,5	;RP0=1, select bank1
 11035     0349  1303               	bcf	3,6	;RP1=0, select bank1
 11036     034A  00CF               	movwf	sprintf@val^(0+128)
 11037     034B                     l4425:
 11038                           
 11039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11040     034B  3001               	movlw	1
 11041     034C  02E4               	subwf	sprintf@c^(0+128),f
 11042     034D  0A64               	incf	sprintf@c^(0+128),w
 11043     034E  1D03               	btfss	3,2
 11044     034F  2B51               	goto	u7271
 11045     0350  2B52               	goto	u7270
 11046     0351                     u7271:
 11047     0351  2A4C               	goto	l4417
 11048     0352                     u7270:
 11049     0352  2B62               	goto	l4433
 11050     0353                     l4427:
 11051                           
 11052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11053     0353  0863               	movf	sprintf@sp^(0+128),w
 11054     0354  0084               	movwf	4
 11055     0355  3030               	movlw	48
 11056     0356  1783               	bsf	3,7	;select IRP bank2
 11057     0357  0080               	movwf	0
 11058     0358                     l4429:
 11059     0358  3001               	movlw	1
 11060     0359  00C5               	movwf	??_sprintf^(0+128)
 11061     035A  0845               	movf	??_sprintf^(0+128),w
 11062     035B  07E3               	addwf	sprintf@sp^(0+128),f
 11063     035C                     l4431:
 11064                           
 11065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11066     035C  30FF               	movlw	255
 11067     035D  07D3               	addwf	sprintf@prec^(0+128),f
 11068     035E  1803               	skipnc
 11069     035F  0AD4               	incf	(sprintf@prec+1)^(0+128),f
 11070     0360  30FF               	movlw	255
 11071     0361  07D4               	addwf	(sprintf@prec+1)^(0+128),f
 11072     0362                     l4433:
 11073                           
 11074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11075     0362  0853               	movf	sprintf@prec^(0+128),w
 11076     0363  0454               	iorwf	(sprintf@prec+1)^(0+128),w
 11077     0364  1D03               	btfss	3,2
 11078     0365  2B67               	goto	u7281
 11079     0366  2B68               	goto	u7280
 11080     0367                     u7281:
 11081     0367  2B53               	goto	l4427
 11082     0368                     u7280:
 11083     0368  2CDA               	goto	l4501
 11084     0369                     l4435:
 11085                           
 11086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11087     0369  084E               	movf	sprintf@ap^(0+128),w
 11088     036A  0084               	movwf	4
 11089     036B  1383               	bcf	3,7	;select IRP bank0
 11090     036C  0800               	movf	0,w
 11091     036D  00C5               	movwf	??_sprintf^(0+128)
 11092     036E  0A84               	incf	4,f
 11093     036F  0800               	movf	0,w
 11094     0370  00C6               	movwf	(??_sprintf^(0+128)+1)
 11095     0371  0845               	movf	??_sprintf^(0+128),w
 11096     0372  00CF               	movwf	sprintf@val^(0+128)
 11097     0373  0846               	movf	(??_sprintf+1)^(0+128),w
 11098     0374  00D0               	movwf	(sprintf@val^(0+128)+1)
 11099     0375  01D1               	clrf	(sprintf@val^(0+128)+2)
 11100     0376  01D2               	clrf	(sprintf@val^(0+128)+3)
 11101     0377                     l4437:
 11102     0377  3002               	movlw	2
 11103     0378  00C5               	movwf	??_sprintf^(0+128)
 11104     0379  0845               	movf	??_sprintf^(0+128),w
 11105     037A  07CE               	addwf	sprintf@ap^(0+128),f
 11106     037B                     l4439:
 11107                           
 11108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
 11109     037B  01E4               	clrf	sprintf@c^(0+128)
 11110     037C  0AE4               	incf	sprintf@c^(0+128),f
 11111     037D                     l4445:
 11112                           
 11113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11114     037D  0864               	movf	sprintf@c^(0+128),w
 11115     037E  00C5               	movwf	??_sprintf^(0+128)
 11116     037F  3001               	movlw	1
 11117     0380                     u7295:
 11118     0380  1003               	clrc
 11119     0381  0DC5               	rlf	??_sprintf^(0+128),f
 11120     0382  3EFF               	addlw	-1
 11121     0383  1D03               	skipz
 11122     0384  2B80               	goto	u7295
 11123     0385  1003               	clrc
 11124     0386  0D45               	rlf	??_sprintf^(0+128),w
 11125     0387  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11126     0388  0084               	movwf	4
 11127     0389  160A  118A  200A  120A  118A  	fcall	stringdir
 11128     038E  00C6               	movwf	(??_sprintf+1)^(0+128)
 11129     038F  160A  118A  200A  120A  118A  	fcall	stringdir
 11130     0394  00C7               	movwf	((??_sprintf+1)^(0+128)+1)
 11131     0395  160A  118A  200A  120A  118A  	fcall	stringdir
 11132     039A  00C8               	movwf	((??_sprintf+1)^(0+128)+2)
 11133     039B  160A  118A  200A  120A  118A  	fcall	stringdir
 11134     03A0  00C9               	movwf	((??_sprintf+1)^(0+128)+3)
 11135     03A1  0849               	movf	(??_sprintf+4)^(0+128),w
 11136     03A2  0252               	subwf	(sprintf@val+3)^(0+128),w
 11137     03A3  1D03               	skipz
 11138     03A4  2BAF               	goto	u7305
 11139     03A5  0848               	movf	(??_sprintf+3)^(0+128),w
 11140     03A6  0251               	subwf	(sprintf@val+2)^(0+128),w
 11141     03A7  1D03               	skipz
 11142     03A8  2BAF               	goto	u7305
 11143     03A9  0847               	movf	(??_sprintf+2)^(0+128),w
 11144     03AA  0250               	subwf	(sprintf@val+1)^(0+128),w
 11145     03AB  1D03               	skipz
 11146     03AC  2BAF               	goto	u7305
 11147     03AD  0846               	movf	(??_sprintf+1)^(0+128),w
 11148     03AE  024F               	subwf	sprintf@val^(0+128),w
 11149     03AF                     u7305:
 11150     03AF  1803               	skipnc
 11151     03B0  2BB2               	goto	u7301
 11152     03B1  2BB3               	goto	u7300
 11153     03B2                     u7301:
 11154     03B2  2BB4               	goto	l4449
 11155     03B3                     u7300:
 11156     03B3  2BBE               	goto	l4451
 11157     03B4                     l4449:
 11158     03B4  3001               	movlw	1
 11159     03B5  00C5               	movwf	??_sprintf^(0+128)
 11160     03B6  0845               	movf	??_sprintf^(0+128),w
 11161     03B7  07E4               	addwf	sprintf@c^(0+128),f
 11162     03B8  300A               	movlw	10
 11163     03B9  0664               	xorwf	sprintf@c^(0+128),w
 11164     03BA  1D03               	btfss	3,2
 11165     03BB  2BBD               	goto	u7311
 11166     03BC  2BBE               	goto	u7310
 11167     03BD                     u7311:
 11168     03BD  2B7D               	goto	l4445
 11169     03BE                     u7310:
 11170     03BE                     l4451:
 11171                           
 11172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11173     03BE  085B               	movf	sprintf@width^(0+128),w
 11174     03BF  045C               	iorwf	(sprintf@width+1)^(0+128),w
 11175     03C0  1903               	btfsc	3,2
 11176     03C1  2BC3               	goto	u7321
 11177     03C2  2BC4               	goto	u7320
 11178     03C3                     u7321:
 11179     03C3  2BD6               	goto	l437
 11180     03C4                     u7320:
 11181     03C4                     l4453:
 11182     03C4  3003               	movlw	3
 11183     03C5  0555               	andwf	sprintf@flag^(0+128),w
 11184     03C6  00C5               	movwf	??_sprintf^(0+128)
 11185     03C7  3000               	movlw	0
 11186     03C8  0556               	andwf	(sprintf@flag+1)^(0+128),w
 11187     03C9  00C6               	movwf	(??_sprintf+1)^(0+128)
 11188     03CA  0845               	movf	??_sprintf^(0+128),w
 11189     03CB  0446               	iorwf	(??_sprintf^(0+128)+1),w
 11190     03CC  1903               	btfsc	3,2
 11191     03CD  2BCF               	goto	u7331
 11192     03CE  2BD0               	goto	u7330
 11193     03CF                     u7331:
 11194     03CF  2BD6               	goto	l437
 11195     03D0                     u7330:
 11196     03D0                     l4455:
 11197                           
 11198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11199     03D0  30FF               	movlw	255
 11200     03D1  07DB               	addwf	sprintf@width^(0+128),f
 11201     03D2  1803               	skipnc
 11202     03D3  0ADC               	incf	(sprintf@width+1)^(0+128),f
 11203     03D4  30FF               	movlw	255
 11204     03D5  07DC               	addwf	(sprintf@width+1)^(0+128),f
 11205     03D6                     l437:
 11206                           
 11207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11208     03D6  085C               	movf	(sprintf@width+1)^(0+128),w
 11209     03D7  3A80               	xorlw	128
 11210     03D8  3C80               	sublw	128
 11211     03D9  1D03               	skipz
 11212     03DA  2BDD               	goto	u7345
 11213     03DB  085B               	movf	sprintf@width^(0+128),w
 11214     03DC  0264               	subwf	sprintf@c^(0+128),w
 11215     03DD                     u7345:
 11216     03DD  1803               	skipnc
 11217     03DE  2BE0               	goto	u7341
 11218     03DF  2BE1               	goto	u7340
 11219     03E0                     u7341:
 11220     03E0  2BED               	goto	l4459
 11221     03E1                     u7340:
 11222     03E1                     l4457:
 11223                           
 11224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11225     03E1  1683               	bsf	3,5	;RP0=1, select bank1
 11226     03E2  1303               	bcf	3,6	;RP1=0, select bank1
 11227     03E3  0864               	movf	sprintf@c^(0+128),w
 11228     03E4  00C5               	movwf	??_sprintf^(0+128)
 11229     03E5  01C6               	clrf	(??_sprintf^(0+128)+1)
 11230     03E6  0845               	movf	??_sprintf^(0+128),w
 11231     03E7  02DB               	subwf	sprintf@width^(0+128),f
 11232     03E8  0846               	movf	(??_sprintf+1)^(0+128),w
 11233     03E9  1C03               	skipc
 11234     03EA  03DC               	decf	(sprintf@width+1)^(0+128),f
 11235     03EB  02DC               	subwf	(sprintf@width+1)^(0+128),f
 11236     03EC  2BF1               	goto	l4461
 11237     03ED                     l4459:
 11238                           
 11239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11240     03ED  1683               	bsf	3,5	;RP0=1, select bank1
 11241     03EE  1303               	bcf	3,6	;RP1=0, select bank1
 11242     03EF  01DB               	clrf	sprintf@width^(0+128)
 11243     03F0  01DC               	clrf	(sprintf@width+1)^(0+128)
 11244     03F1                     l4461:
 11245                           
 11246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
 11247     03F1  1D55               	btfss	sprintf@flag^(0+128),2
 11248     03F2  2BF4               	goto	u7351
 11249     03F3  2BF5               	goto	u7350
 11250     03F4                     u7351:
 11251     03F4  2C26               	goto	l4477
 11252     03F5                     u7350:
 11253     03F5                     l4463:
 11254                           
 11255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
 11256     03F5  3003               	movlw	3
 11257     03F6  0555               	andwf	sprintf@flag^(0+128),w
 11258     03F7  00C5               	movwf	??_sprintf^(0+128)
 11259     03F8  3000               	movlw	0
 11260     03F9  0556               	andwf	(sprintf@flag+1)^(0+128),w
 11261     03FA  00C6               	movwf	(??_sprintf+1)^(0+128)
 11262     03FB  0845               	movf	??_sprintf^(0+128),w
 11263     03FC  0446               	iorwf	(??_sprintf^(0+128)+1),w
 11264     03FD  1903               	btfsc	3,2
 11265     03FE  2C00               	goto	u7361
 11266     03FF  2C01               	goto	u7360
 11267     0400                     u7361:
 11268     0400  2C0A               	goto	l4469
 11269     0401                     u7360:
 11270     0401                     l4465:
 11271                           
 11272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
 11273     0401  0863               	movf	sprintf@sp^(0+128),w
 11274     0402  0084               	movwf	4
 11275     0403  302D               	movlw	45
 11276     0404  1783               	bsf	3,7	;select IRP bank2
 11277     0405  0080               	movwf	0
 11278     0406                     l4467:
 11279     0406  3001               	movlw	1
 11280     0407  00C5               	movwf	??_sprintf^(0+128)
 11281     0408  0845               	movf	??_sprintf^(0+128),w
 11282     0409  07E3               	addwf	sprintf@sp^(0+128),f
 11283     040A                     l4469:
 11284                           
 11285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
 11286     040A  085B               	movf	sprintf@width^(0+128),w
 11287     040B  045C               	iorwf	(sprintf@width+1)^(0+128),w
 11288     040C  1903               	btfsc	3,2
 11289     040D  2C0F               	goto	u7371
 11290     040E  2C10               	goto	u7370
 11291     040F                     u7371:
 11292     040F  2C56               	goto	l4491
 11293     0410                     u7370:
 11294     0410                     l4471:
 11295                           
 11296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
 11297     0410  0863               	movf	sprintf@sp^(0+128),w
 11298     0411  0084               	movwf	4
 11299     0412  3030               	movlw	48
 11300     0413  1783               	bsf	3,7	;select IRP bank2
 11301     0414  0080               	movwf	0
 11302     0415                     l4473:
 11303     0415  3001               	movlw	1
 11304     0416  00C5               	movwf	??_sprintf^(0+128)
 11305     0417  0845               	movf	??_sprintf^(0+128),w
 11306     0418  07E3               	addwf	sprintf@sp^(0+128),f
 11307     0419                     l4475:
 11308     0419  30FF               	movlw	255
 11309     041A  07DB               	addwf	sprintf@width^(0+128),f
 11310     041B  1803               	skipnc
 11311     041C  0ADC               	incf	(sprintf@width+1)^(0+128),f
 11312     041D  30FF               	movlw	255
 11313     041E  07DC               	addwf	(sprintf@width+1)^(0+128),f
 11314     041F  085B               	movf	sprintf@width^(0+128),w
 11315     0420  045C               	iorwf	(sprintf@width+1)^(0+128),w
 11316     0421  1D03               	btfss	3,2
 11317     0422  2C24               	goto	u7381
 11318     0423  2C25               	goto	u7380
 11319     0424                     u7381:
 11320     0424  2C10               	goto	l4471
 11321     0425                     u7380:
 11322     0425  2C56               	goto	l4491
 11323     0426                     l4477:
 11324                           
 11325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11326     0426  085B               	movf	sprintf@width^(0+128),w
 11327     0427  045C               	iorwf	(sprintf@width+1)^(0+128),w
 11328     0428  1903               	btfsc	3,2
 11329     0429  2C2B               	goto	u7391
 11330     042A  2C2C               	goto	u7390
 11331     042B                     u7391:
 11332     042B  2C41               	goto	l4485
 11333     042C                     u7390:
 11334     042C                     l4479:
 11335                           
 11336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11337     042C  0863               	movf	sprintf@sp^(0+128),w
 11338     042D  0084               	movwf	4
 11339     042E  3020               	movlw	32
 11340     042F  1783               	bsf	3,7	;select IRP bank2
 11341     0430  0080               	movwf	0
 11342     0431                     l4481:
 11343     0431  3001               	movlw	1
 11344     0432  00C5               	movwf	??_sprintf^(0+128)
 11345     0433  0845               	movf	??_sprintf^(0+128),w
 11346     0434  07E3               	addwf	sprintf@sp^(0+128),f
 11347     0435                     l4483:
 11348     0435  30FF               	movlw	255
 11349     0436  07DB               	addwf	sprintf@width^(0+128),f
 11350     0437  1803               	skipnc
 11351     0438  0ADC               	incf	(sprintf@width+1)^(0+128),f
 11352     0439  30FF               	movlw	255
 11353     043A  07DC               	addwf	(sprintf@width+1)^(0+128),f
 11354     043B  085B               	movf	sprintf@width^(0+128),w
 11355     043C  045C               	iorwf	(sprintf@width+1)^(0+128),w
 11356     043D  1D03               	btfss	3,2
 11357     043E  2C40               	goto	u7401
 11358     043F  2C41               	goto	u7400
 11359     0440                     u7401:
 11360     0440  2C2C               	goto	l4479
 11361     0441                     u7400:
 11362     0441                     l4485:
 11363                           
 11364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11365     0441  3003               	movlw	3
 11366     0442  0555               	andwf	sprintf@flag^(0+128),w
 11367     0443  00C5               	movwf	??_sprintf^(0+128)
 11368     0444  3000               	movlw	0
 11369     0445  0556               	andwf	(sprintf@flag+1)^(0+128),w
 11370     0446  00C6               	movwf	(??_sprintf+1)^(0+128)
 11371     0447  0845               	movf	??_sprintf^(0+128),w
 11372     0448  0446               	iorwf	(??_sprintf^(0+128)+1),w
 11373     0449  1903               	btfsc	3,2
 11374     044A  2C4C               	goto	u7411
 11375     044B  2C4D               	goto	u7410
 11376     044C                     u7411:
 11377     044C  2C56               	goto	l4491
 11378     044D                     u7410:
 11379     044D                     l4487:
 11380                           
 11381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11382     044D  0863               	movf	sprintf@sp^(0+128),w
 11383     044E  0084               	movwf	4
 11384     044F  302D               	movlw	45
 11385     0450  1783               	bsf	3,7	;select IRP bank2
 11386     0451  0080               	movwf	0
 11387     0452                     l4489:
 11388     0452  3001               	movlw	1
 11389     0453  00C5               	movwf	??_sprintf^(0+128)
 11390     0454  0845               	movf	??_sprintf^(0+128),w
 11391     0455  07E3               	addwf	sprintf@sp^(0+128),f
 11392     0456                     l4491:
 11393                           
 11394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
 11395     0456  0864               	movf	sprintf@c^(0+128),w
 11396     0457  00C5               	movwf	??_sprintf^(0+128)
 11397     0458  01C6               	clrf	(??_sprintf^(0+128)+1)
 11398     0459  0845               	movf	??_sprintf^(0+128),w
 11399     045A  00D3               	movwf	sprintf@prec^(0+128)
 11400     045B  0846               	movf	(??_sprintf+1)^(0+128),w
 11401     045C  00D4               	movwf	(sprintf@prec+1)^(0+128)
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11404     045D  2CCC               	goto	l4499
 11405     045E                     l4493:
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11408     045E  3000               	movlw	0
 11409     045F  1283               	bcf	3,5	;RP0=0, select bank0
 11410     0460  1303               	bcf	3,6	;RP1=0, select bank0
 11411     0461  00B7               	movwf	___llmod@divisor+3
 11412     0462  3000               	movlw	0
 11413     0463  00B6               	movwf	___llmod@divisor+2
 11414     0464  3000               	movlw	0
 11415     0465  00B5               	movwf	___llmod@divisor+1
 11416     0466  300A               	movlw	10
 11417     0467  00B4               	movwf	___llmod@divisor
 11418     0468  1683               	bsf	3,5	;RP0=1, select bank1
 11419     0469  1303               	bcf	3,6	;RP1=0, select bank1
 11420     046A  0853               	movf	sprintf@prec^(0+128),w
 11421     046B  00C5               	movwf	??_sprintf^(0+128)
 11422     046C  3001               	movlw	1
 11423     046D                     u7425:
 11424     046D  1003               	clrc
 11425     046E  0DC5               	rlf	??_sprintf^(0+128),f
 11426     046F  3EFF               	addlw	-1
 11427     0470  1D03               	skipz
 11428     0471  2C6D               	goto	u7425
 11429     0472  1003               	clrc
 11430     0473  0D45               	rlf	??_sprintf^(0+128),w
 11431     0474  3E78               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11432     0475  0084               	movwf	4
 11433     0476  160A  118A  200A  120A  118A  	fcall	stringdir
 11434     047B  1283               	bcf	3,5	;RP0=0, select bank0
 11435     047C  1303               	bcf	3,6	;RP1=0, select bank0
 11436     047D  00A6               	movwf	___lldiv@divisor
 11437     047E  160A  118A  200A  120A  118A  	fcall	stringdir
 11438     0483  00A7               	movwf	___lldiv@divisor+1
 11439     0484  160A  118A  200A  120A  118A  	fcall	stringdir
 11440     0489  00A8               	movwf	___lldiv@divisor+2
 11441     048A  160A  118A  200A  120A  118A  	fcall	stringdir
 11442     048F  00A9               	movwf	___lldiv@divisor+3
 11443     0490  1683               	bsf	3,5	;RP0=1, select bank1
 11444     0491  1303               	bcf	3,6	;RP1=0, select bank1
 11445     0492  0852               	movf	(sprintf@val+3)^(0+128),w
 11446     0493  1283               	bcf	3,5	;RP0=0, select bank0
 11447     0494  1303               	bcf	3,6	;RP1=0, select bank0
 11448     0495  00AD               	movwf	___lldiv@dividend+3
 11449     0496  1683               	bsf	3,5	;RP0=1, select bank1
 11450     0497  1303               	bcf	3,6	;RP1=0, select bank1
 11451     0498  0851               	movf	(sprintf@val+2)^(0+128),w
 11452     0499  1283               	bcf	3,5	;RP0=0, select bank0
 11453     049A  1303               	bcf	3,6	;RP1=0, select bank0
 11454     049B  00AC               	movwf	___lldiv@dividend+2
 11455     049C  1683               	bsf	3,5	;RP0=1, select bank1
 11456     049D  1303               	bcf	3,6	;RP1=0, select bank1
 11457     049E  0850               	movf	(sprintf@val+1)^(0+128),w
 11458     049F  1283               	bcf	3,5	;RP0=0, select bank0
 11459     04A0  1303               	bcf	3,6	;RP1=0, select bank0
 11460     04A1  00AB               	movwf	___lldiv@dividend+1
 11461     04A2  1683               	bsf	3,5	;RP0=1, select bank1
 11462     04A3  1303               	bcf	3,6	;RP1=0, select bank1
 11463     04A4  084F               	movf	sprintf@val^(0+128),w
 11464     04A5  1283               	bcf	3,5	;RP0=0, select bank0
 11465     04A6  1303               	bcf	3,6	;RP1=0, select bank0
 11466     04A7  00AA               	movwf	___lldiv@dividend
 11467     04A8  160A  158A  239E  120A  118A  	fcall	___lldiv
 11468     04AD  1283               	bcf	3,5	;RP0=0, select bank0
 11469     04AE  1303               	bcf	3,6	;RP1=0, select bank0
 11470     04AF  0829               	movf	?___lldiv+3,w
 11471     04B0  00BB               	movwf	___llmod@dividend+3
 11472     04B1  0828               	movf	?___lldiv+2,w
 11473     04B2  00BA               	movwf	___llmod@dividend+2
 11474     04B3  0827               	movf	?___lldiv+1,w
 11475     04B4  00B9               	movwf	___llmod@dividend+1
 11476     04B5  0826               	movf	?___lldiv,w
 11477     04B6  00B8               	movwf	___llmod@dividend
 11478     04B7  160A  158A  2286  120A  118A  	fcall	___llmod
 11479     04BC  1283               	bcf	3,5	;RP0=0, select bank0
 11480     04BD  1303               	bcf	3,6	;RP1=0, select bank0
 11481     04BE  0834               	movf	?___llmod,w
 11482     04BF  3E30               	addlw	48
 11483     04C0  1683               	bsf	3,5	;RP0=1, select bank1
 11484     04C1  1303               	bcf	3,6	;RP1=0, select bank1
 11485     04C2  00E4               	movwf	sprintf@c^(0+128)
 11486     04C3                     l4495:
 11487                           
 11488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11489     04C3  0863               	movf	sprintf@sp^(0+128),w
 11490     04C4  0084               	movwf	4
 11491     04C5  0864               	movf	sprintf@c^(0+128),w
 11492     04C6  1783               	bsf	3,7	;select IRP bank2
 11493     04C7  0080               	movwf	0
 11494     04C8                     l4497:
 11495     04C8  3001               	movlw	1
 11496     04C9  00C5               	movwf	??_sprintf^(0+128)
 11497     04CA  0845               	movf	??_sprintf^(0+128),w
 11498     04CB  07E3               	addwf	sprintf@sp^(0+128),f
 11499     04CC                     l4499:
 11500                           
 11501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11502     04CC  30FF               	movlw	255
 11503     04CD  07D3               	addwf	sprintf@prec^(0+128),f
 11504     04CE  1803               	skipnc
 11505     04CF  0AD4               	incf	(sprintf@prec+1)^(0+128),f
 11506     04D0  30FF               	movlw	255
 11507     04D1  07D4               	addwf	(sprintf@prec+1)^(0+128),f
 11508     04D2  0A53               	incf	sprintf@prec^(0+128),w
 11509     04D3  1D03               	skipz
 11510     04D4  2CD9               	goto	u7431
 11511     04D5  0A54               	incf	(sprintf@prec+1)^(0+128),w
 11512     04D6  1D03               	btfss	3,2
 11513     04D7  2CD9               	goto	u7431
 11514     04D8  2CDA               	goto	u7430
 11515     04D9                     u7431:
 11516     04D9  2C5E               	goto	l4493
 11517     04DA                     u7430:
 11518     04DA                     l4501:
 11519                           
 11520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11521     04DA  3001               	movlw	1
 11522     04DB  07C0               	addwf	sprintf@f^(0+128),f
 11523     04DC  30FF               	movlw	-1
 11524     04DD  0740               	addwf	sprintf@f^(0+128),w
 11525     04DE  0084               	movwf	4
 11526     04DF  160A  118A  200A  120A  118A  	fcall	stringdir
 11527     04E4  00E4               	movwf	sprintf@c^(0+128)
 11528     04E5  0864               	movf	sprintf@c^(0+128),w
 11529     04E6  1D03               	btfss	3,2
 11530     04E7  2CE9               	goto	u7441
 11531     04E8  2CEC               	goto	u7440
 11532     04E9                     u7441:
 11533     04E9  120A  158A  2846   	goto	l4231
 11534     04EC                     u7440:
 11535     04EC                     l4503:
 11536                           
 11537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11538     04EC  0863               	movf	sprintf@sp^(0+128),w
 11539     04ED  0084               	movwf	4
 11540     04EE  1783               	bsf	3,7	;select IRP bank2
 11541     04EF  0180               	clrf	0
 11542     04F0                     l454:
 11543     04F0  0008               	return
 11544     04F1                     __end_of_sprintf:

Data Sizes:
    Strings     16
    Constant    159
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      74
    BANK1            80     70      72
    BANK3            96     20      26
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[7]), STR_2(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@s(BANK3[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 9
		 -> main@s(BANK3[9]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_fround
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fladd->_fround
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    ___fltol->_scale
    _UART_Print->_UART_PutC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___xxtofl
    _map->___xxtofl
    ___xxtofl->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   41659
                                             69 BANK1      1     1      0
                                              0 BANK3     20    20      0
                    _UART_Data_Ready
                          _UART_GetC
                         _UART_Print
                          _UART_PutC
                            ___fltol
                           ___xxtofl
                                _map
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36111
                                             32 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7508
                                             48 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1464
                                             13 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             48 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                             22 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              6 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              6 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              6 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                             20 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     922
                                              6 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             24 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                              0 BANK1     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              6 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              6 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              6 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    3406
                                             24 BANK1     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     600
                                             10 BANK1     14    10      4
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                             12 BANK0      8     4      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     787
                                              0 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Print                                           4     2      2     340
                                              7 BANK0      4     2      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (1) _UART_PutC                                            1     1      0      22
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0     700
                                              0 BANK0      6     6      0
                          i1___awdiv
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (6) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Print
     _UART_PutC
   _UART_PutC
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   ___xxtofl
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___wmul (ARG)
   _map
     ___fltol
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)
   i1___awdiv
   i1___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     46      48       7       90.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     14      1A       9       27.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BA      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 25 15:55:49 2023

                      _i 01A8                        pc 0002             ___awdiv@sign 0033  
                     fsr 0004      ___wmul@multiplicand 0028      __Umul8_16@word_mpld 002C  
             i1___xxtofl 1DD6                      l231 18DA                      l241 18F9  
                    l234 18E8                      l250 19B8                      l236 18EE  
                    l244 1903                      l238 18F5                      l352 14BA  
                    l194 19EF                      l426 01BC                      l611 1C6E  
                    l419 017C                      l460 1962                      l372 085B  
                    l197 1DD5                      l437 03D6                      l454 04F0  
                    l382 08D2                      l359 0FFF                      l632 1F08  
                    l624 1B36                      l458 194A                      l810 06BC  
                    l714 1ADB                      l644 1A54                      l652 1149  
                    l628 1F45                      l900 1979                      l661 1D51  
                    l645 1A70                      l653 1162                      l629 1EAC  
                    l646 1A85                      l806 0698                      l494 1C05  
                    l902 198B                      l671 1D51                      l831 193B  
                    l639 1F38                      l816 06DE                      l649 10DD  
                    l657 18E7                      l931 1FAD                      l827 073E  
                    l819 071C                      l675 07FF                      l668 1D3C  
                    l764 1A35                      l828 0748                      l676 0773  
                    l925 1F6A                      l686 07F2                      l774 083D  
                    l927 1FFF                      l791 05A8                      l679 07C2  
                    l785 054C                      l881 17FF                      l945 1917  
                    l938 1FC9                      l939 1FD5                      l789 05CF  
                    l893 17F3                      l798 0748                      l887 176F  
                    _RD3 0043                      _RD4 0044                      _RC6 003E  
                    _RD5 0045                      _RC7 003F                      _RD6 0046  
                    _RD7 0047                      _map 1D52                      _isr 1C6F  
                    _val 00E6                      fsr0 0004                      indf 0000  
           ___awmod@sign 002C             ___flmul@aexp 0048             ___flmul@bexp 0049  
           ___flmul@sign 0043             ___flmul@temp 004E             ___flmul@prod 004A  
           ___fltol@exp1 00A9                     l3001 16CD                     l3011 173B  
                   l3003 16F3                     l3021 1753                     l3013 173F  
                   l3005 171B                     l3031 1774                     l3023 1754  
                   l3015 1740                     l3007 1724                     l3103 0E26  
                   l4001 0509                     l3201 1EAD                     l3033 1779  
                   l3041 17AA                     l3025 1758                     l3017 1749  
                   l3009 1732                     l3121 0FD3                     l4011 051F  
                   l4003 0511                     l3211 1ED8                     l3203 1EB5  
                   l3051 17DD                     l3043 17B7                     l3035 1787  
                   l3027 176C                     l3019 174F                     l3131 1914  
                   l3115 0F44                     l3107 0E53                     l3301 1121  
                   l4101 0607                     l4021 052F                     l4013 0525  
                   l4005 0512                     l3221 1F0C                     l3213 1EEA  
                   l3205 1EC6                     l3053 17E9                     l3045 17C2  
                   l3037 178B                     l3133 1916                     l3125 1907  
                   l3117 0F4B                     l3109 0E5A                     l3063 18F9  
                   l3303 1125                     l3311 18DB                     l4103 0609  
                   l4111 061C                     l4023 0534                     l4031 0544  
                   l4015 0526                     l4007 0514                     l3215 1EF8  
                   l3207 1EC8                     l3151 077A                     l3143 0763  
                   l3055 17ED                     l3047 17D1                     l3039 17A4  
                   l3127 1908                     l3065 18FF                     l3241 193C  
                   l3401 1F96                     l3305 115F                     l3313 18E5  
                   l4113 0632                     l4121 068A                     l4105 060D  
                   l4041 055E                     l4033 0552                     l4025 0539  
                   l4017 052A                     l4009 051C                     l3217 1EF9  
                   l3209 1ECF                     l3161 07A9                     l3153 0789  
                   l3137 0749                     l3057 17EE                     l3049 17DB  
                   l3081 1477                     l3129 190E                     l2601 1C09  
                   l3251 195E                     l3243 1940                     l3411 1FCD  
                   l3403 1FA4                     l3307 1161                     l3315 18E7  
                   l4131 06B7                     l4123 06A0                     l4115 0670  
                   l4107 060E                     l4051 0568                     l4043 0560  
                   l4035 0556                     l4027 0541                     l4019 052E  
                   l3235 1F2D                     l3227 1F14                     l3219 1F02  
                   l3163 07B3                     l3155 078B                     l3139 075A  
                   l3059 17F7                     l3075 13C6                     l3067 12B1  
                   l2611 1C1D                     l2603 1C0D                     l3091 0CAD  
                   l4213 1D31                     l4205 1D18                     l2701 1A2B  
                   l3245 1944                     l3421 1FF7                     l3413 1FD7  
                   l3405 1FB4                     l4141 06CA                     l4133 06BB  
                   l4125 06A5                     l4117 0676                     l4109 0617  
                   l4061 0572                     l4053 056A                     l4045 0562  
                   l4037 055A                     l4029 0542                     l4221 191C  
                   l3261 1BC0                     l3237 1F3D                     l3229 1F26  
                   l3165 07B4                     l3157 0792                     l3149 0774  
                   l3077 13CC                     l3069 12B7                     l2621 1C33  
                   l2613 1C21                     l2605 1C12                     l3085 0CA0  
                   l4301 0AA9                     l4215 1D41                     l4207 1D2A  
                   l2703 1A31                     l3247 1951                     l3415 1FED  
                   l3407 1FBF                     l3431 19C2                     l4151 06DB  
                   l4135 06C0                     l4143 06CC                     l4119 067B  
                   l4071 0590                     l4063 0574                     l4055 056C  
                   l4047 0564                     l4039 055C                     l3271 1BEE  
                   l3263 1BC4                     l3255 1B9E                     l3191 1E99  
                   l3183 07E7                     l3175 07CE                     l3167 07BC  
                   l3159 079B                     l2711 080D                     l2631 1C53  
                   l2623 1C37                     l2615 1C23                     l2607 1C14  
                   l3087 0CA4                     l4311 0B1C                     l4303 0AD2  
                   l4231 0846                     l4217 1D46                     l3249 1958  
                   l3417 1FF2                     l3409 1FC3                     l4225 1D52  
                   l3441 19CD                     l3433 19C4                     l3425 19B9  
                   l3281 1A4C                     l4161 06FA                     l4137 06C3  
                   l4129 06AE                     l4145 06D0                     l4081 05BA  
                   l4073 05AC                     l4065 0576                     l4057 056E  
                   l4049 0566                     l3273 1BF7                     l3265 1BCD  
                   l3257 1BB0                     l3361 1AA0                     l3185 07F7  
                   l3169 07C6                     l3177 07E0                     l2721 082C  
                   l2713 0814                     l2633 1C5A                     l2625 1C3B  
                   l2617 1C29                     l2609 1C18                     l3097 0D97  
                   l3089 0CA6                     l4401 01A4                     l4321 0B9D  
                   l4313 0B45                     l4305 0ADA                     l4233 084C  
                   l3419 1FF6                     l3451 19D5                     l3443 19D1  
                   l3435 19C5                     l3427 19BD                     l3283 1A68  
                   l3291 10BF                     l4171 0733                     l4163 0718  
                   l4155 06E3                     l4147 06D1                     l4139 06C5  
                   l4083 05C3                     l4075 05B3                     l4059 0570  
                   l4067 0578                     l4219 1918                     l3267 1BDF  
                   l3259 1BB3                     l3275 1BFD                     l3363 1AA4  
                   l3371 1AD3                     l3355 1A86                     l3195 1EA2  
                   l2723 0833                     l2715 0818                     l2707 0802  
                   l2627 1C4C                     l2619 1C2C                     l2635 1C60  
                   l2651 1AEA                     l2643 1ADC                     l3099 0D9E  
                   l4411 01CF                     l4403 01B3                     l4323 0BA5  
                   l4315 0B5E                     l4331 0C17                     l4307 0ADA  
                   l4251 08AA                     l4243 0860                     l4235 0851  
                   l3381 1F49                     l3461 19E8                     l3453 19DB  
                   l3445 19D2                     l3437 19C6                     l3429 19BE  
                   l3285 1A82                     l3293 10D5                     l4181 0747  
                   l4173 0734                     l4165 0721                     l4157 06E8  
                   l4149 06D5                     l4093 05E1                     l4077 05B5  
                   l4085 05C7                     l4069 0579                     l3269 1BED  
                   l3365 1AB6                     l3357 1A90                     l3189 1E8E  
                   l2717 081C                     l2709 080A                     l2725 0839  
                   l2637 1C65                     l2629 1C52                     l2661 1B03  
                   l2653 1AEE                     l2645 1ADF                     l4421 02E6  
                   l4413 01D3                     l4405 01B8                     l4333 0C30  
                   l4325 0BC3                     l4317 0B6B                     l4309 0B0F  
                   l4253 08BD                     l4261 08D9                     l4245 0873  
                   l4237 0856                     l4501 04DA                     l4229 0841  
                   l3471 198C                     l4191 1D01                     l4183 1CDA  
                   l3383 1F4E                     l3463 19EB                     l3455 19DD  
                   l3447 19D3                     l3439 19C7                     l3287 1A84  
                   l3279 1A36                     l3295 10F1                     l4175 0738  
                   l4167 0726                     l4159 06F6                     l4095 05F8  
                   l4087 05D3                     l4079 05B9                     l3367 1AC4  
                   l3359 1A93                     l2591 1973                     l2719 0826  
                   l2639 1C6A                     l2671 1B22                     l2663 1B07  
                   l2655 1AF3                     l2647 1AE3                     l4431 035C  
                   l4423 02F0                     l4415 01F1                     l4407 01C5  
                   l4351 0051                     l4343 0C63                     l4335 0C5F  
                   l4319 0B94                     l4271 091C                     l4503 04EC  
                   l4263 08F8                     l4255 08C1                     l4247 0883  
                   l4239 085C                     l3473 1990                     l4193 1D02  
                   l4185 1CE5                     l2681 19F0                     l3393 1F7B  
                   l3385 1F52                     l3465 19EC                     l3457 19DE  
                   l3449 19D4                     l3297 10F9                     l4177 073A  
                   l4169 072E                     l4097 05FC                     l4089 05D8  
                   l3369 1ACD                     l2593 1982                     l2585 1966  
                   l2665 1B0B                     l2657 1AF9                     l2673 1B28  
                   l2649 1AE8                     l4433 0362                     l4417 024C  
                   l4425 034B                     l4409 01CA                     l4361 0079  
                   l4353 0057                     l4337 0C61                     l4329 0C0E  
                   l4281 09AE                     l4273 094A                     l4265 0906  
                   l4601 08ED                     l4257 08D4                     l4249 0887  
                   l4521 116F                     l3475 19A1                     l4195 1D0A  
                   l2691 1A08                     l2683 19F4                     l3395 1F7E  
                   l3387 1F62                     l3467 19ED                     l3459 19E5  
                   l3299 10FD                     l4179 0743                     l4099 0600  
                   l2595 1987                     l2587 1968                     l2931 14C9  
                   l2923 14BB                     l2675 1B2D                     l2667 1B15  
                   l2659 1AFC                     l4451 03BE                     l4427 0353  
                   l4419 02A7                     l4363 007E                     l4371 0094  
                   l4355 0063                     l4347 002A                     l4291 0A09  
                   l4283 09B9                     l4275 097F                     l4267 090A  
                   l4435 0369                     l4531 118C                     l4523 1175  
                   l4515 1163                     l3477 19A7                     l4197 1D0C  
                   l4189 1CEE                     l2693 1A0C                     l2685 19FA  
                   l3397 1F8B                     l3389 1F72                     l3469 19EE  
                   l2589 196F                     l2941 14E5                     l2933 14CE  
                   l2925 14C0                     l2677 1B32                     l2669 1B1B  
                   l4461 03F1                     l4453 03C4                     l4445 037D  
                   l4437 0377                     l4429 0358                     l4381 00C0  
                   l4373 00A2                     l4365 0083                     l4357 0069  
                   l4349 0036                     l4293 0A0F                     l4285 09BF  
                   l4277 0983                     l4269 0918                     l4541 11D6  
                   l4533 118D                     l4517 1168                     ?_map 00B8  
                   l4199 1D10                     l2695 1A1D                     l2687 19FD  
                   l3399 1F92                     l2951 14F8                     l2943 14EA  
                   l2935 14D3                     l2927 14C4                     l2599 1C06  
                   l4471 0410                     l4463 03F5                     l4455 03D0  
                   l4439 037B                     l4391 0172                     l4383 00CE  
                   l4375 00A9                     l4367 008A                     l4359 006D  
                   l4295 0A2E                     l4287 09E2                     l4279 0987  
                   l4551 1288                     l4543 1205                     l4535 1195  
                   l4519 116B                     l2697 1A23                     l2689 1A04  
                   l2961 1514                     l2953 14FD                     l2945 14EE  
                   l2937 14DB                     l2929 14C8                     l4481 0431  
                   l4473 0415                     l4465 0401                     l4457 03E1  
                   l4449 03B4                     l4393 0186                     l4385 00D3  
                   l4377 00AD                     l4369 008E                     l4297 0A79  
                   l4289 0A05                     l4553 1293                     l4545 1239  
                   l4529 1179                     l4537 11A2                     l3771 18D7  
                   l2699 1A24                     l2971 153D                     l2963 1519  
                   l2955 1505                     l2947 14F2                     l2939 14DD  
                   l4483 0435                     l4475 0419                     l4491 0456  
                   l4467 0406                     l4459 03ED                     l4395 018D  
                   l4387 00D8                     l4379 00B3                     l4299 0AA0  
                   l4555 129C                     l4547 125B                     l4539 11AD  
                   l3773 18D9                     l3781 18F4                     l2981 15D6  
                   l2973 1558                     l2957 1507                     l2949 14F3  
                   l4493 045E                     l4485 0441                     l4469 040A  
                   l4477 0426                     l4397 0191                     l4389 0133  
                   l4557 12A4                     l4549 1266                     l2991 1635  
                   l2983 15DF                     l2975 1574                     l2967 1522  
                   l2959 150F                     l4495 04C3                     l4487 044D  
                   l4479 042C                     l4399 0197                     l3769 18D1  
                   l3777 18E8                     l2993 164C                     l2985 15ED  
                   l2977 159E                     l2969 1530                     l4497 04C8  
                   l4489 0452                     l3779 18F2                     l2995 1669  
                   l2987 160A                     l2979 15BA                     l4499 04CC  
                   l2997 1694                     l2989 1618                     l3991 04F6  
                   l2999 16A2                     l4599 086E                     l3993 04FA  
                   l3995 04FE                     ?_isr 0070                     l3997 04FF  
                   l3989 04F1                     l3999 0504                     STR_1 10BC  
                   STR_2 10AF                     STR_3 10B8                     _CREN 00C4  
                   u4100 14D3                     u3300 1C0D                     u4101 14D2  
                   u3301 1C0C                     u4110 14F2                     u3310 1C18  
                   u4111 14F1                     u3311 1C17                     u4120 14F8  
                   u3320 1C29                     u3400 1AE3                     u4121 14F7  
                   u3321 1C28                     u3401 1AE2                     u4130 14FD  
                   u3410 1AEE                     u4211 15FC                     u4131 14FC  
                   u3411 1AED                     u5020 195E                     u5100 1A4C  
                   u4212 1603                     u4140 1514                     u3340 1C3B  
                   u3420 1AF9                     u5021 195D                     u5005 194B  
                   u5101 1A4B                     u4301 170D                     u4221 1627  
                   u4213 160A                     u4205 15D8                     u4141 1513  
                   u3341 1C3A                     u3421 1AF8                     u3510 1A0C  
                   u5110 1A68                     u5030 1BB0                     u3270 1973  
                   u4302 1714                     u4222 162E                     u4150 1519  
                   u3511 1A0B                     u5015 1952                     u5111 1A67  
                   u5031 1BAF                     u3271 1972                     u4303 171B  
                   u4223 1635                     u4151 1518                     u3335 1C2D  
                   u5120 1A82                     u5200 18E5                     u4400 178B  
                   u4080 14C8                     u3360 1C4C                     u3440 1B0B  
                   u3505 19FE                     u5121 1A81                     u5201 18E4  
                   u4401 178A                     u4241 165B                     u4161 1566  
                   u4081 14C7                     u3361 1C4B                     u3441 1B0A  
                   u6010 18D7                     u3530 1A1D                     u5130 10D5  
                   u5050 1BC4                     u3290 1987                     u4410 179A  
                   u4330 173F                     u4242 1662                     u4162 156D  
                   u4090 14CE                     u3610 0839                     u3450 1B15  
                   u6011 18D6                     u3531 1A1C                     u5131 10D4  
                   u5051 1BC3                     u3291 1986                     u4331 173E  
                   u4315 171D                     u4251 1686                     u4243 1669  
                   u4235 1637                     u4171 1582                     u4163 1574  
                   u4091 14CD                     u3611 0838                     u3355 1C3C  
                   u3451 1B14                     u3435 1AFD                     u6020 18EE  
                   u5140 10F1                     u4420 17B7                     u4252 168D  
                   u4172 1589                     u4500 13CC                     u3380 1C60  
                   u6021 18ED                     u3525 1A0D                     u5125 1A7E  
                   u5141 10F0                     u5045 1BB5                     u3285 197A  
                   u4421 17B6                     u4325 1734                     u4261 16B1  
                   u4253 1694                     u4181 15AC                     u4173 1590  
                   u3605 082D                     u4501 13CB                     u3381 1C5F  
                   u3365 1C48                     u6030 18F2                     u3550 1A31  
                   u5150 10FD                     u5070 1BDF                     u5310 1A90  
                   u4430 17D1                     u4350 1753                     u4270 16D9  
                   u4262 16B8                     u4182 15B3                     u3390 1C65  
                   u3470 1B28                     u6031 18F1                     u3551 1A30  
                   u3535 1A19                     u5151 10FC                     u5071 1BDE  
                   u5311 1A8F                     u4431 17D0                     u4415 1795  
                   u4351 1752                     u4263 16BF                     u4191 15C8  
                   u4183 15BA                     u3391 1C64                     u3375 1C54  
                   u3471 1B27                     u3455 1B11                     u4440 17ED  
                   u4360 1758                     u4192 15CF                     u3560 080A  
                   u3480 1B2D                     u7000 094A                     u3545 1A25  
                   u5161 110C                     u5065 1BC6                     u4441 17EC  
                   u4425 17B3                     u4361 1757                     u4345 1742  
                   u4281 16E5                     u4193 15D6                     u3561 0809  
                   u3481 1B2C                     u3465 1B1C                     u7001 0944  
                   u4450 18FF                     u3490 19FA                     u5410 1F91  
                   u5170 1125                     u5162 110D                     u5090 1BFD  
                   u5330 1AA4                     u4370 176C                     u4290 1701  
                   u4282 16EC                     u7010 09AE                     u4451 18FE  
                   u3491 19F9                     u5411 1F90                     u5171 1124  
                   u5163 1112                     u5091 1BFC                     u5075 1BDB  
                   u5331 1AA3                     u4435 17CD                     u4371 176B  
                   u4283 16F3                     u4275 16D4                     u4515 13E9  
                   u7011 09AD                     u5500 1FF6                     u5164 1113  
                   u5340 1AB6                     u4380 1773                     u3580 081C  
                   u4460 12B7                     u4540 0CA4                     u7020 0A09  
                   u5501 1FF5                     u5405 1F83                     u5181 1134  
                   u5165 1118                     u5085 1BEF                     u5341 1AB5  
                   u5325 1A95                     u4381 1772                     u3581 081B  
                   u4525 1436                     u4461 12B6                     u4605 0DB1  
                   u4541 0CA3                     u7021 0A08                     u5510 19B8  
                   u5430 1FB3                     u5190 115F                     u5182 1135  
                   u5166 1119                     u4390 1779                     u3590 0826  
                   u4710 190E                     u4630 0E5A                     u4550 0CAD  
                   u7110 0029                     u7030 0AA0                     u5511 19B7  
                   u5431 1FB2                     u5191 115E                     u5183 113A  
                   u4391 1778                     u4295 16FC                     u3591 0825  
                   u3575 080E                     u4535 1482                     u4711 190D  
                   u4631 0E59                     u4615 0DED                     u4551 0CAC  
                   u7111 0C9A                     u7031 0A9F                     u5184 113B  
                   u6400 04FE                     u5360 1AD3                     u4800 07CD  
                   u4720 1914                     u7120 0036                     u7040 0AD2  
                   u5425 1FA5                     u5185 1140                     u6401 04FD  
                   u5361 1AD2                     u5345 1AB2                     u4801 07CC  
                   u4721 1913                     u4705 0FD6                     u4625 0E29  
                   u7121 0033                     u7105 0C66                     u7041 0AD1  
                   u5450 1FC3                     u5370 1F4E                     u5186 1141  
                   u6410 0504                     u4730 075A                     u7210 0185  
                   u7130 0051                     u7050 0B1C                     u5451 1FC2  
                   u5371 1F4D                     u5195 115B                     u6411 0503  
                   u5355 1AC5                     u4731 0759                     u3595 0822  
                   u4475 12D4                     u7211 0184                     u7131 0050  
                   u7115 0C95                     u7051 0B1B                     u5460 1FC9  
                   u5380 1F52                     u6500 059B                     u6420 0509  
                   u4820 07DF                     u4740 0772                     u7300 03B3  
                   u7220 01A4                     u7140 0063                     u7060 0B45  
                   _RCIF 0065                     u5461 1FC8                     u5445 1FB8  
                   u5381 1F51                     u6501 0599                     u6421 0508  
                   u4821 07DE                     u4741 0771                     u4485 1330  
                   u4645 0E7C                     u4565 0CCF                     u7301 03B2  
                   u7221 01A3                     u7205 00DB                     u7141 0062  
                   u7061 0B44                     u5470 1FCD                     u5390 1F72  
                   u6510 059C                     u6430 0525                     u4910 1F08  
                   u4830 07E6                     u4670 0F4B                     u4590 0D9E  
                   u7310 03BE                     u7230 01B3                     u7150 006D  
                   u7070 0B5E                     u5471 1FCC                     u5391 1F71  
                   u6431 0524                     u4911 1F07                     u4831 07E5  
                   u4815 07CF                     u4495 1385                     u4671 0F4A  
                   u4655 0EB8                     u4591 0D9D                     u4575 0D0B  
                   u7311 03BD                     u7231 01B2                     u7151 006C  
                   u7071 0B5D                     u7055 0B18                     u5480 1FE2  
                   u6600 0600                     u6520 05AC                     u6440 052E  
                   u4920 1F0C                     u4760 07A9                     u7400 0441  
                   u7320 03C4                     u7240 01CA                     u7160 0079  
                   u7080 0B6B                     u6601 05FF                     u6521 05AB  
                   u6441 052D                     u4921 1F0B                     u4905 1EFB  
                   u4761 07A8                     u4665 0F03                     u4585 0D56  
                   u7401 0440                     u7321 03C3                     u7305 03AF  
                   u7241 01C9                     u7225 01A0                     u7161 0078  
                   u7081 0B6A                     u5490 1FF2                     u6610 060D  
                   u6530 05B9                     u6450 0534                     u4930 1F13  
                   u4850 07F7                     u7410 044D                     u7330 03D0  
                   u7170 00A1                     u7090 0B94                     u5491 1FF1  
                   u6611 060C                     u6531 05B8                     u6451 0533  
                   u4931 1F12                     u4851 07F6                     u4755 0794  
                   u7411 044C                     u7331 03CF                     u7235 01AF  
                   u7171 00A0                     u7091 0B93                     u6700 06BB  
                   u6460 0539                     u4860 1E99                     u4780 07C2  
                   u7340 03E1                     u7180 00C0                     u5485 1FDD  
                   u6701 06BA                     u6461 0538                     u4861 1E98  
                   u4845 07E9                     u4781 07C1                     u4765 07A5  
                   u4685 0F5E                     u7341 03E0                     u7181 00BF  
                   u7085 0B67                     u6710 06C0                     u6630 0632  
                   u6550 05CF                     u6470 0552                     u4950 1F25  
                   u4870 1EAB                     u4790 07C6                     u7430 04DA  
                   u7350 03F5                     u7270 0352                     u7190 00CE  
                   u6711 06BF                     u6631 0631                     u6551 05CE  
                   u6471 0551                     u4951 1F24                     u4871 1EAA  
                   u4791 07C5                     u4775 07B5                     u4695 0F9A  
                   u7431 04D9                     u7351 03F4                     u7271 0351  
                   u7255 024F                     u7191 00CD                     u7175 009D  
                   u6800 0718                     u6720 06CA                     u6560 05D3  
                   u6480 0556                     u4960 1F2C                     u7440 04EC  
                   u7360 0401                     u7280 0368                     u6801 0717  
                   u6721 06C9                     u6641 0649                     u6633 062E  
                   u6625 0610                     u6561 05D2                     u6545 05BC  
                   u6481 0555                     u4961 1F2B                     u4945 1F15  
                   u7441 04E9                     u7425 046D                     u7361 0400  
                   u7345 03DD                     u7281 0367                     u7265 02F3  
                   u7185 00BC                     u6810 0721                     u6730 06D0  
                   u6650 065D                     u6642 064A                     u6570 05D8  
                   u6490 0590                     u4890 1EEA                     u7370 0410  
                   u7450 1175                     _OERR 00C1                     u6811 0720  
                   u6731 06CF                     u6651 065E                     u6643 064F  
                   u6571 05D7                     u6491 058F                     u4891 1EE9  
                   u7371 040F                     u7451 1174                     u6820 0726  
                   u6740 06D5                     u6660 067B                     u6652 0663  
                   u6644 0650                     u4980 1F3D                     u7380 0425  
                   u7460 11A2                     u6821 0725                     u6741 06D4  
                   u6661 067A                     u6653 0664                     u6645 0655  
                   u6581 05EA                     u4981 1F3C                     u4885 1ED1  
                   u7381 0424                     u7461 11A1                     u6910 1D29  
                   u4990 1944                     u6830 0733                     u6750 06DB  
                   u6670 06A0                     u6646 0656                     u6590 05FC  
                   u6582 05F1                     u7390 042C                     u7470 129C  
                   u6911 1D28                     u4991 1943                     u6831 0732  
                   u6751 06DA                     u6671 069F                     u6591 05FB  
                   u6583 05F8                     u6495 058C                     u4975 1F2F  
                   u4895 1EE6                     u7391 042B                     u7295 0380  
                   u7471 129B                     u6920 1D30                     u6840 0738  
                   u6760 06E2                     u6680 06A5                     u6921 1D2F  
                   u6905 1D19                     u6841 0737                     u6761 06E1  
                   u6681 06A4                     u7465 119E                     u6850 0747  
                   u6770 06E8                     u6851 0746                     u6771 06E7  
                   u6940 1D41                     u6860 1CE5                     u6780 06FA  
                   u6941 1D40                     u6861 1CE4                     u6781 06F9  
                   u6950 1D46                     u6870 1CFC                     u6790 0709  
                   u6951 1D45                     u6935 1D33                     u7487 19E2  
                   u6695 06B0                     u6880 1D10                     u6960 084C  
                   u6881 1D0F                     u6961 084B                     u6890 1D17  
                   u6970 0883                     u6891 1D16                     u6875 1CF7  
                   u6795 0704                     u6971 0882                     u6980 08D1  
                   u6981 08D0                     u6990 0906                     u6991 0903  
                   _TRMT 04C1                     _WPUB 0095                     _main 1163  
                   btemp 007E                     start 000E             _sprintf$1205 00CA  
                  ??_map 00C2                    ??_isr 0020            ___fltol@sign1 00A8  
        __end_of___fladd 0749                    ?_main 0070           i1___awdiv@sign 0076  
        __end_of___awdiv 1C6F          __end_of___flneg 18E8          __end_of___awmod 1B37  
        __end_of___flmul 1800          __end_of___flsub 193C          __end_of___fltol 1D52  
                  _CMCON 0068                    _ANSEL 0188          __end_of___lldiv 1C06  
        ___awdiv@divisor 002D          __end_of___llmod 1ADC          __end_of___lwdiv 1A36  
                  i1l173 1CD3          __end_of___lwmod 083E                    i1l611 1B9D  
                  i1l931 1E3B                    i1l925 1DF8                    i1l927 1E8D  
                  i1l938 1E57                    i1l939 1E63          ___awdiv@counter 0032  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
                  _TXREG 0019                    _TXSTA 0098              ?_UART_Print 0027  
        __end_of_dpowers 10AF                    _scale 0C9D          __end_of_isdigit 1918  
        __end_of_message 1087                    _setup 19B9                    main@c 019F  
                  main@s 0196                    pclath 000A             main@varvolt2 01A0  
                  status 0003                    wtemp0 007E          __end_of_sprintf 04F1  
        __initialization 0011             __end_of_main 12AE                   ??_main 00E5  
            ?i1___xxtofl 0070         ___llmod@dividend 0038                   ?_scale 0050  
                 _ADRESH 001E         ___awdiv@dividend 002F                   ?_setup 0070  
                 _ANSELH 0189                   i1l3801 1B52                   i1l3811 1B6A  
                 i1l3803 1B58                   i1l3813 1B7B                   i1l3805 1B5B  
                 i1l3821 1B8F                   i1l3823 1B94                   i1l3815 1B81  
                 i1l3807 1B62                   i1l3831 1DDC                   i1l3825 1B99  
                 i1l3817 1B82                   i1l3809 1B66                   i1l3841 1E09  
                 i1l3833 1DE0                   i1l3819 1B89                   i1l3851 1E32  
                 i1l3843 1E0C                   i1l3835 1DF0                   i1l3861 1E65  
                 i1l3853 1E42                   i1l3845 1E19                   i1l3837 1E00  
                 i1l3829 1DD7                   i1l3791 1B41                   i1l3863 1E7B  
                 i1l3855 1E4D                   i1l3847 1E20                   i1l3793 1B43  
                 i1l3785 1B37                   i1l3865 1E80                   i1l3857 1E51  
                 i1l3849 1E24                   i1l3881 1C9C                   i1l3873 1C6F  
                 i1l3795 1B47                   i1l3787 1B38                   i1l3867 1E84  
                 i1l3859 1E5B                   i1l3883 1CBA                   i1l3875 1C73  
                 i1l3797 1B4C                   i1l3789 1B3C                   i1l3869 1E85  
                 i1l3885 1CC3                   i1l3877 1C7C                   i1l3799 1B50  
                 i1l3887 1CD0                   i1l3879 1C93                   u610_20 1B7B  
                 u610_21 1B7A                   u610_25 1B77                   u611_25 1B83  
                 u612_20 1B8F                   u604_20 1B3C                   u620_20 1E41  
                 u612_21 1B8E                   u604_21 1B3B                   u620_21 1E40  
                 u613_20 1B94                   u605_20 1B47                   u613_21 1B93  
                 u605_21 1B46                   u621_25 1E46                   u606_20 1B58  
                 u622_20 1E51                   u614_20 1DDC                   u630_20 1C9C  
                 u606_21 1B57                   u622_21 1E50                   u614_21 1DDB  
                 u630_21 1C9B                   u623_20 1E57                   u615_20 1DE0  
                 u631_20 1CC3                   u623_21 1E56                   u615_21 1DDF  
                 u631_21 1CC2                   u607_25 1B5C                   u608_20 1B6A  
                 u624_20 1E5B                   u616_20 1E00                   u608_21 1B69  
                 u624_21 1E5A                   u616_21 1DFF                   u625_20 1E70  
                 u609_25 1B6B                   u625_25 1E6B                   u617_25 1E11  
                 u626_20 1E80                   u618_20 1E1F                   u626_21 1E7F  
                 u618_21 1E1E                   u627_20 1E84                   u627_21 1E83  
                 u619_25 1E33                   u628_20 1C73                   u628_21 1C72  
                 u629_20 1C7C                   u629_21 1C7B                   _TRISC6 043E  
                 _TRISC7 043F         __end_of___xxtofl 2000         __end_of__powers_ 1044  
      __end_of_UART_GetC 18F6        __end_of_UART_PutC 1904                   ___flge 10BF  
                 ___fleq 1A36                ??___fladd 00A8                   ___wmul 193C  
              ??___awdiv 0031                ??___flneg 002A                ??___awmod 002A  
              ??___flmul 003E                ??___flsub 0064                ??___fltol 00A4  
              ??___lldiv 002E                ??___llmod 003C                ??___lwdiv 0030  
              ??___lwmod 002A                   _fround 12AE         ___awdiv@quotient 0034  
        ___awmod@divisor 0026          ___awmod@counter 002B        __end_ofi1___awdiv 1B9E  
              ??_isdigit 0026                   saved_w 007E                ??_sprintf 00C5  
             ___flge@ff1 0026               ___flge@ff2 002A             ___xxtofl@arg 00B4  
           ___xxtofl@exp 00B3             ___xxtofl@val 00AA               ___fleq@ff1 0026  
             ___fleq@ff2 002A  __end_of__initialization 0025               ___flneg@f1 0026  
             ___fltol@f1 00A0           __pcstackCOMMON 0070            __end_of_scale 1000  
          __end_of_setup 19F0               __div_to_l_ 1E8E           _OPTION_REGbits 0081  
        __div_to_l_@exp1 0034          __div_to_l_@cntr 0033                  ??_scale 0054  
        __div_to_l_@quot 002F             sprintf@width 00DB                  ??_setup 0026  
             __pbssBANK0 0064               __pbssBANK1 00E6               __pbssBANK3 01A4  
         i1___xxtofl@arg 007A           i1___xxtofl@exp 0079           i1___xxtofl@val 0070  
          __div_to_l_@f1 0026            __div_to_l_@f2 002A        __end_of__Umul8_16 198C  
             __pmaintext 1163                  ?___flge 0026                  ?___fleq 0026  
                ?___wmul 0026               __pintentry 0004                  ?_fround 0050  
     i1___awdiv@dividend 0072                ?___xxtofl 00AA             ??_UART_Print 0029  
             __stringtab 1000        __end_of__npowers_ 1078               _scale$1204 005E  
     i1___awdiv@quotient 0077                  ___fladd 04F1       __end_of_UART_Print 19B9  
                ___awdiv 1C06                  ___flneg 18DB                  ___awmod 1ADC  
                ___flmul 14BB                  ___flsub 1918                  ___fltol 1CDA  
                ___lldiv 1B9E                  ___llmod 1A86                  ___lwdiv 19F0  
                ___lwmod 0802             ??i1___xxtofl 0074                  __ptext1 083E  
                __ptext2 0C9D                  __ptext3 1ADC                  __ptext4 1C06  
                __ptext5 1904                  __ptext6 12AE                  __ptext7 0802  
                __ptext8 14BB                  __ptext9 1963              ?__div_to_l_ 0026  
                _dpowers 1087                  _isdigit 1904               ??___xxtofl 00AE  
                _message 1078         ___awmod@dividend 0028              UART_Print@i 002A  
         UART_Print@data 0027                  _valpot0 0066                  _valpot1 0064  
                _varvolt 01A4                  _sprintf 083E     end_of_initialization 0025  
        ___lldiv@divisor 0026       __end_ofi1___xxtofl 1E8E          ___lldiv@counter 0033  
              _RCSTAbits 0018                  psplit$0 C002E                  psplit$1 2E002F  
      ??_UART_Data_Ready 0026           __tdiv_to_l_@f1 0026           __tdiv_to_l_@f2 002A  
              _UART_GetC 18E8            ??__tdiv_to_l_ 002E                _UART_PutC 18F6  
              _PORTDbits 0008              ___fladd@grs 00B3            ___xxtofl@sign 00B2  
              i1___awdiv 1B37              ___flmul@grs 0044           __end_of___flge 1163  
         __end_of___fleq 1A86           __end_of___wmul 1963               ?_UART_GetC 0070  
             ?_UART_PutC 0070        pnum$text1_split_1 002E        pnum$text1_split_2 002F  
         __end_of_fround 14BB      start_initialization 0011      __end_of__tdiv_to_l_ 0800  
            __end_of_map 1DD6              __end_of_isr 1CDA               ?i1___awdiv 0070  
        ___llmod@divisor 0034          ___llmod@counter 003D                 ??___flge 002E  
               ??___fleq 002E                 ??___wmul 002A                __Umul8_16 1963  
               ??_fround 0054            sprintf@tmpval 00D7                ___fladd@a 00A4  
              ___fladd@b 00A0               fround@prec 0063                ___flmul@a 003A  
              ___flmul@b 0036                ___flsub@a 00B8                ___flsub@b 00BC  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
          __pcstackBANK3 0190          i1___xxtofl@sign 0078              sprintf@flag 00D5  
            sprintf@eexp 00DD              sprintf@fval 00DF              sprintf@prec 00D3  
              _main$1200 0194                _main$1201 0190         ___lwdiv@dividend 002E  
               ?___fladd 00A0                 ?___awdiv 002D                 ?___flneg 0026  
               ?___awmod 0026                 ?___flmul 0036                 ?___flsub 00B8  
               ?___fltol 00A0                 ?___lldiv 0026                 ?___llmod 0034  
              __npowers_ 1044               ?__Umul8_16 0026                 ?___lwdiv 002C  
               ?___lwmod 0026              ??_UART_GetC 0026        i1___awdiv@divisor 0070  
            ??_UART_PutC 0026        i1___awdiv@counter 0075                __pstrings 1000  
            __tdiv_to_l_ 0749             ??__div_to_l_ 002E                 ?_isdigit 0070  
          UART_PutC@data 0026              ??i1___awdiv 0074         ___lwdiv@quotient 0031  
               ?_sprintf 00C0        interrupt_function 0004           ___wmul@product 002A  
        _UART_Data_Ready 18D1                 _PIE1bits 008C                 _PIR1bits 000C  
     __end_of__div_to_l_ 1F46                map@maxsal 00C0                map@maxval 00BC  
              map@minsal 00BE                map@minval 00BA               _ADCON0bits 001F  
            __stringbase 100F               _ADCON1bits 009F        ___wmul@multiplier 0026  
              map@valmap 00C8                map@varmap 00B8              ??__Umul8_16 0028  
            _fround$1202 005F              _fround$1203 005B       __end_of__stringtab 1010  
            _isdigit$986 0026               sprintf@val 00CF                 ___xxtofl 1F46  
        ___lwdiv@divisor 002C          ___lwdiv@counter 0033                 __ptext10 0749  
               __ptext11 1E8E                 __ptext20 1D52                 __ptext12 1A86  
               __ptext21 1F46                 __ptext13 1B9E                 __ptext30 1DD6  
               __ptext22 193C                 __ptext14 1918                 __ptext31 1B37  
               __ptext23 19F0                 __ptext15 04F1                 __ptext24 1CDA  
               __ptext16 18DB                 __ptext25 198C                 __ptext17 10BF  
               __ptext26 18F6                 __ptext18 1A36                 __ptext27 18E8  
               __ptext19 19B9                 __ptext28 18D1                 __ptext29 1C6F  
__end_of_UART_Data_Ready 18DB                 __powers_ 1010                pnum$text1 000C  
             _INTCONbits 000B                 isdigit@c 0027                 scale@scl 0062  
               intlevel1 0000                sprintf@ap 00CE         __tdiv_to_l_@exp1 0036  
       __tdiv_to_l_@cntr 0035                sprintf@sp 00E3         __tdiv_to_l_@quot 0031  
       ___lwmod@dividend 0028         ___lldiv@dividend 002A                stringcode 100A  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0026   __Umul8_16@multiplicand 0026  
               sprintf@c 00E4                 sprintf@f 00C0         ___lldiv@quotient 002F  
        ___lwmod@divisor 0026          ___lwmod@counter 002B                 stringdir 100A  
               stringtab 1000               _UART_Print 198C         ?_UART_Data_Ready 0070  
          ___fladd@signs 00B0             ___fladd@aexp 00B1             ___fladd@bexp 00B2  
   __Umul8_16@multiplier 002E        __Umul8_16@product 002A  
