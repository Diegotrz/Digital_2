

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 25 12:24:52 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     0007                     	;# 
    93     0008                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000D                     	;# 
    99     000E                     	;# 
   100     000E                     	;# 
   101     000F                     	;# 
   102     0010                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0014                     	;# 
   107     0015                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001D                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     0081                     	;# 
   121     0085                     	;# 
   122     0086                     	;# 
   123     0087                     	;# 
   124     0088                     	;# 
   125     0089                     	;# 
   126     008C                     	;# 
   127     008D                     	;# 
   128     008E                     	;# 
   129     008F                     	;# 
   130     0090                     	;# 
   131     0091                     	;# 
   132     0092                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0093                     	;# 
   136     0094                     	;# 
   137     0095                     	;# 
   138     0096                     	;# 
   139     0097                     	;# 
   140     0098                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009B                     	;# 
   144     009C                     	;# 
   145     009D                     	;# 
   146     009E                     	;# 
   147     009F                     	;# 
   148     0105                     	;# 
   149     0107                     	;# 
   150     0108                     	;# 
   151     0109                     	;# 
   152     010C                     	;# 
   153     010C                     	;# 
   154     010D                     	;# 
   155     010E                     	;# 
   156     010F                     	;# 
   157     0185                     	;# 
   158     0187                     	;# 
   159     0188                     	;# 
   160     0189                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0000                     	;# 
   164     0001                     	;# 
   165     0002                     	;# 
   166     0003                     	;# 
   167     0004                     	;# 
   168     0005                     	;# 
   169     0006                     	;# 
   170     0007                     	;# 
   171     0008                     	;# 
   172     0009                     	;# 
   173     000A                     	;# 
   174     000B                     	;# 
   175     000C                     	;# 
   176     000D                     	;# 
   177     000E                     	;# 
   178     000E                     	;# 
   179     000F                     	;# 
   180     0010                     	;# 
   181     0011                     	;# 
   182     0012                     	;# 
   183     0013                     	;# 
   184     0014                     	;# 
   185     0015                     	;# 
   186     0015                     	;# 
   187     0016                     	;# 
   188     0017                     	;# 
   189     0018                     	;# 
   190     0019                     	;# 
   191     001A                     	;# 
   192     001B                     	;# 
   193     001B                     	;# 
   194     001C                     	;# 
   195     001D                     	;# 
   196     001E                     	;# 
   197     001F                     	;# 
   198     0081                     	;# 
   199     0085                     	;# 
   200     0086                     	;# 
   201     0087                     	;# 
   202     0088                     	;# 
   203     0089                     	;# 
   204     008C                     	;# 
   205     008D                     	;# 
   206     008E                     	;# 
   207     008F                     	;# 
   208     0090                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0093                     	;# 
   214     0094                     	;# 
   215     0095                     	;# 
   216     0096                     	;# 
   217     0097                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009A                     	;# 
   221     009B                     	;# 
   222     009C                     	;# 
   223     009D                     	;# 
   224     009E                     	;# 
   225     009F                     	;# 
   226     0105                     	;# 
   227     0107                     	;# 
   228     0108                     	;# 
   229     0109                     	;# 
   230     010C                     	;# 
   231     010C                     	;# 
   232     010D                     	;# 
   233     010E                     	;# 
   234     010F                     	;# 
   235     0185                     	;# 
   236     0187                     	;# 
   237     0188                     	;# 
   238     0189                     	;# 
   239     018C                     	;# 
   240     018D                     	;# 
   241     0000                     	;# 
   242     0001                     	;# 
   243     0002                     	;# 
   244     0003                     	;# 
   245     0004                     	;# 
   246     0005                     	;# 
   247     0006                     	;# 
   248     0007                     	;# 
   249     0008                     	;# 
   250     0009                     	;# 
   251     000A                     	;# 
   252     000B                     	;# 
   253     000C                     	;# 
   254     000D                     	;# 
   255     000E                     	;# 
   256     000E                     	;# 
   257     000F                     	;# 
   258     0010                     	;# 
   259     0011                     	;# 
   260     0012                     	;# 
   261     0013                     	;# 
   262     0014                     	;# 
   263     0015                     	;# 
   264     0015                     	;# 
   265     0016                     	;# 
   266     0017                     	;# 
   267     0018                     	;# 
   268     0019                     	;# 
   269     001A                     	;# 
   270     001B                     	;# 
   271     001B                     	;# 
   272     001C                     	;# 
   273     001D                     	;# 
   274     001E                     	;# 
   275     001F                     	;# 
   276     0081                     	;# 
   277     0085                     	;# 
   278     0086                     	;# 
   279     0087                     	;# 
   280     0088                     	;# 
   281     0089                     	;# 
   282     008C                     	;# 
   283     008D                     	;# 
   284     008E                     	;# 
   285     008F                     	;# 
   286     0090                     	;# 
   287     0091                     	;# 
   288     0092                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0093                     	;# 
   292     0094                     	;# 
   293     0095                     	;# 
   294     0096                     	;# 
   295     0097                     	;# 
   296     0098                     	;# 
   297     0099                     	;# 
   298     009A                     	;# 
   299     009B                     	;# 
   300     009C                     	;# 
   301     009D                     	;# 
   302     009E                     	;# 
   303     009F                     	;# 
   304     0105                     	;# 
   305     0107                     	;# 
   306     0108                     	;# 
   307     0109                     	;# 
   308     010C                     	;# 
   309     010C                     	;# 
   310     010D                     	;# 
   311     010E                     	;# 
   312     010F                     	;# 
   313     0185                     	;# 
   314     0187                     	;# 
   315     0188                     	;# 
   316     0189                     	;# 
   317     018C                     	;# 
   318     018D                     	;# 
   319     0000                     	;# 
   320     0001                     	;# 
   321     0002                     	;# 
   322     0003                     	;# 
   323     0004                     	;# 
   324     0005                     	;# 
   325     0006                     	;# 
   326     0007                     	;# 
   327     0008                     	;# 
   328     0009                     	;# 
   329     000A                     	;# 
   330     000B                     	;# 
   331     000C                     	;# 
   332     000D                     	;# 
   333     000E                     	;# 
   334     000E                     	;# 
   335     000F                     	;# 
   336     0010                     	;# 
   337     0011                     	;# 
   338     0012                     	;# 
   339     0013                     	;# 
   340     0014                     	;# 
   341     0015                     	;# 
   342     0015                     	;# 
   343     0016                     	;# 
   344     0017                     	;# 
   345     0018                     	;# 
   346     0019                     	;# 
   347     001A                     	;# 
   348     001B                     	;# 
   349     001B                     	;# 
   350     001C                     	;# 
   351     001D                     	;# 
   352     001E                     	;# 
   353     001F                     	;# 
   354     0081                     	;# 
   355     0085                     	;# 
   356     0086                     	;# 
   357     0087                     	;# 
   358     0088                     	;# 
   359     0089                     	;# 
   360     008C                     	;# 
   361     008D                     	;# 
   362     008E                     	;# 
   363     008F                     	;# 
   364     0090                     	;# 
   365     0091                     	;# 
   366     0092                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0093                     	;# 
   370     0094                     	;# 
   371     0095                     	;# 
   372     0096                     	;# 
   373     0097                     	;# 
   374     0098                     	;# 
   375     0099                     	;# 
   376     009A                     	;# 
   377     009B                     	;# 
   378     009C                     	;# 
   379     009D                     	;# 
   380     009E                     	;# 
   381     009F                     	;# 
   382     0105                     	;# 
   383     0107                     	;# 
   384     0108                     	;# 
   385     0109                     	;# 
   386     010C                     	;# 
   387     010C                     	;# 
   388     010D                     	;# 
   389     010E                     	;# 
   390     010F                     	;# 
   391     0185                     	;# 
   392     0187                     	;# 
   393     0188                     	;# 
   394     0189                     	;# 
   395     018C                     	;# 
   396     018D                     	;# 
   397                           
   398                           	psect	strings
   399     1000                     __pstrings:
   400     1000                     stringtab:
   401     1000                     __stringtab:
   402     1000                     stringcode:	
   403                           ;	String table - string pointers are 1 byte each
   404                           
   405     1000                     stringdir:
   406     1000  3010               	movlw	high stringdir
   407     1001  008A               	movwf	10
   408     1002  0804               	movf	4,w
   409     1003  0A84               	incf	4,f
   410     1004  0782               	addwf	2,f
   411     1005                     __stringbase:
   412     1005  3400               	retlw	0
   413     1006                     __end_of__stringtab:
   414     1006                     __powers_:
   415     1006  3400               	retlw	0
   416     1007  3400               	retlw	0
   417     1008  3480               	retlw	128
   418     1009  343F               	retlw	63
   419     100A  3400               	retlw	0
   420     100B  3400               	retlw	0
   421     100C  3420               	retlw	32
   422     100D  3441               	retlw	65
   423     100E  3400               	retlw	0
   424     100F  3400               	retlw	0
   425     1010  34C8               	retlw	200
   426     1011  3442               	retlw	66
   427     1012  3400               	retlw	0
   428     1013  3400               	retlw	0
   429     1014  347A               	retlw	122
   430     1015  3444               	retlw	68
   431     1016  3400               	retlw	0
   432     1017  3440               	retlw	64
   433     1018  341C               	retlw	28
   434     1019  3446               	retlw	70
   435     101A  3400               	retlw	0
   436     101B  3450               	retlw	80
   437     101C  34C3               	retlw	195
   438     101D  3447               	retlw	71
   439     101E  3400               	retlw	0
   440     101F  3424               	retlw	36
   441     1020  3474               	retlw	116
   442     1021  3449               	retlw	73
   443     1022  3480               	retlw	128
   444     1023  3496               	retlw	150
   445     1024  3418               	retlw	24
   446     1025  344B               	retlw	75
   447     1026  3420               	retlw	32
   448     1027  34BC               	retlw	188
   449     1028  34BE               	retlw	190
   450     1029  344C               	retlw	76
   451     102A  3428               	retlw	40
   452     102B  346B               	retlw	107
   453     102C  346E               	retlw	110
   454     102D  344E               	retlw	78
   455     102E  34F9               	retlw	249
   456     102F  3402               	retlw	2
   457     1030  3415               	retlw	21
   458     1031  3450               	retlw	80
   459     1032  34EC               	retlw	236
   460     1033  3478               	retlw	120
   461     1034  34AD               	retlw	173
   462     1035  3460               	retlw	96
   463     1036  34CA               	retlw	202
   464     1037  34F2               	retlw	242
   465     1038  3449               	retlw	73
   466     1039  3471               	retlw	113
   467     103A                     __end_of__powers_:
   468     103A                     __npowers_:
   469     103A  3400               	retlw	0
   470     103B  3400               	retlw	0
   471     103C  3480               	retlw	128
   472     103D  343F               	retlw	63
   473     103E  34CD               	retlw	205
   474     103F  34CC               	retlw	204
   475     1040  34CC               	retlw	204
   476     1041  343D               	retlw	61
   477     1042  340A               	retlw	10
   478     1043  34D7               	retlw	215
   479     1044  3423               	retlw	35
   480     1045  343C               	retlw	60
   481     1046  346F               	retlw	111
   482     1047  3412               	retlw	18
   483     1048  3483               	retlw	131
   484     1049  343A               	retlw	58
   485     104A  3417               	retlw	23
   486     104B  34B7               	retlw	183
   487     104C  34D1               	retlw	209
   488     104D  3438               	retlw	56
   489     104E  34AC               	retlw	172
   490     104F  34C5               	retlw	197
   491     1050  3427               	retlw	39
   492     1051  3437               	retlw	55
   493     1052  34BD               	retlw	189
   494     1053  3437               	retlw	55
   495     1054  3486               	retlw	134
   496     1055  3435               	retlw	53
   497     1056  3495               	retlw	149
   498     1057  34BF               	retlw	191
   499     1058  34D6               	retlw	214
   500     1059  3433               	retlw	51
   501     105A  3477               	retlw	119
   502     105B  34CC               	retlw	204
   503     105C  342B               	retlw	43
   504     105D  3432               	retlw	50
   505     105E  345F               	retlw	95
   506     105F  3470               	retlw	112
   507     1060  3489               	retlw	137
   508     1061  3430               	retlw	48
   509     1062  34FF               	retlw	255
   510     1063  34E6               	retlw	230
   511     1064  34DB               	retlw	219
   512     1065  342E               	retlw	46
   513     1066  3408               	retlw	8
   514     1067  34E5               	retlw	229
   515     1068  343C               	retlw	60
   516     1069  341E               	retlw	30
   517     106A  3460               	retlw	96
   518     106B  3442               	retlw	66
   519     106C  34A2               	retlw	162
   520     106D  340D               	retlw	13
   521     106E                     __end_of__npowers_:
   522     106E                     main@msg:
   523     106E  3441               	retlw	65
   524     106F  3474               	retlw	116
   525     1070  3469               	retlw	105
   526     1071  3463               	retlw	99
   527     1072  346C               	retlw	108
   528     1073  3465               	retlw	101
   529     1074  3457               	retlw	87
   530     1075  346F               	retlw	111
   531     1076  3472               	retlw	114
   532     1077  346C               	retlw	108
   533     1078  3464               	retlw	100
   534     1079  342E               	retlw	46
   535     107A  3463               	retlw	99
   536     107B  346F               	retlw	111
   537     107C  346D               	retlw	109
   538     107D  3400               	retlw	0
   539     107E                     __end_ofmain@msg:
   540     107E                     _dpowers:
   541     107E  3401               	retlw	1
   542     107F  3400               	retlw	0
   543     1080  3400               	retlw	0
   544     1081  3400               	retlw	0
   545     1082  340A               	retlw	10
   546     1083  3400               	retlw	0
   547     1084  3400               	retlw	0
   548     1085  3400               	retlw	0
   549     1086  3464               	retlw	100
   550     1087  3400               	retlw	0
   551     1088  3400               	retlw	0
   552     1089  3400               	retlw	0
   553     108A  34E8               	retlw	232
   554     108B  3403               	retlw	3
   555     108C  3400               	retlw	0
   556     108D  3400               	retlw	0
   557     108E  3410               	retlw	16
   558     108F  3427               	retlw	39
   559     1090  3400               	retlw	0
   560     1091  3400               	retlw	0
   561     1092  34A0               	retlw	160
   562     1093  3486               	retlw	134
   563     1094  3401               	retlw	1
   564     1095  3400               	retlw	0
   565     1096  3440               	retlw	64
   566     1097  3442               	retlw	66
   567     1098  340F               	retlw	15
   568     1099  3400               	retlw	0
   569     109A  3480               	retlw	128
   570     109B  3496               	retlw	150
   571     109C  3498               	retlw	152
   572     109D  3400               	retlw	0
   573     109E  3400               	retlw	0
   574     109F  34E1               	retlw	225
   575     10A0  34F5               	retlw	245
   576     10A1  3405               	retlw	5
   577     10A2  3400               	retlw	0
   578     10A3  34CA               	retlw	202
   579     10A4  349A               	retlw	154
   580     10A5  343B               	retlw	59
   581     10A6                     __end_of_dpowers:
   582     000B                     _INTCONbits	set	11
   583     0007                     _PORTC	set	7
   584     0009                     _PORTE	set	9
   585     001F                     _ADCON0bits	set	31
   586     000C                     _PIR1bits	set	12
   587     0008                     _PORTD	set	8
   588     0008                     _PORTDbits	set	8
   589     001E                     _ADRESH	set	30
   590     003E                     _RC6	set	62
   591     003F                     _RC7	set	63
   592     0043                     _RD3	set	67
   593     0047                     _RD7	set	71
   594     0046                     _RD6	set	70
   595     0045                     _RD5	set	69
   596     0044                     _RD4	set	68
   597     008C                     _PIE1bits	set	140
   598     009F                     _ADCON1bits	set	159
   599     008F                     _OSCCONbits	set	143
   600     0095                     _WPUB	set	149
   601     0081                     _OPTION_REGbits	set	129
   602     0089                     _TRISE	set	137
   603     0087                     _TRISC	set	135
   604     0086                     _TRISB	set	134
   605     0085                     _TRISA	set	133
   606     0088                     _TRISD	set	136
   607     043E                     _TRISC6	set	1086
   608     043F                     _TRISC7	set	1087
   609     0189                     _ANSELH	set	393
   610     0188                     _ANSEL	set	392
   611     10A6                     STR_1:
   612     10A6  3476               	retlw	118	;'v'
   613     10A7  346F               	retlw	111	;'o'
   614     10A8  346C               	retlw	108	;'l'
   615     10A9  3474               	retlw	116	;'t'
   616     10AA  343D               	retlw	61	;'='
   617     10AB  3420               	retlw	32	;' '
   618     10AC  3425               	retlw	37	;'%'
   619     10AD  3466               	retlw	102	;'f'
   620     10AE  3400               	retlw	0
   621                           
   622                           	psect	cinit
   623     0011                     start_initialization:	
   624                           ; #config settings
   625                           
   626     0011                     __initialization:
   627                           
   628                           ; Clear objects allocated to BANK0
   629     0011  1283               	bcf	3,5	;RP0=0, select bank0
   630     0012  1303               	bcf	3,6	;RP1=0, select bank0
   631     0013  01E4               	clrf	__pbssBANK0& (0+127)
   632     0014  01E5               	clrf	(__pbssBANK0+1)& (0+127)
   633     0015  01E6               	clrf	(__pbssBANK0+2)& (0+127)
   634     0016  01E7               	clrf	(__pbssBANK0+3)& (0+127)
   635     0017  01E8               	clrf	(__pbssBANK0+4)& (0+127)
   636     0018  01E9               	clrf	(__pbssBANK0+5)& (0+127)
   637                           
   638                           ; Clear objects allocated to BANK3
   639     0019  1683               	bsf	3,5	;RP0=1, select bank3
   640     001A  1703               	bsf	3,6	;RP1=1, select bank3
   641     001B  01AE               	clrf	__pbssBANK3& (0+127)
   642     001C  01AF               	clrf	(__pbssBANK3+1)& (0+127)
   643     001D  01B0               	clrf	(__pbssBANK3+2)& (0+127)
   644     001E  01B1               	clrf	(__pbssBANK3+3)& (0+127)
   645     001F  01B2               	clrf	(__pbssBANK3+4)& (0+127)
   646     0020  01B3               	clrf	(__pbssBANK3+5)& (0+127)
   647     0021  01B4               	clrf	(__pbssBANK3+6)& (0+127)
   648     0022  01B5               	clrf	(__pbssBANK3+7)& (0+127)
   649     0023                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652     0023                     __end_of__initialization:
   653     0023  0183               	clrf	3
   654     0024  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bssBANK0
   657     0064                     __pbssBANK0:
   658     0064                     _val:
   659     0064                     	ds	2
   660     0066                     _valpot1:
   661     0066                     	ds	2
   662     0068                     _valpot0:
   663     0068                     	ds	2
   664                           
   665                           	psect	bssBANK3
   666     01AE                     __pbssBANK3:
   667     01AE                     _varvolt:
   668     01AE                     	ds	4
   669     01B2                     _i:
   670     01B2                     	ds	2
   671     01B4                     _CMCON:
   672     01B4                     	ds	2
   673                           
   674                           	psect	cstackBANK3
   675     0190                     __pcstackBANK3:
   676     0190                     main@s:
   677                           
   678                           ; 20 bytes @ 0x0
   679     0190                     	ds	20
   680     01A4                     main@varvolt2:
   681                           
   682                           ; 4 bytes @ 0x14
   683     01A4                     	ds	4
   684     01A8                     _main$1093:
   685                           
   686                           ; 4 bytes @ 0x18
   687     01A8                     	ds	4
   688     01AC                     _main$1092:
   689                           
   690                           ; 2 bytes @ 0x1C
   691     01AC                     	ds	2
   692                           
   693                           	psect	cstackBANK1
   694     00A0                     __pcstackBANK1:
   695     00A0                     ?___fltol:
   696     00A0                     ?___fladd:	
   697                           ; 4 bytes @ 0x0
   698                           
   699     00A0                     ___fltol@f1:	
   700                           ; 4 bytes @ 0x0
   701                           
   702     00A0                     ___fladd@b:	
   703                           ; 4 bytes @ 0x0
   704                           
   705                           
   706                           ; 4 bytes @ 0x0
   707     00A0                     	ds	4
   708     00A4                     ??___fltol:
   709     00A4                     ___fladd@a:	
   710                           ; 1 bytes @ 0x4
   711                           
   712                           
   713                           ; 4 bytes @ 0x4
   714     00A4                     	ds	4
   715     00A8                     ??___fladd:
   716     00A8                     ___fltol@sign1:	
   717                           ; 1 bytes @ 0x8
   718                           
   719                           
   720                           ; 1 bytes @ 0x8
   721     00A8                     	ds	1
   722     00A9                     ___fltol@exp1:
   723                           
   724                           ; 1 bytes @ 0x9
   725     00A9                     	ds	1
   726     00AA                     ?___xxtofl:
   727     00AA                     ___xxtofl@val:	
   728                           ; 4 bytes @ 0xA
   729                           
   730                           
   731                           ; 4 bytes @ 0xA
   732     00AA                     	ds	4
   733     00AE                     ??___xxtofl:
   734                           
   735                           ; 1 bytes @ 0xE
   736     00AE                     	ds	2
   737     00B0                     ___fladd@signs:
   738                           
   739                           ; 1 bytes @ 0x10
   740     00B0                     	ds	1
   741     00B1                     ___fladd@aexp:
   742                           
   743                           ; 1 bytes @ 0x11
   744     00B1                     	ds	1
   745     00B2                     ___fladd@bexp:
   746     00B2                     ___xxtofl@sign:	
   747                           ; 1 bytes @ 0x12
   748                           
   749                           
   750                           ; 1 bytes @ 0x12
   751     00B2                     	ds	1
   752     00B3                     ___fladd@grs:
   753     00B3                     ___xxtofl@exp:	
   754                           ; 1 bytes @ 0x13
   755                           
   756                           
   757                           ; 1 bytes @ 0x13
   758     00B3                     	ds	1
   759     00B4                     ___xxtofl@arg:
   760                           
   761                           ; 4 bytes @ 0x14
   762     00B4                     	ds	4
   763     00B8                     ?_map:
   764     00B8                     ?___flsub:	
   765                           ; 2 bytes @ 0x18
   766                           
   767     00B8                     map@varmap:	
   768                           ; 4 bytes @ 0x18
   769                           
   770     00B8                     ___flsub@a:	
   771                           ; 2 bytes @ 0x18
   772                           
   773                           
   774                           ; 4 bytes @ 0x18
   775     00B8                     	ds	2
   776     00BA                     map@minval:
   777                           
   778                           ; 2 bytes @ 0x1A
   779     00BA                     	ds	2
   780     00BC                     map@maxval:
   781     00BC                     ___flsub@b:	
   782                           ; 2 bytes @ 0x1C
   783                           
   784                           
   785                           ; 4 bytes @ 0x1C
   786     00BC                     	ds	2
   787     00BE                     map@minsal:
   788                           
   789                           ; 2 bytes @ 0x1E
   790     00BE                     	ds	2
   791     00C0                     ?_sprintf:
   792     00C0                     sprintf@f:	
   793                           ; 2 bytes @ 0x20
   794                           
   795     00C0                     map@maxsal:	
   796                           ; 1 bytes @ 0x20
   797                           
   798                           
   799                           ; 2 bytes @ 0x20
   800     00C0                     	ds	2
   801     00C2                     ??_map:
   802                           
   803                           ; 1 bytes @ 0x22
   804     00C2                     	ds	3
   805     00C5                     ??_sprintf:
   806                           
   807                           ; 1 bytes @ 0x25
   808     00C5                     	ds	3
   809     00C8                     map@valmap:
   810                           
   811                           ; 4 bytes @ 0x28
   812     00C8                     	ds	2
   813     00CA                     _sprintf$1097:
   814                           
   815                           ; 4 bytes @ 0x2A
   816     00CA                     	ds	4
   817     00CE                     sprintf@ap:
   818                           
   819                           ; 1 bytes @ 0x2E
   820     00CE                     	ds	1
   821     00CF                     sprintf@flag:
   822                           
   823                           ; 2 bytes @ 0x2F
   824     00CF                     	ds	2
   825     00D1                     sprintf@prec:
   826                           
   827                           ; 2 bytes @ 0x31
   828     00D1                     	ds	2
   829     00D3                     sprintf@val:
   830                           
   831                           ; 4 bytes @ 0x33
   832     00D3                     	ds	4
   833     00D7                     sprintf@eexp:
   834                           
   835                           ; 2 bytes @ 0x37
   836     00D7                     	ds	2
   837     00D9                     sprintf@sp:
   838                           
   839                           ; 1 bytes @ 0x39
   840     00D9                     	ds	1
   841     00DA                     sprintf@tmpval:
   842                           
   843                           ; 4 bytes @ 0x3A
   844     00DA                     	ds	4
   845     00DE                     sprintf@fval:
   846                           
   847                           ; 4 bytes @ 0x3E
   848     00DE                     	ds	4
   849     00E2                     sprintf@c:
   850                           
   851                           ; 1 bytes @ 0x42
   852     00E2                     	ds	1
   853     00E3                     ??_main:
   854                           
   855                           ; 1 bytes @ 0x43
   856     00E3                     	ds	1
   857                           
   858                           	psect	cstackCOMMON
   859     0070                     __pcstackCOMMON:
   860     0070                     ?_setup:
   861     0070                     ?_ToggleEpinOfLCD:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_WriteCommandToLCD:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_WriteDataToLCD:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?_InitLCD:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?_WriteStringToLCD:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?_ClearLCDScreen:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0070                     ?_isr:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0070                     ?_main:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0070                     ?i1___awdiv:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0070                     ?i1___xxtofl:	
   889                           ; 2 bytes @ 0x0
   890                           
   891     0070                     i1___awdiv@divisor:	
   892                           ; 4 bytes @ 0x0
   893                           
   894     0070                     i1___xxtofl@val:	
   895                           ; 2 bytes @ 0x0
   896                           
   897                           
   898                           ; 4 bytes @ 0x0
   899     0070                     	ds	2
   900     0072                     i1___awdiv@dividend:
   901                           
   902                           ; 2 bytes @ 0x2
   903     0072                     	ds	2
   904     0074                     ??i1___awdiv:
   905     0074                     ??i1___xxtofl:	
   906                           ; 1 bytes @ 0x4
   907                           
   908                           
   909                           ; 1 bytes @ 0x4
   910     0074                     	ds	1
   911     0075                     i1___awdiv@counter:
   912                           
   913                           ; 1 bytes @ 0x5
   914     0075                     	ds	1
   915     0076                     i1___awdiv@sign:
   916                           
   917                           ; 1 bytes @ 0x6
   918     0076                     	ds	1
   919     0077                     i1___awdiv@quotient:
   920                           
   921                           ; 2 bytes @ 0x7
   922     0077                     	ds	1
   923     0078                     i1___xxtofl@sign:
   924                           
   925                           ; 1 bytes @ 0x8
   926     0078                     	ds	1
   927     0079                     i1___xxtofl@exp:
   928                           
   929                           ; 1 bytes @ 0x9
   930     0079                     	ds	1
   931     007A                     i1___xxtofl@arg:
   932                           
   933                           ; 4 bytes @ 0xA
   934     007A                     	ds	4
   935                           
   936                           	psect	cstackBANK0
   937     0020                     __pcstackBANK0:
   938     0020                     ??_isr:
   939                           
   940                           ; 1 bytes @ 0x0
   941     0020                     	ds	6
   942     0026                     ?___fleq:
   943     0026                     ?___flge:	
   944                           ; 1 bit 
   945                           
   946     0026                     ??_setup:	
   947                           ; 1 bit 
   948                           
   949     0026                     ??_ToggleEpinOfLCD:	
   950                           ; 1 bytes @ 0x6
   951                           
   952     0026                     ?__Umul8_16:	
   953                           ; 1 bytes @ 0x6
   954                           
   955     0026                     ?___wmul:	
   956                           ; 2 bytes @ 0x6
   957                           
   958     0026                     ?___awmod:	
   959                           ; 2 bytes @ 0x6
   960                           
   961     0026                     ?___lwmod:	
   962                           ; 2 bytes @ 0x6
   963                           
   964     0026                     ?__tdiv_to_l_:	
   965                           ; 2 bytes @ 0x6
   966                           
   967     0026                     ?__div_to_l_:	
   968                           ; 4 bytes @ 0x6
   969                           
   970     0026                     ?___lldiv:	
   971                           ; 4 bytes @ 0x6
   972                           
   973     0026                     ?___flneg:	
   974                           ; 4 bytes @ 0x6
   975                           
   976     0026                     ?___llmod:	
   977                           ; 4 bytes @ 0x6
   978                           
   979     0026                     __Umul8_16@multiplicand:	
   980                           ; 4 bytes @ 0x6
   981                           
   982     0026                     ___wmul@multiplier:	
   983                           ; 1 bytes @ 0x6
   984                           
   985     0026                     ___awmod@divisor:	
   986                           ; 2 bytes @ 0x6
   987                           
   988     0026                     ___lwmod@divisor:	
   989                           ; 2 bytes @ 0x6
   990                           
   991     0026                     ___lldiv@divisor:	
   992                           ; 2 bytes @ 0x6
   993                           
   994     0026                     __div_to_l_@f1:	
   995                           ; 4 bytes @ 0x6
   996                           
   997     0026                     ___fleq@ff1:	
   998                           ; 4 bytes @ 0x6
   999                           
  1000     0026                     ___flge@ff1:	
  1001                           ; 4 bytes @ 0x6
  1002                           
  1003     0026                     ___flneg@f1:	
  1004                           ; 4 bytes @ 0x6
  1005                           
  1006     0026                     __tdiv_to_l_@f1:	
  1007                           ; 4 bytes @ 0x6
  1008                           
  1009     0026                     ___llmod@divisor:	
  1010                           ; 4 bytes @ 0x6
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x6
  1014     0026                     	ds	1
  1015     0027                     ??_WriteCommandToLCD:
  1016     0027                     ??_WriteDataToLCD:	
  1017                           ; 1 bytes @ 0x7
  1018                           
  1019     0027                     WriteCommandToLCD@Command:	
  1020                           ; 1 bytes @ 0x7
  1021                           
  1022     0027                     WriteDataToLCD@LCDChar:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x7
  1027     0027                     	ds	1
  1028     0028                     ??__Umul8_16:
  1029     0028                     ??_InitLCD:	
  1030                           ; 1 bytes @ 0x8
  1031                           
  1032     0028                     ??_WriteStringToLCD:	
  1033                           ; 1 bytes @ 0x8
  1034                           
  1035     0028                     ??_ClearLCDScreen:	
  1036                           ; 1 bytes @ 0x8
  1037                           
  1038     0028                     ___wmul@multiplicand:	
  1039                           ; 1 bytes @ 0x8
  1040                           
  1041     0028                     ___awmod@dividend:	
  1042                           ; 2 bytes @ 0x8
  1043                           
  1044     0028                     ___lwmod@dividend:	
  1045                           ; 2 bytes @ 0x8
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x8
  1049     0028                     	ds	1
  1050     0029                     WriteStringToLCD@s:
  1051                           
  1052                           ; 1 bytes @ 0x9
  1053     0029                     	ds	1
  1054     002A                     ??___wmul:
  1055     002A                     ??___awmod:	
  1056                           ; 1 bytes @ 0xA
  1057                           
  1058     002A                     ??___flneg:	
  1059                           ; 1 bytes @ 0xA
  1060                           
  1061     002A                     ??___lwmod:	
  1062                           ; 1 bytes @ 0xA
  1063                           
  1064     002A                     ___wmul@product:	
  1065                           ; 1 bytes @ 0xA
  1066                           
  1067     002A                     __Umul8_16@product:	
  1068                           ; 2 bytes @ 0xA
  1069                           
  1070     002A                     ___lldiv@dividend:	
  1071                           ; 2 bytes @ 0xA
  1072                           
  1073     002A                     __div_to_l_@f2:	
  1074                           ; 4 bytes @ 0xA
  1075                           
  1076     002A                     ___fleq@ff2:	
  1077                           ; 4 bytes @ 0xA
  1078                           
  1079     002A                     ___flge@ff2:	
  1080                           ; 4 bytes @ 0xA
  1081                           
  1082     002A                     __tdiv_to_l_@f2:	
  1083                           ; 4 bytes @ 0xA
  1084                           
  1085     002A                     ___llmod@dividend:	
  1086                           ; 4 bytes @ 0xA
  1087                           
  1088                           
  1089                           ; 4 bytes @ 0xA
  1090     002A                     	ds	1
  1091     002B                     ___awmod@counter:
  1092     002B                     ___lwmod@counter:	
  1093                           ; 1 bytes @ 0xB
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0xB
  1097     002B                     	ds	1
  1098     002C                     ?___lwdiv:
  1099     002C                     ___awmod@sign:	
  1100                           ; 2 bytes @ 0xC
  1101                           
  1102     002C                     ___lwdiv@divisor:	
  1103                           ; 1 bytes @ 0xC
  1104                           
  1105     002C                     __Umul8_16@word_mpld:	
  1106                           ; 2 bytes @ 0xC
  1107                           
  1108                           
  1109                           ; 2 bytes @ 0xC
  1110     002C                     	ds	1
  1111     002D                     ?___awdiv:
  1112     002D                     ___awdiv@divisor:	
  1113                           ; 2 bytes @ 0xD
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0xD
  1117     002D                     	ds	1
  1118     002E                     ??__tdiv_to_l_:
  1119     002E                     ??__div_to_l_:	
  1120                           ; 1 bytes @ 0xE
  1121                           
  1122     002E                     ??___lldiv:	
  1123                           ; 1 bytes @ 0xE
  1124                           
  1125     002E                     ??___fleq:	
  1126                           ; 1 bytes @ 0xE
  1127                           
  1128     002E                     ??___flge:	
  1129                           ; 1 bytes @ 0xE
  1130                           
  1131     002E                     ??___llmod:	
  1132                           ; 1 bytes @ 0xE
  1133                           
  1134     002E                     __Umul8_16@multiplier:	
  1135                           ; 1 bytes @ 0xE
  1136                           
  1137     002E                     ___lwdiv@dividend:	
  1138                           ; 1 bytes @ 0xE
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0xE
  1142     002E                     	ds	1
  1143     002F                     ___llmod@counter:
  1144     002F                     ___awdiv@dividend:	
  1145                           ; 1 bytes @ 0xF
  1146                           
  1147     002F                     ___lldiv@quotient:	
  1148                           ; 2 bytes @ 0xF
  1149                           
  1150     002F                     __div_to_l_@quot:	
  1151                           ; 4 bytes @ 0xF
  1152                           
  1153                           
  1154                           ; 4 bytes @ 0xF
  1155     002F                     	ds	1
  1156     0030                     ??___lwdiv:
  1157                           
  1158                           ; 1 bytes @ 0x10
  1159     0030                     	ds	1
  1160     0031                     ??___awdiv:
  1161     0031                     ___lwdiv@quotient:	
  1162                           ; 1 bytes @ 0x11
  1163                           
  1164     0031                     __tdiv_to_l_@quot:	
  1165                           ; 2 bytes @ 0x11
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x11
  1169     0031                     	ds	1
  1170     0032                     ___awdiv@counter:
  1171                           
  1172                           ; 1 bytes @ 0x12
  1173     0032                     	ds	1
  1174     0033                     ___lldiv@counter:
  1175     0033                     ___awdiv@sign:	
  1176                           ; 1 bytes @ 0x13
  1177                           
  1178     0033                     __div_to_l_@cntr:	
  1179                           ; 1 bytes @ 0x13
  1180                           
  1181     0033                     ___lwdiv@counter:	
  1182                           ; 1 bytes @ 0x13
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0x13
  1186     0033                     	ds	1
  1187     0034                     __div_to_l_@exp1:
  1188     0034                     ___awdiv@quotient:	
  1189                           ; 1 bytes @ 0x14
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x14
  1193     0034                     	ds	1
  1194     0035                     __tdiv_to_l_@cntr:
  1195                           
  1196                           ; 1 bytes @ 0x15
  1197     0035                     	ds	1
  1198     0036                     ?___flmul:
  1199     0036                     __tdiv_to_l_@exp1:	
  1200                           ; 4 bytes @ 0x16
  1201                           
  1202     0036                     ___flmul@b:	
  1203                           ; 1 bytes @ 0x16
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x16
  1207     0036                     	ds	4
  1208     003A                     ___flmul@a:
  1209                           
  1210                           ; 4 bytes @ 0x1A
  1211     003A                     	ds	4
  1212     003E                     ??___flmul:
  1213                           
  1214                           ; 1 bytes @ 0x1E
  1215     003E                     	ds	5
  1216     0043                     ___flmul@sign:
  1217                           
  1218                           ; 1 bytes @ 0x23
  1219     0043                     	ds	1
  1220     0044                     ___flmul@grs:
  1221                           
  1222                           ; 4 bytes @ 0x24
  1223     0044                     	ds	4
  1224     0048                     ___flmul@aexp:
  1225                           
  1226                           ; 1 bytes @ 0x28
  1227     0048                     	ds	1
  1228     0049                     ___flmul@bexp:
  1229                           
  1230                           ; 1 bytes @ 0x29
  1231     0049                     	ds	1
  1232     004A                     ___flmul@prod:
  1233                           
  1234                           ; 4 bytes @ 0x2A
  1235     004A                     	ds	4
  1236     004E                     ___flmul@temp:
  1237                           
  1238                           ; 2 bytes @ 0x2E
  1239     004E                     	ds	2
  1240     0050                     ?_fround:
  1241     0050                     ?_scale:	
  1242                           ; 4 bytes @ 0x30
  1243                           
  1244                           
  1245                           ; 4 bytes @ 0x30
  1246     0050                     	ds	4
  1247     0054                     ??_fround:
  1248     0054                     ??_scale:	
  1249                           ; 1 bytes @ 0x34
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x34
  1253     0054                     	ds	7
  1254     005B                     _fround$1095:
  1255                           
  1256                           ; 4 bytes @ 0x3B
  1257     005B                     	ds	3
  1258     005E                     _scale$1096:
  1259                           
  1260                           ; 4 bytes @ 0x3E
  1261     005E                     	ds	1
  1262     005F                     _fround$1094:
  1263                           
  1264                           ; 4 bytes @ 0x3F
  1265     005F                     	ds	3
  1266     0062                     scale@scl:
  1267                           
  1268                           ; 1 bytes @ 0x42
  1269     0062                     	ds	1
  1270     0063                     fround@prec:
  1271                           
  1272                           ; 1 bytes @ 0x43
  1273     0063                     	ds	1
  1274     0064                     ??___flsub:
  1275                           
  1276                           	psect	maintext
  1277     06CB                     __pmaintext:	
  1278                           ; 1 bytes @ 0x44
  1279 ;;
  1280 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1281 ;;
  1282 ;; *************** function _main *****************
  1283 ;; Defined at:
  1284 ;;		line 58 in file "Lab2.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  s              20    0[BANK3 ] unsigned char [20]
  1289 ;;  varvolt2        4   20[BANK3 ] float 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : B00/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         0       0       0      30       0
  1301 ;;      Temps:          0       0       1       0       0
  1302 ;;      Totals:         0       0       1      30       0
  1303 ;;Total ram usage:       31 bytes
  1304 ;; Hardware stack levels required when called: 6
  1305 ;; This function calls:
  1306 ;;		_ClearLCDScreen
  1307 ;;		_InitLCD
  1308 ;;		_WriteStringToLCD
  1309 ;;		___fltol
  1310 ;;		___xxtofl
  1311 ;;		_map
  1312 ;;		_setup
  1313 ;;		_sprintf
  1314 ;; This function is called by:
  1315 ;;		Startup code after reset
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     06CB                     _main:	
  1320                           ;psect for function _main
  1321                           
  1322     06CB                     l3961:	
  1323                           ;incstack = 0
  1324                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1325                           
  1326                           
  1327                           ;Lab2.c: 66:  setup();
  1328     06CB  160A  158A  242F  120A  118A  	fcall	_setup
  1329     06D0                     l3963:
  1330                           
  1331                           ;Lab2.c: 67:  ADCON0bits.GO =1;
  1332     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1333     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1334     06D2  149F               	bsf	31,1	;volatile
  1335     06D3                     l3965:
  1336                           
  1337                           ;Lab2.c: 68:  i=0;
  1338     06D3  1683               	bsf	3,5	;RP0=1, select bank3
  1339     06D4  1703               	bsf	3,6	;RP1=1, select bank3
  1340     06D5  01B2               	clrf	_i^(0+384)
  1341     06D6  01B3               	clrf	(_i+1)^(0+384)
  1342     06D7                     l3967:
  1343                           
  1344                           ;Lab2.c: 69: CMCON = 0x07;
  1345     06D7  3007               	movlw	7
  1346     06D8  00B4               	movwf	_CMCON^(0+384)
  1347     06D9  3000               	movlw	0
  1348     06DA  00B5               	movwf	(_CMCON^(0+384)+1)
  1349     06DB                     l3969:
  1350                           
  1351                           ;Lab2.c: 70:     InitLCD();
  1352     06DB  160A  158A  23C1  120A  118A  	fcall	_InitLCD
  1353     06E0                     l3971:
  1354                           
  1355                           ;Lab2.c: 71:      ClearLCDScreen();
  1356     06E0  160A  158A  23AF  120A  118A  	fcall	_ClearLCDScreen
  1357     06E5                     l3973:
  1358                           
  1359                           ;Lab2.c: 75:      if (ADCON0bits.GO ==0){
  1360     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1361     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1362     06E7  189F               	btfsc	31,1	;volatile
  1363     06E8  2EEA               	goto	u6521
  1364     06E9  2EEB               	goto	u6520
  1365     06EA                     u6521:
  1366     06EA  2F18               	goto	l3989
  1367     06EB                     u6520:
  1368     06EB                     l3975:
  1369                           
  1370                           ;Lab2.c: 76:            for (i=0;i<=2;i++){
  1371     06EB  1683               	bsf	3,5	;RP0=1, select bank3
  1372     06EC  1703               	bsf	3,6	;RP1=1, select bank3
  1373     06ED  01B2               	clrf	_i^(0+384)
  1374     06EE  01B3               	clrf	(_i+1)^(0+384)
  1375     06EF                     l3981:
  1376                           
  1377                           ;Lab2.c: 77:            ADCON0bits.CHS = i;
  1378     06EF  1683               	bsf	3,5	;RP0=1, select bank3
  1379     06F0  1703               	bsf	3,6	;RP1=1, select bank3
  1380     06F1  0832               	movf	_i^(0+384),w
  1381     06F2  1683               	bsf	3,5	;RP0=1, select bank1
  1382     06F3  1303               	bcf	3,6	;RP1=0, select bank1
  1383     06F4  00E3               	movwf	??_main^(0+128)
  1384     06F5  0DE3               	rlf	??_main^(0+128),f
  1385     06F6  0DE3               	rlf	??_main^(0+128),f
  1386     06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1387     06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1388     06F9  081F               	movf	31,w	;volatile
  1389     06FA  1683               	bsf	3,5	;RP0=1, select bank1
  1390     06FB  1303               	bcf	3,6	;RP1=0, select bank1
  1391     06FC  0663               	xorwf	??_main^(0+128),w
  1392     06FD  39C3               	andlw	-61
  1393     06FE  0663               	xorwf	??_main^(0+128),w
  1394     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1395     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1396     0701  009F               	movwf	31	;volatile
  1397     0702                     l3983:
  1398                           
  1399                           ;Lab2.c: 78:            ADCON0bits.GO =1;
  1400     0702  149F               	bsf	31,1	;volatile
  1401     0703                     l3985:
  1402                           
  1403                           ;Lab2.c: 79:         }
  1404     0703  3001               	movlw	1
  1405     0704  1683               	bsf	3,5	;RP0=1, select bank3
  1406     0705  1703               	bsf	3,6	;RP1=1, select bank3
  1407     0706  07B2               	addwf	_i^(0+384),f
  1408     0707  1803               	skipnc
  1409     0708  0AB3               	incf	(_i+1)^(0+384),f
  1410     0709  3000               	movlw	0
  1411     070A  07B3               	addwf	(_i+1)^(0+384),f
  1412     070B                     l3987:
  1413     070B  0833               	movf	(_i+1)^(0+384),w
  1414     070C  3A80               	xorlw	128
  1415     070D  00FF               	movwf	btemp+1
  1416     070E  3080               	movlw	128
  1417     070F  027F               	subwf	btemp+1,w
  1418     0710  1D03               	skipz
  1419     0711  2F14               	goto	u6535
  1420     0712  3003               	movlw	3
  1421     0713  0232               	subwf	_i^(0+384),w
  1422     0714                     u6535:
  1423     0714  1C03               	skipc
  1424     0715  2F17               	goto	u6531
  1425     0716  2F18               	goto	u6530
  1426     0717                     u6531:
  1427     0717  2EEF               	goto	l3981
  1428     0718                     u6530:
  1429     0718                     l3989:
  1430                           
  1431                           ;Lab2.c: 82:      char s[20];;Lab2.c: 86:      float varvolt2 = map(varvolt,0,255,0,5);
  1432     0718  1683               	bsf	3,5	;RP0=1, select bank3
  1433     0719  1703               	bsf	3,6	;RP1=1, select bank3
  1434     071A  0831               	movf	(_varvolt+3)^(0+384),w
  1435     071B  1683               	bsf	3,5	;RP0=1, select bank1
  1436     071C  1303               	bcf	3,6	;RP1=0, select bank1
  1437     071D  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1438     071E  1683               	bsf	3,5	;RP0=1, select bank3
  1439     071F  1703               	bsf	3,6	;RP1=1, select bank3
  1440     0720  0830               	movf	(_varvolt+2)^(0+384),w
  1441     0721  1683               	bsf	3,5	;RP0=1, select bank1
  1442     0722  1303               	bcf	3,6	;RP1=0, select bank1
  1443     0723  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1444     0724  1683               	bsf	3,5	;RP0=1, select bank3
  1445     0725  1703               	bsf	3,6	;RP1=1, select bank3
  1446     0726  082F               	movf	(_varvolt+1)^(0+384),w
  1447     0727  1683               	bsf	3,5	;RP0=1, select bank1
  1448     0728  1303               	bcf	3,6	;RP1=0, select bank1
  1449     0729  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1450     072A  1683               	bsf	3,5	;RP0=1, select bank3
  1451     072B  1703               	bsf	3,6	;RP1=1, select bank3
  1452     072C  082E               	movf	_varvolt^(0+384),w
  1453     072D  1683               	bsf	3,5	;RP0=1, select bank1
  1454     072E  1303               	bcf	3,6	;RP1=0, select bank1
  1455     072F  00A0               	movwf	___fltol@f1^(0+128)
  1456     0730  160A  158A  2788  120A  118A  	fcall	___fltol
  1457     0735  1683               	bsf	3,5	;RP0=1, select bank1
  1458     0736  1303               	bcf	3,6	;RP1=0, select bank1
  1459     0737  0821               	movf	(?___fltol+1)^(0+128),w
  1460     0738  1683               	bsf	3,5	;RP0=1, select bank3
  1461     0739  1703               	bsf	3,6	;RP1=1, select bank3
  1462     073A  00AD               	movwf	(_main$1092+1)^(0+384)
  1463     073B  1683               	bsf	3,5	;RP0=1, select bank1
  1464     073C  1303               	bcf	3,6	;RP1=0, select bank1
  1465     073D  0820               	movf	?___fltol^(0+128),w
  1466     073E  1683               	bsf	3,5	;RP0=1, select bank3
  1467     073F  1703               	bsf	3,6	;RP1=1, select bank3
  1468     0740  00AC               	movwf	_main$1092^(0+384)
  1469                           
  1470                           ;Lab2.c: 82:      char s[20];;Lab2.c: 86:      float varvolt2 = map(varvolt,0,255,0,5);
  1471     0741  3005               	movlw	5
  1472     0742  1683               	bsf	3,5	;RP0=1, select bank1
  1473     0743  1303               	bcf	3,6	;RP1=0, select bank1
  1474     0744  00C0               	movwf	map@maxsal^(0+128)
  1475     0745  3000               	movlw	0
  1476     0746  00C1               	movwf	(map@maxsal^(0+128)+1)
  1477     0747  3000               	movlw	0
  1478     0748  00BE               	movwf	map@minsal^(0+128)
  1479     0749  00BF               	movwf	(map@minsal+1)^(0+128)
  1480     074A  30FF               	movlw	255
  1481     074B  00BC               	movwf	map@maxval^(0+128)
  1482     074C  3000               	movlw	0
  1483     074D  00BD               	movwf	(map@maxval^(0+128)+1)
  1484     074E  3000               	movlw	0
  1485     074F  00BA               	movwf	map@minval^(0+128)
  1486     0750  00BB               	movwf	(map@minval+1)^(0+128)
  1487     0751  1683               	bsf	3,5	;RP0=1, select bank3
  1488     0752  1703               	bsf	3,6	;RP1=1, select bank3
  1489     0753  082D               	movf	(_main$1092+1)^(0+384),w
  1490     0754  1683               	bsf	3,5	;RP0=1, select bank1
  1491     0755  1303               	bcf	3,6	;RP1=0, select bank1
  1492     0756  00B9               	movwf	(map@varmap+1)^(0+128)
  1493     0757  1683               	bsf	3,5	;RP0=1, select bank3
  1494     0758  1703               	bsf	3,6	;RP1=1, select bank3
  1495     0759  082C               	movf	_main$1092^(0+384),w
  1496     075A  1683               	bsf	3,5	;RP0=1, select bank1
  1497     075B  1303               	bcf	3,6	;RP1=0, select bank1
  1498     075C  00B8               	movwf	map@varmap^(0+128)
  1499     075D  120A  158A  201A  120A  118A  	fcall	_map
  1500     0762  1683               	bsf	3,5	;RP0=1, select bank1
  1501     0763  1303               	bcf	3,6	;RP1=0, select bank1
  1502     0764  0838               	movf	?_map^(0+128),w
  1503     0765  1683               	bsf	3,5	;RP0=1, select bank3
  1504     0766  1703               	bsf	3,6	;RP1=1, select bank3
  1505     0767  00A8               	movwf	_main$1093^(0+384)
  1506     0768  1683               	bsf	3,5	;RP0=1, select bank1
  1507     0769  1303               	bcf	3,6	;RP1=0, select bank1
  1508     076A  0839               	movf	(?_map+1)^(0+128),w
  1509     076B  1683               	bsf	3,5	;RP0=1, select bank3
  1510     076C  1703               	bsf	3,6	;RP1=1, select bank3
  1511     076D  00A9               	movwf	(_main$1093^(0+384)+1)
  1512     076E  01AA               	clrf	(_main$1093^(0+384)+2)
  1513     076F  01AB               	clrf	(_main$1093^(0+384)+3)
  1514                           
  1515                           ;Lab2.c: 82:      char s[20];;Lab2.c: 86:      float varvolt2 = map(varvolt,0,255,0,5);
  1516     0770  082B               	movf	(_main$1093+3)^(0+384),w
  1517     0771  1683               	bsf	3,5	;RP0=1, select bank1
  1518     0772  1303               	bcf	3,6	;RP1=0, select bank1
  1519     0773  00AD               	movwf	(___xxtofl@val+3)^(0+128)
  1520     0774  1683               	bsf	3,5	;RP0=1, select bank3
  1521     0775  1703               	bsf	3,6	;RP1=1, select bank3
  1522     0776  082A               	movf	(_main$1093+2)^(0+384),w
  1523     0777  1683               	bsf	3,5	;RP0=1, select bank1
  1524     0778  1303               	bcf	3,6	;RP1=0, select bank1
  1525     0779  00AC               	movwf	(___xxtofl@val+2)^(0+128)
  1526     077A  1683               	bsf	3,5	;RP0=1, select bank3
  1527     077B  1703               	bsf	3,6	;RP1=1, select bank3
  1528     077C  0829               	movf	(_main$1093+1)^(0+384),w
  1529     077D  1683               	bsf	3,5	;RP0=1, select bank1
  1530     077E  1303               	bcf	3,6	;RP1=0, select bank1
  1531     077F  00AB               	movwf	(___xxtofl@val+1)^(0+128)
  1532     0780  1683               	bsf	3,5	;RP0=1, select bank3
  1533     0781  1703               	bsf	3,6	;RP1=1, select bank3
  1534     0782  0828               	movf	_main$1093^(0+384),w
  1535     0783  1683               	bsf	3,5	;RP0=1, select bank1
  1536     0784  1303               	bcf	3,6	;RP1=0, select bank1
  1537     0785  00AA               	movwf	___xxtofl@val^(0+128)
  1538     0786  3000               	movlw	0
  1539     0787  120A  158A  209E  120A  118A  	fcall	___xxtofl
  1540     078C  1683               	bsf	3,5	;RP0=1, select bank1
  1541     078D  1303               	bcf	3,6	;RP1=0, select bank1
  1542     078E  082D               	movf	(?___xxtofl+3)^(0+128),w
  1543     078F  1683               	bsf	3,5	;RP0=1, select bank3
  1544     0790  1703               	bsf	3,6	;RP1=1, select bank3
  1545     0791  00A7               	movwf	(main@varvolt2+3)^(0+384)
  1546     0792  1683               	bsf	3,5	;RP0=1, select bank1
  1547     0793  1303               	bcf	3,6	;RP1=0, select bank1
  1548     0794  082C               	movf	(?___xxtofl+2)^(0+128),w
  1549     0795  1683               	bsf	3,5	;RP0=1, select bank3
  1550     0796  1703               	bsf	3,6	;RP1=1, select bank3
  1551     0797  00A6               	movwf	(main@varvolt2+2)^(0+384)
  1552     0798  1683               	bsf	3,5	;RP0=1, select bank1
  1553     0799  1303               	bcf	3,6	;RP1=0, select bank1
  1554     079A  082B               	movf	(?___xxtofl+1)^(0+128),w
  1555     079B  1683               	bsf	3,5	;RP0=1, select bank3
  1556     079C  1703               	bsf	3,6	;RP1=1, select bank3
  1557     079D  00A5               	movwf	(main@varvolt2+1)^(0+384)
  1558     079E  1683               	bsf	3,5	;RP0=1, select bank1
  1559     079F  1303               	bcf	3,6	;RP1=0, select bank1
  1560     07A0  082A               	movf	?___xxtofl^(0+128),w
  1561     07A1  1683               	bsf	3,5	;RP0=1, select bank3
  1562     07A2  1703               	bsf	3,6	;RP1=1, select bank3
  1563     07A3  00A4               	movwf	main@varvolt2^(0+384)
  1564     07A4                     l3991:
  1565                           
  1566                           ;Lab2.c: 87:      sprintf(s, "volt= %f", varvolt2);
  1567     07A4  30A1               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1568     07A5  1683               	bsf	3,5	;RP0=1, select bank1
  1569     07A6  1303               	bcf	3,6	;RP1=0, select bank1
  1570     07A7  00C0               	movwf	sprintf@f^(0+128)
  1571     07A8  1683               	bsf	3,5	;RP0=1, select bank3
  1572     07A9  1703               	bsf	3,6	;RP1=1, select bank3
  1573     07AA  0827               	movf	(main@varvolt2+3)^(0+384),w
  1574     07AB  1683               	bsf	3,5	;RP0=1, select bank1
  1575     07AC  1303               	bcf	3,6	;RP1=0, select bank1
  1576     07AD  00C4               	movwf	((?_sprintf+3)^(0+128)+1)
  1577     07AE  1683               	bsf	3,5	;RP0=1, select bank3
  1578     07AF  1703               	bsf	3,6	;RP1=1, select bank3
  1579     07B0  0826               	movf	(main@varvolt2+2)^(0+384),w
  1580     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1581     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1582     07B3  00C3               	movwf	((?_sprintf+2)^(0+128)+1)
  1583     07B4  1683               	bsf	3,5	;RP0=1, select bank3
  1584     07B5  1703               	bsf	3,6	;RP1=1, select bank3
  1585     07B6  0825               	movf	(main@varvolt2+1)^(0+384),w
  1586     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  1587     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  1588     07B9  00C2               	movwf	((?_sprintf+1)^(0+128)+1)
  1589     07BA  1683               	bsf	3,5	;RP0=1, select bank3
  1590     07BB  1703               	bsf	3,6	;RP1=1, select bank3
  1591     07BC  0824               	movf	main@varvolt2^(0+384),w
  1592     07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1593     07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1594     07BF  00C1               	movwf	(?_sprintf^(0+128)+1)
  1595     07C0  3090               	movlw	(low (main@s| (0+256)))& (0+255)
  1596     07C1  120A  118A  2027  120A  118A  	fcall	_sprintf
  1597     07C6                     l3993:
  1598                           
  1599                           ;Lab2.c: 89:         const char msg[] = "AticleWorld.com";;Lab2.c: 90:     ClearLCDScree
      +                          n();
  1600     07C6  160A  158A  23AF  120A  118A  	fcall	_ClearLCDScreen
  1601     07CB                     l3995:
  1602                           
  1603                           ;Lab2.c: 91:     WriteStringToLCD(s);
  1604     07CB  3090               	movlw	(low (main@s| (0+256)))& (0+255)
  1605     07CC  160A  118A  20B5  120A  118A  	fcall	_WriteStringToLCD
  1606     07D1  2EE5               	goto	l3973
  1607     07D2  120A  118A  280E   	ljmp	start
  1608     07D5                     __end_of_main:
  1609                           
  1610                           	psect	text1
  1611     0027                     __ptext1:	
  1612 ;; *************** function _sprintf *****************
  1613 ;; Defined at:
  1614 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  sp              1    wreg     PTR unsigned char 
  1617 ;;		 -> main@s(20), 
  1618 ;;  f               1   32[BANK1 ] PTR const unsigned char 
  1619 ;;		 -> STR_1(9), 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  sp              1   57[BANK1 ] PTR unsigned char 
  1622 ;;		 -> main@s(20), 
  1623 ;;  fval            4   62[BANK1 ] PTR unsigned char 
  1624 ;;  tmpval          4   58[BANK1 ] struct .
  1625 ;;  val             4   51[BANK1 ] unsigned long 
  1626 ;;  eexp            2   55[BANK1 ] int 
  1627 ;;  prec            2   49[BANK1 ] int 
  1628 ;;  flag            2   47[BANK1 ] unsigned short 
  1629 ;;  cp              2    0        PTR const unsigned char 
  1630 ;;  len             2    0        unsigned int 
  1631 ;;  width           2    0        int 
  1632 ;;  c               1   66[BANK1 ] unsigned char 
  1633 ;;  ap              1   46[BANK1 ] PTR void [1]
  1634 ;;		 -> ?_sprintf(2), 
  1635 ;;  d               1    0        unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2   32[BANK1 ] int 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1645 ;;      Params:         0       0       5       0       0
  1646 ;;      Locals:         0       0      25       0       0
  1647 ;;      Temps:          0       0       5       0       0
  1648 ;;      Totals:         0       0      35       0       0
  1649 ;;Total ram usage:       35 bytes
  1650 ;; Hardware stack levels used: 1
  1651 ;; Hardware stack levels required when called: 5
  1652 ;; This function calls:
  1653 ;;		___awdiv
  1654 ;;		___fladd
  1655 ;;		___fleq
  1656 ;;		___flge
  1657 ;;		___flmul
  1658 ;;		___flneg
  1659 ;;		___flsub
  1660 ;;		___fltol
  1661 ;;		___lldiv
  1662 ;;		___llmod
  1663 ;;		___wmul
  1664 ;;		___xxtofl
  1665 ;;		__div_to_l_
  1666 ;;		__tdiv_to_l_
  1667 ;;		_fround
  1668 ;;		_scale
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674     0027                     _sprintf:	
  1675                           ;psect for function _sprintf
  1676                           
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1680                           ;sprintf@sp stored from wreg
  1681     0027  1683               	bsf	3,5	;RP0=1, select bank1
  1682     0028  1303               	bcf	3,6	;RP1=0, select bank1
  1683     0029  00D9               	movwf	sprintf@sp^(0+128)
  1684     002A                     l3789:
  1685                           
  1686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1687     002A  30C1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1688     002B  00CE               	movwf	sprintf@ap^(0+128)
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1691     002C  2EB6               	goto	l3949
  1692     002D                     l3791:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1695     002D  3025               	movlw	37
  1696     002E  0662               	xorwf	sprintf@c^(0+128),w
  1697     002F  1903               	btfsc	3,2
  1698     0030  2832               	goto	u6251
  1699     0031  2833               	goto	u6250
  1700     0032                     u6251:
  1701     0032  283D               	goto	l3797
  1702     0033                     u6250:
  1703     0033                     l3793:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1706     0033  0859               	movf	sprintf@sp^(0+128),w
  1707     0034  0084               	movwf	4
  1708     0035  0862               	movf	sprintf@c^(0+128),w
  1709     0036  1783               	bsf	3,7	;select IRP bank2
  1710     0037  0080               	movwf	0
  1711     0038                     l3795:
  1712     0038  3001               	movlw	1
  1713     0039  00C5               	movwf	??_sprintf^(0+128)
  1714     003A  0845               	movf	??_sprintf^(0+128),w
  1715     003B  07D9               	addwf	sprintf@sp^(0+128),f
  1716                           
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1718     003C  2EB6               	goto	l3949
  1719     003D                     l3797:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1722     003D  01CF               	clrf	sprintf@flag^(0+128)
  1723     003E  01D0               	clrf	(sprintf@flag+1)^(0+128)
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1726     003F  2842               	goto	l3801
  1727     0040                     l307:	
  1728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1729                           
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1732     0040  1550               	bsf	(sprintf@flag^(0+128)+1),2
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 690:    break;
  1735     0041  285C               	goto	l3803
  1736     0042                     l3801:
  1737     0042  3001               	movlw	1
  1738     0043  07C0               	addwf	sprintf@f^(0+128),f
  1739     0044  30FF               	movlw	-1
  1740     0045  0740               	addwf	sprintf@f^(0+128),w
  1741     0046  0084               	movwf	4
  1742     0047  160A  118A  2000  120A  118A  	fcall	stringdir
  1743     004C  00E2               	movwf	sprintf@c^(0+128)
  1744     004D  00C5               	movwf	??_sprintf^(0+128)
  1745     004E  01C6               	clrf	(??_sprintf^(0+128)+1)
  1746                           
  1747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1748                           ; Switch size 1, requested type "simple"
  1749                           ; Number of cases is 1, Range of values is 0 to 0
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte            4     3 (average)
  1753                           ; direct_byte           11     8 (fixed)
  1754                           ; jumptable            260     6 (fixed)
  1755                           ;	Chosen strategy is simple_byte
  1756     004F  0846               	movf	(??_sprintf+1)^(0+128),w
  1757     0050  3A00               	xorlw	0	; case 0
  1758     0051  1903               	skipnz
  1759     0052  2854               	goto	l4027
  1760     0053  2EB6               	goto	l3949
  1761     0054                     l4027:
  1762                           
  1763                           ; Switch size 1, requested type "simple"
  1764                           ; Number of cases is 2, Range of values is 0 to 102
  1765                           ; switch strategies available:
  1766                           ; Name         Instructions Cycles
  1767                           ; simple_byte            7     4 (average)
  1768                           ; jumptable            260     6 (fixed)
  1769                           ;	Chosen strategy is simple_byte
  1770     0054  0845               	movf	??_sprintf^(0+128),w
  1771     0055  3A00               	xorlw	0	; case 0
  1772     0056  1903               	skipnz
  1773     0057  2EC6               	goto	l3951
  1774     0058  3A66               	xorlw	102	; case 102
  1775     0059  1903               	skipnz
  1776     005A  2840               	goto	l307
  1777     005B  2EB6               	goto	l3949
  1778     005C                     l3803:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1781     005C  3000               	movlw	0
  1782     005D  054F               	andwf	sprintf@flag^(0+128),w
  1783     005E  00C5               	movwf	??_sprintf^(0+128)
  1784     005F  3007               	movlw	7
  1785     0060  0550               	andwf	(sprintf@flag+1)^(0+128),w
  1786     0061  00C6               	movwf	(??_sprintf+1)^(0+128)
  1787     0062  0845               	movf	??_sprintf^(0+128),w
  1788     0063  0446               	iorwf	(??_sprintf^(0+128)+1),w
  1789     0064  1903               	btfsc	3,2
  1790     0065  2867               	goto	u6261
  1791     0066  2868               	goto	u6260
  1792     0067                     u6261:
  1793     0067  2EA4               	goto	l3943
  1794     0068                     u6260:
  1795     0068                     l3805:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1798     0068  3006               	movlw	6
  1799     0069  00D1               	movwf	sprintf@prec^(0+128)
  1800     006A  3000               	movlw	0
  1801     006B  00D2               	movwf	(sprintf@prec^(0+128)+1)
  1802     006C                     l3807:
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1805     006C  084E               	movf	sprintf@ap^(0+128),w
  1806     006D  0084               	movwf	4
  1807     006E  1383               	bcf	3,7	;select IRP bank0
  1808     006F  0800               	movf	0,w
  1809     0070  00DE               	movwf	sprintf@fval^(0+128)
  1810     0071  0A84               	incf	4,f
  1811     0072  0800               	movf	0,w
  1812     0073  00DF               	movwf	(sprintf@fval+1)^(0+128)
  1813     0074  0A84               	incf	4,f
  1814     0075  0800               	movf	0,w
  1815     0076  00E0               	movwf	(sprintf@fval+2)^(0+128)
  1816     0077  0A84               	incf	4,f
  1817     0078  0800               	movf	0,w
  1818     0079  00E1               	movwf	(sprintf@fval+3)^(0+128)
  1819     007A                     l3809:
  1820     007A  3004               	movlw	4
  1821     007B  00C5               	movwf	??_sprintf^(0+128)
  1822     007C  0845               	movf	??_sprintf^(0+128),w
  1823     007D  07CE               	addwf	sprintf@ap^(0+128),f
  1824     007E                     l3811:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1827     007E  0861               	movf	(sprintf@fval+3)^(0+128),w
  1828     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1829     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1830     0081  00A9               	movwf	___flge@ff1+3
  1831     0082  1683               	bsf	3,5	;RP0=1, select bank1
  1832     0083  1303               	bcf	3,6	;RP1=0, select bank1
  1833     0084  0860               	movf	(sprintf@fval+2)^(0+128),w
  1834     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1835     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1836     0087  00A8               	movwf	___flge@ff1+2
  1837     0088  1683               	bsf	3,5	;RP0=1, select bank1
  1838     0089  1303               	bcf	3,6	;RP1=0, select bank1
  1839     008A  085F               	movf	(sprintf@fval+1)^(0+128),w
  1840     008B  1283               	bcf	3,5	;RP0=0, select bank0
  1841     008C  1303               	bcf	3,6	;RP1=0, select bank0
  1842     008D  00A7               	movwf	___flge@ff1+1
  1843     008E  1683               	bsf	3,5	;RP0=1, select bank1
  1844     008F  1303               	bcf	3,6	;RP1=0, select bank1
  1845     0090  085E               	movf	sprintf@fval^(0+128),w
  1846     0091  1283               	bcf	3,5	;RP0=0, select bank0
  1847     0092  1303               	bcf	3,6	;RP1=0, select bank0
  1848     0093  00A6               	movwf	___flge@ff1
  1849     0094  3000               	movlw	0
  1850     0095  00AD               	movwf	___flge@ff2+3
  1851     0096  3000               	movlw	0
  1852     0097  00AC               	movwf	___flge@ff2+2
  1853     0098  3000               	movlw	0
  1854     0099  00AB               	movwf	___flge@ff2+1
  1855     009A  3000               	movlw	0
  1856     009B  00AA               	movwf	___flge@ff2
  1857     009C  160A  118A  20D0  120A  118A  	fcall	___flge
  1858     00A1  1803               	btfsc	3,0
  1859     00A2  28A4               	goto	u6271
  1860     00A3  28A5               	goto	u6270
  1861     00A4                     u6271:
  1862     00A4  28DE               	goto	l3817
  1863     00A5                     u6270:
  1864     00A5                     l3813:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1867     00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1868     00A6  1303               	bcf	3,6	;RP1=0, select bank1
  1869     00A7  0861               	movf	(sprintf@fval+3)^(0+128),w
  1870     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1871     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1872     00AA  00A9               	movwf	___flneg@f1+3
  1873     00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1874     00AC  1303               	bcf	3,6	;RP1=0, select bank1
  1875     00AD  0860               	movf	(sprintf@fval+2)^(0+128),w
  1876     00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1877     00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1878     00B0  00A8               	movwf	___flneg@f1+2
  1879     00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1880     00B2  1303               	bcf	3,6	;RP1=0, select bank1
  1881     00B3  085F               	movf	(sprintf@fval+1)^(0+128),w
  1882     00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1883     00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1884     00B6  00A7               	movwf	___flneg@f1+1
  1885     00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1886     00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1887     00B9  085E               	movf	sprintf@fval^(0+128),w
  1888     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1889     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1890     00BC  00A6               	movwf	___flneg@f1
  1891     00BD  160A  158A  23A2  120A  118A  	fcall	___flneg
  1892     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1893     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1894     00C4  0829               	movf	?___flneg+3,w
  1895     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1896     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1897     00C7  00E1               	movwf	(sprintf@fval+3)^(0+128)
  1898     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1899     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1900     00CA  0828               	movf	?___flneg+2,w
  1901     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1902     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1903     00CD  00E0               	movwf	(sprintf@fval+2)^(0+128)
  1904     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1905     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1906     00D0  0827               	movf	?___flneg+1,w
  1907     00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1908     00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1909     00D3  00DF               	movwf	(sprintf@fval+1)^(0+128)
  1910     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1911     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1912     00D6  0826               	movf	?___flneg,w
  1913     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1914     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1915     00D9  00DE               	movwf	sprintf@fval^(0+128)
  1916     00DA                     l3815:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1919     00DA  3003               	movlw	3
  1920     00DB  04CF               	iorwf	sprintf@flag^(0+128),f
  1921     00DC  3000               	movlw	0
  1922     00DD  04D0               	iorwf	(sprintf@flag+1)^(0+128),f
  1923     00DE                     l3817:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1926     00DE  1683               	bsf	3,5	;RP0=1, select bank1
  1927     00DF  1303               	bcf	3,6	;RP1=0, select bank1
  1928     00E0  01D7               	clrf	sprintf@eexp^(0+128)
  1929     00E1  01D8               	clrf	(sprintf@eexp+1)^(0+128)
  1930     00E2                     l3819:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1933     00E2  0861               	movf	(sprintf@fval+3)^(0+128),w
  1934     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1935     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1936     00E5  00A9               	movwf	___fleq@ff1+3
  1937     00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1938     00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1939     00E8  0860               	movf	(sprintf@fval+2)^(0+128),w
  1940     00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1941     00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1942     00EB  00A8               	movwf	___fleq@ff1+2
  1943     00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1944     00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1945     00EE  085F               	movf	(sprintf@fval+1)^(0+128),w
  1946     00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1947     00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1948     00F1  00A7               	movwf	___fleq@ff1+1
  1949     00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1950     00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1951     00F4  085E               	movf	sprintf@fval^(0+128),w
  1952     00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1953     00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1954     00F7  00A6               	movwf	___fleq@ff1
  1955     00F8  3000               	movlw	0
  1956     00F9  00AD               	movwf	___fleq@ff2+3
  1957     00FA  3000               	movlw	0
  1958     00FB  00AC               	movwf	___fleq@ff2+2
  1959     00FC  3000               	movlw	0
  1960     00FD  00AB               	movwf	___fleq@ff2+1
  1961     00FE  3000               	movlw	0
  1962     00FF  00AA               	movwf	___fleq@ff2
  1963     0100  160A  158A  24EA  120A  118A  	fcall	___fleq
  1964     0105  1803               	btfsc	3,0
  1965     0106  2908               	goto	u6281
  1966     0107  2909               	goto	u6280
  1967     0108                     u6281:
  1968     0108  2A35               	goto	l3845
  1969     0109                     u6280:
  1970     0109                     l3821:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1973     0109  1003               	clrc
  1974     010A  1683               	bsf	3,5	;RP0=1, select bank1
  1975     010B  1303               	bcf	3,6	;RP1=0, select bank1
  1976     010C  0D60               	rlf	(sprintf@fval+2)^(0+128),w
  1977     010D  0D61               	rlf	(sprintf@fval+3)^(0+128),w
  1978     010E  3E82               	addlw	130
  1979     010F  00D7               	movwf	sprintf@eexp^(0+128)
  1980     0110  30FF               	movlw	255
  1981     0111  1803               	skipnc
  1982     0112  3000               	movlw	0
  1983     0113  00D8               	movwf	(sprintf@eexp^(0+128)+1)
  1984     0114                     l3823:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1987     0114  30FF               	movlw	255
  1988     0115  07D7               	addwf	sprintf@eexp^(0+128),f
  1989     0116  1803               	skipnc
  1990     0117  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  1991     0118  30FF               	movlw	255
  1992     0119  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  1993     011A                     l3825:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1996     011A  3003               	movlw	3
  1997     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1998     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1999     011D  00A6               	movwf	___wmul@multiplier
  2000     011E  3000               	movlw	0
  2001     011F  00A7               	movwf	___wmul@multiplier+1
  2002     0120  1683               	bsf	3,5	;RP0=1, select bank1
  2003     0121  1303               	bcf	3,6	;RP1=0, select bank1
  2004     0122  0858               	movf	(sprintf@eexp+1)^(0+128),w
  2005     0123  1283               	bcf	3,5	;RP0=0, select bank0
  2006     0124  1303               	bcf	3,6	;RP1=0, select bank0
  2007     0125  00A9               	movwf	___wmul@multiplicand+1
  2008     0126  1683               	bsf	3,5	;RP0=1, select bank1
  2009     0127  1303               	bcf	3,6	;RP1=0, select bank1
  2010     0128  0857               	movf	sprintf@eexp^(0+128),w
  2011     0129  1283               	bcf	3,5	;RP0=0, select bank0
  2012     012A  1303               	bcf	3,6	;RP1=0, select bank0
  2013     012B  00A8               	movwf	___wmul@multiplicand
  2014     012C  160A  158A  2408  120A  118A  	fcall	___wmul
  2015     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2016     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2017     0133  0827               	movf	?___wmul+1,w
  2018     0134  1683               	bsf	3,5	;RP0=1, select bank1
  2019     0135  1303               	bcf	3,6	;RP1=0, select bank1
  2020     0136  00D8               	movwf	(sprintf@eexp+1)^(0+128)
  2021     0137  1283               	bcf	3,5	;RP0=0, select bank0
  2022     0138  1303               	bcf	3,6	;RP1=0, select bank0
  2023     0139  0826               	movf	?___wmul,w
  2024     013A  1683               	bsf	3,5	;RP0=1, select bank1
  2025     013B  1303               	bcf	3,6	;RP1=0, select bank1
  2026     013C  00D7               	movwf	sprintf@eexp^(0+128)
  2027     013D                     l3827:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2030     013D  300A               	movlw	10
  2031     013E  1283               	bcf	3,5	;RP0=0, select bank0
  2032     013F  1303               	bcf	3,6	;RP1=0, select bank0
  2033     0140  00AD               	movwf	___awdiv@divisor
  2034     0141  3000               	movlw	0
  2035     0142  00AE               	movwf	___awdiv@divisor+1
  2036     0143  1683               	bsf	3,5	;RP0=1, select bank1
  2037     0144  1303               	bcf	3,6	;RP1=0, select bank1
  2038     0145  0858               	movf	(sprintf@eexp+1)^(0+128),w
  2039     0146  1283               	bcf	3,5	;RP0=0, select bank0
  2040     0147  1303               	bcf	3,6	;RP1=0, select bank0
  2041     0148  00B0               	movwf	___awdiv@dividend+1
  2042     0149  1683               	bsf	3,5	;RP0=1, select bank1
  2043     014A  1303               	bcf	3,6	;RP1=0, select bank1
  2044     014B  0857               	movf	sprintf@eexp^(0+128),w
  2045     014C  1283               	bcf	3,5	;RP0=0, select bank0
  2046     014D  1303               	bcf	3,6	;RP1=0, select bank0
  2047     014E  00AF               	movwf	___awdiv@dividend
  2048     014F  160A  158A  271F  120A  118A  	fcall	___awdiv
  2049     0154  1283               	bcf	3,5	;RP0=0, select bank0
  2050     0155  1303               	bcf	3,6	;RP1=0, select bank0
  2051     0156  082E               	movf	?___awdiv+1,w
  2052     0157  1683               	bsf	3,5	;RP0=1, select bank1
  2053     0158  1303               	bcf	3,6	;RP1=0, select bank1
  2054     0159  00D8               	movwf	(sprintf@eexp+1)^(0+128)
  2055     015A  1283               	bcf	3,5	;RP0=0, select bank0
  2056     015B  1303               	bcf	3,6	;RP1=0, select bank0
  2057     015C  082D               	movf	?___awdiv,w
  2058     015D  1683               	bsf	3,5	;RP0=1, select bank1
  2059     015E  1303               	bcf	3,6	;RP1=0, select bank1
  2060     015F  00D7               	movwf	sprintf@eexp^(0+128)
  2061     0160                     l3829:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2064     0160  1FD8               	btfss	(sprintf@eexp+1)^(0+128),7
  2065     0161  2963               	goto	u6291
  2066     0162  2964               	goto	u6290
  2067     0163                     u6291:
  2068     0163  296A               	goto	l3833
  2069     0164                     u6290:
  2070     0164                     l3831:
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2073     0164  30FF               	movlw	255
  2074     0165  07D7               	addwf	sprintf@eexp^(0+128),f
  2075     0166  1803               	skipnc
  2076     0167  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2077     0168  30FF               	movlw	255
  2078     0169  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2079     016A                     l3833:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2082     016A  0357               	decf	sprintf@eexp^(0+128),w
  2083     016B  3AFF               	xorlw	255
  2084     016C  120A  158A  249D  120A  118A  	fcall	_scale
  2085     0171  1283               	bcf	3,5	;RP0=0, select bank0
  2086     0172  1303               	bcf	3,6	;RP1=0, select bank0
  2087     0173  0853               	movf	?_scale+3,w
  2088     0174  1683               	bsf	3,5	;RP0=1, select bank1
  2089     0175  1303               	bcf	3,6	;RP1=0, select bank1
  2090     0176  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2091     0177  1283               	bcf	3,5	;RP0=0, select bank0
  2092     0178  1303               	bcf	3,6	;RP1=0, select bank0
  2093     0179  0852               	movf	?_scale+2,w
  2094     017A  1683               	bsf	3,5	;RP0=1, select bank1
  2095     017B  1303               	bcf	3,6	;RP1=0, select bank1
  2096     017C  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2097     017D  1283               	bcf	3,5	;RP0=0, select bank0
  2098     017E  1303               	bcf	3,6	;RP1=0, select bank0
  2099     017F  0851               	movf	?_scale+1,w
  2100     0180  1683               	bsf	3,5	;RP0=1, select bank1
  2101     0181  1303               	bcf	3,6	;RP1=0, select bank1
  2102     0182  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2103     0183  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0184  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0185  0850               	movf	?_scale,w
  2106     0186  1683               	bsf	3,5	;RP0=1, select bank1
  2107     0187  1303               	bcf	3,6	;RP1=0, select bank1
  2108     0188  00DA               	movwf	sprintf@tmpval^(0+128)
  2109     0189                     l3835:
  2110                           
  2111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2112     0189  0861               	movf	(sprintf@fval+3)^(0+128),w
  2113     018A  1283               	bcf	3,5	;RP0=0, select bank0
  2114     018B  1303               	bcf	3,6	;RP1=0, select bank0
  2115     018C  00B9               	movwf	___flmul@b+3
  2116     018D  1683               	bsf	3,5	;RP0=1, select bank1
  2117     018E  1303               	bcf	3,6	;RP1=0, select bank1
  2118     018F  0860               	movf	(sprintf@fval+2)^(0+128),w
  2119     0190  1283               	bcf	3,5	;RP0=0, select bank0
  2120     0191  1303               	bcf	3,6	;RP1=0, select bank0
  2121     0192  00B8               	movwf	___flmul@b+2
  2122     0193  1683               	bsf	3,5	;RP0=1, select bank1
  2123     0194  1303               	bcf	3,6	;RP1=0, select bank1
  2124     0195  085F               	movf	(sprintf@fval+1)^(0+128),w
  2125     0196  1283               	bcf	3,5	;RP0=0, select bank0
  2126     0197  1303               	bcf	3,6	;RP1=0, select bank0
  2127     0198  00B7               	movwf	___flmul@b+1
  2128     0199  1683               	bsf	3,5	;RP0=1, select bank1
  2129     019A  1303               	bcf	3,6	;RP1=0, select bank1
  2130     019B  085E               	movf	sprintf@fval^(0+128),w
  2131     019C  1283               	bcf	3,5	;RP0=0, select bank0
  2132     019D  1303               	bcf	3,6	;RP1=0, select bank0
  2133     019E  00B6               	movwf	___flmul@b
  2134     019F  1683               	bsf	3,5	;RP0=1, select bank1
  2135     01A0  1303               	bcf	3,6	;RP1=0, select bank1
  2136     01A1  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2137     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2138     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2139     01A4  00BD               	movwf	___flmul@a+3
  2140     01A5  1683               	bsf	3,5	;RP0=1, select bank1
  2141     01A6  1303               	bcf	3,6	;RP1=0, select bank1
  2142     01A7  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2143     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2144     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2145     01AA  00BC               	movwf	___flmul@a+2
  2146     01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2147     01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2148     01AD  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2149     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2150     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2151     01B0  00BB               	movwf	___flmul@a+1
  2152     01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2153     01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2154     01B3  085A               	movf	sprintf@tmpval^(0+128),w
  2155     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2156     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2157     01B6  00BA               	movwf	___flmul@a
  2158     01B7  120A  158A  2158  120A  118A  	fcall	___flmul
  2159     01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2160     01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2161     01BE  0839               	movf	?___flmul+3,w
  2162     01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2163     01C0  1303               	bcf	3,6	;RP1=0, select bank1
  2164     01C1  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2165     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2166     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2167     01C4  0838               	movf	?___flmul+2,w
  2168     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2169     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2170     01C7  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2171     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2172     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2173     01CA  0837               	movf	?___flmul+1,w
  2174     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2175     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2176     01CD  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2177     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2178     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  2179     01D0  0836               	movf	?___flmul,w
  2180     01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2181     01D2  1303               	bcf	3,6	;RP1=0, select bank1
  2182     01D3  00DA               	movwf	sprintf@tmpval^(0+128)
  2183     01D4                     l3837:
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2186     01D4  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2187     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2188     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2189     01D7  00A9               	movwf	___flge@ff1+3
  2190     01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2191     01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2192     01DA  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2193     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2194     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  2195     01DD  00A8               	movwf	___flge@ff1+2
  2196     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2197     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  2198     01E0  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2199     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2200     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2201     01E3  00A7               	movwf	___flge@ff1+1
  2202     01E4  1683               	bsf	3,5	;RP0=1, select bank1
  2203     01E5  1303               	bcf	3,6	;RP1=0, select bank1
  2204     01E6  085A               	movf	sprintf@tmpval^(0+128),w
  2205     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2206     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2207     01E9  00A6               	movwf	___flge@ff1
  2208     01EA  303F               	movlw	63
  2209     01EB  00AD               	movwf	___flge@ff2+3
  2210     01EC  3080               	movlw	128
  2211     01ED  00AC               	movwf	___flge@ff2+2
  2212     01EE  3000               	movlw	0
  2213     01EF  00AB               	movwf	___flge@ff2+1
  2214     01F0  3000               	movlw	0
  2215     01F1  00AA               	movwf	___flge@ff2
  2216     01F2  160A  118A  20D0  120A  118A  	fcall	___flge
  2217     01F7  1803               	btfsc	3,0
  2218     01F8  29FA               	goto	u6301
  2219     01F9  29FB               	goto	u6300
  2220     01FA                     u6301:
  2221     01FA  2A04               	goto	l3841
  2222     01FB                     u6300:
  2223     01FB                     l3839:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2226     01FB  30FF               	movlw	255
  2227     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  2228     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  2229     01FE  07D7               	addwf	sprintf@eexp^(0+128),f
  2230     01FF  1803               	skipnc
  2231     0200  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2232     0201  30FF               	movlw	255
  2233     0202  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2234     0203  2A35               	goto	l3845
  2235     0204                     l3841:
  2236     0204  1683               	bsf	3,5	;RP0=1, select bank1
  2237     0205  1303               	bcf	3,6	;RP1=0, select bank1
  2238     0206  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2239     0207  1283               	bcf	3,5	;RP0=0, select bank0
  2240     0208  1303               	bcf	3,6	;RP1=0, select bank0
  2241     0209  00A9               	movwf	___flge@ff1+3
  2242     020A  1683               	bsf	3,5	;RP0=1, select bank1
  2243     020B  1303               	bcf	3,6	;RP1=0, select bank1
  2244     020C  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2245     020D  1283               	bcf	3,5	;RP0=0, select bank0
  2246     020E  1303               	bcf	3,6	;RP1=0, select bank0
  2247     020F  00A8               	movwf	___flge@ff1+2
  2248     0210  1683               	bsf	3,5	;RP0=1, select bank1
  2249     0211  1303               	bcf	3,6	;RP1=0, select bank1
  2250     0212  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2251     0213  1283               	bcf	3,5	;RP0=0, select bank0
  2252     0214  1303               	bcf	3,6	;RP1=0, select bank0
  2253     0215  00A7               	movwf	___flge@ff1+1
  2254     0216  1683               	bsf	3,5	;RP0=1, select bank1
  2255     0217  1303               	bcf	3,6	;RP1=0, select bank1
  2256     0218  085A               	movf	sprintf@tmpval^(0+128),w
  2257     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2258     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2259     021B  00A6               	movwf	___flge@ff1
  2260     021C  3041               	movlw	65
  2261     021D  00AD               	movwf	___flge@ff2+3
  2262     021E  3020               	movlw	32
  2263     021F  00AC               	movwf	___flge@ff2+2
  2264     0220  3000               	movlw	0
  2265     0221  00AB               	movwf	___flge@ff2+1
  2266     0222  3000               	movlw	0
  2267     0223  00AA               	movwf	___flge@ff2
  2268     0224  160A  118A  20D0  120A  118A  	fcall	___flge
  2269     0229  1C03               	btfss	3,0
  2270     022A  2A2C               	goto	u6311
  2271     022B  2A2D               	goto	u6310
  2272     022C                     u6311:
  2273     022C  2A35               	goto	l3845
  2274     022D                     u6310:
  2275     022D                     l3843:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2278     022D  3001               	movlw	1
  2279     022E  1683               	bsf	3,5	;RP0=1, select bank1
  2280     022F  1303               	bcf	3,6	;RP1=0, select bank1
  2281     0230  07D7               	addwf	sprintf@eexp^(0+128),f
  2282     0231  1803               	skipnc
  2283     0232  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2284     0233  3000               	movlw	0
  2285     0234  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2286     0235                     l3845:
  2287     0235                     l3847:	
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2289                           
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2292     0235  3006               	movlw	6
  2293     0236  160A  118A  239B  120A  118A  	fcall	_fround
  2294     023B  1283               	bcf	3,5	;RP0=0, select bank0
  2295     023C  1303               	bcf	3,6	;RP1=0, select bank0
  2296     023D  0853               	movf	?_fround+3,w
  2297     023E  1683               	bsf	3,5	;RP0=1, select bank1
  2298     023F  1303               	bcf	3,6	;RP1=0, select bank1
  2299     0240  00A3               	movwf	(___fladd@b+3)^(0+128)
  2300     0241  1283               	bcf	3,5	;RP0=0, select bank0
  2301     0242  1303               	bcf	3,6	;RP1=0, select bank0
  2302     0243  0852               	movf	?_fround+2,w
  2303     0244  1683               	bsf	3,5	;RP0=1, select bank1
  2304     0245  1303               	bcf	3,6	;RP1=0, select bank1
  2305     0246  00A2               	movwf	(___fladd@b+2)^(0+128)
  2306     0247  1283               	bcf	3,5	;RP0=0, select bank0
  2307     0248  1303               	bcf	3,6	;RP1=0, select bank0
  2308     0249  0851               	movf	?_fround+1,w
  2309     024A  1683               	bsf	3,5	;RP0=1, select bank1
  2310     024B  1303               	bcf	3,6	;RP1=0, select bank1
  2311     024C  00A1               	movwf	(___fladd@b+1)^(0+128)
  2312     024D  1283               	bcf	3,5	;RP0=0, select bank0
  2313     024E  1303               	bcf	3,6	;RP1=0, select bank0
  2314     024F  0850               	movf	?_fround,w
  2315     0250  1683               	bsf	3,5	;RP0=1, select bank1
  2316     0251  1303               	bcf	3,6	;RP1=0, select bank1
  2317     0252  00A0               	movwf	___fladd@b^(0+128)
  2318     0253  0861               	movf	(sprintf@fval+3)^(0+128),w
  2319     0254  00A7               	movwf	(___fladd@a+3)^(0+128)
  2320     0255  0860               	movf	(sprintf@fval+2)^(0+128),w
  2321     0256  00A6               	movwf	(___fladd@a+2)^(0+128)
  2322     0257  085F               	movf	(sprintf@fval+1)^(0+128),w
  2323     0258  00A5               	movwf	(___fladd@a+1)^(0+128)
  2324     0259  085E               	movf	sprintf@fval^(0+128),w
  2325     025A  00A4               	movwf	___fladd@a^(0+128)
  2326     025B  160A  118A  25A8  120A  118A  	fcall	___fladd
  2327     0260  1683               	bsf	3,5	;RP0=1, select bank1
  2328     0261  1303               	bcf	3,6	;RP1=0, select bank1
  2329     0262  0823               	movf	(?___fladd+3)^(0+128),w
  2330     0263  00E1               	movwf	(sprintf@fval+3)^(0+128)
  2331     0264  0822               	movf	(?___fladd+2)^(0+128),w
  2332     0265  00E0               	movwf	(sprintf@fval+2)^(0+128)
  2333     0266  0821               	movf	(?___fladd+1)^(0+128),w
  2334     0267  00DF               	movwf	(sprintf@fval+1)^(0+128)
  2335     0268  0820               	movf	?___fladd^(0+128),w
  2336     0269  00DE               	movwf	sprintf@fval^(0+128)
  2337     026A                     l3849:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2340     026A  0858               	movf	(sprintf@eexp+1)^(0+128),w
  2341     026B  3A80               	xorlw	128
  2342     026C  00FF               	movwf	btemp+1
  2343     026D  3080               	movlw	128
  2344     026E  027F               	subwf	btemp+1,w
  2345     026F  1D03               	skipz
  2346     0270  2A73               	goto	u6325
  2347     0271  300A               	movlw	10
  2348     0272  0257               	subwf	sprintf@eexp^(0+128),w
  2349     0273                     u6325:
  2350     0273  1803               	skipnc
  2351     0274  2A76               	goto	u6321
  2352     0275  2A77               	goto	u6320
  2353     0276                     u6321:
  2354     0276  2AC6               	goto	l3857
  2355     0277                     u6320:
  2356     0277                     l3851:
  2357     0277  1683               	bsf	3,5	;RP0=1, select bank1
  2358     0278  1303               	bcf	3,6	;RP1=0, select bank1
  2359     0279  0861               	movf	(sprintf@fval+3)^(0+128),w
  2360     027A  1283               	bcf	3,5	;RP0=0, select bank0
  2361     027B  1303               	bcf	3,6	;RP1=0, select bank0
  2362     027C  00A9               	movwf	___fleq@ff1+3
  2363     027D  1683               	bsf	3,5	;RP0=1, select bank1
  2364     027E  1303               	bcf	3,6	;RP1=0, select bank1
  2365     027F  0860               	movf	(sprintf@fval+2)^(0+128),w
  2366     0280  1283               	bcf	3,5	;RP0=0, select bank0
  2367     0281  1303               	bcf	3,6	;RP1=0, select bank0
  2368     0282  00A8               	movwf	___fleq@ff1+2
  2369     0283  1683               	bsf	3,5	;RP0=1, select bank1
  2370     0284  1303               	bcf	3,6	;RP1=0, select bank1
  2371     0285  085F               	movf	(sprintf@fval+1)^(0+128),w
  2372     0286  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0287  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0288  00A7               	movwf	___fleq@ff1+1
  2375     0289  1683               	bsf	3,5	;RP0=1, select bank1
  2376     028A  1303               	bcf	3,6	;RP1=0, select bank1
  2377     028B  085E               	movf	sprintf@fval^(0+128),w
  2378     028C  1283               	bcf	3,5	;RP0=0, select bank0
  2379     028D  1303               	bcf	3,6	;RP1=0, select bank0
  2380     028E  00A6               	movwf	___fleq@ff1
  2381     028F  3000               	movlw	0
  2382     0290  00AD               	movwf	___fleq@ff2+3
  2383     0291  3000               	movlw	0
  2384     0292  00AC               	movwf	___fleq@ff2+2
  2385     0293  3000               	movlw	0
  2386     0294  00AB               	movwf	___fleq@ff2+1
  2387     0295  3000               	movlw	0
  2388     0296  00AA               	movwf	___fleq@ff2
  2389     0297  160A  158A  24EA  120A  118A  	fcall	___fleq
  2390     029C  1803               	btfsc	3,0
  2391     029D  2A9F               	goto	u6331
  2392     029E  2AA0               	goto	u6330
  2393     029F                     u6331:
  2394     029F  2B72               	goto	l3871
  2395     02A0                     u6330:
  2396     02A0                     l3853:
  2397     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2398     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  2399     02A2  0861               	movf	(sprintf@fval+3)^(0+128),w
  2400     02A3  00A3               	movwf	(___fltol@f1+3)^(0+128)
  2401     02A4  0860               	movf	(sprintf@fval+2)^(0+128),w
  2402     02A5  00A2               	movwf	(___fltol@f1+2)^(0+128)
  2403     02A6  085F               	movf	(sprintf@fval+1)^(0+128),w
  2404     02A7  00A1               	movwf	(___fltol@f1+1)^(0+128)
  2405     02A8  085E               	movf	sprintf@fval^(0+128),w
  2406     02A9  00A0               	movwf	___fltol@f1^(0+128)
  2407     02AA  160A  158A  2788  120A  118A  	fcall	___fltol
  2408     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2409     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  2410     02B1  0823               	movf	(?___fltol+3)^(0+128),w
  2411     02B2  0422               	iorwf	(?___fltol+2)^(0+128),w
  2412     02B3  0421               	iorwf	(?___fltol+1)^(0+128),w
  2413     02B4  0420               	iorwf	?___fltol^(0+128),w
  2414     02B5  1D03               	skipz
  2415     02B6  2AB8               	goto	u6341
  2416     02B7  2AB9               	goto	u6340
  2417     02B8                     u6341:
  2418     02B8  2B72               	goto	l3871
  2419     02B9                     u6340:
  2420     02B9                     l3855:
  2421     02B9  0858               	movf	(sprintf@eexp+1)^(0+128),w
  2422     02BA  3A80               	xorlw	128
  2423     02BB  00FF               	movwf	btemp+1
  2424     02BC  3080               	movlw	128
  2425     02BD  027F               	subwf	btemp+1,w
  2426     02BE  1D03               	skipz
  2427     02BF  2AC2               	goto	u6355
  2428     02C0  3002               	movlw	2
  2429     02C1  0257               	subwf	sprintf@eexp^(0+128),w
  2430     02C2                     u6355:
  2431     02C2  1C03               	skipc
  2432     02C3  2AC5               	goto	u6351
  2433     02C4  2AC6               	goto	u6350
  2434     02C5                     u6351:
  2435     02C5  2B72               	goto	l3871
  2436     02C6                     u6350:
  2437     02C6                     l3857:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2440     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2441     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2442     02C8  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2443     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  2444     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  2445     02CB  00A9               	movwf	___flge@ff1+3
  2446     02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2447     02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2448     02CE  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2449     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2450     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2451     02D1  00A8               	movwf	___flge@ff1+2
  2452     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2453     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2454     02D4  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2455     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2456     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2457     02D7  00A7               	movwf	___flge@ff1+1
  2458     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2459     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2460     02DA  085A               	movf	sprintf@tmpval^(0+128),w
  2461     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2462     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2463     02DD  00A6               	movwf	___flge@ff1
  2464     02DE  3040               	movlw	64
  2465     02DF  00AD               	movwf	___flge@ff2+3
  2466     02E0  3089               	movlw	137
  2467     02E1  00AC               	movwf	___flge@ff2+2
  2468     02E2  3070               	movlw	112
  2469     02E3  00AB               	movwf	___flge@ff2+1
  2470     02E4  305F               	movlw	95
  2471     02E5  00AA               	movwf	___flge@ff2
  2472     02E6  160A  118A  20D0  120A  118A  	fcall	___flge
  2473     02EB  1803               	btfsc	3,0
  2474     02EC  2AEE               	goto	u6361
  2475     02ED  2AEF               	goto	u6360
  2476     02EE                     u6361:
  2477     02EE  2AF8               	goto	l3861
  2478     02EF                     u6360:
  2479     02EF                     l3859:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2482     02EF  30F7               	movlw	247
  2483     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2484     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2485     02F2  07D7               	addwf	sprintf@eexp^(0+128),f
  2486     02F3  1803               	skipnc
  2487     02F4  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2488     02F5  30FF               	movlw	255
  2489     02F6  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2492     02F7  2B00               	goto	l3863
  2493     02F8                     l3861:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2496     02F8  30F8               	movlw	248
  2497     02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2498     02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2499     02FB  07D7               	addwf	sprintf@eexp^(0+128),f
  2500     02FC  1803               	skipnc
  2501     02FD  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2502     02FE  30FF               	movlw	255
  2503     02FF  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2504     0300                     l3863:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2507     0300  0857               	movf	sprintf@eexp^(0+128),w
  2508     0301  120A  158A  249D  120A  118A  	fcall	_scale
  2509     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2510     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2511     0308  0853               	movf	?_scale+3,w
  2512     0309  1683               	bsf	3,5	;RP0=1, select bank1
  2513     030A  1303               	bcf	3,6	;RP1=0, select bank1
  2514     030B  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2515     030C  1283               	bcf	3,5	;RP0=0, select bank0
  2516     030D  1303               	bcf	3,6	;RP1=0, select bank0
  2517     030E  0852               	movf	?_scale+2,w
  2518     030F  1683               	bsf	3,5	;RP0=1, select bank1
  2519     0310  1303               	bcf	3,6	;RP1=0, select bank1
  2520     0311  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2521     0312  1283               	bcf	3,5	;RP0=0, select bank0
  2522     0313  1303               	bcf	3,6	;RP1=0, select bank0
  2523     0314  0851               	movf	?_scale+1,w
  2524     0315  1683               	bsf	3,5	;RP0=1, select bank1
  2525     0316  1303               	bcf	3,6	;RP1=0, select bank1
  2526     0317  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2527     0318  1283               	bcf	3,5	;RP0=0, select bank0
  2528     0319  1303               	bcf	3,6	;RP1=0, select bank0
  2529     031A  0850               	movf	?_scale,w
  2530     031B  1683               	bsf	3,5	;RP0=1, select bank1
  2531     031C  1303               	bcf	3,6	;RP1=0, select bank1
  2532     031D  00DA               	movwf	sprintf@tmpval^(0+128)
  2533     031E                     l3865:
  2534     031E  0861               	movf	(sprintf@fval+3)^(0+128),w
  2535     031F  1283               	bcf	3,5	;RP0=0, select bank0
  2536     0320  1303               	bcf	3,6	;RP1=0, select bank0
  2537     0321  00A9               	movwf	__div_to_l_@f1+3
  2538     0322  1683               	bsf	3,5	;RP0=1, select bank1
  2539     0323  1303               	bcf	3,6	;RP1=0, select bank1
  2540     0324  0860               	movf	(sprintf@fval+2)^(0+128),w
  2541     0325  1283               	bcf	3,5	;RP0=0, select bank0
  2542     0326  1303               	bcf	3,6	;RP1=0, select bank0
  2543     0327  00A8               	movwf	__div_to_l_@f1+2
  2544     0328  1683               	bsf	3,5	;RP0=1, select bank1
  2545     0329  1303               	bcf	3,6	;RP1=0, select bank1
  2546     032A  085F               	movf	(sprintf@fval+1)^(0+128),w
  2547     032B  1283               	bcf	3,5	;RP0=0, select bank0
  2548     032C  1303               	bcf	3,6	;RP1=0, select bank0
  2549     032D  00A7               	movwf	__div_to_l_@f1+1
  2550     032E  1683               	bsf	3,5	;RP0=1, select bank1
  2551     032F  1303               	bcf	3,6	;RP1=0, select bank1
  2552     0330  085E               	movf	sprintf@fval^(0+128),w
  2553     0331  1283               	bcf	3,5	;RP0=0, select bank0
  2554     0332  1303               	bcf	3,6	;RP1=0, select bank0
  2555     0333  00A6               	movwf	__div_to_l_@f1
  2556     0334  1683               	bsf	3,5	;RP0=1, select bank1
  2557     0335  1303               	bcf	3,6	;RP1=0, select bank1
  2558     0336  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2559     0337  1283               	bcf	3,5	;RP0=0, select bank0
  2560     0338  1303               	bcf	3,6	;RP1=0, select bank0
  2561     0339  00AD               	movwf	__div_to_l_@f2+3
  2562     033A  1683               	bsf	3,5	;RP0=1, select bank1
  2563     033B  1303               	bcf	3,6	;RP1=0, select bank1
  2564     033C  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2565     033D  1283               	bcf	3,5	;RP0=0, select bank0
  2566     033E  1303               	bcf	3,6	;RP1=0, select bank0
  2567     033F  00AC               	movwf	__div_to_l_@f2+2
  2568     0340  1683               	bsf	3,5	;RP0=1, select bank1
  2569     0341  1303               	bcf	3,6	;RP1=0, select bank1
  2570     0342  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2571     0343  1283               	bcf	3,5	;RP0=0, select bank0
  2572     0344  1303               	bcf	3,6	;RP1=0, select bank0
  2573     0345  00AB               	movwf	__div_to_l_@f2+1
  2574     0346  1683               	bsf	3,5	;RP0=1, select bank1
  2575     0347  1303               	bcf	3,6	;RP1=0, select bank1
  2576     0348  085A               	movf	sprintf@tmpval^(0+128),w
  2577     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2578     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2579     034B  00AA               	movwf	__div_to_l_@f2
  2580     034C  160A  118A  22E3  120A  118A  	fcall	__div_to_l_
  2581     0351  1283               	bcf	3,5	;RP0=0, select bank0
  2582     0352  1303               	bcf	3,6	;RP1=0, select bank0
  2583     0353  0829               	movf	?__div_to_l_+3,w
  2584     0354  1683               	bsf	3,5	;RP0=1, select bank1
  2585     0355  1303               	bcf	3,6	;RP1=0, select bank1
  2586     0356  00D6               	movwf	(sprintf@val+3)^(0+128)
  2587     0357  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0358  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0359  0828               	movf	?__div_to_l_+2,w
  2590     035A  1683               	bsf	3,5	;RP0=1, select bank1
  2591     035B  1303               	bcf	3,6	;RP1=0, select bank1
  2592     035C  00D5               	movwf	(sprintf@val+2)^(0+128)
  2593     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2594     035E  1303               	bcf	3,6	;RP1=0, select bank0
  2595     035F  0827               	movf	?__div_to_l_+1,w
  2596     0360  1683               	bsf	3,5	;RP0=1, select bank1
  2597     0361  1303               	bcf	3,6	;RP1=0, select bank1
  2598     0362  00D4               	movwf	(sprintf@val+1)^(0+128)
  2599     0363  1283               	bcf	3,5	;RP0=0, select bank0
  2600     0364  1303               	bcf	3,6	;RP1=0, select bank0
  2601     0365  0826               	movf	?__div_to_l_,w
  2602     0366  1683               	bsf	3,5	;RP0=1, select bank1
  2603     0367  1303               	bcf	3,6	;RP1=0, select bank1
  2604     0368  00D3               	movwf	sprintf@val^(0+128)
  2605     0369                     l3869:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2608     0369  3000               	movlw	0
  2609     036A  00E1               	movwf	(sprintf@fval+3)^(0+128)
  2610     036B  3000               	movlw	0
  2611     036C  00E0               	movwf	(sprintf@fval+2)^(0+128)
  2612     036D  3000               	movlw	0
  2613     036E  00DF               	movwf	(sprintf@fval+1)^(0+128)
  2614     036F  3000               	movlw	0
  2615     0370  00DE               	movwf	sprintf@fval^(0+128)
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2618     0371  2BBC               	goto	l3877
  2619     0372                     l3871:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2622     0372  1683               	bsf	3,5	;RP0=1, select bank1
  2623     0373  1303               	bcf	3,6	;RP1=0, select bank1
  2624     0374  0861               	movf	(sprintf@fval+3)^(0+128),w
  2625     0375  00A3               	movwf	(___fltol@f1+3)^(0+128)
  2626     0376  0860               	movf	(sprintf@fval+2)^(0+128),w
  2627     0377  00A2               	movwf	(___fltol@f1+2)^(0+128)
  2628     0378  085F               	movf	(sprintf@fval+1)^(0+128),w
  2629     0379  00A1               	movwf	(___fltol@f1+1)^(0+128)
  2630     037A  085E               	movf	sprintf@fval^(0+128),w
  2631     037B  00A0               	movwf	___fltol@f1^(0+128)
  2632     037C  160A  158A  2788  120A  118A  	fcall	___fltol
  2633     0381  1683               	bsf	3,5	;RP0=1, select bank1
  2634     0382  1303               	bcf	3,6	;RP1=0, select bank1
  2635     0383  0823               	movf	(?___fltol+3)^(0+128),w
  2636     0384  00D6               	movwf	(sprintf@val+3)^(0+128)
  2637     0385  0822               	movf	(?___fltol+2)^(0+128),w
  2638     0386  00D5               	movwf	(sprintf@val+2)^(0+128)
  2639     0387  0821               	movf	(?___fltol+1)^(0+128),w
  2640     0388  00D4               	movwf	(sprintf@val+1)^(0+128)
  2641     0389  0820               	movf	?___fltol^(0+128),w
  2642     038A  00D3               	movwf	sprintf@val^(0+128)
  2643     038B                     l3873:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2646     038B  0856               	movf	(sprintf@val+3)^(0+128),w
  2647     038C  00AD               	movwf	(___xxtofl@val+3)^(0+128)
  2648     038D  0855               	movf	(sprintf@val+2)^(0+128),w
  2649     038E  00AC               	movwf	(___xxtofl@val+2)^(0+128)
  2650     038F  0854               	movf	(sprintf@val+1)^(0+128),w
  2651     0390  00AB               	movwf	(___xxtofl@val+1)^(0+128)
  2652     0391  0853               	movf	sprintf@val^(0+128),w
  2653     0392  00AA               	movwf	___xxtofl@val^(0+128)
  2654     0393  3000               	movlw	0
  2655     0394  120A  158A  209E  120A  118A  	fcall	___xxtofl
  2656     0399  1683               	bsf	3,5	;RP0=1, select bank1
  2657     039A  1303               	bcf	3,6	;RP1=0, select bank1
  2658     039B  082D               	movf	(?___xxtofl+3)^(0+128),w
  2659     039C  00BB               	movwf	(___flsub@a+3)^(0+128)
  2660     039D  082C               	movf	(?___xxtofl+2)^(0+128),w
  2661     039E  00BA               	movwf	(___flsub@a+2)^(0+128)
  2662     039F  082B               	movf	(?___xxtofl+1)^(0+128),w
  2663     03A0  00B9               	movwf	(___flsub@a+1)^(0+128)
  2664     03A1  082A               	movf	?___xxtofl^(0+128),w
  2665     03A2  00B8               	movwf	___flsub@a^(0+128)
  2666     03A3  0861               	movf	(sprintf@fval+3)^(0+128),w
  2667     03A4  00BF               	movwf	(___flsub@b+3)^(0+128)
  2668     03A5  0860               	movf	(sprintf@fval+2)^(0+128),w
  2669     03A6  00BE               	movwf	(___flsub@b+2)^(0+128)
  2670     03A7  085F               	movf	(sprintf@fval+1)^(0+128),w
  2671     03A8  00BD               	movwf	(___flsub@b+1)^(0+128)
  2672     03A9  085E               	movf	sprintf@fval^(0+128),w
  2673     03AA  00BC               	movwf	___flsub@b^(0+128)
  2674     03AB  160A  158A  23E4  120A  118A  	fcall	___flsub
  2675     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2676     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2677     03B2  083B               	movf	(?___flsub+3)^(0+128),w
  2678     03B3  00E1               	movwf	(sprintf@fval+3)^(0+128)
  2679     03B4  083A               	movf	(?___flsub+2)^(0+128),w
  2680     03B5  00E0               	movwf	(sprintf@fval+2)^(0+128)
  2681     03B6  0839               	movf	(?___flsub+1)^(0+128),w
  2682     03B7  00DF               	movwf	(sprintf@fval+1)^(0+128)
  2683     03B8  0838               	movf	?___flsub^(0+128),w
  2684     03B9  00DE               	movwf	sprintf@fval^(0+128)
  2685     03BA                     l3875:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2688     03BA  01D7               	clrf	sprintf@eexp^(0+128)
  2689     03BB  01D8               	clrf	(sprintf@eexp+1)^(0+128)
  2690     03BC                     l3877:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2693     03BC  01E2               	clrf	sprintf@c^(0+128)
  2694     03BD  0AE2               	incf	sprintf@c^(0+128),f
  2695     03BE                     l3883:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2698     03BE  0862               	movf	sprintf@c^(0+128),w
  2699     03BF  00C5               	movwf	??_sprintf^(0+128)
  2700     03C0  3001               	movlw	1
  2701     03C1                     u6375:
  2702     03C1  1003               	clrc
  2703     03C2  0DC5               	rlf	??_sprintf^(0+128),f
  2704     03C3  3EFF               	addlw	-1
  2705     03C4  1D03               	skipz
  2706     03C5  2BC1               	goto	u6375
  2707     03C6  1003               	clrc
  2708     03C7  0D45               	rlf	??_sprintf^(0+128),w
  2709     03C8  3E79               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2710     03C9  0084               	movwf	4
  2711     03CA  160A  118A  2000  120A  118A  	fcall	stringdir
  2712     03CF  00C6               	movwf	(??_sprintf+1)^(0+128)
  2713     03D0  160A  118A  2000  120A  118A  	fcall	stringdir
  2714     03D5  00C7               	movwf	((??_sprintf+1)^(0+128)+1)
  2715     03D6  160A  118A  2000  120A  118A  	fcall	stringdir
  2716     03DB  00C8               	movwf	((??_sprintf+1)^(0+128)+2)
  2717     03DC  160A  118A  2000  120A  118A  	fcall	stringdir
  2718     03E1  00C9               	movwf	((??_sprintf+1)^(0+128)+3)
  2719     03E2  0849               	movf	(??_sprintf+4)^(0+128),w
  2720     03E3  0256               	subwf	(sprintf@val+3)^(0+128),w
  2721     03E4  1D03               	skipz
  2722     03E5  2BF0               	goto	u6385
  2723     03E6  0848               	movf	(??_sprintf+3)^(0+128),w
  2724     03E7  0255               	subwf	(sprintf@val+2)^(0+128),w
  2725     03E8  1D03               	skipz
  2726     03E9  2BF0               	goto	u6385
  2727     03EA  0847               	movf	(??_sprintf+2)^(0+128),w
  2728     03EB  0254               	subwf	(sprintf@val+1)^(0+128),w
  2729     03EC  1D03               	skipz
  2730     03ED  2BF0               	goto	u6385
  2731     03EE  0846               	movf	(??_sprintf+1)^(0+128),w
  2732     03EF  0253               	subwf	sprintf@val^(0+128),w
  2733     03F0                     u6385:
  2734     03F0  1803               	skipnc
  2735     03F1  2BF3               	goto	u6381
  2736     03F2  2BF4               	goto	u6380
  2737     03F3                     u6381:
  2738     03F3  2BF5               	goto	l3887
  2739     03F4                     u6380:
  2740     03F4  2BFF               	goto	l3889
  2741     03F5                     l3887:
  2742     03F5  3001               	movlw	1
  2743     03F6  00C5               	movwf	??_sprintf^(0+128)
  2744     03F7  0845               	movf	??_sprintf^(0+128),w
  2745     03F8  07E2               	addwf	sprintf@c^(0+128),f
  2746     03F9  300A               	movlw	10
  2747     03FA  0662               	xorwf	sprintf@c^(0+128),w
  2748     03FB  1D03               	btfss	3,2
  2749     03FC  2BFE               	goto	u6391
  2750     03FD  2BFF               	goto	u6390
  2751     03FE                     u6391:
  2752     03FE  2BBE               	goto	l3883
  2753     03FF                     u6390:
  2754     03FF                     l3889:
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2757     03FF  3003               	movlw	3
  2758     0400  054F               	andwf	sprintf@flag^(0+128),w
  2759     0401  00C5               	movwf	??_sprintf^(0+128)
  2760     0402  3000               	movlw	0
  2761     0403  0550               	andwf	(sprintf@flag+1)^(0+128),w
  2762     0404  00C6               	movwf	(??_sprintf+1)^(0+128)
  2763     0405  0845               	movf	??_sprintf^(0+128),w
  2764     0406  0446               	iorwf	(??_sprintf^(0+128)+1),w
  2765     0407  1903               	btfsc	3,2
  2766     0408  2C0A               	goto	u6401
  2767     0409  2C0B               	goto	u6400
  2768     040A                     u6401:
  2769     040A  2CB9               	goto	l332
  2770     040B                     u6400:
  2771     040B                     l3891:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2774     040B  0859               	movf	sprintf@sp^(0+128),w
  2775     040C  0084               	movwf	4
  2776     040D  302D               	movlw	45
  2777     040E  1783               	bsf	3,7	;select IRP bank2
  2778     040F  0080               	movwf	0
  2779     0410                     l3893:
  2780     0410  3001               	movlw	1
  2781     0411  00C5               	movwf	??_sprintf^(0+128)
  2782     0412  0845               	movf	??_sprintf^(0+128),w
  2783     0413  07D9               	addwf	sprintf@sp^(0+128),f
  2784     0414  2CB9               	goto	l332
  2785     0415                     l3895:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2788     0415  0862               	movf	sprintf@c^(0+128),w
  2789     0416  00C5               	movwf	??_sprintf^(0+128)
  2790     0417  3001               	movlw	1
  2791     0418                     u6415:
  2792     0418  1003               	clrc
  2793     0419  0DC5               	rlf	??_sprintf^(0+128),f
  2794     041A  3EFF               	addlw	-1
  2795     041B  1D03               	skipz
  2796     041C  2C18               	goto	u6415
  2797     041D  1003               	clrc
  2798     041E  0D45               	rlf	??_sprintf^(0+128),w
  2799     041F  3E79               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2800     0420  0084               	movwf	4
  2801     0421  160A  118A  2000  120A  118A  	fcall	stringdir
  2802     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2803     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2804     0428  00A6               	movwf	___lldiv@divisor
  2805     0429  160A  118A  2000  120A  118A  	fcall	stringdir
  2806     042E  00A7               	movwf	___lldiv@divisor+1
  2807     042F  160A  118A  2000  120A  118A  	fcall	stringdir
  2808     0434  00A8               	movwf	___lldiv@divisor+2
  2809     0435  160A  118A  2000  120A  118A  	fcall	stringdir
  2810     043A  00A9               	movwf	___lldiv@divisor+3
  2811     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2812     043C  1303               	bcf	3,6	;RP1=0, select bank1
  2813     043D  0856               	movf	(sprintf@val+3)^(0+128),w
  2814     043E  1283               	bcf	3,5	;RP0=0, select bank0
  2815     043F  1303               	bcf	3,6	;RP1=0, select bank0
  2816     0440  00AD               	movwf	___lldiv@dividend+3
  2817     0441  1683               	bsf	3,5	;RP0=1, select bank1
  2818     0442  1303               	bcf	3,6	;RP1=0, select bank1
  2819     0443  0855               	movf	(sprintf@val+2)^(0+128),w
  2820     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2821     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2822     0446  00AC               	movwf	___lldiv@dividend+2
  2823     0447  1683               	bsf	3,5	;RP0=1, select bank1
  2824     0448  1303               	bcf	3,6	;RP1=0, select bank1
  2825     0449  0854               	movf	(sprintf@val+1)^(0+128),w
  2826     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2827     044B  1303               	bcf	3,6	;RP1=0, select bank0
  2828     044C  00AB               	movwf	___lldiv@dividend+1
  2829     044D  1683               	bsf	3,5	;RP0=1, select bank1
  2830     044E  1303               	bcf	3,6	;RP1=0, select bank1
  2831     044F  0853               	movf	sprintf@val^(0+128),w
  2832     0450  1283               	bcf	3,5	;RP0=0, select bank0
  2833     0451  1303               	bcf	3,6	;RP1=0, select bank0
  2834     0452  00AA               	movwf	___lldiv@dividend
  2835     0453  160A  158A  26B7  120A  118A  	fcall	___lldiv
  2836     0458  1283               	bcf	3,5	;RP0=0, select bank0
  2837     0459  1303               	bcf	3,6	;RP1=0, select bank0
  2838     045A  0829               	movf	?___lldiv+3,w
  2839     045B  1683               	bsf	3,5	;RP0=1, select bank1
  2840     045C  1303               	bcf	3,6	;RP1=0, select bank1
  2841     045D  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2842     045E  1283               	bcf	3,5	;RP0=0, select bank0
  2843     045F  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0460  0828               	movf	?___lldiv+2,w
  2845     0461  1683               	bsf	3,5	;RP0=1, select bank1
  2846     0462  1303               	bcf	3,6	;RP1=0, select bank1
  2847     0463  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2848     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2849     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2850     0466  0827               	movf	?___lldiv+1,w
  2851     0467  1683               	bsf	3,5	;RP0=1, select bank1
  2852     0468  1303               	bcf	3,6	;RP1=0, select bank1
  2853     0469  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2854     046A  1283               	bcf	3,5	;RP0=0, select bank0
  2855     046B  1303               	bcf	3,6	;RP1=0, select bank0
  2856     046C  0826               	movf	?___lldiv,w
  2857     046D  1683               	bsf	3,5	;RP0=1, select bank1
  2858     046E  1303               	bcf	3,6	;RP1=0, select bank1
  2859     046F  00DA               	movwf	sprintf@tmpval^(0+128)
  2860     0470                     l3897:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2863     0470  3000               	movlw	0
  2864     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2865     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0473  00A9               	movwf	___llmod@divisor+3
  2867     0474  3000               	movlw	0
  2868     0475  00A8               	movwf	___llmod@divisor+2
  2869     0476  3000               	movlw	0
  2870     0477  00A7               	movwf	___llmod@divisor+1
  2871     0478  300A               	movlw	10
  2872     0479  00A6               	movwf	___llmod@divisor
  2873     047A  1683               	bsf	3,5	;RP0=1, select bank1
  2874     047B  1303               	bcf	3,6	;RP1=0, select bank1
  2875     047C  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  2876     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2877     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2878     047F  00AD               	movwf	___llmod@dividend+3
  2879     0480  1683               	bsf	3,5	;RP0=1, select bank1
  2880     0481  1303               	bcf	3,6	;RP1=0, select bank1
  2881     0482  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  2882     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2883     0484  1303               	bcf	3,6	;RP1=0, select bank0
  2884     0485  00AC               	movwf	___llmod@dividend+2
  2885     0486  1683               	bsf	3,5	;RP0=1, select bank1
  2886     0487  1303               	bcf	3,6	;RP1=0, select bank1
  2887     0488  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  2888     0489  1283               	bcf	3,5	;RP0=0, select bank0
  2889     048A  1303               	bcf	3,6	;RP1=0, select bank0
  2890     048B  00AB               	movwf	___llmod@dividend+1
  2891     048C  1683               	bsf	3,5	;RP0=1, select bank1
  2892     048D  1303               	bcf	3,6	;RP1=0, select bank1
  2893     048E  085A               	movf	sprintf@tmpval^(0+128),w
  2894     048F  1283               	bcf	3,5	;RP0=0, select bank0
  2895     0490  1303               	bcf	3,6	;RP1=0, select bank0
  2896     0491  00AA               	movwf	___llmod@dividend
  2897     0492  160A  158A  253A  120A  118A  	fcall	___llmod
  2898     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2899     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2900     0499  0829               	movf	?___llmod+3,w
  2901     049A  1683               	bsf	3,5	;RP0=1, select bank1
  2902     049B  1303               	bcf	3,6	;RP1=0, select bank1
  2903     049C  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  2904     049D  1283               	bcf	3,5	;RP0=0, select bank0
  2905     049E  1303               	bcf	3,6	;RP1=0, select bank0
  2906     049F  0828               	movf	?___llmod+2,w
  2907     04A0  1683               	bsf	3,5	;RP0=1, select bank1
  2908     04A1  1303               	bcf	3,6	;RP1=0, select bank1
  2909     04A2  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  2910     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2911     04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2912     04A5  0827               	movf	?___llmod+1,w
  2913     04A6  1683               	bsf	3,5	;RP0=1, select bank1
  2914     04A7  1303               	bcf	3,6	;RP1=0, select bank1
  2915     04A8  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  2916     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2917     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2918     04AB  0826               	movf	?___llmod,w
  2919     04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2920     04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2921     04AE  00DA               	movwf	sprintf@tmpval^(0+128)
  2922     04AF                     l3899:
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2925     04AF  0859               	movf	sprintf@sp^(0+128),w
  2926     04B0  0084               	movwf	4
  2927     04B1  085A               	movf	sprintf@tmpval^(0+128),w
  2928     04B2  3E30               	addlw	48
  2929     04B3  1783               	bsf	3,7	;select IRP bank2
  2930     04B4  0080               	movwf	0
  2931     04B5  3001               	movlw	1
  2932     04B6  00C5               	movwf	??_sprintf^(0+128)
  2933     04B7  0845               	movf	??_sprintf^(0+128),w
  2934     04B8  07D9               	addwf	sprintf@sp^(0+128),f
  2935     04B9                     l332:	
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1232:    }
  2937                           
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2940     04B9  3001               	movlw	1
  2941     04BA  02E2               	subwf	sprintf@c^(0+128),f
  2942     04BB  0A62               	incf	sprintf@c^(0+128),w
  2943     04BC  1D03               	btfss	3,2
  2944     04BD  2CBF               	goto	u6421
  2945     04BE  2CC0               	goto	u6420
  2946     04BF                     u6421:
  2947     04BF  2C15               	goto	l3895
  2948     04C0                     u6420:
  2949     04C0  2CD2               	goto	l3907
  2950     04C1                     l3901:
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2953     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  2954     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  2955     04C3  0859               	movf	sprintf@sp^(0+128),w
  2956     04C4  0084               	movwf	4
  2957     04C5  3030               	movlw	48
  2958     04C6  1783               	bsf	3,7	;select IRP bank2
  2959     04C7  0080               	movwf	0
  2960     04C8                     l3903:
  2961     04C8  3001               	movlw	1
  2962     04C9  00C5               	movwf	??_sprintf^(0+128)
  2963     04CA  0845               	movf	??_sprintf^(0+128),w
  2964     04CB  07D9               	addwf	sprintf@sp^(0+128),f
  2965     04CC                     l3905:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2968     04CC  30FF               	movlw	255
  2969     04CD  07D7               	addwf	sprintf@eexp^(0+128),f
  2970     04CE  1803               	skipnc
  2971     04CF  0AD8               	incf	(sprintf@eexp+1)^(0+128),f
  2972     04D0  30FF               	movlw	255
  2973     04D1  07D8               	addwf	(sprintf@eexp+1)^(0+128),f
  2974     04D2                     l3907:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2977     04D2  0858               	movf	(sprintf@eexp+1)^(0+128),w
  2978     04D3  3A80               	xorlw	128
  2979     04D4  00FF               	movwf	btemp+1
  2980     04D5  3080               	movlw	128
  2981     04D6  027F               	subwf	btemp+1,w
  2982     04D7  1D03               	skipz
  2983     04D8  2CDB               	goto	u6435
  2984     04D9  3001               	movlw	1
  2985     04DA  0257               	subwf	sprintf@eexp^(0+128),w
  2986     04DB                     u6435:
  2987     04DB  1803               	skipnc
  2988     04DC  2CDE               	goto	u6431
  2989     04DD  2CDF               	goto	u6430
  2990     04DE                     u6431:
  2991     04DE  2CC1               	goto	l3901
  2992     04DF                     u6430:
  2993     04DF                     l3909:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2996     04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2997     04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2998     04E1  0852               	movf	(sprintf@prec+1)^(0+128),w
  2999     04E2  3A80               	xorlw	128
  3000     04E3  00FF               	movwf	btemp+1
  3001     04E4  3080               	movlw	128
  3002     04E5  027F               	subwf	btemp+1,w
  3003     04E6  1D03               	skipz
  3004     04E7  2CEA               	goto	u6445
  3005     04E8  3009               	movlw	9
  3006     04E9  0251               	subwf	sprintf@prec^(0+128),w
  3007     04EA                     u6445:
  3008     04EA  1C03               	skipc
  3009     04EB  2CED               	goto	u6441
  3010     04EC  2CEE               	goto	u6440
  3011     04ED                     u6441:
  3012     04ED  2CF3               	goto	l3913
  3013     04EE                     u6440:
  3014     04EE                     l3911:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3017     04EE  3008               	movlw	8
  3018     04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3019     04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3020     04F1  00E2               	movwf	sprintf@c^(0+128)
  3021     04F2  2CF7               	goto	l339
  3022     04F3                     l3913:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3025     04F3  1683               	bsf	3,5	;RP0=1, select bank1
  3026     04F4  1303               	bcf	3,6	;RP1=0, select bank1
  3027     04F5  0851               	movf	sprintf@prec^(0+128),w
  3028     04F6  00E2               	movwf	sprintf@c^(0+128)
  3029     04F7                     l339:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3032     04F7  0862               	movf	sprintf@c^(0+128),w
  3033     04F8  00C5               	movwf	??_sprintf^(0+128)
  3034     04F9  01C6               	clrf	(??_sprintf^(0+128)+1)
  3035     04FA  0845               	movf	??_sprintf^(0+128),w
  3036     04FB  02D1               	subwf	sprintf@prec^(0+128),f
  3037     04FC  0846               	movf	(??_sprintf+1)^(0+128),w
  3038     04FD  1C03               	skipc
  3039     04FE  03D2               	decf	(sprintf@prec+1)^(0+128),f
  3040     04FF  02D2               	subwf	(sprintf@prec+1)^(0+128),f
  3041     0500                     l3915:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3044     0500  0862               	movf	sprintf@c^(0+128),w
  3045     0501  1903               	btfsc	3,2
  3046     0502  2D04               	goto	u6451
  3047     0503  2D05               	goto	u6450
  3048     0504                     u6451:
  3049     0504  2D0E               	goto	l3921
  3050     0505                     u6450:
  3051     0505                     l3917:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3054     0505  0859               	movf	sprintf@sp^(0+128),w
  3055     0506  0084               	movwf	4
  3056     0507  302E               	movlw	46
  3057     0508  1783               	bsf	3,7	;select IRP bank2
  3058     0509  0080               	movwf	0
  3059     050A                     l3919:
  3060     050A  3001               	movlw	1
  3061     050B  00C5               	movwf	??_sprintf^(0+128)
  3062     050C  0845               	movf	??_sprintf^(0+128),w
  3063     050D  07D9               	addwf	sprintf@sp^(0+128),f
  3064     050E                     l3921:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3067     050E  0862               	movf	sprintf@c^(0+128),w
  3068     050F  120A  158A  249D  120A  118A  	fcall	_scale
  3069     0514  1283               	bcf	3,5	;RP0=0, select bank0
  3070     0515  1303               	bcf	3,6	;RP1=0, select bank0
  3071     0516  0853               	movf	?_scale+3,w
  3072     0517  1683               	bsf	3,5	;RP0=1, select bank1
  3073     0518  1303               	bcf	3,6	;RP1=0, select bank1
  3074     0519  00CD               	movwf	(_sprintf$1097+3)^(0+128)
  3075     051A  1283               	bcf	3,5	;RP0=0, select bank0
  3076     051B  1303               	bcf	3,6	;RP1=0, select bank0
  3077     051C  0852               	movf	?_scale+2,w
  3078     051D  1683               	bsf	3,5	;RP0=1, select bank1
  3079     051E  1303               	bcf	3,6	;RP1=0, select bank1
  3080     051F  00CC               	movwf	(_sprintf$1097+2)^(0+128)
  3081     0520  1283               	bcf	3,5	;RP0=0, select bank0
  3082     0521  1303               	bcf	3,6	;RP1=0, select bank0
  3083     0522  0851               	movf	?_scale+1,w
  3084     0523  1683               	bsf	3,5	;RP0=1, select bank1
  3085     0524  1303               	bcf	3,6	;RP1=0, select bank1
  3086     0525  00CB               	movwf	(_sprintf$1097+1)^(0+128)
  3087     0526  1283               	bcf	3,5	;RP0=0, select bank0
  3088     0527  1303               	bcf	3,6	;RP1=0, select bank0
  3089     0528  0850               	movf	?_scale,w
  3090     0529  1683               	bsf	3,5	;RP0=1, select bank1
  3091     052A  1303               	bcf	3,6	;RP1=0, select bank1
  3092     052B  00CA               	movwf	_sprintf$1097^(0+128)
  3093     052C                     l3923:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3096     052C  084D               	movf	(_sprintf$1097+3)^(0+128),w
  3097     052D  1283               	bcf	3,5	;RP0=0, select bank0
  3098     052E  1303               	bcf	3,6	;RP1=0, select bank0
  3099     052F  00BD               	movwf	___flmul@a+3
  3100     0530  1683               	bsf	3,5	;RP0=1, select bank1
  3101     0531  1303               	bcf	3,6	;RP1=0, select bank1
  3102     0532  084C               	movf	(_sprintf$1097+2)^(0+128),w
  3103     0533  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0534  1303               	bcf	3,6	;RP1=0, select bank0
  3105     0535  00BC               	movwf	___flmul@a+2
  3106     0536  1683               	bsf	3,5	;RP0=1, select bank1
  3107     0537  1303               	bcf	3,6	;RP1=0, select bank1
  3108     0538  084B               	movf	(_sprintf$1097+1)^(0+128),w
  3109     0539  1283               	bcf	3,5	;RP0=0, select bank0
  3110     053A  1303               	bcf	3,6	;RP1=0, select bank0
  3111     053B  00BB               	movwf	___flmul@a+1
  3112     053C  1683               	bsf	3,5	;RP0=1, select bank1
  3113     053D  1303               	bcf	3,6	;RP1=0, select bank1
  3114     053E  084A               	movf	_sprintf$1097^(0+128),w
  3115     053F  1283               	bcf	3,5	;RP0=0, select bank0
  3116     0540  1303               	bcf	3,6	;RP1=0, select bank0
  3117     0541  00BA               	movwf	___flmul@a
  3118     0542  1683               	bsf	3,5	;RP0=1, select bank1
  3119     0543  1303               	bcf	3,6	;RP1=0, select bank1
  3120     0544  0861               	movf	(sprintf@fval+3)^(0+128),w
  3121     0545  1283               	bcf	3,5	;RP0=0, select bank0
  3122     0546  1303               	bcf	3,6	;RP1=0, select bank0
  3123     0547  00B9               	movwf	___flmul@b+3
  3124     0548  1683               	bsf	3,5	;RP0=1, select bank1
  3125     0549  1303               	bcf	3,6	;RP1=0, select bank1
  3126     054A  0860               	movf	(sprintf@fval+2)^(0+128),w
  3127     054B  1283               	bcf	3,5	;RP0=0, select bank0
  3128     054C  1303               	bcf	3,6	;RP1=0, select bank0
  3129     054D  00B8               	movwf	___flmul@b+2
  3130     054E  1683               	bsf	3,5	;RP0=1, select bank1
  3131     054F  1303               	bcf	3,6	;RP1=0, select bank1
  3132     0550  085F               	movf	(sprintf@fval+1)^(0+128),w
  3133     0551  1283               	bcf	3,5	;RP0=0, select bank0
  3134     0552  1303               	bcf	3,6	;RP1=0, select bank0
  3135     0553  00B7               	movwf	___flmul@b+1
  3136     0554  1683               	bsf	3,5	;RP0=1, select bank1
  3137     0555  1303               	bcf	3,6	;RP1=0, select bank1
  3138     0556  085E               	movf	sprintf@fval^(0+128),w
  3139     0557  1283               	bcf	3,5	;RP0=0, select bank0
  3140     0558  1303               	bcf	3,6	;RP1=0, select bank0
  3141     0559  00B6               	movwf	___flmul@b
  3142     055A  120A  158A  2158  120A  118A  	fcall	___flmul
  3143     055F  1283               	bcf	3,5	;RP0=0, select bank0
  3144     0560  1303               	bcf	3,6	;RP1=0, select bank0
  3145     0561  0839               	movf	?___flmul+3,w
  3146     0562  1683               	bsf	3,5	;RP0=1, select bank1
  3147     0563  1303               	bcf	3,6	;RP1=0, select bank1
  3148     0564  00A3               	movwf	(___fltol@f1+3)^(0+128)
  3149     0565  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0566  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0567  0838               	movf	?___flmul+2,w
  3152     0568  1683               	bsf	3,5	;RP0=1, select bank1
  3153     0569  1303               	bcf	3,6	;RP1=0, select bank1
  3154     056A  00A2               	movwf	(___fltol@f1+2)^(0+128)
  3155     056B  1283               	bcf	3,5	;RP0=0, select bank0
  3156     056C  1303               	bcf	3,6	;RP1=0, select bank0
  3157     056D  0837               	movf	?___flmul+1,w
  3158     056E  1683               	bsf	3,5	;RP0=1, select bank1
  3159     056F  1303               	bcf	3,6	;RP1=0, select bank1
  3160     0570  00A1               	movwf	(___fltol@f1+1)^(0+128)
  3161     0571  1283               	bcf	3,5	;RP0=0, select bank0
  3162     0572  1303               	bcf	3,6	;RP1=0, select bank0
  3163     0573  0836               	movf	?___flmul,w
  3164     0574  1683               	bsf	3,5	;RP0=1, select bank1
  3165     0575  1303               	bcf	3,6	;RP1=0, select bank1
  3166     0576  00A0               	movwf	___fltol@f1^(0+128)
  3167     0577  160A  158A  2788  120A  118A  	fcall	___fltol
  3168     057C  1683               	bsf	3,5	;RP0=1, select bank1
  3169     057D  1303               	bcf	3,6	;RP1=0, select bank1
  3170     057E  0823               	movf	(?___fltol+3)^(0+128),w
  3171     057F  00D6               	movwf	(sprintf@val+3)^(0+128)
  3172     0580  0822               	movf	(?___fltol+2)^(0+128),w
  3173     0581  00D5               	movwf	(sprintf@val+2)^(0+128)
  3174     0582  0821               	movf	(?___fltol+1)^(0+128),w
  3175     0583  00D4               	movwf	(sprintf@val+1)^(0+128)
  3176     0584  0820               	movf	?___fltol^(0+128),w
  3177     0585  00D3               	movwf	sprintf@val^(0+128)
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3180     0586  2E86               	goto	l3933
  3181     0587                     l3925:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3184     0587  0862               	movf	sprintf@c^(0+128),w
  3185     0588  00C5               	movwf	??_sprintf^(0+128)
  3186     0589  3001               	movlw	1
  3187     058A                     u6465:
  3188     058A  1003               	clrc
  3189     058B  0DC5               	rlf	??_sprintf^(0+128),f
  3190     058C  3EFF               	addlw	-1
  3191     058D  1D03               	skipz
  3192     058E  2D8A               	goto	u6465
  3193     058F  1003               	clrc
  3194     0590  0D45               	rlf	??_sprintf^(0+128),w
  3195     0591  3E79               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3196     0592  0084               	movwf	4
  3197     0593  160A  118A  2000  120A  118A  	fcall	stringdir
  3198     0598  1283               	bcf	3,5	;RP0=0, select bank0
  3199     0599  1303               	bcf	3,6	;RP1=0, select bank0
  3200     059A  00A6               	movwf	___lldiv@divisor
  3201     059B  160A  118A  2000  120A  118A  	fcall	stringdir
  3202     05A0  00A7               	movwf	___lldiv@divisor+1
  3203     05A1  160A  118A  2000  120A  118A  	fcall	stringdir
  3204     05A6  00A8               	movwf	___lldiv@divisor+2
  3205     05A7  160A  118A  2000  120A  118A  	fcall	stringdir
  3206     05AC  00A9               	movwf	___lldiv@divisor+3
  3207     05AD  1683               	bsf	3,5	;RP0=1, select bank1
  3208     05AE  1303               	bcf	3,6	;RP1=0, select bank1
  3209     05AF  0856               	movf	(sprintf@val+3)^(0+128),w
  3210     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3211     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3212     05B2  00AD               	movwf	___lldiv@dividend+3
  3213     05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3214     05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3215     05B5  0855               	movf	(sprintf@val+2)^(0+128),w
  3216     05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3217     05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3218     05B8  00AC               	movwf	___lldiv@dividend+2
  3219     05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3220     05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3221     05BB  0854               	movf	(sprintf@val+1)^(0+128),w
  3222     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3223     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3224     05BE  00AB               	movwf	___lldiv@dividend+1
  3225     05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3226     05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3227     05C1  0853               	movf	sprintf@val^(0+128),w
  3228     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3229     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3230     05C4  00AA               	movwf	___lldiv@dividend
  3231     05C5  160A  158A  26B7  120A  118A  	fcall	___lldiv
  3232     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3233     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3234     05CC  0829               	movf	?___lldiv+3,w
  3235     05CD  1683               	bsf	3,5	;RP0=1, select bank1
  3236     05CE  1303               	bcf	3,6	;RP1=0, select bank1
  3237     05CF  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  3238     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3239     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3240     05D2  0828               	movf	?___lldiv+2,w
  3241     05D3  1683               	bsf	3,5	;RP0=1, select bank1
  3242     05D4  1303               	bcf	3,6	;RP1=0, select bank1
  3243     05D5  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  3244     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3245     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3246     05D8  0827               	movf	?___lldiv+1,w
  3247     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3248     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3249     05DB  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  3250     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3251     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3252     05DE  0826               	movf	?___lldiv,w
  3253     05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3254     05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3255     05E1  00DA               	movwf	sprintf@tmpval^(0+128)
  3256     05E2                     l3927:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3259     05E2  3000               	movlw	0
  3260     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3261     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3262     05E5  00A9               	movwf	___llmod@divisor+3
  3263     05E6  3000               	movlw	0
  3264     05E7  00A8               	movwf	___llmod@divisor+2
  3265     05E8  3000               	movlw	0
  3266     05E9  00A7               	movwf	___llmod@divisor+1
  3267     05EA  300A               	movlw	10
  3268     05EB  00A6               	movwf	___llmod@divisor
  3269     05EC  1683               	bsf	3,5	;RP0=1, select bank1
  3270     05ED  1303               	bcf	3,6	;RP1=0, select bank1
  3271     05EE  085D               	movf	(sprintf@tmpval+3)^(0+128),w
  3272     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3273     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3274     05F1  00AD               	movwf	___llmod@dividend+3
  3275     05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3276     05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3277     05F4  085C               	movf	(sprintf@tmpval+2)^(0+128),w
  3278     05F5  1283               	bcf	3,5	;RP0=0, select bank0
  3279     05F6  1303               	bcf	3,6	;RP1=0, select bank0
  3280     05F7  00AC               	movwf	___llmod@dividend+2
  3281     05F8  1683               	bsf	3,5	;RP0=1, select bank1
  3282     05F9  1303               	bcf	3,6	;RP1=0, select bank1
  3283     05FA  085B               	movf	(sprintf@tmpval+1)^(0+128),w
  3284     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  3285     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  3286     05FD  00AB               	movwf	___llmod@dividend+1
  3287     05FE  1683               	bsf	3,5	;RP0=1, select bank1
  3288     05FF  1303               	bcf	3,6	;RP1=0, select bank1
  3289     0600  085A               	movf	sprintf@tmpval^(0+128),w
  3290     0601  1283               	bcf	3,5	;RP0=0, select bank0
  3291     0602  1303               	bcf	3,6	;RP1=0, select bank0
  3292     0603  00AA               	movwf	___llmod@dividend
  3293     0604  160A  158A  253A  120A  118A  	fcall	___llmod
  3294     0609  1283               	bcf	3,5	;RP0=0, select bank0
  3295     060A  1303               	bcf	3,6	;RP1=0, select bank0
  3296     060B  0829               	movf	?___llmod+3,w
  3297     060C  1683               	bsf	3,5	;RP0=1, select bank1
  3298     060D  1303               	bcf	3,6	;RP1=0, select bank1
  3299     060E  00DD               	movwf	(sprintf@tmpval+3)^(0+128)
  3300     060F  1283               	bcf	3,5	;RP0=0, select bank0
  3301     0610  1303               	bcf	3,6	;RP1=0, select bank0
  3302     0611  0828               	movf	?___llmod+2,w
  3303     0612  1683               	bsf	3,5	;RP0=1, select bank1
  3304     0613  1303               	bcf	3,6	;RP1=0, select bank1
  3305     0614  00DC               	movwf	(sprintf@tmpval+2)^(0+128)
  3306     0615  1283               	bcf	3,5	;RP0=0, select bank0
  3307     0616  1303               	bcf	3,6	;RP1=0, select bank0
  3308     0617  0827               	movf	?___llmod+1,w
  3309     0618  1683               	bsf	3,5	;RP0=1, select bank1
  3310     0619  1303               	bcf	3,6	;RP1=0, select bank1
  3311     061A  00DB               	movwf	(sprintf@tmpval+1)^(0+128)
  3312     061B  1283               	bcf	3,5	;RP0=0, select bank0
  3313     061C  1303               	bcf	3,6	;RP1=0, select bank0
  3314     061D  0826               	movf	?___llmod,w
  3315     061E  1683               	bsf	3,5	;RP0=1, select bank1
  3316     061F  1303               	bcf	3,6	;RP1=0, select bank1
  3317     0620  00DA               	movwf	sprintf@tmpval^(0+128)
  3318     0621                     l3929:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3321     0621  0859               	movf	sprintf@sp^(0+128),w
  3322     0622  0084               	movwf	4
  3323     0623  085A               	movf	sprintf@tmpval^(0+128),w
  3324     0624  3E30               	addlw	48
  3325     0625  1783               	bsf	3,7	;select IRP bank2
  3326     0626  0080               	movwf	0
  3327     0627  3001               	movlw	1
  3328     0628  00C5               	movwf	??_sprintf^(0+128)
  3329     0629  0845               	movf	??_sprintf^(0+128),w
  3330     062A  07D9               	addwf	sprintf@sp^(0+128),f
  3331     062B                     l3931:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3334     062B  0862               	movf	sprintf@c^(0+128),w
  3335     062C  00C5               	movwf	??_sprintf^(0+128)
  3336     062D  3001               	movlw	1
  3337     062E                     u6475:
  3338     062E  1003               	clrc
  3339     062F  0DC5               	rlf	??_sprintf^(0+128),f
  3340     0630  3EFF               	addlw	-1
  3341     0631  1D03               	skipz
  3342     0632  2E2E               	goto	u6475
  3343     0633  1003               	clrc
  3344     0634  0D45               	rlf	??_sprintf^(0+128),w
  3345     0635  3E79               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3346     0636  0084               	movwf	4
  3347     0637  160A  118A  2000  120A  118A  	fcall	stringdir
  3348     063C  1283               	bcf	3,5	;RP0=0, select bank0
  3349     063D  1303               	bcf	3,6	;RP1=0, select bank0
  3350     063E  00A6               	movwf	___llmod@divisor
  3351     063F  160A  118A  2000  120A  118A  	fcall	stringdir
  3352     0644  00A7               	movwf	___llmod@divisor+1
  3353     0645  160A  118A  2000  120A  118A  	fcall	stringdir
  3354     064A  00A8               	movwf	___llmod@divisor+2
  3355     064B  160A  118A  2000  120A  118A  	fcall	stringdir
  3356     0650  00A9               	movwf	___llmod@divisor+3
  3357     0651  1683               	bsf	3,5	;RP0=1, select bank1
  3358     0652  1303               	bcf	3,6	;RP1=0, select bank1
  3359     0653  0856               	movf	(sprintf@val+3)^(0+128),w
  3360     0654  1283               	bcf	3,5	;RP0=0, select bank0
  3361     0655  1303               	bcf	3,6	;RP1=0, select bank0
  3362     0656  00AD               	movwf	___llmod@dividend+3
  3363     0657  1683               	bsf	3,5	;RP0=1, select bank1
  3364     0658  1303               	bcf	3,6	;RP1=0, select bank1
  3365     0659  0855               	movf	(sprintf@val+2)^(0+128),w
  3366     065A  1283               	bcf	3,5	;RP0=0, select bank0
  3367     065B  1303               	bcf	3,6	;RP1=0, select bank0
  3368     065C  00AC               	movwf	___llmod@dividend+2
  3369     065D  1683               	bsf	3,5	;RP0=1, select bank1
  3370     065E  1303               	bcf	3,6	;RP1=0, select bank1
  3371     065F  0854               	movf	(sprintf@val+1)^(0+128),w
  3372     0660  1283               	bcf	3,5	;RP0=0, select bank0
  3373     0661  1303               	bcf	3,6	;RP1=0, select bank0
  3374     0662  00AB               	movwf	___llmod@dividend+1
  3375     0663  1683               	bsf	3,5	;RP0=1, select bank1
  3376     0664  1303               	bcf	3,6	;RP1=0, select bank1
  3377     0665  0853               	movf	sprintf@val^(0+128),w
  3378     0666  1283               	bcf	3,5	;RP0=0, select bank0
  3379     0667  1303               	bcf	3,6	;RP1=0, select bank0
  3380     0668  00AA               	movwf	___llmod@dividend
  3381     0669  160A  158A  253A  120A  118A  	fcall	___llmod
  3382     066E  1283               	bcf	3,5	;RP0=0, select bank0
  3383     066F  1303               	bcf	3,6	;RP1=0, select bank0
  3384     0670  0829               	movf	?___llmod+3,w
  3385     0671  1683               	bsf	3,5	;RP0=1, select bank1
  3386     0672  1303               	bcf	3,6	;RP1=0, select bank1
  3387     0673  00D6               	movwf	(sprintf@val+3)^(0+128)
  3388     0674  1283               	bcf	3,5	;RP0=0, select bank0
  3389     0675  1303               	bcf	3,6	;RP1=0, select bank0
  3390     0676  0828               	movf	?___llmod+2,w
  3391     0677  1683               	bsf	3,5	;RP0=1, select bank1
  3392     0678  1303               	bcf	3,6	;RP1=0, select bank1
  3393     0679  00D5               	movwf	(sprintf@val+2)^(0+128)
  3394     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3395     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3396     067C  0827               	movf	?___llmod+1,w
  3397     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3398     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3399     067F  00D4               	movwf	(sprintf@val+1)^(0+128)
  3400     0680  1283               	bcf	3,5	;RP0=0, select bank0
  3401     0681  1303               	bcf	3,6	;RP1=0, select bank0
  3402     0682  0826               	movf	?___llmod,w
  3403     0683  1683               	bsf	3,5	;RP0=1, select bank1
  3404     0684  1303               	bcf	3,6	;RP1=0, select bank1
  3405     0685  00D3               	movwf	sprintf@val^(0+128)
  3406     0686                     l3933:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3409     0686  3001               	movlw	1
  3410     0687  02E2               	subwf	sprintf@c^(0+128),f
  3411     0688  0A62               	incf	sprintf@c^(0+128),w
  3412     0689  1D03               	btfss	3,2
  3413     068A  2E8C               	goto	u6481
  3414     068B  2E8D               	goto	u6480
  3415     068C                     u6481:
  3416     068C  2D87               	goto	l3925
  3417     068D                     u6480:
  3418     068D  2E9D               	goto	l3941
  3419     068E                     l3935:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3422     068E  0859               	movf	sprintf@sp^(0+128),w
  3423     068F  0084               	movwf	4
  3424     0690  3030               	movlw	48
  3425     0691  1783               	bsf	3,7	;select IRP bank2
  3426     0692  0080               	movwf	0
  3427     0693                     l3937:
  3428     0693  3001               	movlw	1
  3429     0694  00C5               	movwf	??_sprintf^(0+128)
  3430     0695  0845               	movf	??_sprintf^(0+128),w
  3431     0696  07D9               	addwf	sprintf@sp^(0+128),f
  3432     0697                     l3939:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3435     0697  30FF               	movlw	255
  3436     0698  07D1               	addwf	sprintf@prec^(0+128),f
  3437     0699  1803               	skipnc
  3438     069A  0AD2               	incf	(sprintf@prec+1)^(0+128),f
  3439     069B  30FF               	movlw	255
  3440     069C  07D2               	addwf	(sprintf@prec+1)^(0+128),f
  3441     069D                     l3941:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3444     069D  0851               	movf	sprintf@prec^(0+128),w
  3445     069E  0452               	iorwf	(sprintf@prec+1)^(0+128),w
  3446     069F  1D03               	btfss	3,2
  3447     06A0  2EA2               	goto	u6491
  3448     06A1  2EA3               	goto	u6490
  3449     06A2                     u6491:
  3450     06A2  2E8E               	goto	l3935
  3451     06A3                     u6490:
  3452     06A3  2EB6               	goto	l3949
  3453     06A4                     l3943:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3456     06A4  3003               	movlw	3
  3457     06A5  054F               	andwf	sprintf@flag^(0+128),w
  3458     06A6  00C5               	movwf	??_sprintf^(0+128)
  3459     06A7  3000               	movlw	0
  3460     06A8  0550               	andwf	(sprintf@flag+1)^(0+128),w
  3461     06A9  00C6               	movwf	(??_sprintf+1)^(0+128)
  3462     06AA  0845               	movf	??_sprintf^(0+128),w
  3463     06AB  0446               	iorwf	(??_sprintf^(0+128)+1),w
  3464     06AC  1903               	btfsc	3,2
  3465     06AD  2EAF               	goto	u6501
  3466     06AE  2EB0               	goto	u6500
  3467     06AF                     u6501:
  3468     06AF  2EB6               	goto	l3949
  3469     06B0                     u6500:
  3470     06B0                     l3945:
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3473     06B0  0859               	movf	sprintf@sp^(0+128),w
  3474     06B1  0084               	movwf	4
  3475     06B2  302D               	movlw	45
  3476     06B3  1783               	bsf	3,7	;select IRP bank2
  3477     06B4  0080               	movwf	0
  3478     06B5  2838               	goto	l3795
  3479     06B6                     l3949:
  3480                           
  3481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3482     06B6  3001               	movlw	1
  3483     06B7  07C0               	addwf	sprintf@f^(0+128),f
  3484     06B8  30FF               	movlw	-1
  3485     06B9  0740               	addwf	sprintf@f^(0+128),w
  3486     06BA  0084               	movwf	4
  3487     06BB  160A  118A  2000  120A  118A  	fcall	stringdir
  3488     06C0  00E2               	movwf	sprintf@c^(0+128)
  3489     06C1  0862               	movf	sprintf@c^(0+128),w
  3490     06C2  1D03               	btfss	3,2
  3491     06C3  2EC5               	goto	u6511
  3492     06C4  2EC6               	goto	u6510
  3493     06C5                     u6511:
  3494     06C5  282D               	goto	l3791
  3495     06C6                     u6510:
  3496     06C6                     l3951:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3499     06C6  0859               	movf	sprintf@sp^(0+128),w
  3500     06C7  0084               	movwf	4
  3501     06C8  1783               	bsf	3,7	;select IRP bank2
  3502     06C9  0180               	clrf	0
  3503     06CA                     l349:
  3504     06CA  0008               	return
  3505     06CB                     __end_of_sprintf:
  3506                           
  3507                           	psect	text2
  3508     0C9D                     __ptext2:	
  3509 ;; *************** function _scale *****************
  3510 ;; Defined at:
  3511 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  scl             1    wreg     char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  scl             1   66[BANK0 ] char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  4   48[BANK0 ] char 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3525 ;;      Params:         0       4       0       0       0
  3526 ;;      Locals:         0       5       0       0       0
  3527 ;;      Temps:          0      10       0       0       0
  3528 ;;      Totals:         0      19       0       0       0
  3529 ;;Total ram usage:       19 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 4
  3532 ;; This function calls:
  3533 ;;		___awdiv
  3534 ;;		___awmod
  3535 ;;		___flmul
  3536 ;; This function is called by:
  3537 ;;		_sprintf
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541     0C9D                     _scale:	
  3542                           ;psect for function _scale
  3543                           
  3544                           
  3545                           ;incstack = 0
  3546                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3547                           ;scale@scl stored from wreg
  3548     0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3549     0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3550     0C9F  00E2               	movwf	scale@scl
  3551     0CA0                     l2795:
  3552                           
  3553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3554     0CA0  1FE2               	btfss	scale@scl,7
  3555     0CA1  2CA3               	goto	u4161
  3556     0CA2  2CA4               	goto	u4160
  3557     0CA3                     u4161:
  3558     0CA3  2E53               	goto	l2817
  3559     0CA4                     u4160:
  3560     0CA4                     l2797:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3563     0CA4  09E2               	comf	scale@scl,f
  3564     0CA5  0AE2               	incf	scale@scl,f
  3565     0CA6                     l2799:
  3566                           
  3567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3568     0CA6  0862               	movf	scale@scl,w
  3569     0CA7  3A80               	xorlw	128
  3570     0CA8  3E12               	addlw	-238
  3571     0CA9  1C03               	skipc
  3572     0CAA  2CAC               	goto	u4171
  3573     0CAB  2CAD               	goto	u4170
  3574     0CAC                     u4171:
  3575     0CAC  2D97               	goto	l2807
  3576     0CAD                     u4170:
  3577     0CAD                     l2801:
  3578                           
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3580     0CAD  300A               	movlw	10
  3581     0CAE  00AD               	movwf	___awdiv@divisor
  3582     0CAF  3000               	movlw	0
  3583     0CB0  00AE               	movwf	___awdiv@divisor+1
  3584     0CB1  0862               	movf	scale@scl,w
  3585     0CB2  00A8               	movwf	___awmod@dividend
  3586     0CB3  01A9               	clrf	___awmod@dividend+1
  3587     0CB4  1BA8               	btfsc	___awmod@dividend,7
  3588     0CB5  03A9               	decf	___awmod@dividend+1,f
  3589     0CB6  3064               	movlw	100
  3590     0CB7  00A6               	movwf	___awmod@divisor
  3591     0CB8  3000               	movlw	0
  3592     0CB9  00A7               	movwf	___awmod@divisor+1
  3593     0CBA  160A  158A  2590  120A  158A  	fcall	___awmod
  3594     0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3595     0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3596     0CC1  0827               	movf	?___awmod+1,w
  3597     0CC2  00B0               	movwf	___awdiv@dividend+1
  3598     0CC3  0826               	movf	?___awmod,w
  3599     0CC4  00AF               	movwf	___awdiv@dividend
  3600     0CC5  160A  158A  271F  120A  158A  	fcall	___awdiv
  3601     0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3602     0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3603     0CCC  082D               	movf	?___awdiv,w
  3604     0CCD  00D4               	movwf	??_scale
  3605     0CCE  3001               	movlw	1
  3606     0CCF                     u4185:
  3607     0CCF  1003               	clrc
  3608     0CD0  0DD4               	rlf	??_scale,f
  3609     0CD1  3EFF               	addlw	-1
  3610     0CD2  1D03               	skipz
  3611     0CD3  2CCF               	goto	u4185
  3612     0CD4  1003               	clrc
  3613     0CD5  0D54               	rlf	??_scale,w
  3614     0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3615     0CD7  0084               	movwf	4
  3616     0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  3617     0CDD  00D5               	movwf	??_scale+1
  3618     0CDE  160A  118A  2000  120A  158A  	fcall	stringdir
  3619     0CE3  00D6               	movwf	??_scale+2
  3620     0CE4  160A  118A  2000  120A  158A  	fcall	stringdir
  3621     0CE9  00D7               	movwf	??_scale+3
  3622     0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  3623     0CEF  00D8               	movwf	??_scale+4
  3624     0CF0  0858               	movf	??_scale+4,w
  3625     0CF1  00B9               	movwf	___flmul@b+3
  3626     0CF2  0857               	movf	??_scale+3,w
  3627     0CF3  00B8               	movwf	___flmul@b+2
  3628     0CF4  0856               	movf	??_scale+2,w
  3629     0CF5  00B7               	movwf	___flmul@b+1
  3630     0CF6  0855               	movf	??_scale+1,w
  3631     0CF7  00B6               	movwf	___flmul@b
  3632     0CF8  3064               	movlw	100
  3633     0CF9  00AD               	movwf	___awdiv@divisor
  3634     0CFA  3000               	movlw	0
  3635     0CFB  00AE               	movwf	___awdiv@divisor+1
  3636     0CFC  0862               	movf	scale@scl,w
  3637     0CFD  00AF               	movwf	___awdiv@dividend
  3638     0CFE  01B0               	clrf	___awdiv@dividend+1
  3639     0CFF  1BAF               	btfsc	___awdiv@dividend,7
  3640     0D00  03B0               	decf	___awdiv@dividend+1,f
  3641     0D01  160A  158A  271F  120A  158A  	fcall	___awdiv
  3642     0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3643     0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3644     0D08  082D               	movf	?___awdiv,w
  3645     0D09  00D9               	movwf	??_scale+5
  3646     0D0A  3001               	movlw	1
  3647     0D0B                     u4195:
  3648     0D0B  1003               	clrc
  3649     0D0C  0DD9               	rlf	??_scale+5,f
  3650     0D0D  3EFF               	addlw	-1
  3651     0D0E  1D03               	skipz
  3652     0D0F  2D0B               	goto	u4195
  3653     0D10  1003               	clrc
  3654     0D11  0D59               	rlf	??_scale+5,w
  3655     0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3656     0D13  0084               	movwf	4
  3657     0D14  160A  118A  2000  120A  158A  	fcall	stringdir
  3658     0D19  00DA               	movwf	??_scale+6
  3659     0D1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3660     0D1F  00DB               	movwf	??_scale+7
  3661     0D20  160A  118A  2000  120A  158A  	fcall	stringdir
  3662     0D25  00DC               	movwf	??_scale+8
  3663     0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  3664     0D2B  00DD               	movwf	??_scale+9
  3665     0D2C  085D               	movf	??_scale+9,w
  3666     0D2D  00BD               	movwf	___flmul@a+3
  3667     0D2E  085C               	movf	??_scale+8,w
  3668     0D2F  00BC               	movwf	___flmul@a+2
  3669     0D30  085B               	movf	??_scale+7,w
  3670     0D31  00BB               	movwf	___flmul@a+1
  3671     0D32  085A               	movf	??_scale+6,w
  3672     0D33  00BA               	movwf	___flmul@a
  3673     0D34  120A  158A  2158  120A  158A  	fcall	___flmul
  3674     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3675     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3676     0D3B  0839               	movf	?___flmul+3,w
  3677     0D3C  00E1               	movwf	_scale$1096+3
  3678     0D3D  0838               	movf	?___flmul+2,w
  3679     0D3E  00E0               	movwf	_scale$1096+2
  3680     0D3F  0837               	movf	?___flmul+1,w
  3681     0D40  00DF               	movwf	_scale$1096+1
  3682     0D41  0836               	movf	?___flmul,w
  3683     0D42  00DE               	movwf	_scale$1096
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3686     0D43  300A               	movlw	10
  3687     0D44  00A6               	movwf	___awmod@divisor
  3688     0D45  3000               	movlw	0
  3689     0D46  00A7               	movwf	___awmod@divisor+1
  3690     0D47  0862               	movf	scale@scl,w
  3691     0D48  00A8               	movwf	___awmod@dividend
  3692     0D49  01A9               	clrf	___awmod@dividend+1
  3693     0D4A  1BA8               	btfsc	___awmod@dividend,7
  3694     0D4B  03A9               	decf	___awmod@dividend+1,f
  3695     0D4C  160A  158A  2590  120A  158A  	fcall	___awmod
  3696     0D51  1283               	bcf	3,5	;RP0=0, select bank0
  3697     0D52  1303               	bcf	3,6	;RP1=0, select bank0
  3698     0D53  0826               	movf	?___awmod,w
  3699     0D54  00D4               	movwf	??_scale
  3700     0D55  3001               	movlw	1
  3701     0D56                     u4205:
  3702     0D56  1003               	clrc
  3703     0D57  0DD4               	rlf	??_scale,f
  3704     0D58  3EFF               	addlw	-1
  3705     0D59  1D03               	skipz
  3706     0D5A  2D56               	goto	u4205
  3707     0D5B  1003               	clrc
  3708     0D5C  0D54               	rlf	??_scale,w
  3709     0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3710     0D5E  0084               	movwf	4
  3711     0D5F  160A  118A  2000  120A  158A  	fcall	stringdir
  3712     0D64  00D5               	movwf	??_scale+1
  3713     0D65  160A  118A  2000  120A  158A  	fcall	stringdir
  3714     0D6A  00D6               	movwf	??_scale+2
  3715     0D6B  160A  118A  2000  120A  158A  	fcall	stringdir
  3716     0D70  00D7               	movwf	??_scale+3
  3717     0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  3718     0D76  00D8               	movwf	??_scale+4
  3719     0D77  0858               	movf	??_scale+4,w
  3720     0D78  00B9               	movwf	___flmul@b+3
  3721     0D79  0857               	movf	??_scale+3,w
  3722     0D7A  00B8               	movwf	___flmul@b+2
  3723     0D7B  0856               	movf	??_scale+2,w
  3724     0D7C  00B7               	movwf	___flmul@b+1
  3725     0D7D  0855               	movf	??_scale+1,w
  3726     0D7E  00B6               	movwf	___flmul@b
  3727     0D7F  0861               	movf	_scale$1096+3,w
  3728     0D80  00BD               	movwf	___flmul@a+3
  3729     0D81  0860               	movf	_scale$1096+2,w
  3730     0D82  00BC               	movwf	___flmul@a+2
  3731     0D83  085F               	movf	_scale$1096+1,w
  3732     0D84  00BB               	movwf	___flmul@a+1
  3733     0D85  085E               	movf	_scale$1096,w
  3734     0D86  00BA               	movwf	___flmul@a
  3735     0D87  120A  158A  2158  120A  158A  	fcall	___flmul
  3736     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3737     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3738     0D8E  0839               	movf	?___flmul+3,w
  3739     0D8F  00D3               	movwf	?_scale+3
  3740     0D90  0838               	movf	?___flmul+2,w
  3741     0D91  00D2               	movwf	?_scale+2
  3742     0D92  0837               	movf	?___flmul+1,w
  3743     0D93  00D1               	movwf	?_scale+1
  3744     0D94  0836               	movf	?___flmul,w
  3745     0D95  00D0               	movwf	?_scale
  3746     0D96  2FFF               	goto	l293
  3747     0D97                     l2807:
  3748     0D97  0862               	movf	scale@scl,w
  3749     0D98  3A80               	xorlw	128
  3750     0D99  3E75               	addlw	-139
  3751     0D9A  1C03               	skipc
  3752     0D9B  2D9D               	goto	u4211
  3753     0D9C  2D9E               	goto	u4210
  3754     0D9D                     u4211:
  3755     0D9D  2E26               	goto	l2813
  3756     0D9E                     u4210:
  3757     0D9E                     l2809:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3760     0D9E  300A               	movlw	10
  3761     0D9F  00A6               	movwf	___awmod@divisor
  3762     0DA0  3000               	movlw	0
  3763     0DA1  00A7               	movwf	___awmod@divisor+1
  3764     0DA2  0862               	movf	scale@scl,w
  3765     0DA3  00A8               	movwf	___awmod@dividend
  3766     0DA4  01A9               	clrf	___awmod@dividend+1
  3767     0DA5  1BA8               	btfsc	___awmod@dividend,7
  3768     0DA6  03A9               	decf	___awmod@dividend+1,f
  3769     0DA7  160A  158A  2590  120A  158A  	fcall	___awmod
  3770     0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  3771     0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  3772     0DAE  0826               	movf	?___awmod,w
  3773     0DAF  00D4               	movwf	??_scale
  3774     0DB0  3001               	movlw	1
  3775     0DB1                     u4225:
  3776     0DB1  1003               	clrc
  3777     0DB2  0DD4               	rlf	??_scale,f
  3778     0DB3  3EFF               	addlw	-1
  3779     0DB4  1D03               	skipz
  3780     0DB5  2DB1               	goto	u4225
  3781     0DB6  1003               	clrc
  3782     0DB7  0D54               	rlf	??_scale,w
  3783     0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3784     0DB9  0084               	movwf	4
  3785     0DBA  160A  118A  2000  120A  158A  	fcall	stringdir
  3786     0DBF  00D5               	movwf	??_scale+1
  3787     0DC0  160A  118A  2000  120A  158A  	fcall	stringdir
  3788     0DC5  00D6               	movwf	??_scale+2
  3789     0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  3790     0DCB  00D7               	movwf	??_scale+3
  3791     0DCC  160A  118A  2000  120A  158A  	fcall	stringdir
  3792     0DD1  00D8               	movwf	??_scale+4
  3793     0DD2  0858               	movf	??_scale+4,w
  3794     0DD3  00B9               	movwf	___flmul@b+3
  3795     0DD4  0857               	movf	??_scale+3,w
  3796     0DD5  00B8               	movwf	___flmul@b+2
  3797     0DD6  0856               	movf	??_scale+2,w
  3798     0DD7  00B7               	movwf	___flmul@b+1
  3799     0DD8  0855               	movf	??_scale+1,w
  3800     0DD9  00B6               	movwf	___flmul@b
  3801     0DDA  300A               	movlw	10
  3802     0DDB  00AD               	movwf	___awdiv@divisor
  3803     0DDC  3000               	movlw	0
  3804     0DDD  00AE               	movwf	___awdiv@divisor+1
  3805     0DDE  0862               	movf	scale@scl,w
  3806     0DDF  00AF               	movwf	___awdiv@dividend
  3807     0DE0  01B0               	clrf	___awdiv@dividend+1
  3808     0DE1  1BAF               	btfsc	___awdiv@dividend,7
  3809     0DE2  03B0               	decf	___awdiv@dividend+1,f
  3810     0DE3  160A  158A  271F  120A  158A  	fcall	___awdiv
  3811     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3812     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3813     0DEA  082D               	movf	?___awdiv,w
  3814     0DEB  00D9               	movwf	??_scale+5
  3815     0DEC  3001               	movlw	1
  3816     0DED                     u4235:
  3817     0DED  1003               	clrc
  3818     0DEE  0DD9               	rlf	??_scale+5,f
  3819     0DEF  3EFF               	addlw	-1
  3820     0DF0  1D03               	skipz
  3821     0DF1  2DED               	goto	u4235
  3822     0DF2  1003               	clrc
  3823     0DF3  0D59               	rlf	??_scale+5,w
  3824     0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3825     0DF5  0084               	movwf	4
  3826     0DF6  160A  118A  2000  120A  158A  	fcall	stringdir
  3827     0DFB  00DA               	movwf	??_scale+6
  3828     0DFC  160A  118A  2000  120A  158A  	fcall	stringdir
  3829     0E01  00DB               	movwf	??_scale+7
  3830     0E02  160A  118A  2000  120A  158A  	fcall	stringdir
  3831     0E07  00DC               	movwf	??_scale+8
  3832     0E08  160A  118A  2000  120A  158A  	fcall	stringdir
  3833     0E0D  00DD               	movwf	??_scale+9
  3834     0E0E  085D               	movf	??_scale+9,w
  3835     0E0F  00BD               	movwf	___flmul@a+3
  3836     0E10  085C               	movf	??_scale+8,w
  3837     0E11  00BC               	movwf	___flmul@a+2
  3838     0E12  085B               	movf	??_scale+7,w
  3839     0E13  00BB               	movwf	___flmul@a+1
  3840     0E14  085A               	movf	??_scale+6,w
  3841     0E15  00BA               	movwf	___flmul@a
  3842     0E16  120A  158A  2158  120A  158A  	fcall	___flmul
  3843     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3844     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3845     0E1D  0839               	movf	?___flmul+3,w
  3846     0E1E  00D3               	movwf	?_scale+3
  3847     0E1F  0838               	movf	?___flmul+2,w
  3848     0E20  00D2               	movwf	?_scale+2
  3849     0E21  0837               	movf	?___flmul+1,w
  3850     0E22  00D1               	movwf	?_scale+1
  3851     0E23  0836               	movf	?___flmul,w
  3852     0E24  00D0               	movwf	?_scale
  3853     0E25  2FFF               	goto	l293
  3854     0E26                     l2813:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3857     0E26  0862               	movf	scale@scl,w
  3858     0E27  00D4               	movwf	??_scale
  3859     0E28  3001               	movlw	1
  3860     0E29                     u4245:
  3861     0E29  1003               	clrc
  3862     0E2A  0DD4               	rlf	??_scale,f
  3863     0E2B  3EFF               	addlw	-1
  3864     0E2C  1D03               	skipz
  3865     0E2D  2E29               	goto	u4245
  3866     0E2E  1003               	clrc
  3867     0E2F  0D54               	rlf	??_scale,w
  3868     0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3869     0E31  0084               	movwf	4
  3870     0E32  160A  118A  2000  120A  158A  	fcall	stringdir
  3871     0E37  00D5               	movwf	??_scale+1
  3872     0E38  160A  118A  2000  120A  158A  	fcall	stringdir
  3873     0E3D  00D6               	movwf	??_scale+2
  3874     0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  3875     0E43  00D7               	movwf	??_scale+3
  3876     0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  3877     0E49  00D8               	movwf	??_scale+4
  3878     0E4A  0858               	movf	??_scale+4,w
  3879     0E4B  00D3               	movwf	?_scale+3
  3880     0E4C  0857               	movf	??_scale+3,w
  3881     0E4D  00D2               	movwf	?_scale+2
  3882     0E4E  0856               	movf	??_scale+2,w
  3883     0E4F  00D1               	movwf	?_scale+1
  3884     0E50  0855               	movf	??_scale+1,w
  3885     0E51  00D0               	movwf	?_scale
  3886     0E52  2FFF               	goto	l293
  3887     0E53                     l2817:
  3888                           
  3889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3890     0E53  0862               	movf	scale@scl,w
  3891     0E54  3A80               	xorlw	128
  3892     0E55  3E12               	addlw	-238
  3893     0E56  1C03               	skipc
  3894     0E57  2E59               	goto	u4251
  3895     0E58  2E5A               	goto	u4250
  3896     0E59                     u4251:
  3897     0E59  2F44               	goto	l2825
  3898     0E5A                     u4250:
  3899     0E5A                     l2819:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3902     0E5A  300A               	movlw	10
  3903     0E5B  00AD               	movwf	___awdiv@divisor
  3904     0E5C  3000               	movlw	0
  3905     0E5D  00AE               	movwf	___awdiv@divisor+1
  3906     0E5E  0862               	movf	scale@scl,w
  3907     0E5F  00A8               	movwf	___awmod@dividend
  3908     0E60  01A9               	clrf	___awmod@dividend+1
  3909     0E61  1BA8               	btfsc	___awmod@dividend,7
  3910     0E62  03A9               	decf	___awmod@dividend+1,f
  3911     0E63  3064               	movlw	100
  3912     0E64  00A6               	movwf	___awmod@divisor
  3913     0E65  3000               	movlw	0
  3914     0E66  00A7               	movwf	___awmod@divisor+1
  3915     0E67  160A  158A  2590  120A  158A  	fcall	___awmod
  3916     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3917     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3918     0E6E  0827               	movf	?___awmod+1,w
  3919     0E6F  00B0               	movwf	___awdiv@dividend+1
  3920     0E70  0826               	movf	?___awmod,w
  3921     0E71  00AF               	movwf	___awdiv@dividend
  3922     0E72  160A  158A  271F  120A  158A  	fcall	___awdiv
  3923     0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3924     0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3925     0E79  082D               	movf	?___awdiv,w
  3926     0E7A  00D4               	movwf	??_scale
  3927     0E7B  3001               	movlw	1
  3928     0E7C                     u4265:
  3929     0E7C  1003               	clrc
  3930     0E7D  0DD4               	rlf	??_scale,f
  3931     0E7E  3EFF               	addlw	-1
  3932     0E7F  1D03               	skipz
  3933     0E80  2E7C               	goto	u4265
  3934     0E81  1003               	clrc
  3935     0E82  0D54               	rlf	??_scale,w
  3936     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3937     0E84  0084               	movwf	4
  3938     0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  3939     0E8A  00D5               	movwf	??_scale+1
  3940     0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3941     0E90  00D6               	movwf	??_scale+2
  3942     0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  3943     0E96  00D7               	movwf	??_scale+3
  3944     0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  3945     0E9C  00D8               	movwf	??_scale+4
  3946     0E9D  0858               	movf	??_scale+4,w
  3947     0E9E  00B9               	movwf	___flmul@b+3
  3948     0E9F  0857               	movf	??_scale+3,w
  3949     0EA0  00B8               	movwf	___flmul@b+2
  3950     0EA1  0856               	movf	??_scale+2,w
  3951     0EA2  00B7               	movwf	___flmul@b+1
  3952     0EA3  0855               	movf	??_scale+1,w
  3953     0EA4  00B6               	movwf	___flmul@b
  3954     0EA5  3064               	movlw	100
  3955     0EA6  00AD               	movwf	___awdiv@divisor
  3956     0EA7  3000               	movlw	0
  3957     0EA8  00AE               	movwf	___awdiv@divisor+1
  3958     0EA9  0862               	movf	scale@scl,w
  3959     0EAA  00AF               	movwf	___awdiv@dividend
  3960     0EAB  01B0               	clrf	___awdiv@dividend+1
  3961     0EAC  1BAF               	btfsc	___awdiv@dividend,7
  3962     0EAD  03B0               	decf	___awdiv@dividend+1,f
  3963     0EAE  160A  158A  271F  120A  158A  	fcall	___awdiv
  3964     0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0EB5  082D               	movf	?___awdiv,w
  3967     0EB6  00D9               	movwf	??_scale+5
  3968     0EB7  3001               	movlw	1
  3969     0EB8                     u4275:
  3970     0EB8  1003               	clrc
  3971     0EB9  0DD9               	rlf	??_scale+5,f
  3972     0EBA  3EFF               	addlw	-1
  3973     0EBB  1D03               	skipz
  3974     0EBC  2EB8               	goto	u4275
  3975     0EBD  1003               	clrc
  3976     0EBE  0D59               	rlf	??_scale+5,w
  3977     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3978     0EC0  0084               	movwf	4
  3979     0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3980     0EC6  00DA               	movwf	??_scale+6
  3981     0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  3982     0ECC  00DB               	movwf	??_scale+7
  3983     0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  3984     0ED2  00DC               	movwf	??_scale+8
  3985     0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  3986     0ED8  00DD               	movwf	??_scale+9
  3987     0ED9  085D               	movf	??_scale+9,w
  3988     0EDA  00BD               	movwf	___flmul@a+3
  3989     0EDB  085C               	movf	??_scale+8,w
  3990     0EDC  00BC               	movwf	___flmul@a+2
  3991     0EDD  085B               	movf	??_scale+7,w
  3992     0EDE  00BB               	movwf	___flmul@a+1
  3993     0EDF  085A               	movf	??_scale+6,w
  3994     0EE0  00BA               	movwf	___flmul@a
  3995     0EE1  120A  158A  2158  120A  158A  	fcall	___flmul
  3996     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3997     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3998     0EE8  0839               	movf	?___flmul+3,w
  3999     0EE9  00E1               	movwf	_scale$1096+3
  4000     0EEA  0838               	movf	?___flmul+2,w
  4001     0EEB  00E0               	movwf	_scale$1096+2
  4002     0EEC  0837               	movf	?___flmul+1,w
  4003     0EED  00DF               	movwf	_scale$1096+1
  4004     0EEE  0836               	movf	?___flmul,w
  4005     0EEF  00DE               	movwf	_scale$1096
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4008     0EF0  300A               	movlw	10
  4009     0EF1  00A6               	movwf	___awmod@divisor
  4010     0EF2  3000               	movlw	0
  4011     0EF3  00A7               	movwf	___awmod@divisor+1
  4012     0EF4  0862               	movf	scale@scl,w
  4013     0EF5  00A8               	movwf	___awmod@dividend
  4014     0EF6  01A9               	clrf	___awmod@dividend+1
  4015     0EF7  1BA8               	btfsc	___awmod@dividend,7
  4016     0EF8  03A9               	decf	___awmod@dividend+1,f
  4017     0EF9  160A  158A  2590  120A  158A  	fcall	___awmod
  4018     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  4019     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  4020     0F00  0826               	movf	?___awmod,w
  4021     0F01  00D4               	movwf	??_scale
  4022     0F02  3001               	movlw	1
  4023     0F03                     u4285:
  4024     0F03  1003               	clrc
  4025     0F04  0DD4               	rlf	??_scale,f
  4026     0F05  3EFF               	addlw	-1
  4027     0F06  1D03               	skipz
  4028     0F07  2F03               	goto	u4285
  4029     0F08  1003               	clrc
  4030     0F09  0D54               	rlf	??_scale,w
  4031     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4032     0F0B  0084               	movwf	4
  4033     0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  4034     0F11  00D5               	movwf	??_scale+1
  4035     0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  4036     0F17  00D6               	movwf	??_scale+2
  4037     0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  4038     0F1D  00D7               	movwf	??_scale+3
  4039     0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  4040     0F23  00D8               	movwf	??_scale+4
  4041     0F24  0858               	movf	??_scale+4,w
  4042     0F25  00B9               	movwf	___flmul@b+3
  4043     0F26  0857               	movf	??_scale+3,w
  4044     0F27  00B8               	movwf	___flmul@b+2
  4045     0F28  0856               	movf	??_scale+2,w
  4046     0F29  00B7               	movwf	___flmul@b+1
  4047     0F2A  0855               	movf	??_scale+1,w
  4048     0F2B  00B6               	movwf	___flmul@b
  4049     0F2C  0861               	movf	_scale$1096+3,w
  4050     0F2D  00BD               	movwf	___flmul@a+3
  4051     0F2E  0860               	movf	_scale$1096+2,w
  4052     0F2F  00BC               	movwf	___flmul@a+2
  4053     0F30  085F               	movf	_scale$1096+1,w
  4054     0F31  00BB               	movwf	___flmul@a+1
  4055     0F32  085E               	movf	_scale$1096,w
  4056     0F33  00BA               	movwf	___flmul@a
  4057     0F34  120A  158A  2158  120A  158A  	fcall	___flmul
  4058     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4059     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4060     0F3B  0839               	movf	?___flmul+3,w
  4061     0F3C  00D3               	movwf	?_scale+3
  4062     0F3D  0838               	movf	?___flmul+2,w
  4063     0F3E  00D2               	movwf	?_scale+2
  4064     0F3F  0837               	movf	?___flmul+1,w
  4065     0F40  00D1               	movwf	?_scale+1
  4066     0F41  0836               	movf	?___flmul,w
  4067     0F42  00D0               	movwf	?_scale
  4068     0F43  2FFF               	goto	l293
  4069     0F44                     l2825:
  4070     0F44  0862               	movf	scale@scl,w
  4071     0F45  3A80               	xorlw	128
  4072     0F46  3E75               	addlw	-139
  4073     0F47  1C03               	skipc
  4074     0F48  2F4A               	goto	u4291
  4075     0F49  2F4B               	goto	u4290
  4076     0F4A                     u4291:
  4077     0F4A  2FD3               	goto	l2831
  4078     0F4B                     u4290:
  4079     0F4B                     l2827:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4082     0F4B  300A               	movlw	10
  4083     0F4C  00A6               	movwf	___awmod@divisor
  4084     0F4D  3000               	movlw	0
  4085     0F4E  00A7               	movwf	___awmod@divisor+1
  4086     0F4F  0862               	movf	scale@scl,w
  4087     0F50  00A8               	movwf	___awmod@dividend
  4088     0F51  01A9               	clrf	___awmod@dividend+1
  4089     0F52  1BA8               	btfsc	___awmod@dividend,7
  4090     0F53  03A9               	decf	___awmod@dividend+1,f
  4091     0F54  160A  158A  2590  120A  158A  	fcall	___awmod
  4092     0F59  1283               	bcf	3,5	;RP0=0, select bank0
  4093     0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  4094     0F5B  0826               	movf	?___awmod,w
  4095     0F5C  00D4               	movwf	??_scale
  4096     0F5D  3001               	movlw	1
  4097     0F5E                     u4305:
  4098     0F5E  1003               	clrc
  4099     0F5F  0DD4               	rlf	??_scale,f
  4100     0F60  3EFF               	addlw	-1
  4101     0F61  1D03               	skipz
  4102     0F62  2F5E               	goto	u4305
  4103     0F63  1003               	clrc
  4104     0F64  0D54               	rlf	??_scale,w
  4105     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4106     0F66  0084               	movwf	4
  4107     0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  4108     0F6C  00D5               	movwf	??_scale+1
  4109     0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  4110     0F72  00D6               	movwf	??_scale+2
  4111     0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  4112     0F78  00D7               	movwf	??_scale+3
  4113     0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  4114     0F7E  00D8               	movwf	??_scale+4
  4115     0F7F  0858               	movf	??_scale+4,w
  4116     0F80  00B9               	movwf	___flmul@b+3
  4117     0F81  0857               	movf	??_scale+3,w
  4118     0F82  00B8               	movwf	___flmul@b+2
  4119     0F83  0856               	movf	??_scale+2,w
  4120     0F84  00B7               	movwf	___flmul@b+1
  4121     0F85  0855               	movf	??_scale+1,w
  4122     0F86  00B6               	movwf	___flmul@b
  4123     0F87  300A               	movlw	10
  4124     0F88  00AD               	movwf	___awdiv@divisor
  4125     0F89  3000               	movlw	0
  4126     0F8A  00AE               	movwf	___awdiv@divisor+1
  4127     0F8B  0862               	movf	scale@scl,w
  4128     0F8C  00AF               	movwf	___awdiv@dividend
  4129     0F8D  01B0               	clrf	___awdiv@dividend+1
  4130     0F8E  1BAF               	btfsc	___awdiv@dividend,7
  4131     0F8F  03B0               	decf	___awdiv@dividend+1,f
  4132     0F90  160A  158A  271F  120A  158A  	fcall	___awdiv
  4133     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4134     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4135     0F97  082D               	movf	?___awdiv,w
  4136     0F98  00D9               	movwf	??_scale+5
  4137     0F99  3001               	movlw	1
  4138     0F9A                     u4315:
  4139     0F9A  1003               	clrc
  4140     0F9B  0DD9               	rlf	??_scale+5,f
  4141     0F9C  3EFF               	addlw	-1
  4142     0F9D  1D03               	skipz
  4143     0F9E  2F9A               	goto	u4315
  4144     0F9F  1003               	clrc
  4145     0FA0  0D59               	rlf	??_scale+5,w
  4146     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4147     0FA2  0084               	movwf	4
  4148     0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  4149     0FA8  00DA               	movwf	??_scale+6
  4150     0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  4151     0FAE  00DB               	movwf	??_scale+7
  4152     0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  4153     0FB4  00DC               	movwf	??_scale+8
  4154     0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  4155     0FBA  00DD               	movwf	??_scale+9
  4156     0FBB  085D               	movf	??_scale+9,w
  4157     0FBC  00BD               	movwf	___flmul@a+3
  4158     0FBD  085C               	movf	??_scale+8,w
  4159     0FBE  00BC               	movwf	___flmul@a+2
  4160     0FBF  085B               	movf	??_scale+7,w
  4161     0FC0  00BB               	movwf	___flmul@a+1
  4162     0FC1  085A               	movf	??_scale+6,w
  4163     0FC2  00BA               	movwf	___flmul@a
  4164     0FC3  120A  158A  2158  120A  158A  	fcall	___flmul
  4165     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4166     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4167     0FCA  0839               	movf	?___flmul+3,w
  4168     0FCB  00D3               	movwf	?_scale+3
  4169     0FCC  0838               	movf	?___flmul+2,w
  4170     0FCD  00D2               	movwf	?_scale+2
  4171     0FCE  0837               	movf	?___flmul+1,w
  4172     0FCF  00D1               	movwf	?_scale+1
  4173     0FD0  0836               	movf	?___flmul,w
  4174     0FD1  00D0               	movwf	?_scale
  4175     0FD2  2FFF               	goto	l293
  4176     0FD3                     l2831:
  4177                           
  4178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4179     0FD3  0862               	movf	scale@scl,w
  4180     0FD4  00D4               	movwf	??_scale
  4181     0FD5  3001               	movlw	1
  4182     0FD6                     u4325:
  4183     0FD6  1003               	clrc
  4184     0FD7  0DD4               	rlf	??_scale,f
  4185     0FD8  3EFF               	addlw	-1
  4186     0FD9  1D03               	skipz
  4187     0FDA  2FD6               	goto	u4325
  4188     0FDB  1003               	clrc
  4189     0FDC  0D54               	rlf	??_scale,w
  4190     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4191     0FDE  0084               	movwf	4
  4192     0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  4193     0FE4  00D5               	movwf	??_scale+1
  4194     0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  4195     0FEA  00D6               	movwf	??_scale+2
  4196     0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  4197     0FF0  00D7               	movwf	??_scale+3
  4198     0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  4199     0FF6  00D8               	movwf	??_scale+4
  4200     0FF7  0858               	movf	??_scale+4,w
  4201     0FF8  00D3               	movwf	?_scale+3
  4202     0FF9  0857               	movf	??_scale+3,w
  4203     0FFA  00D2               	movwf	?_scale+2
  4204     0FFB  0856               	movf	??_scale+2,w
  4205     0FFC  00D1               	movwf	?_scale+1
  4206     0FFD  0855               	movf	??_scale+1,w
  4207     0FFE  00D0               	movwf	?_scale
  4208     0FFF                     l293:
  4209     0FFF  0008               	return
  4210     1000                     __end_of_scale:
  4211                           
  4212                           	psect	text3
  4213     1D90                     __ptext3:	
  4214 ;; *************** function ___awmod *****************
  4215 ;; Defined at:
  4216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  divisor         2    6[BANK0 ] int 
  4219 ;;  dividend        2    8[BANK0 ] int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  sign            1   12[BANK0 ] unsigned char 
  4222 ;;  counter         1   11[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2    6[BANK0 ] int 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       4       0       0       0
  4233 ;;      Locals:         0       2       0       0       0
  4234 ;;      Temps:          0       1       0       0       0
  4235 ;;      Totals:         0       7       0       0       0
  4236 ;;Total ram usage:        7 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 2
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_scale
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246     1D90                     ___awmod:	
  4247                           ;psect for function ___awmod
  4248                           
  4249     1D90                     l2345:	
  4250                           ;incstack = 0
  4251                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4252                           
  4253     1D90  1283               	bcf	3,5	;RP0=0, select bank0
  4254     1D91  1303               	bcf	3,6	;RP1=0, select bank0
  4255     1D92  01AC               	clrf	___awmod@sign
  4256     1D93                     l2347:
  4257     1D93  1FA9               	btfss	___awmod@dividend+1,7
  4258     1D94  2D96               	goto	u3031
  4259     1D95  2D97               	goto	u3030
  4260     1D96                     u3031:
  4261     1D96  2D9E               	goto	l2353
  4262     1D97                     u3030:
  4263     1D97                     l2349:
  4264     1D97  09A8               	comf	___awmod@dividend,f
  4265     1D98  09A9               	comf	___awmod@dividend+1,f
  4266     1D99  0AA8               	incf	___awmod@dividend,f
  4267     1D9A  1903               	skipnz
  4268     1D9B  0AA9               	incf	___awmod@dividend+1,f
  4269     1D9C                     l2351:
  4270     1D9C  01AC               	clrf	___awmod@sign
  4271     1D9D  0AAC               	incf	___awmod@sign,f
  4272     1D9E                     l2353:
  4273     1D9E  1FA7               	btfss	___awmod@divisor+1,7
  4274     1D9F  2DA1               	goto	u3041
  4275     1DA0  2DA2               	goto	u3040
  4276     1DA1                     u3041:
  4277     1DA1  2DA7               	goto	l2357
  4278     1DA2                     u3040:
  4279     1DA2                     l2355:
  4280     1DA2  09A6               	comf	___awmod@divisor,f
  4281     1DA3  09A7               	comf	___awmod@divisor+1,f
  4282     1DA4  0AA6               	incf	___awmod@divisor,f
  4283     1DA5  1903               	skipnz
  4284     1DA6  0AA7               	incf	___awmod@divisor+1,f
  4285     1DA7                     l2357:
  4286     1DA7  0826               	movf	___awmod@divisor,w
  4287     1DA8  0427               	iorwf	___awmod@divisor+1,w
  4288     1DA9  1903               	btfsc	3,2
  4289     1DAA  2DAC               	goto	u3051
  4290     1DAB  2DAD               	goto	u3050
  4291     1DAC                     u3051:
  4292     1DAC  2DDC               	goto	l2375
  4293     1DAD                     u3050:
  4294     1DAD                     l2359:
  4295     1DAD  01AB               	clrf	___awmod@counter
  4296     1DAE  0AAB               	incf	___awmod@counter,f
  4297     1DAF  2DBB               	goto	l2365
  4298     1DB0                     l2361:
  4299     1DB0  3001               	movlw	1
  4300     1DB1                     u3065:
  4301     1DB1  1003               	clrc
  4302     1DB2  0DA6               	rlf	___awmod@divisor,f
  4303     1DB3  0DA7               	rlf	___awmod@divisor+1,f
  4304     1DB4  3EFF               	addlw	-1
  4305     1DB5  1D03               	skipz
  4306     1DB6  2DB1               	goto	u3065
  4307     1DB7                     l2363:
  4308     1DB7  3001               	movlw	1
  4309     1DB8  00AA               	movwf	??___awmod
  4310     1DB9  082A               	movf	??___awmod,w
  4311     1DBA  07AB               	addwf	___awmod@counter,f
  4312     1DBB                     l2365:
  4313     1DBB  1FA7               	btfss	___awmod@divisor+1,7
  4314     1DBC  2DBE               	goto	u3071
  4315     1DBD  2DBF               	goto	u3070
  4316     1DBE                     u3071:
  4317     1DBE  2DB0               	goto	l2361
  4318     1DBF                     u3070:
  4319     1DBF                     l2367:
  4320     1DBF  0827               	movf	___awmod@divisor+1,w
  4321     1DC0  0229               	subwf	___awmod@dividend+1,w
  4322     1DC1  1D03               	skipz
  4323     1DC2  2DC5               	goto	u3085
  4324     1DC3  0826               	movf	___awmod@divisor,w
  4325     1DC4  0228               	subwf	___awmod@dividend,w
  4326     1DC5                     u3085:
  4327     1DC5  1C03               	skipc
  4328     1DC6  2DC8               	goto	u3081
  4329     1DC7  2DC9               	goto	u3080
  4330     1DC8                     u3081:
  4331     1DC8  2DCF               	goto	l2371
  4332     1DC9                     u3080:
  4333     1DC9                     l2369:
  4334     1DC9  0826               	movf	___awmod@divisor,w
  4335     1DCA  02A8               	subwf	___awmod@dividend,f
  4336     1DCB  0827               	movf	___awmod@divisor+1,w
  4337     1DCC  1C03               	skipc
  4338     1DCD  03A9               	decf	___awmod@dividend+1,f
  4339     1DCE  02A9               	subwf	___awmod@dividend+1,f
  4340     1DCF                     l2371:
  4341     1DCF  3001               	movlw	1
  4342     1DD0                     u3095:
  4343     1DD0  1003               	clrc
  4344     1DD1  0CA7               	rrf	___awmod@divisor+1,f
  4345     1DD2  0CA6               	rrf	___awmod@divisor,f
  4346     1DD3  3EFF               	addlw	-1
  4347     1DD4  1D03               	skipz
  4348     1DD5  2DD0               	goto	u3095
  4349     1DD6                     l2373:
  4350     1DD6  3001               	movlw	1
  4351     1DD7  02AB               	subwf	___awmod@counter,f
  4352     1DD8  1D03               	btfss	3,2
  4353     1DD9  2DDB               	goto	u3101
  4354     1DDA  2DDC               	goto	u3100
  4355     1DDB                     u3101:
  4356     1DDB  2DBF               	goto	l2367
  4357     1DDC                     u3100:
  4358     1DDC                     l2375:
  4359     1DDC  082C               	movf	___awmod@sign,w
  4360     1DDD  1903               	btfsc	3,2
  4361     1DDE  2DE0               	goto	u3111
  4362     1DDF  2DE1               	goto	u3110
  4363     1DE0                     u3111:
  4364     1DE0  2DE6               	goto	l2379
  4365     1DE1                     u3110:
  4366     1DE1                     l2377:
  4367     1DE1  09A8               	comf	___awmod@dividend,f
  4368     1DE2  09A9               	comf	___awmod@dividend+1,f
  4369     1DE3  0AA8               	incf	___awmod@dividend,f
  4370     1DE4  1903               	skipnz
  4371     1DE5  0AA9               	incf	___awmod@dividend+1,f
  4372     1DE6                     l2379:
  4373     1DE6  0829               	movf	___awmod@dividend+1,w
  4374     1DE7  00A7               	movwf	?___awmod+1
  4375     1DE8  0828               	movf	___awmod@dividend,w
  4376     1DE9  00A6               	movwf	?___awmod
  4377     1DEA                     l519:
  4378     1DEA  0008               	return
  4379     1DEB                     __end_of___awmod:
  4380                           
  4381                           	psect	text4
  4382     1F1F                     __ptext4:	
  4383 ;; *************** function ___awdiv *****************
  4384 ;; Defined at:
  4385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  divisor         2   13[BANK0 ] int 
  4388 ;;  dividend        2   15[BANK0 ] int 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  quotient        2   20[BANK0 ] int 
  4391 ;;  sign            1   19[BANK0 ] unsigned char 
  4392 ;;  counter         1   18[BANK0 ] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2   13[BANK0 ] int 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         0       4       0       0       0
  4403 ;;      Locals:         0       4       0       0       0
  4404 ;;      Temps:          0       1       0       0       0
  4405 ;;      Totals:         0       9       0       0       0
  4406 ;;Total ram usage:        9 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 2
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_scale
  4413 ;;		_sprintf
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417     1F1F                     ___awdiv:	
  4418                           ;psect for function ___awdiv
  4419                           
  4420     1F1F                     l2301:	
  4421                           ;incstack = 0
  4422                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4423                           
  4424     1F1F  1283               	bcf	3,5	;RP0=0, select bank0
  4425     1F20  1303               	bcf	3,6	;RP1=0, select bank0
  4426     1F21  01B3               	clrf	___awdiv@sign
  4427     1F22                     l2303:
  4428     1F22  1FAE               	btfss	___awdiv@divisor+1,7
  4429     1F23  2F25               	goto	u2931
  4430     1F24  2F26               	goto	u2930
  4431     1F25                     u2931:
  4432     1F25  2F2D               	goto	l2309
  4433     1F26                     u2930:
  4434     1F26                     l2305:
  4435     1F26  09AD               	comf	___awdiv@divisor,f
  4436     1F27  09AE               	comf	___awdiv@divisor+1,f
  4437     1F28  0AAD               	incf	___awdiv@divisor,f
  4438     1F29  1903               	skipnz
  4439     1F2A  0AAE               	incf	___awdiv@divisor+1,f
  4440     1F2B                     l2307:
  4441     1F2B  01B3               	clrf	___awdiv@sign
  4442     1F2C  0AB3               	incf	___awdiv@sign,f
  4443     1F2D                     l2309:
  4444     1F2D  1FB0               	btfss	___awdiv@dividend+1,7
  4445     1F2E  2F30               	goto	u2941
  4446     1F2F  2F31               	goto	u2940
  4447     1F30                     u2941:
  4448     1F30  2F3A               	goto	l2315
  4449     1F31                     u2940:
  4450     1F31                     l2311:
  4451     1F31  09AF               	comf	___awdiv@dividend,f
  4452     1F32  09B0               	comf	___awdiv@dividend+1,f
  4453     1F33  0AAF               	incf	___awdiv@dividend,f
  4454     1F34  1903               	skipnz
  4455     1F35  0AB0               	incf	___awdiv@dividend+1,f
  4456     1F36                     l2313:
  4457     1F36  3001               	movlw	1
  4458     1F37  00B1               	movwf	??___awdiv
  4459     1F38  0831               	movf	??___awdiv,w
  4460     1F39  06B3               	xorwf	___awdiv@sign,f
  4461     1F3A                     l2315:
  4462     1F3A  01B4               	clrf	___awdiv@quotient
  4463     1F3B  01B5               	clrf	___awdiv@quotient+1
  4464     1F3C                     l2317:
  4465     1F3C  082D               	movf	___awdiv@divisor,w
  4466     1F3D  042E               	iorwf	___awdiv@divisor+1,w
  4467     1F3E  1903               	btfsc	3,2
  4468     1F3F  2F41               	goto	u2951
  4469     1F40  2F42               	goto	u2950
  4470     1F41                     u2951:
  4471     1F41  2F79               	goto	l2337
  4472     1F42                     u2950:
  4473     1F42                     l2319:
  4474     1F42  01B2               	clrf	___awdiv@counter
  4475     1F43  0AB2               	incf	___awdiv@counter,f
  4476     1F44  2F50               	goto	l2325
  4477     1F45                     l2321:
  4478     1F45  3001               	movlw	1
  4479     1F46                     u2965:
  4480     1F46  1003               	clrc
  4481     1F47  0DAD               	rlf	___awdiv@divisor,f
  4482     1F48  0DAE               	rlf	___awdiv@divisor+1,f
  4483     1F49  3EFF               	addlw	-1
  4484     1F4A  1D03               	skipz
  4485     1F4B  2F46               	goto	u2965
  4486     1F4C                     l2323:
  4487     1F4C  3001               	movlw	1
  4488     1F4D  00B1               	movwf	??___awdiv
  4489     1F4E  0831               	movf	??___awdiv,w
  4490     1F4F  07B2               	addwf	___awdiv@counter,f
  4491     1F50                     l2325:
  4492     1F50  1FAE               	btfss	___awdiv@divisor+1,7
  4493     1F51  2F53               	goto	u2971
  4494     1F52  2F54               	goto	u2970
  4495     1F53                     u2971:
  4496     1F53  2F45               	goto	l2321
  4497     1F54                     u2970:
  4498     1F54                     l2327:
  4499     1F54  3001               	movlw	1
  4500     1F55                     u2985:
  4501     1F55  1003               	clrc
  4502     1F56  0DB4               	rlf	___awdiv@quotient,f
  4503     1F57  0DB5               	rlf	___awdiv@quotient+1,f
  4504     1F58  3EFF               	addlw	-1
  4505     1F59  1D03               	skipz
  4506     1F5A  2F55               	goto	u2985
  4507     1F5B  082E               	movf	___awdiv@divisor+1,w
  4508     1F5C  0230               	subwf	___awdiv@dividend+1,w
  4509     1F5D  1D03               	skipz
  4510     1F5E  2F61               	goto	u2995
  4511     1F5F  082D               	movf	___awdiv@divisor,w
  4512     1F60  022F               	subwf	___awdiv@dividend,w
  4513     1F61                     u2995:
  4514     1F61  1C03               	skipc
  4515     1F62  2F64               	goto	u2991
  4516     1F63  2F65               	goto	u2990
  4517     1F64                     u2991:
  4518     1F64  2F6C               	goto	l2333
  4519     1F65                     u2990:
  4520     1F65                     l2329:
  4521     1F65  082D               	movf	___awdiv@divisor,w
  4522     1F66  02AF               	subwf	___awdiv@dividend,f
  4523     1F67  082E               	movf	___awdiv@divisor+1,w
  4524     1F68  1C03               	skipc
  4525     1F69  03B0               	decf	___awdiv@dividend+1,f
  4526     1F6A  02B0               	subwf	___awdiv@dividend+1,f
  4527     1F6B                     l2331:
  4528     1F6B  1434               	bsf	___awdiv@quotient,0
  4529     1F6C                     l2333:
  4530     1F6C  3001               	movlw	1
  4531     1F6D                     u3005:
  4532     1F6D  1003               	clrc
  4533     1F6E  0CAE               	rrf	___awdiv@divisor+1,f
  4534     1F6F  0CAD               	rrf	___awdiv@divisor,f
  4535     1F70  3EFF               	addlw	-1
  4536     1F71  1D03               	skipz
  4537     1F72  2F6D               	goto	u3005
  4538     1F73                     l2335:
  4539     1F73  3001               	movlw	1
  4540     1F74  02B2               	subwf	___awdiv@counter,f
  4541     1F75  1D03               	btfss	3,2
  4542     1F76  2F78               	goto	u3011
  4543     1F77  2F79               	goto	u3010
  4544     1F78                     u3011:
  4545     1F78  2F54               	goto	l2327
  4546     1F79                     u3010:
  4547     1F79                     l2337:
  4548     1F79  0833               	movf	___awdiv@sign,w
  4549     1F7A  1903               	btfsc	3,2
  4550     1F7B  2F7D               	goto	u3021
  4551     1F7C  2F7E               	goto	u3020
  4552     1F7D                     u3021:
  4553     1F7D  2F83               	goto	l2341
  4554     1F7E                     u3020:
  4555     1F7E                     l2339:
  4556     1F7E  09B4               	comf	___awdiv@quotient,f
  4557     1F7F  09B5               	comf	___awdiv@quotient+1,f
  4558     1F80  0AB4               	incf	___awdiv@quotient,f
  4559     1F81  1903               	skipnz
  4560     1F82  0AB5               	incf	___awdiv@quotient+1,f
  4561     1F83                     l2341:
  4562     1F83  0835               	movf	___awdiv@quotient+1,w
  4563     1F84  00AE               	movwf	?___awdiv+1
  4564     1F85  0834               	movf	___awdiv@quotient,w
  4565     1F86  00AD               	movwf	?___awdiv
  4566     1F87                     l506:
  4567     1F87  0008               	return
  4568     1F88                     __end_of___awdiv:
  4569                           
  4570                           	psect	text5
  4571     139B                     __ptext5:	
  4572 ;; *************** function _fround *****************
  4573 ;; Defined at:
  4574 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  prec            1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  prec            1   67[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  4   48[BANK0 ] unsigned char 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4588 ;;      Params:         0       4       0       0       0
  4589 ;;      Locals:         0       9       0       0       0
  4590 ;;      Temps:          0       7       0       0       0
  4591 ;;      Totals:         0      20       0       0       0
  4592 ;;Total ram usage:       20 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 4
  4595 ;; This function calls:
  4596 ;;		___flmul
  4597 ;;		___lwdiv
  4598 ;;		___lwmod
  4599 ;; This function is called by:
  4600 ;;		_sprintf
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604     139B                     _fround:	
  4605                           ;psect for function _fround
  4606                           
  4607                           
  4608                           ;incstack = 0
  4609                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4610                           ;fround@prec stored from wreg
  4611     139B  1283               	bcf	3,5	;RP0=0, select bank0
  4612     139C  1303               	bcf	3,6	;RP1=0, select bank0
  4613     139D  00E3               	movwf	fround@prec
  4614     139E                     l2777:
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4617     139E  306E               	movlw	110
  4618     139F  0263               	subwf	fround@prec,w
  4619     13A0  1C03               	skipc
  4620     13A1  2BA3               	goto	u4081
  4621     13A2  2BA4               	goto	u4080
  4622     13A3                     u4081:
  4623     13A3  2CB3               	goto	l2785
  4624     13A4                     u4080:
  4625     13A4                     l2779:
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4628     13A4  303F               	movlw	63
  4629     13A5  00B9               	movwf	___flmul@b+3
  4630     13A6  3000               	movlw	0
  4631     13A7  00B8               	movwf	___flmul@b+2
  4632     13A8  3000               	movlw	0
  4633     13A9  00B7               	movwf	___flmul@b+1
  4634     13AA  3000               	movlw	0
  4635     13AB  00B6               	movwf	___flmul@b
  4636     13AC  3064               	movlw	100
  4637     13AD  00AC               	movwf	___lwdiv@divisor
  4638     13AE  3000               	movlw	0
  4639     13AF  00AD               	movwf	___lwdiv@divisor+1
  4640     13B0  0863               	movf	fround@prec,w
  4641     13B1  00D4               	movwf	??_fround
  4642     13B2  01D5               	clrf	??_fround+1
  4643     13B3  0854               	movf	??_fround,w
  4644     13B4  00AE               	movwf	___lwdiv@dividend
  4645     13B5  0855               	movf	??_fround+1,w
  4646     13B6  00AF               	movwf	___lwdiv@dividend+1
  4647     13B7  160A  158A  24A4  160A  118A  	fcall	___lwdiv
  4648     13BC  1283               	bcf	3,5	;RP0=0, select bank0
  4649     13BD  1303               	bcf	3,6	;RP1=0, select bank0
  4650     13BE  082C               	movf	?___lwdiv,w
  4651     13BF  00D6               	movwf	??_fround+2
  4652     13C0  3001               	movlw	1
  4653     13C1                     u4095:
  4654     13C1  1003               	clrc
  4655     13C2  0DD6               	rlf	??_fround+2,f
  4656     13C3  3EFF               	addlw	-1
  4657     13C4  1D03               	skipz
  4658     13C5  2BC1               	goto	u4095
  4659     13C6  1003               	clrc
  4660     13C7  0D56               	rlf	??_fround+2,w
  4661     13C8  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4662     13C9  0084               	movwf	4
  4663     13CA  160A  118A  2000  160A  118A  	fcall	stringdir
  4664     13CF  00D7               	movwf	??_fround+3
  4665     13D0  160A  118A  2000  160A  118A  	fcall	stringdir
  4666     13D5  00D8               	movwf	??_fround+4
  4667     13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  4668     13DB  00D9               	movwf	??_fround+5
  4669     13DC  160A  118A  2000  160A  118A  	fcall	stringdir
  4670     13E1  00DA               	movwf	??_fround+6
  4671     13E2  085A               	movf	??_fround+6,w
  4672     13E3  00BD               	movwf	___flmul@a+3
  4673     13E4  0859               	movf	??_fround+5,w
  4674     13E5  00BC               	movwf	___flmul@a+2
  4675     13E6  0858               	movf	??_fround+4,w
  4676     13E7  00BB               	movwf	___flmul@a+1
  4677     13E8  0857               	movf	??_fround+3,w
  4678     13E9  00BA               	movwf	___flmul@a
  4679     13EA  120A  158A  2158  160A  118A  	fcall	___flmul
  4680     13EF  1283               	bcf	3,5	;RP0=0, select bank0
  4681     13F0  1303               	bcf	3,6	;RP1=0, select bank0
  4682     13F1  0839               	movf	?___flmul+3,w
  4683     13F2  00E2               	movwf	_fround$1094+3
  4684     13F3  0838               	movf	?___flmul+2,w
  4685     13F4  00E1               	movwf	_fround$1094+2
  4686     13F5  0837               	movf	?___flmul+1,w
  4687     13F6  00E0               	movwf	_fround$1094+1
  4688     13F7  0836               	movf	?___flmul,w
  4689     13F8  00DF               	movwf	_fround$1094
  4690                           
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4692     13F9  300A               	movlw	10
  4693     13FA  00AC               	movwf	___lwdiv@divisor
  4694     13FB  3000               	movlw	0
  4695     13FC  00AD               	movwf	___lwdiv@divisor+1
  4696     13FD  0863               	movf	fround@prec,w
  4697     13FE  00D4               	movwf	??_fround
  4698     13FF  01D5               	clrf	??_fround+1
  4699     1400  0854               	movf	??_fround,w
  4700     1401  00A8               	movwf	___lwmod@dividend
  4701     1402  0855               	movf	??_fround+1,w
  4702     1403  00A9               	movwf	___lwmod@dividend+1
  4703     1404  3064               	movlw	100
  4704     1405  00A6               	movwf	___lwmod@divisor
  4705     1406  3000               	movlw	0
  4706     1407  00A7               	movwf	___lwmod@divisor+1
  4707     1408  160A  158A  2468  160A  118A  	fcall	___lwmod
  4708     140D  1283               	bcf	3,5	;RP0=0, select bank0
  4709     140E  1303               	bcf	3,6	;RP1=0, select bank0
  4710     140F  0827               	movf	?___lwmod+1,w
  4711     1410  00AF               	movwf	___lwdiv@dividend+1
  4712     1411  0826               	movf	?___lwmod,w
  4713     1412  00AE               	movwf	___lwdiv@dividend
  4714     1413  160A  158A  24A4  160A  118A  	fcall	___lwdiv
  4715     1418  1283               	bcf	3,5	;RP0=0, select bank0
  4716     1419  1303               	bcf	3,6	;RP1=0, select bank0
  4717     141A  082C               	movf	?___lwdiv,w
  4718     141B  00D6               	movwf	??_fround+2
  4719     141C  3001               	movlw	1
  4720     141D                     u4105:
  4721     141D  1003               	clrc
  4722     141E  0DD6               	rlf	??_fround+2,f
  4723     141F  3EFF               	addlw	-1
  4724     1420  1D03               	skipz
  4725     1421  2C1D               	goto	u4105
  4726     1422  1003               	clrc
  4727     1423  0D56               	rlf	??_fround+2,w
  4728     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4729     1425  0084               	movwf	4
  4730     1426  160A  118A  2000  160A  118A  	fcall	stringdir
  4731     142B  00D7               	movwf	??_fround+3
  4732     142C  160A  118A  2000  160A  118A  	fcall	stringdir
  4733     1431  00D8               	movwf	??_fround+4
  4734     1432  160A  118A  2000  160A  118A  	fcall	stringdir
  4735     1437  00D9               	movwf	??_fround+5
  4736     1438  160A  118A  2000  160A  118A  	fcall	stringdir
  4737     143D  00DA               	movwf	??_fround+6
  4738     143E  085A               	movf	??_fround+6,w
  4739     143F  00B9               	movwf	___flmul@b+3
  4740     1440  0859               	movf	??_fround+5,w
  4741     1441  00B8               	movwf	___flmul@b+2
  4742     1442  0858               	movf	??_fround+4,w
  4743     1443  00B7               	movwf	___flmul@b+1
  4744     1444  0857               	movf	??_fround+3,w
  4745     1445  00B6               	movwf	___flmul@b
  4746     1446  0862               	movf	_fround$1094+3,w
  4747     1447  00BD               	movwf	___flmul@a+3
  4748     1448  0861               	movf	_fround$1094+2,w
  4749     1449  00BC               	movwf	___flmul@a+2
  4750     144A  0860               	movf	_fround$1094+1,w
  4751     144B  00BB               	movwf	___flmul@a+1
  4752     144C  085F               	movf	_fround$1094,w
  4753     144D  00BA               	movwf	___flmul@a
  4754     144E  120A  158A  2158  160A  118A  	fcall	___flmul
  4755     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4756     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4757     1455  0839               	movf	?___flmul+3,w
  4758     1456  00DE               	movwf	_fround$1095+3
  4759     1457  0838               	movf	?___flmul+2,w
  4760     1458  00DD               	movwf	_fround$1095+2
  4761     1459  0837               	movf	?___flmul+1,w
  4762     145A  00DC               	movwf	_fround$1095+1
  4763     145B  0836               	movf	?___flmul,w
  4764     145C  00DB               	movwf	_fround$1095
  4765                           
  4766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4767     145D  300A               	movlw	10
  4768     145E  00A6               	movwf	___lwmod@divisor
  4769     145F  3000               	movlw	0
  4770     1460  00A7               	movwf	___lwmod@divisor+1
  4771     1461  0863               	movf	fround@prec,w
  4772     1462  00D4               	movwf	??_fround
  4773     1463  01D5               	clrf	??_fround+1
  4774     1464  0854               	movf	??_fround,w
  4775     1465  00A8               	movwf	___lwmod@dividend
  4776     1466  0855               	movf	??_fround+1,w
  4777     1467  00A9               	movwf	___lwmod@dividend+1
  4778     1468  160A  158A  2468  160A  118A  	fcall	___lwmod
  4779     146D  1283               	bcf	3,5	;RP0=0, select bank0
  4780     146E  1303               	bcf	3,6	;RP1=0, select bank0
  4781     146F  0826               	movf	?___lwmod,w
  4782     1470  00D6               	movwf	??_fround+2
  4783     1471  3001               	movlw	1
  4784     1472                     u4115:
  4785     1472  1003               	clrc
  4786     1473  0DD6               	rlf	??_fround+2,f
  4787     1474  3EFF               	addlw	-1
  4788     1475  1D03               	skipz
  4789     1476  2C72               	goto	u4115
  4790     1477  1003               	clrc
  4791     1478  0D56               	rlf	??_fround+2,w
  4792     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4793     147A  0084               	movwf	4
  4794     147B  160A  118A  2000  160A  118A  	fcall	stringdir
  4795     1480  00D7               	movwf	??_fround+3
  4796     1481  160A  118A  2000  160A  118A  	fcall	stringdir
  4797     1486  00D8               	movwf	??_fround+4
  4798     1487  160A  118A  2000  160A  118A  	fcall	stringdir
  4799     148C  00D9               	movwf	??_fround+5
  4800     148D  160A  118A  2000  160A  118A  	fcall	stringdir
  4801     1492  00DA               	movwf	??_fround+6
  4802     1493  085A               	movf	??_fround+6,w
  4803     1494  00B9               	movwf	___flmul@b+3
  4804     1495  0859               	movf	??_fround+5,w
  4805     1496  00B8               	movwf	___flmul@b+2
  4806     1497  0858               	movf	??_fround+4,w
  4807     1498  00B7               	movwf	___flmul@b+1
  4808     1499  0857               	movf	??_fround+3,w
  4809     149A  00B6               	movwf	___flmul@b
  4810     149B  085E               	movf	_fround$1095+3,w
  4811     149C  00BD               	movwf	___flmul@a+3
  4812     149D  085D               	movf	_fround$1095+2,w
  4813     149E  00BC               	movwf	___flmul@a+2
  4814     149F  085C               	movf	_fround$1095+1,w
  4815     14A0  00BB               	movwf	___flmul@a+1
  4816     14A1  085B               	movf	_fround$1095,w
  4817     14A2  00BA               	movwf	___flmul@a
  4818     14A3  120A  158A  2158  160A  118A  	fcall	___flmul
  4819     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4820     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4821     14AA  0839               	movf	?___flmul+3,w
  4822     14AB  00D3               	movwf	?_fround+3
  4823     14AC  0838               	movf	?___flmul+2,w
  4824     14AD  00D2               	movwf	?_fround+2
  4825     14AE  0837               	movf	?___flmul+1,w
  4826     14AF  00D1               	movwf	?_fround+1
  4827     14B0  0836               	movf	?___flmul,w
  4828     14B1  00D0               	movwf	?_fround
  4829     14B2  2DA7               	goto	l286
  4830     14B3                     l2785:
  4831     14B3  300B               	movlw	11
  4832     14B4  0263               	subwf	fround@prec,w
  4833     14B5  1C03               	skipc
  4834     14B6  2CB8               	goto	u4121
  4835     14B7  2CB9               	goto	u4120
  4836     14B8                     u4121:
  4837     14B8  2D64               	goto	l2791
  4838     14B9                     u4120:
  4839     14B9                     l2787:
  4840                           
  4841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4842     14B9  303F               	movlw	63
  4843     14BA  00B9               	movwf	___flmul@b+3
  4844     14BB  3000               	movlw	0
  4845     14BC  00B8               	movwf	___flmul@b+2
  4846     14BD  3000               	movlw	0
  4847     14BE  00B7               	movwf	___flmul@b+1
  4848     14BF  3000               	movlw	0
  4849     14C0  00B6               	movwf	___flmul@b
  4850     14C1  300A               	movlw	10
  4851     14C2  00AC               	movwf	___lwdiv@divisor
  4852     14C3  3000               	movlw	0
  4853     14C4  00AD               	movwf	___lwdiv@divisor+1
  4854     14C5  0863               	movf	fround@prec,w
  4855     14C6  00D4               	movwf	??_fround
  4856     14C7  01D5               	clrf	??_fround+1
  4857     14C8  0854               	movf	??_fround,w
  4858     14C9  00AE               	movwf	___lwdiv@dividend
  4859     14CA  0855               	movf	??_fround+1,w
  4860     14CB  00AF               	movwf	___lwdiv@dividend+1
  4861     14CC  160A  158A  24A4  160A  118A  	fcall	___lwdiv
  4862     14D1  1283               	bcf	3,5	;RP0=0, select bank0
  4863     14D2  1303               	bcf	3,6	;RP1=0, select bank0
  4864     14D3  082C               	movf	?___lwdiv,w
  4865     14D4  00D6               	movwf	??_fround+2
  4866     14D5  3001               	movlw	1
  4867     14D6                     u4135:
  4868     14D6  1003               	clrc
  4869     14D7  0DD6               	rlf	??_fround+2,f
  4870     14D8  3EFF               	addlw	-1
  4871     14D9  1D03               	skipz
  4872     14DA  2CD6               	goto	u4135
  4873     14DB  1003               	clrc
  4874     14DC  0D56               	rlf	??_fround+2,w
  4875     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4876     14DE  0084               	movwf	4
  4877     14DF  160A  118A  2000  160A  118A  	fcall	stringdir
  4878     14E4  00D7               	movwf	??_fround+3
  4879     14E5  160A  118A  2000  160A  118A  	fcall	stringdir
  4880     14EA  00D8               	movwf	??_fround+4
  4881     14EB  160A  118A  2000  160A  118A  	fcall	stringdir
  4882     14F0  00D9               	movwf	??_fround+5
  4883     14F1  160A  118A  2000  160A  118A  	fcall	stringdir
  4884     14F6  00DA               	movwf	??_fround+6
  4885     14F7  085A               	movf	??_fround+6,w
  4886     14F8  00BD               	movwf	___flmul@a+3
  4887     14F9  0859               	movf	??_fround+5,w
  4888     14FA  00BC               	movwf	___flmul@a+2
  4889     14FB  0858               	movf	??_fround+4,w
  4890     14FC  00BB               	movwf	___flmul@a+1
  4891     14FD  0857               	movf	??_fround+3,w
  4892     14FE  00BA               	movwf	___flmul@a
  4893     14FF  120A  158A  2158  160A  118A  	fcall	___flmul
  4894     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4895     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4896     1506  0839               	movf	?___flmul+3,w
  4897     1507  00E2               	movwf	_fround$1094+3
  4898     1508  0838               	movf	?___flmul+2,w
  4899     1509  00E1               	movwf	_fround$1094+2
  4900     150A  0837               	movf	?___flmul+1,w
  4901     150B  00E0               	movwf	_fround$1094+1
  4902     150C  0836               	movf	?___flmul,w
  4903     150D  00DF               	movwf	_fround$1094
  4904                           
  4905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4906     150E  300A               	movlw	10
  4907     150F  00A6               	movwf	___lwmod@divisor
  4908     1510  3000               	movlw	0
  4909     1511  00A7               	movwf	___lwmod@divisor+1
  4910     1512  0863               	movf	fround@prec,w
  4911     1513  00D4               	movwf	??_fround
  4912     1514  01D5               	clrf	??_fround+1
  4913     1515  0854               	movf	??_fround,w
  4914     1516  00A8               	movwf	___lwmod@dividend
  4915     1517  0855               	movf	??_fround+1,w
  4916     1518  00A9               	movwf	___lwmod@dividend+1
  4917     1519  160A  158A  2468  160A  118A  	fcall	___lwmod
  4918     151E  1283               	bcf	3,5	;RP0=0, select bank0
  4919     151F  1303               	bcf	3,6	;RP1=0, select bank0
  4920     1520  0826               	movf	?___lwmod,w
  4921     1521  00D6               	movwf	??_fround+2
  4922     1522  3001               	movlw	1
  4923     1523                     u4145:
  4924     1523  1003               	clrc
  4925     1524  0DD6               	rlf	??_fround+2,f
  4926     1525  3EFF               	addlw	-1
  4927     1526  1D03               	skipz
  4928     1527  2D23               	goto	u4145
  4929     1528  1003               	clrc
  4930     1529  0D56               	rlf	??_fround+2,w
  4931     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4932     152B  0084               	movwf	4
  4933     152C  160A  118A  2000  160A  118A  	fcall	stringdir
  4934     1531  00D7               	movwf	??_fround+3
  4935     1532  160A  118A  2000  160A  118A  	fcall	stringdir
  4936     1537  00D8               	movwf	??_fround+4
  4937     1538  160A  118A  2000  160A  118A  	fcall	stringdir
  4938     153D  00D9               	movwf	??_fround+5
  4939     153E  160A  118A  2000  160A  118A  	fcall	stringdir
  4940     1543  00DA               	movwf	??_fround+6
  4941     1544  085A               	movf	??_fround+6,w
  4942     1545  00B9               	movwf	___flmul@b+3
  4943     1546  0859               	movf	??_fround+5,w
  4944     1547  00B8               	movwf	___flmul@b+2
  4945     1548  0858               	movf	??_fround+4,w
  4946     1549  00B7               	movwf	___flmul@b+1
  4947     154A  0857               	movf	??_fround+3,w
  4948     154B  00B6               	movwf	___flmul@b
  4949     154C  0862               	movf	_fround$1094+3,w
  4950     154D  00BD               	movwf	___flmul@a+3
  4951     154E  0861               	movf	_fround$1094+2,w
  4952     154F  00BC               	movwf	___flmul@a+2
  4953     1550  0860               	movf	_fround$1094+1,w
  4954     1551  00BB               	movwf	___flmul@a+1
  4955     1552  085F               	movf	_fround$1094,w
  4956     1553  00BA               	movwf	___flmul@a
  4957     1554  120A  158A  2158  160A  118A  	fcall	___flmul
  4958     1559  1283               	bcf	3,5	;RP0=0, select bank0
  4959     155A  1303               	bcf	3,6	;RP1=0, select bank0
  4960     155B  0839               	movf	?___flmul+3,w
  4961     155C  00D3               	movwf	?_fround+3
  4962     155D  0838               	movf	?___flmul+2,w
  4963     155E  00D2               	movwf	?_fround+2
  4964     155F  0837               	movf	?___flmul+1,w
  4965     1560  00D1               	movwf	?_fround+1
  4966     1561  0836               	movf	?___flmul,w
  4967     1562  00D0               	movwf	?_fround
  4968     1563  2DA7               	goto	l286
  4969     1564                     l2791:
  4970                           
  4971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4972     1564  303F               	movlw	63
  4973     1565  00B9               	movwf	___flmul@b+3
  4974     1566  3000               	movlw	0
  4975     1567  00B8               	movwf	___flmul@b+2
  4976     1568  3000               	movlw	0
  4977     1569  00B7               	movwf	___flmul@b+1
  4978     156A  3000               	movlw	0
  4979     156B  00B6               	movwf	___flmul@b
  4980     156C  0863               	movf	fround@prec,w
  4981     156D  00D4               	movwf	??_fround
  4982     156E  3001               	movlw	1
  4983     156F                     u4155:
  4984     156F  1003               	clrc
  4985     1570  0DD4               	rlf	??_fround,f
  4986     1571  3EFF               	addlw	-1
  4987     1572  1D03               	skipz
  4988     1573  2D6F               	goto	u4155
  4989     1574  1003               	clrc
  4990     1575  0D54               	rlf	??_fround,w
  4991     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4992     1577  0084               	movwf	4
  4993     1578  160A  118A  2000  160A  118A  	fcall	stringdir
  4994     157D  00D5               	movwf	??_fround+1
  4995     157E  160A  118A  2000  160A  118A  	fcall	stringdir
  4996     1583  00D6               	movwf	??_fround+2
  4997     1584  160A  118A  2000  160A  118A  	fcall	stringdir
  4998     1589  00D7               	movwf	??_fround+3
  4999     158A  160A  118A  2000  160A  118A  	fcall	stringdir
  5000     158F  00D8               	movwf	??_fround+4
  5001     1590  0858               	movf	??_fround+4,w
  5002     1591  00BD               	movwf	___flmul@a+3
  5003     1592  0857               	movf	??_fround+3,w
  5004     1593  00BC               	movwf	___flmul@a+2
  5005     1594  0856               	movf	??_fround+2,w
  5006     1595  00BB               	movwf	___flmul@a+1
  5007     1596  0855               	movf	??_fround+1,w
  5008     1597  00BA               	movwf	___flmul@a
  5009     1598  120A  158A  2158  160A  118A  	fcall	___flmul
  5010     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5011     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5012     159F  0839               	movf	?___flmul+3,w
  5013     15A0  00D3               	movwf	?_fround+3
  5014     15A1  0838               	movf	?___flmul+2,w
  5015     15A2  00D2               	movwf	?_fround+2
  5016     15A3  0837               	movf	?___flmul+1,w
  5017     15A4  00D1               	movwf	?_fround+1
  5018     15A5  0836               	movf	?___flmul,w
  5019     15A6  00D0               	movwf	?_fround
  5020     15A7                     l286:
  5021     15A7  0008               	return
  5022     15A8                     __end_of_fround:
  5023                           
  5024                           	psect	text6
  5025     1C68                     __ptext6:	
  5026 ;; *************** function ___lwmod *****************
  5027 ;; Defined at:
  5028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  divisor         2    6[BANK0 ] unsigned int 
  5031 ;;  dividend        2    8[BANK0 ] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  counter         1   11[BANK0 ] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  2    6[BANK0 ] unsigned int 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       4       0       0       0
  5044 ;;      Locals:         0       1       0       0       0
  5045 ;;      Temps:          0       1       0       0       0
  5046 ;;      Totals:         0       6       0       0       0
  5047 ;;Total ram usage:        6 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 2
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_fround
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057     1C68                     ___lwmod:	
  5058                           ;psect for function ___lwmod
  5059                           
  5060     1C68                     l2409:	
  5061                           ;incstack = 0
  5062                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5063                           
  5064     1C68  1283               	bcf	3,5	;RP0=0, select bank0
  5065     1C69  1303               	bcf	3,6	;RP1=0, select bank0
  5066     1C6A  0826               	movf	___lwmod@divisor,w
  5067     1C6B  0427               	iorwf	___lwmod@divisor+1,w
  5068     1C6C  1903               	btfsc	3,2
  5069     1C6D  2C6F               	goto	u3191
  5070     1C6E  2C70               	goto	u3190
  5071     1C6F                     u3191:
  5072     1C6F  2C9F               	goto	l2427
  5073     1C70                     u3190:
  5074     1C70                     l2411:
  5075     1C70  01AB               	clrf	___lwmod@counter
  5076     1C71  0AAB               	incf	___lwmod@counter,f
  5077     1C72  2C7E               	goto	l2417
  5078     1C73                     l2413:
  5079     1C73  3001               	movlw	1
  5080     1C74                     u3205:
  5081     1C74  1003               	clrc
  5082     1C75  0DA6               	rlf	___lwmod@divisor,f
  5083     1C76  0DA7               	rlf	___lwmod@divisor+1,f
  5084     1C77  3EFF               	addlw	-1
  5085     1C78  1D03               	skipz
  5086     1C79  2C74               	goto	u3205
  5087     1C7A                     l2415:
  5088     1C7A  3001               	movlw	1
  5089     1C7B  00AA               	movwf	??___lwmod
  5090     1C7C  082A               	movf	??___lwmod,w
  5091     1C7D  07AB               	addwf	___lwmod@counter,f
  5092     1C7E                     l2417:
  5093     1C7E  1FA7               	btfss	___lwmod@divisor+1,7
  5094     1C7F  2C81               	goto	u3211
  5095     1C80  2C82               	goto	u3210
  5096     1C81                     u3211:
  5097     1C81  2C73               	goto	l2413
  5098     1C82                     u3210:
  5099     1C82                     l2419:
  5100     1C82  0827               	movf	___lwmod@divisor+1,w
  5101     1C83  0229               	subwf	___lwmod@dividend+1,w
  5102     1C84  1D03               	skipz
  5103     1C85  2C88               	goto	u3225
  5104     1C86  0826               	movf	___lwmod@divisor,w
  5105     1C87  0228               	subwf	___lwmod@dividend,w
  5106     1C88                     u3225:
  5107     1C88  1C03               	skipc
  5108     1C89  2C8B               	goto	u3221
  5109     1C8A  2C8C               	goto	u3220
  5110     1C8B                     u3221:
  5111     1C8B  2C92               	goto	l2423
  5112     1C8C                     u3220:
  5113     1C8C                     l2421:
  5114     1C8C  0826               	movf	___lwmod@divisor,w
  5115     1C8D  02A8               	subwf	___lwmod@dividend,f
  5116     1C8E  0827               	movf	___lwmod@divisor+1,w
  5117     1C8F  1C03               	skipc
  5118     1C90  03A9               	decf	___lwmod@dividend+1,f
  5119     1C91  02A9               	subwf	___lwmod@dividend+1,f
  5120     1C92                     l2423:
  5121     1C92  3001               	movlw	1
  5122     1C93                     u3235:
  5123     1C93  1003               	clrc
  5124     1C94  0CA7               	rrf	___lwmod@divisor+1,f
  5125     1C95  0CA6               	rrf	___lwmod@divisor,f
  5126     1C96  3EFF               	addlw	-1
  5127     1C97  1D03               	skipz
  5128     1C98  2C93               	goto	u3235
  5129     1C99                     l2425:
  5130     1C99  3001               	movlw	1
  5131     1C9A  02AB               	subwf	___lwmod@counter,f
  5132     1C9B  1D03               	btfss	3,2
  5133     1C9C  2C9E               	goto	u3241
  5134     1C9D  2C9F               	goto	u3240
  5135     1C9E                     u3241:
  5136     1C9E  2C82               	goto	l2419
  5137     1C9F                     u3240:
  5138     1C9F                     l2427:
  5139     1C9F  0829               	movf	___lwmod@dividend+1,w
  5140     1CA0  00A7               	movwf	?___lwmod+1
  5141     1CA1  0828               	movf	___lwmod@dividend,w
  5142     1CA2  00A6               	movwf	?___lwmod
  5143     1CA3                     l669:
  5144     1CA3  0008               	return
  5145     1CA4                     __end_of___lwmod:
  5146                           
  5147                           	psect	text7
  5148     0958                     __ptext7:	
  5149 ;; *************** function ___flmul *****************
  5150 ;; Defined at:
  5151 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcmul.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  b               4   22[BANK0 ] unsigned int 
  5154 ;;  a               4   26[BANK0 ] unsigned int 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  prod            4   42[BANK0 ] struct .
  5157 ;;  grs             4   36[BANK0 ] unsigned long 
  5158 ;;  temp            2   46[BANK0 ] struct .
  5159 ;;  bexp            1   41[BANK0 ] unsigned char 
  5160 ;;  aexp            1   40[BANK0 ] unsigned char 
  5161 ;;  sign            1   35[BANK0 ] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  4   22[BANK0 ] unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       8       0       0       0
  5172 ;;      Locals:         0      13       0       0       0
  5173 ;;      Temps:          0       5       0       0       0
  5174 ;;      Totals:         0      26       0       0       0
  5175 ;;Total ram usage:       26 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 3
  5178 ;; This function calls:
  5179 ;;		__Umul8_16
  5180 ;; This function is called by:
  5181 ;;		_fround
  5182 ;;		_scale
  5183 ;;		_sprintf
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187     0958                     ___flmul:	
  5188                           ;psect for function ___flmul
  5189                           
  5190     0958                     l2625:	
  5191                           ;incstack = 0
  5192                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5193                           
  5194     0958  1283               	bcf	3,5	;RP0=0, select bank0
  5195     0959  1303               	bcf	3,6	;RP1=0, select bank0
  5196     095A  0839               	movf	___flmul@b+3,w
  5197     095B  3980               	andlw	128
  5198     095C  00C3               	movwf	___flmul@sign
  5199     095D                     l2627:
  5200     095D  0839               	movf	___flmul@b+3,w
  5201     095E  00BE               	movwf	??___flmul
  5202     095F  073E               	addwf	??___flmul,w
  5203     0960  00C9               	movwf	___flmul@bexp
  5204     0961                     l2629:
  5205     0961  1FB8               	btfss	___flmul@b+2,7
  5206     0962  2964               	goto	u3711
  5207     0963  2965               	goto	u3710
  5208     0964                     u3711:
  5209     0964  2966               	goto	l2633
  5210     0965                     u3710:
  5211     0965                     l2631:
  5212     0965  1449               	bsf	___flmul@bexp,0
  5213     0966                     l2633:
  5214     0966  0849               	movf	___flmul@bexp,w
  5215     0967  1903               	btfsc	3,2
  5216     0968  296A               	goto	u3721
  5217     0969  296B               	goto	u3720
  5218     096A                     u3721:
  5219     096A  297A               	goto	l2641
  5220     096B                     u3720:
  5221     096B                     l2635:
  5222     096B  0A49               	incf	___flmul@bexp,w
  5223     096C  1D03               	btfss	3,2
  5224     096D  296F               	goto	u3731
  5225     096E  2970               	goto	u3730
  5226     096F                     u3731:
  5227     096F  2978               	goto	l2639
  5228     0970                     u3730:
  5229     0970                     l2637:
  5230     0970  3000               	movlw	0
  5231     0971  00B9               	movwf	___flmul@b+3
  5232     0972  3000               	movlw	0
  5233     0973  00B8               	movwf	___flmul@b+2
  5234     0974  3000               	movlw	0
  5235     0975  00B7               	movwf	___flmul@b+1
  5236     0976  3000               	movlw	0
  5237     0977  00B6               	movwf	___flmul@b
  5238     0978                     l2639:
  5239     0978  17B8               	bsf	___flmul@b+2,7
  5240     0979  2982               	goto	l2643
  5241     097A                     l2641:
  5242     097A  3000               	movlw	0
  5243     097B  00B9               	movwf	___flmul@b+3
  5244     097C  3000               	movlw	0
  5245     097D  00B8               	movwf	___flmul@b+2
  5246     097E  3000               	movlw	0
  5247     097F  00B7               	movwf	___flmul@b+1
  5248     0980  3000               	movlw	0
  5249     0981  00B6               	movwf	___flmul@b
  5250     0982                     l2643:
  5251     0982  083D               	movf	___flmul@a+3,w
  5252     0983  3980               	andlw	128
  5253     0984  00BE               	movwf	??___flmul
  5254     0985  083E               	movf	??___flmul,w
  5255     0986  06C3               	xorwf	___flmul@sign,f
  5256     0987                     l2645:
  5257     0987  083D               	movf	___flmul@a+3,w
  5258     0988  00BE               	movwf	??___flmul
  5259     0989  073E               	addwf	??___flmul,w
  5260     098A  00C8               	movwf	___flmul@aexp
  5261     098B                     l2647:
  5262     098B  1FBC               	btfss	___flmul@a+2,7
  5263     098C  298E               	goto	u3741
  5264     098D  298F               	goto	u3740
  5265     098E                     u3741:
  5266     098E  2990               	goto	l2651
  5267     098F                     u3740:
  5268     098F                     l2649:
  5269     098F  1448               	bsf	___flmul@aexp,0
  5270     0990                     l2651:
  5271     0990  0848               	movf	___flmul@aexp,w
  5272     0991  1903               	btfsc	3,2
  5273     0992  2994               	goto	u3751
  5274     0993  2995               	goto	u3750
  5275     0994                     u3751:
  5276     0994  29A4               	goto	l2659
  5277     0995                     u3750:
  5278     0995                     l2653:
  5279     0995  0A48               	incf	___flmul@aexp,w
  5280     0996  1D03               	btfss	3,2
  5281     0997  2999               	goto	u3761
  5282     0998  299A               	goto	u3760
  5283     0999                     u3761:
  5284     0999  29A2               	goto	l2657
  5285     099A                     u3760:
  5286     099A                     l2655:
  5287     099A  3000               	movlw	0
  5288     099B  00BD               	movwf	___flmul@a+3
  5289     099C  3000               	movlw	0
  5290     099D  00BC               	movwf	___flmul@a+2
  5291     099E  3000               	movlw	0
  5292     099F  00BB               	movwf	___flmul@a+1
  5293     09A0  3000               	movlw	0
  5294     09A1  00BA               	movwf	___flmul@a
  5295     09A2                     l2657:
  5296     09A2  17BC               	bsf	___flmul@a+2,7
  5297     09A3  29AC               	goto	l2661
  5298     09A4                     l2659:
  5299     09A4  3000               	movlw	0
  5300     09A5  00BD               	movwf	___flmul@a+3
  5301     09A6  3000               	movlw	0
  5302     09A7  00BC               	movwf	___flmul@a+2
  5303     09A8  3000               	movlw	0
  5304     09A9  00BB               	movwf	___flmul@a+1
  5305     09AA  3000               	movlw	0
  5306     09AB  00BA               	movwf	___flmul@a
  5307     09AC                     l2661:
  5308     09AC  0848               	movf	___flmul@aexp,w
  5309     09AD  1903               	btfsc	3,2
  5310     09AE  29B0               	goto	u3771
  5311     09AF  29B1               	goto	u3770
  5312     09B0                     u3771:
  5313     09B0  29B6               	goto	l2665
  5314     09B1                     u3770:
  5315     09B1                     l2663:
  5316     09B1  0849               	movf	___flmul@bexp,w
  5317     09B2  1D03               	btfss	3,2
  5318     09B3  29B5               	goto	u3781
  5319     09B4  29B6               	goto	u3780
  5320     09B5                     u3781:
  5321     09B5  29BF               	goto	l2669
  5322     09B6                     u3780:
  5323     09B6                     l2665:
  5324     09B6  3000               	movlw	0
  5325     09B7  00B9               	movwf	?___flmul+3
  5326     09B8  3000               	movlw	0
  5327     09B9  00B8               	movwf	?___flmul+2
  5328     09BA  3000               	movlw	0
  5329     09BB  00B7               	movwf	?___flmul+1
  5330     09BC  3000               	movlw	0
  5331     09BD  00B6               	movwf	?___flmul
  5332     09BE  2C9C               	goto	l776
  5333     09BF                     l2669:
  5334     09BF  0836               	movf	___flmul@b,w
  5335     09C0  00A6               	movwf	__Umul8_16@multiplicand
  5336     09C1  083C               	movf	___flmul@a+2,w
  5337     09C2  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5338     09C7  1283               	bcf	3,5	;RP0=0, select bank0
  5339     09C8  1303               	bcf	3,6	;RP1=0, select bank0
  5340     09C9  0827               	movf	?__Umul8_16+1,w
  5341     09CA  00CF               	movwf	___flmul@temp+1
  5342     09CB  0826               	movf	?__Umul8_16,w
  5343     09CC  00CE               	movwf	___flmul@temp
  5344     09CD                     l2671:
  5345     09CD  084E               	movf	___flmul@temp,w
  5346     09CE  00BE               	movwf	??___flmul
  5347     09CF  01BF               	clrf	??___flmul+1
  5348     09D0  01C0               	clrf	??___flmul+2
  5349     09D1  01C1               	clrf	??___flmul+3
  5350     09D2  0841               	movf	??___flmul+3,w
  5351     09D3  00C7               	movwf	___flmul@grs+3
  5352     09D4  0840               	movf	??___flmul+2,w
  5353     09D5  00C6               	movwf	___flmul@grs+2
  5354     09D6  083F               	movf	??___flmul+1,w
  5355     09D7  00C5               	movwf	___flmul@grs+1
  5356     09D8  083E               	movf	??___flmul,w
  5357     09D9  00C4               	movwf	___flmul@grs
  5358     09DA                     l2673:
  5359     09DA  084F               	movf	___flmul@temp+1,w
  5360     09DB  00BE               	movwf	??___flmul
  5361     09DC  01BF               	clrf	??___flmul+1
  5362     09DD  01C0               	clrf	??___flmul+2
  5363     09DE  01C1               	clrf	??___flmul+3
  5364     09DF  0841               	movf	??___flmul+3,w
  5365     09E0  00CD               	movwf	___flmul@prod+3
  5366     09E1  0840               	movf	??___flmul+2,w
  5367     09E2  00CC               	movwf	___flmul@prod+2
  5368     09E3  083F               	movf	??___flmul+1,w
  5369     09E4  00CB               	movwf	___flmul@prod+1
  5370     09E5  083E               	movf	??___flmul,w
  5371     09E6  00CA               	movwf	___flmul@prod
  5372     09E7  0837               	movf	___flmul@b+1,w
  5373     09E8  00A6               	movwf	__Umul8_16@multiplicand
  5374     09E9  083B               	movf	___flmul@a+1,w
  5375     09EA  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5376     09EF  1283               	bcf	3,5	;RP0=0, select bank0
  5377     09F0  1303               	bcf	3,6	;RP1=0, select bank0
  5378     09F1  0827               	movf	?__Umul8_16+1,w
  5379     09F2  00CF               	movwf	___flmul@temp+1
  5380     09F3  0826               	movf	?__Umul8_16,w
  5381     09F4  00CE               	movwf	___flmul@temp
  5382     09F5                     l2675:
  5383     09F5  084E               	movf	___flmul@temp,w
  5384     09F6  00BE               	movwf	??___flmul
  5385     09F7  01BF               	clrf	??___flmul+1
  5386     09F8  01C0               	clrf	??___flmul+2
  5387     09F9  01C1               	clrf	??___flmul+3
  5388     09FA  083E               	movf	??___flmul,w
  5389     09FB  07C4               	addwf	___flmul@grs,f
  5390     09FC  083F               	movf	??___flmul+1,w
  5391     09FD  1103               	clrz
  5392     09FE  1803               	skipnc
  5393     09FF  3E01               	addlw	1
  5394     0A00  1903               	skipnz
  5395     0A01  2A03               	goto	u3791
  5396     0A02  07C5               	addwf	___flmul@grs+1,f
  5397     0A03                     u3791:
  5398     0A03  0840               	movf	??___flmul+2,w
  5399     0A04  1103               	clrz
  5400     0A05  1803               	skipnc
  5401     0A06  3E01               	addlw	1
  5402     0A07  1903               	skipnz
  5403     0A08  2A0A               	goto	u3792
  5404     0A09  07C6               	addwf	___flmul@grs+2,f
  5405     0A0A                     u3792:
  5406     0A0A  0841               	movf	??___flmul+3,w
  5407     0A0B  1103               	clrz
  5408     0A0C  1803               	skipnc
  5409     0A0D  3E01               	addlw	1
  5410     0A0E  1903               	skipnz
  5411     0A0F  2A11               	goto	u3793
  5412     0A10  07C7               	addwf	___flmul@grs+3,f
  5413     0A11                     u3793:
  5414     0A11                     l2677:
  5415     0A11  084F               	movf	___flmul@temp+1,w
  5416     0A12  00BE               	movwf	??___flmul
  5417     0A13  01BF               	clrf	??___flmul+1
  5418     0A14  01C0               	clrf	??___flmul+2
  5419     0A15  01C1               	clrf	??___flmul+3
  5420     0A16  083E               	movf	??___flmul,w
  5421     0A17  07CA               	addwf	___flmul@prod,f
  5422     0A18  083F               	movf	??___flmul+1,w
  5423     0A19  1103               	clrz
  5424     0A1A  1803               	skipnc
  5425     0A1B  3E01               	addlw	1
  5426     0A1C  1903               	skipnz
  5427     0A1D  2A1F               	goto	u3801
  5428     0A1E  07CB               	addwf	___flmul@prod+1,f
  5429     0A1F                     u3801:
  5430     0A1F  0840               	movf	??___flmul+2,w
  5431     0A20  1103               	clrz
  5432     0A21  1803               	skipnc
  5433     0A22  3E01               	addlw	1
  5434     0A23  1903               	skipnz
  5435     0A24  2A26               	goto	u3802
  5436     0A25  07CC               	addwf	___flmul@prod+2,f
  5437     0A26                     u3802:
  5438     0A26  0841               	movf	??___flmul+3,w
  5439     0A27  1103               	clrz
  5440     0A28  1803               	skipnc
  5441     0A29  3E01               	addlw	1
  5442     0A2A  1903               	skipnz
  5443     0A2B  2A2D               	goto	u3803
  5444     0A2C  07CD               	addwf	___flmul@prod+3,f
  5445     0A2D                     u3803:
  5446     0A2D  0838               	movf	___flmul@b+2,w
  5447     0A2E  00A6               	movwf	__Umul8_16@multiplicand
  5448     0A2F  083A               	movf	___flmul@a,w
  5449     0A30  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5450     0A35  1283               	bcf	3,5	;RP0=0, select bank0
  5451     0A36  1303               	bcf	3,6	;RP1=0, select bank0
  5452     0A37  0827               	movf	?__Umul8_16+1,w
  5453     0A38  00CF               	movwf	___flmul@temp+1
  5454     0A39  0826               	movf	?__Umul8_16,w
  5455     0A3A  00CE               	movwf	___flmul@temp
  5456     0A3B                     l2679:
  5457     0A3B  084E               	movf	___flmul@temp,w
  5458     0A3C  00BE               	movwf	??___flmul
  5459     0A3D  01BF               	clrf	??___flmul+1
  5460     0A3E  01C0               	clrf	??___flmul+2
  5461     0A3F  01C1               	clrf	??___flmul+3
  5462     0A40  083E               	movf	??___flmul,w
  5463     0A41  07C4               	addwf	___flmul@grs,f
  5464     0A42  083F               	movf	??___flmul+1,w
  5465     0A43  1103               	clrz
  5466     0A44  1803               	skipnc
  5467     0A45  3E01               	addlw	1
  5468     0A46  1903               	skipnz
  5469     0A47  2A49               	goto	u3811
  5470     0A48  07C5               	addwf	___flmul@grs+1,f
  5471     0A49                     u3811:
  5472     0A49  0840               	movf	??___flmul+2,w
  5473     0A4A  1103               	clrz
  5474     0A4B  1803               	skipnc
  5475     0A4C  3E01               	addlw	1
  5476     0A4D  1903               	skipnz
  5477     0A4E  2A50               	goto	u3812
  5478     0A4F  07C6               	addwf	___flmul@grs+2,f
  5479     0A50                     u3812:
  5480     0A50  0841               	movf	??___flmul+3,w
  5481     0A51  1103               	clrz
  5482     0A52  1803               	skipnc
  5483     0A53  3E01               	addlw	1
  5484     0A54  1903               	skipnz
  5485     0A55  2A57               	goto	u3813
  5486     0A56  07C7               	addwf	___flmul@grs+3,f
  5487     0A57                     u3813:
  5488     0A57                     l2681:
  5489     0A57  084F               	movf	___flmul@temp+1,w
  5490     0A58  00BE               	movwf	??___flmul
  5491     0A59  01BF               	clrf	??___flmul+1
  5492     0A5A  01C0               	clrf	??___flmul+2
  5493     0A5B  01C1               	clrf	??___flmul+3
  5494     0A5C  083E               	movf	??___flmul,w
  5495     0A5D  07CA               	addwf	___flmul@prod,f
  5496     0A5E  083F               	movf	??___flmul+1,w
  5497     0A5F  1103               	clrz
  5498     0A60  1803               	skipnc
  5499     0A61  3E01               	addlw	1
  5500     0A62  1903               	skipnz
  5501     0A63  2A65               	goto	u3821
  5502     0A64  07CB               	addwf	___flmul@prod+1,f
  5503     0A65                     u3821:
  5504     0A65  0840               	movf	??___flmul+2,w
  5505     0A66  1103               	clrz
  5506     0A67  1803               	skipnc
  5507     0A68  3E01               	addlw	1
  5508     0A69  1903               	skipnz
  5509     0A6A  2A6C               	goto	u3822
  5510     0A6B  07CC               	addwf	___flmul@prod+2,f
  5511     0A6C                     u3822:
  5512     0A6C  0841               	movf	??___flmul+3,w
  5513     0A6D  1103               	clrz
  5514     0A6E  1803               	skipnc
  5515     0A6F  3E01               	addlw	1
  5516     0A70  1903               	skipnz
  5517     0A71  2A73               	goto	u3823
  5518     0A72  07CD               	addwf	___flmul@prod+3,f
  5519     0A73                     u3823:
  5520     0A73                     l2683:
  5521     0A73  3008               	movlw	8
  5522     0A74  00BE               	movwf	??___flmul
  5523     0A75                     u3835:
  5524     0A75  1003               	clrc
  5525     0A76  0DC4               	rlf	___flmul@grs,f
  5526     0A77  0DC5               	rlf	___flmul@grs+1,f
  5527     0A78  0DC6               	rlf	___flmul@grs+2,f
  5528     0A79  0DC7               	rlf	___flmul@grs+3,f
  5529     0A7A  0BBE               	decfsz	??___flmul,f
  5530     0A7B  2A75               	goto	u3835
  5531     0A7C                     l2685:
  5532     0A7C  0837               	movf	___flmul@b+1,w
  5533     0A7D  00A6               	movwf	__Umul8_16@multiplicand
  5534     0A7E  083A               	movf	___flmul@a,w
  5535     0A7F  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5536     0A84  1283               	bcf	3,5	;RP0=0, select bank0
  5537     0A85  1303               	bcf	3,6	;RP1=0, select bank0
  5538     0A86  0827               	movf	?__Umul8_16+1,w
  5539     0A87  00CF               	movwf	___flmul@temp+1
  5540     0A88  0826               	movf	?__Umul8_16,w
  5541     0A89  00CE               	movwf	___flmul@temp
  5542     0A8A                     l2687:
  5543     0A8A  084E               	movf	___flmul@temp,w
  5544     0A8B  00BE               	movwf	??___flmul
  5545     0A8C  084F               	movf	___flmul@temp+1,w
  5546     0A8D  00BF               	movwf	??___flmul+1
  5547     0A8E  01C0               	clrf	??___flmul+2
  5548     0A8F  01C1               	clrf	??___flmul+3
  5549     0A90  083E               	movf	??___flmul,w
  5550     0A91  07C4               	addwf	___flmul@grs,f
  5551     0A92  083F               	movf	??___flmul+1,w
  5552     0A93  1103               	clrz
  5553     0A94  1803               	skipnc
  5554     0A95  3E01               	addlw	1
  5555     0A96  1903               	skipnz
  5556     0A97  2A99               	goto	u3841
  5557     0A98  07C5               	addwf	___flmul@grs+1,f
  5558     0A99                     u3841:
  5559     0A99  0840               	movf	??___flmul+2,w
  5560     0A9A  1103               	clrz
  5561     0A9B  1803               	skipnc
  5562     0A9C  3E01               	addlw	1
  5563     0A9D  1903               	skipnz
  5564     0A9E  2AA0               	goto	u3842
  5565     0A9F  07C6               	addwf	___flmul@grs+2,f
  5566     0AA0                     u3842:
  5567     0AA0  0841               	movf	??___flmul+3,w
  5568     0AA1  1103               	clrz
  5569     0AA2  1803               	skipnc
  5570     0AA3  3E01               	addlw	1
  5571     0AA4  1903               	skipnz
  5572     0AA5  2AA7               	goto	u3843
  5573     0AA6  07C7               	addwf	___flmul@grs+3,f
  5574     0AA7                     u3843:
  5575     0AA7                     l2689:
  5576     0AA7  0836               	movf	___flmul@b,w
  5577     0AA8  00A6               	movwf	__Umul8_16@multiplicand
  5578     0AA9  083B               	movf	___flmul@a+1,w
  5579     0AAA  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5580     0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  5581     0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  5582     0AB1  0827               	movf	?__Umul8_16+1,w
  5583     0AB2  00CF               	movwf	___flmul@temp+1
  5584     0AB3  0826               	movf	?__Umul8_16,w
  5585     0AB4  00CE               	movwf	___flmul@temp
  5586     0AB5                     l2691:
  5587     0AB5  084E               	movf	___flmul@temp,w
  5588     0AB6  00BE               	movwf	??___flmul
  5589     0AB7  084F               	movf	___flmul@temp+1,w
  5590     0AB8  00BF               	movwf	??___flmul+1
  5591     0AB9  01C0               	clrf	??___flmul+2
  5592     0ABA  01C1               	clrf	??___flmul+3
  5593     0ABB  083E               	movf	??___flmul,w
  5594     0ABC  07C4               	addwf	___flmul@grs,f
  5595     0ABD  083F               	movf	??___flmul+1,w
  5596     0ABE  1103               	clrz
  5597     0ABF  1803               	skipnc
  5598     0AC0  3E01               	addlw	1
  5599     0AC1  1903               	skipnz
  5600     0AC2  2AC4               	goto	u3851
  5601     0AC3  07C5               	addwf	___flmul@grs+1,f
  5602     0AC4                     u3851:
  5603     0AC4  0840               	movf	??___flmul+2,w
  5604     0AC5  1103               	clrz
  5605     0AC6  1803               	skipnc
  5606     0AC7  3E01               	addlw	1
  5607     0AC8  1903               	skipnz
  5608     0AC9  2ACB               	goto	u3852
  5609     0ACA  07C6               	addwf	___flmul@grs+2,f
  5610     0ACB                     u3852:
  5611     0ACB  0841               	movf	??___flmul+3,w
  5612     0ACC  1103               	clrz
  5613     0ACD  1803               	skipnc
  5614     0ACE  3E01               	addlw	1
  5615     0ACF  1903               	skipnz
  5616     0AD0  2AD2               	goto	u3853
  5617     0AD1  07C7               	addwf	___flmul@grs+3,f
  5618     0AD2                     u3853:
  5619     0AD2                     l2693:
  5620     0AD2  3008               	movlw	8
  5621     0AD3  00BE               	movwf	??___flmul
  5622     0AD4                     u3865:
  5623     0AD4  1003               	clrc
  5624     0AD5  0DC4               	rlf	___flmul@grs,f
  5625     0AD6  0DC5               	rlf	___flmul@grs+1,f
  5626     0AD7  0DC6               	rlf	___flmul@grs+2,f
  5627     0AD8  0DC7               	rlf	___flmul@grs+3,f
  5628     0AD9  0BBE               	decfsz	??___flmul,f
  5629     0ADA  2AD4               	goto	u3865
  5630     0ADB  0836               	movf	___flmul@b,w
  5631     0ADC  00A6               	movwf	__Umul8_16@multiplicand
  5632     0ADD  083A               	movf	___flmul@a,w
  5633     0ADE  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5634     0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  5635     0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  5636     0AE5  0827               	movf	?__Umul8_16+1,w
  5637     0AE6  00CF               	movwf	___flmul@temp+1
  5638     0AE7  0826               	movf	?__Umul8_16,w
  5639     0AE8  00CE               	movwf	___flmul@temp
  5640     0AE9                     l2695:
  5641     0AE9  084E               	movf	___flmul@temp,w
  5642     0AEA  00BE               	movwf	??___flmul
  5643     0AEB  084F               	movf	___flmul@temp+1,w
  5644     0AEC  00BF               	movwf	??___flmul+1
  5645     0AED  01C0               	clrf	??___flmul+2
  5646     0AEE  01C1               	clrf	??___flmul+3
  5647     0AEF  083E               	movf	??___flmul,w
  5648     0AF0  07C4               	addwf	___flmul@grs,f
  5649     0AF1  083F               	movf	??___flmul+1,w
  5650     0AF2  1103               	clrz
  5651     0AF3  1803               	skipnc
  5652     0AF4  3E01               	addlw	1
  5653     0AF5  1903               	skipnz
  5654     0AF6  2AF8               	goto	u3871
  5655     0AF7  07C5               	addwf	___flmul@grs+1,f
  5656     0AF8                     u3871:
  5657     0AF8  0840               	movf	??___flmul+2,w
  5658     0AF9  1103               	clrz
  5659     0AFA  1803               	skipnc
  5660     0AFB  3E01               	addlw	1
  5661     0AFC  1903               	skipnz
  5662     0AFD  2AFF               	goto	u3872
  5663     0AFE  07C6               	addwf	___flmul@grs+2,f
  5664     0AFF                     u3872:
  5665     0AFF  0841               	movf	??___flmul+3,w
  5666     0B00  1103               	clrz
  5667     0B01  1803               	skipnc
  5668     0B02  3E01               	addlw	1
  5669     0B03  1903               	skipnz
  5670     0B04  2B06               	goto	u3873
  5671     0B05  07C7               	addwf	___flmul@grs+3,f
  5672     0B06                     u3873:
  5673     0B06                     l2697:
  5674     0B06  0837               	movf	___flmul@b+1,w
  5675     0B07  00A6               	movwf	__Umul8_16@multiplicand
  5676     0B08  083C               	movf	___flmul@a+2,w
  5677     0B09  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5678     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  5679     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  5680     0B10  0827               	movf	?__Umul8_16+1,w
  5681     0B11  00CF               	movwf	___flmul@temp+1
  5682     0B12  0826               	movf	?__Umul8_16,w
  5683     0B13  00CE               	movwf	___flmul@temp
  5684     0B14  084E               	movf	___flmul@temp,w
  5685     0B15  00BE               	movwf	??___flmul
  5686     0B16  084F               	movf	___flmul@temp+1,w
  5687     0B17  00BF               	movwf	??___flmul+1
  5688     0B18  01C0               	clrf	??___flmul+2
  5689     0B19  01C1               	clrf	??___flmul+3
  5690     0B1A  083E               	movf	??___flmul,w
  5691     0B1B  07CA               	addwf	___flmul@prod,f
  5692     0B1C  083F               	movf	??___flmul+1,w
  5693     0B1D  1103               	clrz
  5694     0B1E  1803               	skipnc
  5695     0B1F  3E01               	addlw	1
  5696     0B20  1903               	skipnz
  5697     0B21  2B23               	goto	u3881
  5698     0B22  07CB               	addwf	___flmul@prod+1,f
  5699     0B23                     u3881:
  5700     0B23  0840               	movf	??___flmul+2,w
  5701     0B24  1103               	clrz
  5702     0B25  1803               	skipnc
  5703     0B26  3E01               	addlw	1
  5704     0B27  1903               	skipnz
  5705     0B28  2B2A               	goto	u3882
  5706     0B29  07CC               	addwf	___flmul@prod+2,f
  5707     0B2A                     u3882:
  5708     0B2A  0841               	movf	??___flmul+3,w
  5709     0B2B  1103               	clrz
  5710     0B2C  1803               	skipnc
  5711     0B2D  3E01               	addlw	1
  5712     0B2E  1903               	skipnz
  5713     0B2F  2B31               	goto	u3883
  5714     0B30  07CD               	addwf	___flmul@prod+3,f
  5715     0B31                     u3883:
  5716     0B31                     l2699:
  5717     0B31  0838               	movf	___flmul@b+2,w
  5718     0B32  00A6               	movwf	__Umul8_16@multiplicand
  5719     0B33  083B               	movf	___flmul@a+1,w
  5720     0B34  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5721     0B39  1283               	bcf	3,5	;RP0=0, select bank0
  5722     0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  5723     0B3B  0827               	movf	?__Umul8_16+1,w
  5724     0B3C  00CF               	movwf	___flmul@temp+1
  5725     0B3D  0826               	movf	?__Umul8_16,w
  5726     0B3E  00CE               	movwf	___flmul@temp
  5727     0B3F                     l2701:
  5728     0B3F  084E               	movf	___flmul@temp,w
  5729     0B40  00BE               	movwf	??___flmul
  5730     0B41  084F               	movf	___flmul@temp+1,w
  5731     0B42  00BF               	movwf	??___flmul+1
  5732     0B43  01C0               	clrf	??___flmul+2
  5733     0B44  01C1               	clrf	??___flmul+3
  5734     0B45  083E               	movf	??___flmul,w
  5735     0B46  07CA               	addwf	___flmul@prod,f
  5736     0B47  083F               	movf	??___flmul+1,w
  5737     0B48  1103               	clrz
  5738     0B49  1803               	skipnc
  5739     0B4A  3E01               	addlw	1
  5740     0B4B  1903               	skipnz
  5741     0B4C  2B4E               	goto	u3891
  5742     0B4D  07CB               	addwf	___flmul@prod+1,f
  5743     0B4E                     u3891:
  5744     0B4E  0840               	movf	??___flmul+2,w
  5745     0B4F  1103               	clrz
  5746     0B50  1803               	skipnc
  5747     0B51  3E01               	addlw	1
  5748     0B52  1903               	skipnz
  5749     0B53  2B55               	goto	u3892
  5750     0B54  07CC               	addwf	___flmul@prod+2,f
  5751     0B55                     u3892:
  5752     0B55  0841               	movf	??___flmul+3,w
  5753     0B56  1103               	clrz
  5754     0B57  1803               	skipnc
  5755     0B58  3E01               	addlw	1
  5756     0B59  1903               	skipnz
  5757     0B5A  2B5C               	goto	u3893
  5758     0B5B  07CD               	addwf	___flmul@prod+3,f
  5759     0B5C                     u3893:
  5760     0B5C  0838               	movf	___flmul@b+2,w
  5761     0B5D  00A6               	movwf	__Umul8_16@multiplicand
  5762     0B5E  083C               	movf	___flmul@a+2,w
  5763     0B5F  120A  118A  27D5  120A  158A  	fcall	__Umul8_16
  5764     0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5765     0B65  1303               	bcf	3,6	;RP1=0, select bank0
  5766     0B66  0827               	movf	?__Umul8_16+1,w
  5767     0B67  00CF               	movwf	___flmul@temp+1
  5768     0B68  0826               	movf	?__Umul8_16,w
  5769     0B69  00CE               	movwf	___flmul@temp
  5770     0B6A                     l2703:
  5771     0B6A  084E               	movf	___flmul@temp,w
  5772     0B6B  00BE               	movwf	??___flmul
  5773     0B6C  084F               	movf	___flmul@temp+1,w
  5774     0B6D  00BF               	movwf	??___flmul+1
  5775     0B6E  01C0               	clrf	??___flmul+2
  5776     0B6F  01C1               	clrf	??___flmul+3
  5777     0B70  3008               	movlw	8
  5778     0B71                     u3905:
  5779     0B71  1003               	clrc
  5780     0B72  0DBE               	rlf	??___flmul,f
  5781     0B73  0DBF               	rlf	??___flmul+1,f
  5782     0B74  0DC0               	rlf	??___flmul+2,f
  5783     0B75  0DC1               	rlf	??___flmul+3,f
  5784     0B76                     u3900:
  5785     0B76  3EFF               	addlw	-1
  5786     0B77  1D03               	skipz
  5787     0B78  2B71               	goto	u3905
  5788     0B79  083E               	movf	??___flmul,w
  5789     0B7A  07CA               	addwf	___flmul@prod,f
  5790     0B7B  083F               	movf	??___flmul+1,w
  5791     0B7C  1103               	clrz
  5792     0B7D  1803               	skipnc
  5793     0B7E  3E01               	addlw	1
  5794     0B7F  1903               	skipnz
  5795     0B80  2B82               	goto	u3911
  5796     0B81  07CB               	addwf	___flmul@prod+1,f
  5797     0B82                     u3911:
  5798     0B82  0840               	movf	??___flmul+2,w
  5799     0B83  1103               	clrz
  5800     0B84  1803               	skipnc
  5801     0B85  3E01               	addlw	1
  5802     0B86  1903               	skipnz
  5803     0B87  2B89               	goto	u3912
  5804     0B88  07CC               	addwf	___flmul@prod+2,f
  5805     0B89                     u3912:
  5806     0B89  0841               	movf	??___flmul+3,w
  5807     0B8A  1103               	clrz
  5808     0B8B  1803               	skipnc
  5809     0B8C  3E01               	addlw	1
  5810     0B8D  1903               	skipnz
  5811     0B8E  2B90               	goto	u3913
  5812     0B8F  07CD               	addwf	___flmul@prod+3,f
  5813     0B90                     u3913:
  5814     0B90                     l2705:
  5815     0B90  0844               	movf	___flmul@grs,w
  5816     0B91  00BE               	movwf	??___flmul
  5817     0B92  0845               	movf	___flmul@grs+1,w
  5818     0B93  00BF               	movwf	??___flmul+1
  5819     0B94  0846               	movf	___flmul@grs+2,w
  5820     0B95  00C0               	movwf	??___flmul+2
  5821     0B96  0847               	movf	___flmul@grs+3,w
  5822     0B97  00C1               	movwf	??___flmul+3
  5823     0B98  3018               	movlw	24
  5824     0B99                     u3925:
  5825     0B99  1003               	clrc
  5826     0B9A  0CC1               	rrf	??___flmul+3,f
  5827     0B9B  0CC0               	rrf	??___flmul+2,f
  5828     0B9C  0CBF               	rrf	??___flmul+1,f
  5829     0B9D  0CBE               	rrf	??___flmul,f
  5830     0B9E                     u3920:
  5831     0B9E  3EFF               	addlw	-1
  5832     0B9F  1D03               	skipz
  5833     0BA0  2B99               	goto	u3925
  5834     0BA1  083E               	movf	??___flmul,w
  5835     0BA2  07CA               	addwf	___flmul@prod,f
  5836     0BA3  083F               	movf	??___flmul+1,w
  5837     0BA4  1103               	clrz
  5838     0BA5  1803               	skipnc
  5839     0BA6  3E01               	addlw	1
  5840     0BA7  1903               	skipnz
  5841     0BA8  2BAA               	goto	u3931
  5842     0BA9  07CB               	addwf	___flmul@prod+1,f
  5843     0BAA                     u3931:
  5844     0BAA  0840               	movf	??___flmul+2,w
  5845     0BAB  1103               	clrz
  5846     0BAC  1803               	skipnc
  5847     0BAD  3E01               	addlw	1
  5848     0BAE  1903               	skipnz
  5849     0BAF  2BB1               	goto	u3932
  5850     0BB0  07CC               	addwf	___flmul@prod+2,f
  5851     0BB1                     u3932:
  5852     0BB1  0841               	movf	??___flmul+3,w
  5853     0BB2  1103               	clrz
  5854     0BB3  1803               	skipnc
  5855     0BB4  3E01               	addlw	1
  5856     0BB5  1903               	skipnz
  5857     0BB6  2BB8               	goto	u3933
  5858     0BB7  07CD               	addwf	___flmul@prod+3,f
  5859     0BB8                     u3933:
  5860     0BB8                     l2707:
  5861     0BB8  3008               	movlw	8
  5862     0BB9  00BE               	movwf	??___flmul
  5863     0BBA                     u3945:
  5864     0BBA  1003               	clrc
  5865     0BBB  0DC4               	rlf	___flmul@grs,f
  5866     0BBC  0DC5               	rlf	___flmul@grs+1,f
  5867     0BBD  0DC6               	rlf	___flmul@grs+2,f
  5868     0BBE  0DC7               	rlf	___flmul@grs+3,f
  5869     0BBF  0BBE               	decfsz	??___flmul,f
  5870     0BC0  2BBA               	goto	u3945
  5871     0BC1                     l2709:
  5872     0BC1  0849               	movf	___flmul@bexp,w
  5873     0BC2  0748               	addwf	___flmul@aexp,w
  5874     0BC3  00BE               	movwf	??___flmul
  5875     0BC4  01BF               	clrf	??___flmul+1
  5876     0BC5  0DBF               	rlf	??___flmul+1,f
  5877     0BC6  083E               	movf	??___flmul,w
  5878     0BC7  3E82               	addlw	130
  5879     0BC8  00CE               	movwf	___flmul@temp
  5880     0BC9  083F               	movf	??___flmul+1,w
  5881     0BCA  1803               	skipnc
  5882     0BCB  3E01               	addlw	1
  5883     0BCC  3EFF               	addlw	255
  5884     0BCD  00CF               	movwf	___flmul@temp+1
  5885     0BCE  2BEC               	goto	l2721
  5886     0BCF                     l2711:
  5887     0BCF  3001               	movlw	1
  5888     0BD0  00BE               	movwf	??___flmul
  5889     0BD1                     u3955:
  5890     0BD1  1003               	clrc
  5891     0BD2  0DCA               	rlf	___flmul@prod,f
  5892     0BD3  0DCB               	rlf	___flmul@prod+1,f
  5893     0BD4  0DCC               	rlf	___flmul@prod+2,f
  5894     0BD5  0DCD               	rlf	___flmul@prod+3,f
  5895     0BD6  0BBE               	decfsz	??___flmul,f
  5896     0BD7  2BD1               	goto	u3955
  5897     0BD8                     l2713:
  5898     0BD8  1FC7               	btfss	___flmul@grs+3,7
  5899     0BD9  2BDB               	goto	u3961
  5900     0BDA  2BDC               	goto	u3960
  5901     0BDB                     u3961:
  5902     0BDB  2BDD               	goto	l2717
  5903     0BDC                     u3960:
  5904     0BDC                     l2715:
  5905     0BDC  144A               	bsf	___flmul@prod,0
  5906     0BDD                     l2717:
  5907     0BDD  3001               	movlw	1
  5908     0BDE  00BE               	movwf	??___flmul
  5909     0BDF                     u3975:
  5910     0BDF  1003               	clrc
  5911     0BE0  0DC4               	rlf	___flmul@grs,f
  5912     0BE1  0DC5               	rlf	___flmul@grs+1,f
  5913     0BE2  0DC6               	rlf	___flmul@grs+2,f
  5914     0BE3  0DC7               	rlf	___flmul@grs+3,f
  5915     0BE4  0BBE               	decfsz	??___flmul,f
  5916     0BE5  2BDF               	goto	u3975
  5917     0BE6                     l2719:
  5918     0BE6  30FF               	movlw	255
  5919     0BE7  07CE               	addwf	___flmul@temp,f
  5920     0BE8  1803               	skipnc
  5921     0BE9  0ACF               	incf	___flmul@temp+1,f
  5922     0BEA  30FF               	movlw	255
  5923     0BEB  07CF               	addwf	___flmul@temp+1,f
  5924     0BEC                     l2721:
  5925     0BEC  1FCC               	btfss	___flmul@prod+2,7
  5926     0BED  2BEF               	goto	u3981
  5927     0BEE  2BF0               	goto	u3980
  5928     0BEF                     u3981:
  5929     0BEF  2BCF               	goto	l2711
  5930     0BF0                     u3980:
  5931     0BF0                     l2723:
  5932     0BF0  01C8               	clrf	___flmul@aexp
  5933     0BF1                     l2725:
  5934     0BF1  1FC7               	btfss	___flmul@grs+3,7
  5935     0BF2  2BF4               	goto	u3991
  5936     0BF3  2BF5               	goto	u3990
  5937     0BF4                     u3991:
  5938     0BF4  2C11               	goto	l2733
  5939     0BF5                     u3990:
  5940     0BF5                     l2727:
  5941     0BF5  30FF               	movlw	255
  5942     0BF6  0544               	andwf	___flmul@grs,w
  5943     0BF7  00BE               	movwf	??___flmul
  5944     0BF8  30FF               	movlw	255
  5945     0BF9  0545               	andwf	___flmul@grs+1,w
  5946     0BFA  00BF               	movwf	??___flmul+1
  5947     0BFB  30FF               	movlw	255
  5948     0BFC  0546               	andwf	___flmul@grs+2,w
  5949     0BFD  00C0               	movwf	??___flmul+2
  5950     0BFE  307F               	movlw	127
  5951     0BFF  0547               	andwf	___flmul@grs+3,w
  5952     0C00  00C1               	movwf	??___flmul+3
  5953     0C01  0841               	movf	??___flmul+3,w
  5954     0C02  0440               	iorwf	??___flmul+2,w
  5955     0C03  043F               	iorwf	??___flmul+1,w
  5956     0C04  043E               	iorwf	??___flmul,w
  5957     0C05  1903               	skipnz
  5958     0C06  2C08               	goto	u4001
  5959     0C07  2C09               	goto	u4000
  5960     0C08                     u4001:
  5961     0C08  2C0C               	goto	l782
  5962     0C09                     u4000:
  5963     0C09                     l2729:
  5964     0C09  01C8               	clrf	___flmul@aexp
  5965     0C0A  0AC8               	incf	___flmul@aexp,f
  5966     0C0B  2C11               	goto	l2733
  5967     0C0C                     l782:
  5968     0C0C  1C4A               	btfss	___flmul@prod,0
  5969     0C0D  2C0F               	goto	u4011
  5970     0C0E  2C10               	goto	u4010
  5971     0C0F                     u4011:
  5972     0C0F  2C11               	goto	l2733
  5973     0C10                     u4010:
  5974     0C10  2C09               	goto	l2729
  5975     0C11                     l2733:
  5976     0C11  0848               	movf	___flmul@aexp,w
  5977     0C12  1903               	btfsc	3,2
  5978     0C13  2C15               	goto	u4021
  5979     0C14  2C16               	goto	u4020
  5980     0C15                     u4021:
  5981     0C15  2C47               	goto	l2743
  5982     0C16                     u4020:
  5983     0C16                     l2735:
  5984     0C16  3001               	movlw	1
  5985     0C17  07CA               	addwf	___flmul@prod,f
  5986     0C18  3000               	movlw	0
  5987     0C19  1803               	skipnc
  5988     0C1A  3001               	movlw	1
  5989     0C1B  07CB               	addwf	___flmul@prod+1,f
  5990     0C1C  3000               	movlw	0
  5991     0C1D  1803               	skipnc
  5992     0C1E  3001               	movlw	1
  5993     0C1F  07CC               	addwf	___flmul@prod+2,f
  5994     0C20  3000               	movlw	0
  5995     0C21  1803               	skipnc
  5996     0C22  3001               	movlw	1
  5997     0C23  07CD               	addwf	___flmul@prod+3,f
  5998     0C24                     l2737:
  5999     0C24  1C4D               	btfss	___flmul@prod+3,0
  6000     0C25  2C27               	goto	u4031
  6001     0C26  2C28               	goto	u4030
  6002     0C27                     u4031:
  6003     0C27  2C47               	goto	l2743
  6004     0C28                     u4030:
  6005     0C28                     l2739:
  6006     0C28  084A               	movf	___flmul@prod,w
  6007     0C29  00BE               	movwf	??___flmul
  6008     0C2A  084B               	movf	___flmul@prod+1,w
  6009     0C2B  00BF               	movwf	??___flmul+1
  6010     0C2C  084C               	movf	___flmul@prod+2,w
  6011     0C2D  00C0               	movwf	??___flmul+2
  6012     0C2E  084D               	movf	___flmul@prod+3,w
  6013     0C2F  00C1               	movwf	??___flmul+3
  6014     0C30  3001               	movlw	1
  6015     0C31  00C2               	movwf	??___flmul+4
  6016     0C32                     u4045:
  6017     0C32  0D41               	rlf	??___flmul+3,w
  6018     0C33  0CC1               	rrf	??___flmul+3,f
  6019     0C34  0CC0               	rrf	??___flmul+2,f
  6020     0C35  0CBF               	rrf	??___flmul+1,f
  6021     0C36  0CBE               	rrf	??___flmul,f
  6022     0C37                     u4040:
  6023     0C37  0BC2               	decfsz	??___flmul+4,f
  6024     0C38  2C32               	goto	u4045
  6025     0C39  0841               	movf	??___flmul+3,w
  6026     0C3A  00CD               	movwf	___flmul@prod+3
  6027     0C3B  0840               	movf	??___flmul+2,w
  6028     0C3C  00CC               	movwf	___flmul@prod+2
  6029     0C3D  083F               	movf	??___flmul+1,w
  6030     0C3E  00CB               	movwf	___flmul@prod+1
  6031     0C3F  083E               	movf	??___flmul,w
  6032     0C40  00CA               	movwf	___flmul@prod
  6033     0C41                     l2741:
  6034     0C41  3001               	movlw	1
  6035     0C42  07CE               	addwf	___flmul@temp,f
  6036     0C43  1803               	skipnc
  6037     0C44  0ACF               	incf	___flmul@temp+1,f
  6038     0C45  3000               	movlw	0
  6039     0C46  07CF               	addwf	___flmul@temp+1,f
  6040     0C47                     l2743:
  6041     0C47  084F               	movf	___flmul@temp+1,w
  6042     0C48  3A80               	xorlw	128
  6043     0C49  00FF               	movwf	btemp+1
  6044     0C4A  3080               	movlw	128
  6045     0C4B  027F               	subwf	btemp+1,w
  6046     0C4C  1D03               	skipz
  6047     0C4D  2C50               	goto	u4055
  6048     0C4E  30FF               	movlw	255
  6049     0C4F  024E               	subwf	___flmul@temp,w
  6050     0C50                     u4055:
  6051     0C50  1C03               	skipc
  6052     0C51  2C53               	goto	u4051
  6053     0C52  2C54               	goto	u4050
  6054     0C53                     u4051:
  6055     0C53  2C5F               	goto	l2747
  6056     0C54                     u4050:
  6057     0C54                     l2745:
  6058     0C54  307F               	movlw	127
  6059     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  6060     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  6061     0C57  00CD               	movwf	___flmul@prod+3
  6062     0C58  3080               	movlw	128
  6063     0C59  00CC               	movwf	___flmul@prod+2
  6064     0C5A  3000               	movlw	0
  6065     0C5B  00CB               	movwf	___flmul@prod+1
  6066     0C5C  3000               	movlw	0
  6067     0C5D  00CA               	movwf	___flmul@prod
  6068     0C5E  2C90               	goto	l788
  6069     0C5F                     l2747:
  6070     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  6071     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  6072     0C61  084F               	movf	___flmul@temp+1,w
  6073     0C62  3A80               	xorlw	128
  6074     0C63  00FF               	movwf	btemp+1
  6075     0C64  3080               	movlw	128
  6076     0C65  027F               	subwf	btemp+1,w
  6077     0C66  1D03               	skipz
  6078     0C67  2C6A               	goto	u4065
  6079     0C68  3001               	movlw	1
  6080     0C69  024E               	subwf	___flmul@temp,w
  6081     0C6A                     u4065:
  6082     0C6A  1803               	skipnc
  6083     0C6B  2C6D               	goto	u4061
  6084     0C6C  2C6E               	goto	u4060
  6085     0C6D                     u4061:
  6086     0C6D  2C7A               	goto	l2753
  6087     0C6E                     u4060:
  6088     0C6E                     l2749:
  6089     0C6E  3000               	movlw	0
  6090     0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  6091     0C70  1303               	bcf	3,6	;RP1=0, select bank0
  6092     0C71  00CD               	movwf	___flmul@prod+3
  6093     0C72  3000               	movlw	0
  6094     0C73  00CC               	movwf	___flmul@prod+2
  6095     0C74  3000               	movlw	0
  6096     0C75  00CB               	movwf	___flmul@prod+1
  6097     0C76  3000               	movlw	0
  6098     0C77  00CA               	movwf	___flmul@prod
  6099     0C78                     l2751:
  6100     0C78  01C3               	clrf	___flmul@sign
  6101     0C79  2C90               	goto	l788
  6102     0C7A                     l2753:
  6103     0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  6104     0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  6105     0C7C  084E               	movf	___flmul@temp,w
  6106     0C7D  00C9               	movwf	___flmul@bexp
  6107     0C7E  30FF               	movlw	255
  6108     0C7F  05CA               	andwf	___flmul@prod,f
  6109     0C80  30FF               	movlw	255
  6110     0C81  05CB               	andwf	___flmul@prod+1,f
  6111     0C82  307F               	movlw	127
  6112     0C83  05CC               	andwf	___flmul@prod+2,f
  6113     0C84  3000               	movlw	0
  6114     0C85  05CD               	andwf	___flmul@prod+3,f
  6115     0C86                     l2755:
  6116     0C86  1C49               	btfss	___flmul@bexp,0
  6117     0C87  2C89               	goto	u4071
  6118     0C88  2C8A               	goto	u4070
  6119     0C89                     u4071:
  6120     0C89  2C8B               	goto	l2759
  6121     0C8A                     u4070:
  6122     0C8A                     l2757:
  6123     0C8A  17CC               	bsf	___flmul@prod+2,7
  6124     0C8B                     l2759:
  6125     0C8B  0849               	movf	___flmul@bexp,w
  6126     0C8C  00BE               	movwf	??___flmul
  6127     0C8D  1003               	clrc
  6128     0C8E  0C3E               	rrf	??___flmul,w
  6129     0C8F  00CD               	movwf	___flmul@prod+3
  6130     0C90                     l788:
  6131     0C90  0843               	movf	___flmul@sign,w
  6132     0C91  00BE               	movwf	??___flmul
  6133     0C92  083E               	movf	??___flmul,w
  6134     0C93  04CD               	iorwf	___flmul@prod+3,f
  6135     0C94                     l2761:
  6136     0C94  084D               	movf	___flmul@prod+3,w
  6137     0C95  00B9               	movwf	?___flmul+3
  6138     0C96  084C               	movf	___flmul@prod+2,w
  6139     0C97  00B8               	movwf	?___flmul+2
  6140     0C98  084B               	movf	___flmul@prod+1,w
  6141     0C99  00B7               	movwf	?___flmul+1
  6142     0C9A  084A               	movf	___flmul@prod,w
  6143     0C9B  00B6               	movwf	?___flmul
  6144     0C9C                     l776:
  6145     0C9C  0008               	return
  6146     0C9D                     __end_of___flmul:
  6147                           
  6148                           	psect	text8
  6149     07D5                     __ptext8:	
  6150 ;; *************** function __Umul8_16 *****************
  6151 ;; Defined at:
  6152 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8_16.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  multiplier      1    wreg     unsigned char 
  6155 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  multiplier      1   14[BANK0 ] unsigned char 
  6158 ;;  word_mpld       2   12[BANK0 ] unsigned int 
  6159 ;;  product         2   10[BANK0 ] unsigned int 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  2    6[BANK0 ] unsigned int 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6169 ;;      Params:         0       2       0       0       0
  6170 ;;      Locals:         0       5       0       0       0
  6171 ;;      Temps:          0       2       0       0       0
  6172 ;;      Totals:         0       9       0       0       0
  6173 ;;Total ram usage:        9 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; Hardware stack levels required when called: 2
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		___flmul
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183     07D5                     __Umul8_16:	
  6184                           ;psect for function __Umul8_16
  6185                           
  6186                           
  6187                           ;incstack = 0
  6188                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6189                           ;__Umul8_16@multiplier stored from wreg
  6190     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  6191     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  6192     07D7  00AE               	movwf	__Umul8_16@multiplier
  6193     07D8                     l2281:
  6194     07D8  01AA               	clrf	__Umul8_16@product
  6195     07D9  01AB               	clrf	__Umul8_16@product+1
  6196     07DA                     l2283:
  6197     07DA  0826               	movf	__Umul8_16@multiplicand,w
  6198     07DB  00A8               	movwf	??__Umul8_16
  6199     07DC  01A9               	clrf	??__Umul8_16+1
  6200     07DD  0828               	movf	??__Umul8_16,w
  6201     07DE  00AC               	movwf	__Umul8_16@word_mpld
  6202     07DF  0829               	movf	??__Umul8_16+1,w
  6203     07E0  00AD               	movwf	__Umul8_16@word_mpld+1
  6204     07E1                     l2285:
  6205     07E1  1C2E               	btfss	__Umul8_16@multiplier,0
  6206     07E2  2FE4               	goto	u2901
  6207     07E3  2FE5               	goto	u2900
  6208     07E4                     u2901:
  6209     07E4  2FEB               	goto	l795
  6210     07E5                     u2900:
  6211     07E5                     l2287:
  6212     07E5  082C               	movf	__Umul8_16@word_mpld,w
  6213     07E6  07AA               	addwf	__Umul8_16@product,f
  6214     07E7  1803               	skipnc
  6215     07E8  0AAB               	incf	__Umul8_16@product+1,f
  6216     07E9  082D               	movf	__Umul8_16@word_mpld+1,w
  6217     07EA  07AB               	addwf	__Umul8_16@product+1,f
  6218     07EB                     l795:
  6219     07EB  3001               	movlw	1
  6220     07EC                     u2915:
  6221     07EC  1003               	clrc
  6222     07ED  0DAC               	rlf	__Umul8_16@word_mpld,f
  6223     07EE  0DAD               	rlf	__Umul8_16@word_mpld+1,f
  6224     07EF  3EFF               	addlw	-1
  6225     07F0  1D03               	skipz
  6226     07F1  2FEC               	goto	u2915
  6227     07F2  1003               	clrc
  6228     07F3  0CAE               	rrf	__Umul8_16@multiplier,f
  6229     07F4                     l2289:
  6230     07F4  082E               	movf	__Umul8_16@multiplier,w
  6231     07F5  1D03               	btfss	3,2
  6232     07F6  2FF8               	goto	u2921
  6233     07F7  2FF9               	goto	u2920
  6234     07F8                     u2921:
  6235     07F8  2FE1               	goto	l2285
  6236     07F9                     u2920:
  6237     07F9                     l2291:
  6238     07F9  082B               	movf	__Umul8_16@product+1,w
  6239     07FA  00A7               	movwf	?__Umul8_16+1
  6240     07FB  082A               	movf	__Umul8_16@product,w
  6241     07FC  00A6               	movwf	?__Umul8_16
  6242     07FD                     l797:
  6243     07FD  0008               	return
  6244     07FE                     __end_of__Umul8_16:
  6245                           
  6246                           	psect	text9
  6247     1174                     __ptext9:	
  6248 ;; *************** function __tdiv_to_l_ *****************
  6249 ;; Defined at:
  6250 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\ftdivl.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  f1              4    6[BANK0 ] float 
  6253 ;;  f2              4   10[BANK0 ] float 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  quot            4   17[BANK0 ] unsigned long 
  6256 ;;  exp1            1   22[BANK0 ] unsigned char 
  6257 ;;  cntr            1   21[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4    6[BANK0 ] unsigned long 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6267 ;;      Params:         0       8       0       0       0
  6268 ;;      Locals:         0       6       0       0       0
  6269 ;;      Temps:          0       3       0       0       0
  6270 ;;      Totals:         0      17       0       0       0
  6271 ;;Total ram usage:       17 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; Hardware stack levels required when called: 2
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_sprintf
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281     1174                     __tdiv_to_l_:	
  6282                           ;psect for function __tdiv_to_l_
  6283                           
  6284     1174                     l2835:	
  6285                           ;incstack = 0
  6286                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6287                           
  6288     1174  1283               	bcf	3,5	;RP0=0, select bank0
  6289     1175  1303               	bcf	3,6	;RP1=0, select bank0
  6290     1176  0826               	movf	__tdiv_to_l_@f1,w
  6291     1177  00AE               	movwf	??__tdiv_to_l_
  6292     1178  0827               	movf	__tdiv_to_l_@f1+1,w
  6293     1179  00AF               	movwf	??__tdiv_to_l_+1
  6294     117A  0828               	movf	__tdiv_to_l_@f1+2,w
  6295     117B  00B0               	movwf	??__tdiv_to_l_+2
  6296     117C  1003               	clrc
  6297     117D  0D2F               	rlf	??__tdiv_to_l_+1,w
  6298     117E  0D30               	rlf	??__tdiv_to_l_+2,w
  6299     117F  00B6               	movwf	__tdiv_to_l_@exp1
  6300     1180  0836               	movf	__tdiv_to_l_@exp1,w
  6301     1181  1D03               	btfss	3,2
  6302     1182  2984               	goto	u4331
  6303     1183  2985               	goto	u4330
  6304     1184                     u4331:
  6305     1184  298E               	goto	l2841
  6306     1185                     u4330:
  6307     1185                     l2837:
  6308     1185  3000               	movlw	0
  6309     1186  00A9               	movwf	?__tdiv_to_l_+3
  6310     1187  3000               	movlw	0
  6311     1188  00A8               	movwf	?__tdiv_to_l_+2
  6312     1189  3000               	movlw	0
  6313     118A  00A7               	movwf	?__tdiv_to_l_+1
  6314     118B  3000               	movlw	0
  6315     118C  00A6               	movwf	?__tdiv_to_l_
  6316     118D  2A2A               	goto	l570
  6317     118E                     l2841:
  6318     118E  082A               	movf	__tdiv_to_l_@f2,w
  6319     118F  00AE               	movwf	??__tdiv_to_l_
  6320     1190  082B               	movf	__tdiv_to_l_@f2+1,w
  6321     1191  00AF               	movwf	??__tdiv_to_l_+1
  6322     1192  082C               	movf	__tdiv_to_l_@f2+2,w
  6323     1193  00B0               	movwf	??__tdiv_to_l_+2
  6324     1194  1003               	clrc
  6325     1195  0D2F               	rlf	??__tdiv_to_l_+1,w
  6326     1196  0D30               	rlf	??__tdiv_to_l_+2,w
  6327     1197  00B5               	movwf	__tdiv_to_l_@cntr
  6328     1198  0835               	movf	__tdiv_to_l_@cntr,w
  6329     1199  1D03               	btfss	3,2
  6330     119A  299C               	goto	u4341
  6331     119B  299D               	goto	u4340
  6332     119C                     u4341:
  6333     119C  299E               	goto	l571
  6334     119D                     u4340:
  6335     119D  2985               	goto	l2837
  6336     119E                     l571:
  6337     119E  17A7               	bsf	__tdiv_to_l_@f1+1,7
  6338     119F                     l2847:
  6339     119F  30FF               	movlw	255
  6340     11A0  05A6               	andwf	__tdiv_to_l_@f1,f
  6341     11A1  30FF               	movlw	255
  6342     11A2  05A7               	andwf	__tdiv_to_l_@f1+1,f
  6343     11A3  3000               	movlw	0
  6344     11A4  05A8               	andwf	__tdiv_to_l_@f1+2,f
  6345     11A5                     l2849:
  6346     11A5  17AB               	bsf	__tdiv_to_l_@f2+1,7
  6347     11A6  30FF               	movlw	255
  6348     11A7  05AA               	andwf	__tdiv_to_l_@f2,f
  6349     11A8  30FF               	movlw	255
  6350     11A9  05AB               	andwf	__tdiv_to_l_@f2+1,f
  6351     11AA  3000               	movlw	0
  6352     11AB  05AC               	andwf	__tdiv_to_l_@f2+2,f
  6353     11AC  3000               	movlw	0
  6354     11AD  00B4               	movwf	__tdiv_to_l_@quot+3
  6355     11AE  3000               	movlw	0
  6356     11AF  00B3               	movwf	__tdiv_to_l_@quot+2
  6357     11B0  3000               	movlw	0
  6358     11B1  00B2               	movwf	__tdiv_to_l_@quot+1
  6359     11B2  3000               	movlw	0
  6360     11B3  00B1               	movwf	__tdiv_to_l_@quot
  6361     11B4                     l2851:
  6362     11B4  307F               	movlw	127
  6363     11B5  02B6               	subwf	__tdiv_to_l_@exp1,f
  6364     11B6                     l2853:
  6365     11B6  3098               	movlw	152
  6366     11B7  0735               	addwf	__tdiv_to_l_@cntr,w
  6367     11B8  00AE               	movwf	??__tdiv_to_l_
  6368     11B9  082E               	movf	??__tdiv_to_l_,w
  6369     11BA  02B6               	subwf	__tdiv_to_l_@exp1,f
  6370     11BB  3018               	movlw	24
  6371     11BC  00B5               	movwf	__tdiv_to_l_@cntr
  6372     11BD                     l2855:
  6373     11BD  3001               	movlw	1
  6374     11BE  00AE               	movwf	??__tdiv_to_l_
  6375     11BF                     u4355:
  6376     11BF  1003               	clrc
  6377     11C0  0DB1               	rlf	__tdiv_to_l_@quot,f
  6378     11C1  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  6379     11C2  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  6380     11C3  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  6381     11C4  0BAE               	decfsz	??__tdiv_to_l_,f
  6382     11C5  29BF               	goto	u4355
  6383     11C6                     l2857:
  6384     11C6  082C               	movf	__tdiv_to_l_@f2+2,w
  6385     11C7  0228               	subwf	__tdiv_to_l_@f1+2,w
  6386     11C8  1D03               	skipz
  6387     11C9  29D0               	goto	u4365
  6388     11CA  082B               	movf	__tdiv_to_l_@f2+1,w
  6389     11CB  0227               	subwf	__tdiv_to_l_@f1+1,w
  6390     11CC  1D03               	skipz
  6391     11CD  29D0               	goto	u4365
  6392     11CE  082A               	movf	__tdiv_to_l_@f2,w
  6393     11CF  0226               	subwf	__tdiv_to_l_@f1,w
  6394     11D0                     u4365:
  6395     11D0  1C03               	skipc
  6396     11D1  29D3               	goto	u4361
  6397     11D2  29D4               	goto	u4360
  6398     11D3                     u4361:
  6399     11D3  29DF               	goto	l2863
  6400     11D4                     u4360:
  6401     11D4                     l2859:
  6402     11D4  082A               	movf	__tdiv_to_l_@f2,w
  6403     11D5  02A6               	subwf	__tdiv_to_l_@f1,f
  6404     11D6  082B               	movf	__tdiv_to_l_@f2+1,w
  6405     11D7  1C03               	skipc
  6406     11D8  0F2B               	incfsz	__tdiv_to_l_@f2+1,w
  6407     11D9  02A7               	subwf	__tdiv_to_l_@f1+1,f
  6408     11DA  082C               	movf	__tdiv_to_l_@f2+2,w
  6409     11DB  1C03               	skipc
  6410     11DC  0A2C               	incf	__tdiv_to_l_@f2+2,w
  6411     11DD  02A8               	subwf	__tdiv_to_l_@f1+2,f
  6412     11DE                     l2861:
  6413     11DE  1431               	bsf	__tdiv_to_l_@quot,0
  6414     11DF                     l2863:
  6415     11DF  3001               	movlw	1
  6416     11E0                     u4375:
  6417     11E0  1003               	clrc
  6418     11E1  0DA6               	rlf	__tdiv_to_l_@f1,f
  6419     11E2  0DA7               	rlf	__tdiv_to_l_@f1+1,f
  6420     11E3  0DA8               	rlf	__tdiv_to_l_@f1+2,f
  6421     11E4  3EFF               	addlw	-1
  6422     11E5  1D03               	skipz
  6423     11E6  29E0               	goto	u4375
  6424     11E7                     l2865:
  6425     11E7  3001               	movlw	1
  6426     11E8  02B5               	subwf	__tdiv_to_l_@cntr,f
  6427     11E9  1D03               	btfss	3,2
  6428     11EA  29EC               	goto	u4381
  6429     11EB  29ED               	goto	u4380
  6430     11EC                     u4381:
  6431     11EC  29BD               	goto	l2855
  6432     11ED                     u4380:
  6433     11ED                     l574:
  6434     11ED  1FB6               	btfss	__tdiv_to_l_@exp1,7
  6435     11EE  29F0               	goto	u4391
  6436     11EF  29F1               	goto	u4390
  6437     11F0                     u4391:
  6438     11F0  2A0B               	goto	l2875
  6439     11F1                     u4390:
  6440     11F1                     l2867:
  6441     11F1  0836               	movf	__tdiv_to_l_@exp1,w
  6442     11F2  3A80               	xorlw	128
  6443     11F3  3E97               	addlw	151
  6444     11F4  1803               	skipnc
  6445     11F5  29F7               	goto	u4401
  6446     11F6  29F8               	goto	u4400
  6447     11F7                     u4401:
  6448     11F7  29F9               	goto	l2873
  6449     11F8                     u4400:
  6450     11F8  2985               	goto	l2837
  6451     11F9                     l2873:
  6452     11F9  3001               	movlw	1
  6453     11FA                     u4415:
  6454     11FA  1003               	clrc
  6455     11FB  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  6456     11FC  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  6457     11FD  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  6458     11FE  0CB1               	rrf	__tdiv_to_l_@quot,f
  6459     11FF  3EFF               	addlw	-1
  6460     1200  1D03               	skipz
  6461     1201  29FA               	goto	u4415
  6462     1202  3001               	movlw	1
  6463     1203  00AE               	movwf	??__tdiv_to_l_
  6464     1204  082E               	movf	??__tdiv_to_l_,w
  6465     1205  07B6               	addwf	__tdiv_to_l_@exp1,f
  6466     1206  1D03               	btfss	3,2
  6467     1207  2A09               	goto	u4421
  6468     1208  2A0A               	goto	u4420
  6469     1209                     u4421:
  6470     1209  29F9               	goto	l2873
  6471     120A                     u4420:
  6472     120A  2A22               	goto	l2883
  6473     120B                     l2875:
  6474     120B  3018               	movlw	24
  6475     120C  0236               	subwf	__tdiv_to_l_@exp1,w
  6476     120D  1C03               	skipc
  6477     120E  2A10               	goto	u4431
  6478     120F  2A11               	goto	u4430
  6479     1210                     u4431:
  6480     1210  2A1D               	goto	l581
  6481     1211                     u4430:
  6482     1211  2985               	goto	l2837
  6483     1212                     l2881:
  6484     1212  3001               	movlw	1
  6485     1213  00AE               	movwf	??__tdiv_to_l_
  6486     1214                     u4445:
  6487     1214  1003               	clrc
  6488     1215  0DB1               	rlf	__tdiv_to_l_@quot,f
  6489     1216  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  6490     1217  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  6491     1218  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  6492     1219  0BAE               	decfsz	??__tdiv_to_l_,f
  6493     121A  2A14               	goto	u4445
  6494     121B  3001               	movlw	1
  6495     121C  02B6               	subwf	__tdiv_to_l_@exp1,f
  6496     121D                     l581:
  6497     121D  0836               	movf	__tdiv_to_l_@exp1,w
  6498     121E  1D03               	btfss	3,2
  6499     121F  2A21               	goto	u4451
  6500     1220  2A22               	goto	u4450
  6501     1221                     u4451:
  6502     1221  2A12               	goto	l2881
  6503     1222                     u4450:
  6504     1222                     l2883:
  6505     1222  0834               	movf	__tdiv_to_l_@quot+3,w
  6506     1223  00A9               	movwf	?__tdiv_to_l_+3
  6507     1224  0833               	movf	__tdiv_to_l_@quot+2,w
  6508     1225  00A8               	movwf	?__tdiv_to_l_+2
  6509     1226  0832               	movf	__tdiv_to_l_@quot+1,w
  6510     1227  00A7               	movwf	?__tdiv_to_l_+1
  6511     1228  0831               	movf	__tdiv_to_l_@quot,w
  6512     1229  00A6               	movwf	?__tdiv_to_l_
  6513     122A                     l570:
  6514     122A  0008               	return
  6515     122B                     __end_of__tdiv_to_l_:
  6516                           
  6517                           	psect	text10
  6518     12E3                     __ptext10:	
  6519 ;; *************** function __div_to_l_ *****************
  6520 ;; Defined at:
  6521 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fldivl.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  f1              4    6[BANK0 ] unsigned long 
  6524 ;;  f2              4   10[BANK0 ] unsigned long 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  quot            4   15[BANK0 ] unsigned long 
  6527 ;;  exp1            1   20[BANK0 ] unsigned char 
  6528 ;;  cntr            1   19[BANK0 ] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  4    6[BANK0 ] unsigned long 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         0       8       0       0       0
  6539 ;;      Locals:         0       6       0       0       0
  6540 ;;      Temps:          0       1       0       0       0
  6541 ;;      Totals:         0      15       0       0       0
  6542 ;;Total ram usage:       15 bytes
  6543 ;; Hardware stack levels used: 1
  6544 ;; Hardware stack levels required when called: 2
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_sprintf
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552     12E3                     __div_to_l_:	
  6553                           ;psect for function __div_to_l_
  6554                           
  6555     12E3                     l2887:	
  6556                           ;incstack = 0
  6557                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6558                           
  6559     12E3  1003               	clrc
  6560     12E4  1283               	bcf	3,5	;RP0=0, select bank0
  6561     12E5  1303               	bcf	3,6	;RP1=0, select bank0
  6562     12E6  0D28               	rlf	__div_to_l_@f1+2,w
  6563     12E7  0D29               	rlf	__div_to_l_@f1+3,w
  6564     12E8  00B4               	movwf	__div_to_l_@exp1
  6565     12E9  0834               	movf	__div_to_l_@exp1,w
  6566     12EA  1D03               	btfss	3,2
  6567     12EB  2AED               	goto	u4461
  6568     12EC  2AEE               	goto	u4460
  6569     12ED                     u4461:
  6570     12ED  2AF7               	goto	l2893
  6571     12EE                     u4460:
  6572     12EE                     l2889:
  6573     12EE  3000               	movlw	0
  6574     12EF  00A9               	movwf	?__div_to_l_+3
  6575     12F0  3000               	movlw	0
  6576     12F1  00A8               	movwf	?__div_to_l_+2
  6577     12F2  3000               	movlw	0
  6578     12F3  00A7               	movwf	?__div_to_l_+1
  6579     12F4  3000               	movlw	0
  6580     12F5  00A6               	movwf	?__div_to_l_
  6581     12F6  2B9A               	goto	l523
  6582     12F7                     l2893:
  6583     12F7  1003               	clrc
  6584     12F8  0D2C               	rlf	__div_to_l_@f2+2,w
  6585     12F9  0D2D               	rlf	__div_to_l_@f2+3,w
  6586     12FA  00B3               	movwf	__div_to_l_@cntr
  6587     12FB  0833               	movf	__div_to_l_@cntr,w
  6588     12FC  1D03               	btfss	3,2
  6589     12FD  2AFF               	goto	u4471
  6590     12FE  2B00               	goto	u4470
  6591     12FF                     u4471:
  6592     12FF  2B01               	goto	l524
  6593     1300                     u4470:
  6594     1300  2AEE               	goto	l2889
  6595     1301                     l524:
  6596     1301  17A8               	bsf	__div_to_l_@f1+2,7
  6597     1302                     l2899:
  6598     1302  30FF               	movlw	255
  6599     1303  05A6               	andwf	__div_to_l_@f1,f
  6600     1304  30FF               	movlw	255
  6601     1305  05A7               	andwf	__div_to_l_@f1+1,f
  6602     1306  30FF               	movlw	255
  6603     1307  05A8               	andwf	__div_to_l_@f1+2,f
  6604     1308  3000               	movlw	0
  6605     1309  05A9               	andwf	__div_to_l_@f1+3,f
  6606     130A                     l2901:
  6607     130A  17AC               	bsf	__div_to_l_@f2+2,7
  6608     130B  30FF               	movlw	255
  6609     130C  05AA               	andwf	__div_to_l_@f2,f
  6610     130D  30FF               	movlw	255
  6611     130E  05AB               	andwf	__div_to_l_@f2+1,f
  6612     130F  30FF               	movlw	255
  6613     1310  05AC               	andwf	__div_to_l_@f2+2,f
  6614     1311  3000               	movlw	0
  6615     1312  05AD               	andwf	__div_to_l_@f2+3,f
  6616     1313  3000               	movlw	0
  6617     1314  00B2               	movwf	__div_to_l_@quot+3
  6618     1315  3000               	movlw	0
  6619     1316  00B1               	movwf	__div_to_l_@quot+2
  6620     1317  3000               	movlw	0
  6621     1318  00B0               	movwf	__div_to_l_@quot+1
  6622     1319  3000               	movlw	0
  6623     131A  00AF               	movwf	__div_to_l_@quot
  6624     131B                     l2903:
  6625     131B  307F               	movlw	127
  6626     131C  02B4               	subwf	__div_to_l_@exp1,f
  6627     131D                     l2905:
  6628     131D  30A0               	movlw	160
  6629     131E  0733               	addwf	__div_to_l_@cntr,w
  6630     131F  00AE               	movwf	??__div_to_l_
  6631     1320  082E               	movf	??__div_to_l_,w
  6632     1321  02B4               	subwf	__div_to_l_@exp1,f
  6633     1322  3020               	movlw	32
  6634     1323  00B3               	movwf	__div_to_l_@cntr
  6635     1324                     l2907:
  6636     1324  3001               	movlw	1
  6637     1325  00AE               	movwf	??__div_to_l_
  6638     1326                     u4485:
  6639     1326  1003               	clrc
  6640     1327  0DAF               	rlf	__div_to_l_@quot,f
  6641     1328  0DB0               	rlf	__div_to_l_@quot+1,f
  6642     1329  0DB1               	rlf	__div_to_l_@quot+2,f
  6643     132A  0DB2               	rlf	__div_to_l_@quot+3,f
  6644     132B  0BAE               	decfsz	??__div_to_l_,f
  6645     132C  2B26               	goto	u4485
  6646     132D                     l2909:
  6647     132D  082D               	movf	__div_to_l_@f2+3,w
  6648     132E  0229               	subwf	__div_to_l_@f1+3,w
  6649     132F  1D03               	skipz
  6650     1330  2B3B               	goto	u4495
  6651     1331  082C               	movf	__div_to_l_@f2+2,w
  6652     1332  0228               	subwf	__div_to_l_@f1+2,w
  6653     1333  1D03               	skipz
  6654     1334  2B3B               	goto	u4495
  6655     1335  082B               	movf	__div_to_l_@f2+1,w
  6656     1336  0227               	subwf	__div_to_l_@f1+1,w
  6657     1337  1D03               	skipz
  6658     1338  2B3B               	goto	u4495
  6659     1339  082A               	movf	__div_to_l_@f2,w
  6660     133A  0226               	subwf	__div_to_l_@f1,w
  6661     133B                     u4495:
  6662     133B  1C03               	skipc
  6663     133C  2B3E               	goto	u4491
  6664     133D  2B3F               	goto	u4490
  6665     133E                     u4491:
  6666     133E  2B4E               	goto	l2915
  6667     133F                     u4490:
  6668     133F                     l2911:
  6669     133F  082A               	movf	__div_to_l_@f2,w
  6670     1340  02A6               	subwf	__div_to_l_@f1,f
  6671     1341  082B               	movf	__div_to_l_@f2+1,w
  6672     1342  1C03               	skipc
  6673     1343  0F2B               	incfsz	__div_to_l_@f2+1,w
  6674     1344  02A7               	subwf	__div_to_l_@f1+1,f
  6675     1345  082C               	movf	__div_to_l_@f2+2,w
  6676     1346  1C03               	skipc
  6677     1347  0F2C               	incfsz	__div_to_l_@f2+2,w
  6678     1348  02A8               	subwf	__div_to_l_@f1+2,f
  6679     1349  082D               	movf	__div_to_l_@f2+3,w
  6680     134A  1C03               	skipc
  6681     134B  0F2D               	incfsz	__div_to_l_@f2+3,w
  6682     134C  02A9               	subwf	__div_to_l_@f1+3,f
  6683     134D                     l2913:
  6684     134D  142F               	bsf	__div_to_l_@quot,0
  6685     134E                     l2915:
  6686     134E  3001               	movlw	1
  6687     134F  00AE               	movwf	??__div_to_l_
  6688     1350                     u4505:
  6689     1350  1003               	clrc
  6690     1351  0DA6               	rlf	__div_to_l_@f1,f
  6691     1352  0DA7               	rlf	__div_to_l_@f1+1,f
  6692     1353  0DA8               	rlf	__div_to_l_@f1+2,f
  6693     1354  0DA9               	rlf	__div_to_l_@f1+3,f
  6694     1355  0BAE               	decfsz	??__div_to_l_,f
  6695     1356  2B50               	goto	u4505
  6696     1357                     l2917:
  6697     1357  3001               	movlw	1
  6698     1358  02B3               	subwf	__div_to_l_@cntr,f
  6699     1359  1D03               	btfss	3,2
  6700     135A  2B5C               	goto	u4511
  6701     135B  2B5D               	goto	u4510
  6702     135C                     u4511:
  6703     135C  2B24               	goto	l2907
  6704     135D                     u4510:
  6705     135D                     l527:
  6706     135D  1FB4               	btfss	__div_to_l_@exp1,7
  6707     135E  2B60               	goto	u4521
  6708     135F  2B61               	goto	u4520
  6709     1360                     u4521:
  6710     1360  2B7B               	goto	l2927
  6711     1361                     u4520:
  6712     1361                     l2919:
  6713     1361  0834               	movf	__div_to_l_@exp1,w
  6714     1362  3A80               	xorlw	128
  6715     1363  3E9F               	addlw	159
  6716     1364  1803               	skipnc
  6717     1365  2B67               	goto	u4531
  6718     1366  2B68               	goto	u4530
  6719     1367                     u4531:
  6720     1367  2B69               	goto	l2925
  6721     1368                     u4530:
  6722     1368  2AEE               	goto	l2889
  6723     1369                     l2925:
  6724     1369  3001               	movlw	1
  6725     136A                     u4545:
  6726     136A  1003               	clrc
  6727     136B  0CB2               	rrf	__div_to_l_@quot+3,f
  6728     136C  0CB1               	rrf	__div_to_l_@quot+2,f
  6729     136D  0CB0               	rrf	__div_to_l_@quot+1,f
  6730     136E  0CAF               	rrf	__div_to_l_@quot,f
  6731     136F  3EFF               	addlw	-1
  6732     1370  1D03               	skipz
  6733     1371  2B6A               	goto	u4545
  6734     1372  3001               	movlw	1
  6735     1373  00AE               	movwf	??__div_to_l_
  6736     1374  082E               	movf	??__div_to_l_,w
  6737     1375  07B4               	addwf	__div_to_l_@exp1,f
  6738     1376  1D03               	btfss	3,2
  6739     1377  2B79               	goto	u4551
  6740     1378  2B7A               	goto	u4550
  6741     1379                     u4551:
  6742     1379  2B69               	goto	l2925
  6743     137A                     u4550:
  6744     137A  2B92               	goto	l2935
  6745     137B                     l2927:
  6746     137B  3020               	movlw	32
  6747     137C  0234               	subwf	__div_to_l_@exp1,w
  6748     137D  1C03               	skipc
  6749     137E  2B80               	goto	u4561
  6750     137F  2B81               	goto	u4560
  6751     1380                     u4561:
  6752     1380  2B8D               	goto	l534
  6753     1381                     u4560:
  6754     1381  2AEE               	goto	l2889
  6755     1382                     l2933:
  6756     1382  3001               	movlw	1
  6757     1383  00AE               	movwf	??__div_to_l_
  6758     1384                     u4575:
  6759     1384  1003               	clrc
  6760     1385  0DAF               	rlf	__div_to_l_@quot,f
  6761     1386  0DB0               	rlf	__div_to_l_@quot+1,f
  6762     1387  0DB1               	rlf	__div_to_l_@quot+2,f
  6763     1388  0DB2               	rlf	__div_to_l_@quot+3,f
  6764     1389  0BAE               	decfsz	??__div_to_l_,f
  6765     138A  2B84               	goto	u4575
  6766     138B  3001               	movlw	1
  6767     138C  02B4               	subwf	__div_to_l_@exp1,f
  6768     138D                     l534:
  6769     138D  0834               	movf	__div_to_l_@exp1,w
  6770     138E  1D03               	btfss	3,2
  6771     138F  2B91               	goto	u4581
  6772     1390  2B92               	goto	u4580
  6773     1391                     u4581:
  6774     1391  2B82               	goto	l2933
  6775     1392                     u4580:
  6776     1392                     l2935:
  6777     1392  0832               	movf	__div_to_l_@quot+3,w
  6778     1393  00A9               	movwf	?__div_to_l_+3
  6779     1394  0831               	movf	__div_to_l_@quot+2,w
  6780     1395  00A8               	movwf	?__div_to_l_+2
  6781     1396  0830               	movf	__div_to_l_@quot+1,w
  6782     1397  00A7               	movwf	?__div_to_l_+1
  6783     1398  082F               	movf	__div_to_l_@quot,w
  6784     1399  00A6               	movwf	?__div_to_l_
  6785     139A                     l523:
  6786     139A  0008               	return
  6787     139B                     __end_of__div_to_l_:
  6788                           
  6789                           	psect	text11
  6790     1D3A                     __ptext11:	
  6791 ;; *************** function ___llmod *****************
  6792 ;; Defined at:
  6793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\llmod.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  divisor         4    6[BANK0 ] unsigned long 
  6796 ;;  dividend        4   10[BANK0 ] unsigned long 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  counter         1   15[BANK0 ] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  4    6[BANK0 ] unsigned long 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6808 ;;      Params:         0       8       0       0       0
  6809 ;;      Locals:         0       1       0       0       0
  6810 ;;      Temps:          0       1       0       0       0
  6811 ;;      Totals:         0      10       0       0       0
  6812 ;;Total ram usage:       10 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; Hardware stack levels required when called: 2
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_sprintf
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822     1D3A                     ___llmod:	
  6823                           ;psect for function ___llmod
  6824                           
  6825     1D3A                     l3053:	
  6826                           ;incstack = 0
  6827                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6828                           
  6829     1D3A  1283               	bcf	3,5	;RP0=0, select bank0
  6830     1D3B  1303               	bcf	3,6	;RP1=0, select bank0
  6831     1D3C  0829               	movf	___llmod@divisor+3,w
  6832     1D3D  0428               	iorwf	___llmod@divisor+2,w
  6833     1D3E  0427               	iorwf	___llmod@divisor+1,w
  6834     1D3F  0426               	iorwf	___llmod@divisor,w
  6835     1D40  1903               	skipnz
  6836     1D41  2D43               	goto	u4911
  6837     1D42  2D44               	goto	u4910
  6838     1D43                     u4911:
  6839     1D43  2D87               	goto	l3069
  6840     1D44                     u4910:
  6841     1D44                     l3055:
  6842     1D44  01AF               	clrf	___llmod@counter
  6843     1D45  0AAF               	incf	___llmod@counter,f
  6844     1D46  2D54               	goto	l3059
  6845     1D47                     l3057:
  6846     1D47  3001               	movlw	1
  6847     1D48  00AE               	movwf	??___llmod
  6848     1D49                     u4925:
  6849     1D49  1003               	clrc
  6850     1D4A  0DA6               	rlf	___llmod@divisor,f
  6851     1D4B  0DA7               	rlf	___llmod@divisor+1,f
  6852     1D4C  0DA8               	rlf	___llmod@divisor+2,f
  6853     1D4D  0DA9               	rlf	___llmod@divisor+3,f
  6854     1D4E  0BAE               	decfsz	??___llmod,f
  6855     1D4F  2D49               	goto	u4925
  6856     1D50  3001               	movlw	1
  6857     1D51  00AE               	movwf	??___llmod
  6858     1D52  082E               	movf	??___llmod,w
  6859     1D53  07AF               	addwf	___llmod@counter,f
  6860     1D54                     l3059:
  6861     1D54  1FA9               	btfss	___llmod@divisor+3,7
  6862     1D55  2D57               	goto	u4931
  6863     1D56  2D58               	goto	u4930
  6864     1D57                     u4931:
  6865     1D57  2D47               	goto	l3057
  6866     1D58                     u4930:
  6867     1D58                     l3061:
  6868     1D58  0829               	movf	___llmod@divisor+3,w
  6869     1D59  022D               	subwf	___llmod@dividend+3,w
  6870     1D5A  1D03               	skipz
  6871     1D5B  2D66               	goto	u4945
  6872     1D5C  0828               	movf	___llmod@divisor+2,w
  6873     1D5D  022C               	subwf	___llmod@dividend+2,w
  6874     1D5E  1D03               	skipz
  6875     1D5F  2D66               	goto	u4945
  6876     1D60  0827               	movf	___llmod@divisor+1,w
  6877     1D61  022B               	subwf	___llmod@dividend+1,w
  6878     1D62  1D03               	skipz
  6879     1D63  2D66               	goto	u4945
  6880     1D64  0826               	movf	___llmod@divisor,w
  6881     1D65  022A               	subwf	___llmod@dividend,w
  6882     1D66                     u4945:
  6883     1D66  1C03               	skipc
  6884     1D67  2D69               	goto	u4941
  6885     1D68  2D6A               	goto	u4940
  6886     1D69                     u4941:
  6887     1D69  2D78               	goto	l3065
  6888     1D6A                     u4940:
  6889     1D6A                     l3063:
  6890     1D6A  0826               	movf	___llmod@divisor,w
  6891     1D6B  02AA               	subwf	___llmod@dividend,f
  6892     1D6C  0827               	movf	___llmod@divisor+1,w
  6893     1D6D  1C03               	skipc
  6894     1D6E  0F27               	incfsz	___llmod@divisor+1,w
  6895     1D6F  02AB               	subwf	___llmod@dividend+1,f
  6896     1D70  0828               	movf	___llmod@divisor+2,w
  6897     1D71  1C03               	skipc
  6898     1D72  0F28               	incfsz	___llmod@divisor+2,w
  6899     1D73  02AC               	subwf	___llmod@dividend+2,f
  6900     1D74  0829               	movf	___llmod@divisor+3,w
  6901     1D75  1C03               	skipc
  6902     1D76  0F29               	incfsz	___llmod@divisor+3,w
  6903     1D77  02AD               	subwf	___llmod@dividend+3,f
  6904     1D78                     l3065:
  6905     1D78  3001               	movlw	1
  6906     1D79                     u4955:
  6907     1D79  1003               	clrc
  6908     1D7A  0CA9               	rrf	___llmod@divisor+3,f
  6909     1D7B  0CA8               	rrf	___llmod@divisor+2,f
  6910     1D7C  0CA7               	rrf	___llmod@divisor+1,f
  6911     1D7D  0CA6               	rrf	___llmod@divisor,f
  6912     1D7E  3EFF               	addlw	-1
  6913     1D7F  1D03               	skipz
  6914     1D80  2D79               	goto	u4955
  6915     1D81                     l3067:
  6916     1D81  3001               	movlw	1
  6917     1D82  02AF               	subwf	___llmod@counter,f
  6918     1D83  1D03               	btfss	3,2
  6919     1D84  2D86               	goto	u4961
  6920     1D85  2D87               	goto	u4960
  6921     1D86                     u4961:
  6922     1D86  2D58               	goto	l3061
  6923     1D87                     u4960:
  6924     1D87                     l3069:
  6925     1D87  082D               	movf	___llmod@dividend+3,w
  6926     1D88  00A9               	movwf	?___llmod+3
  6927     1D89  082C               	movf	___llmod@dividend+2,w
  6928     1D8A  00A8               	movwf	?___llmod+2
  6929     1D8B  082B               	movf	___llmod@dividend+1,w
  6930     1D8C  00A7               	movwf	?___llmod+1
  6931     1D8D  082A               	movf	___llmod@dividend,w
  6932     1D8E  00A6               	movwf	?___llmod
  6933     1D8F                     l609:
  6934     1D8F  0008               	return
  6935     1D90                     __end_of___llmod:
  6936                           
  6937                           	psect	text12
  6938     1EB7                     __ptext12:	
  6939 ;; *************** function ___lldiv *****************
  6940 ;; Defined at:
  6941 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  divisor         4    6[BANK0 ] unsigned long 
  6944 ;;  dividend        4   10[BANK0 ] unsigned long 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  quotient        4   15[BANK0 ] unsigned long 
  6947 ;;  counter         1   19[BANK0 ] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  4    6[BANK0 ] unsigned long 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6957 ;;      Params:         0       8       0       0       0
  6958 ;;      Locals:         0       5       0       0       0
  6959 ;;      Temps:          0       1       0       0       0
  6960 ;;      Totals:         0      14       0       0       0
  6961 ;;Total ram usage:       14 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 2
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_sprintf
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971     1EB7                     ___lldiv:	
  6972                           ;psect for function ___lldiv
  6973                           
  6974     1EB7                     l2953:	
  6975                           ;incstack = 0
  6976                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6977                           
  6978     1EB7  3000               	movlw	0
  6979     1EB8  1283               	bcf	3,5	;RP0=0, select bank0
  6980     1EB9  1303               	bcf	3,6	;RP1=0, select bank0
  6981     1EBA  00B2               	movwf	___lldiv@quotient+3
  6982     1EBB  3000               	movlw	0
  6983     1EBC  00B1               	movwf	___lldiv@quotient+2
  6984     1EBD  3000               	movlw	0
  6985     1EBE  00B0               	movwf	___lldiv@quotient+1
  6986     1EBF  3000               	movlw	0
  6987     1EC0  00AF               	movwf	___lldiv@quotient
  6988     1EC1  0829               	movf	___lldiv@divisor+3,w
  6989     1EC2  0428               	iorwf	___lldiv@divisor+2,w
  6990     1EC3  0427               	iorwf	___lldiv@divisor+1,w
  6991     1EC4  0426               	iorwf	___lldiv@divisor,w
  6992     1EC5  1903               	skipnz
  6993     1EC6  2EC8               	goto	u4631
  6994     1EC7  2EC9               	goto	u4630
  6995     1EC8                     u4631:
  6996     1EC8  2F16               	goto	l2973
  6997     1EC9                     u4630:
  6998     1EC9                     l2955:
  6999     1EC9  01B3               	clrf	___lldiv@counter
  7000     1ECA  0AB3               	incf	___lldiv@counter,f
  7001     1ECB  2ED9               	goto	l2959
  7002     1ECC                     l2957:
  7003     1ECC  3001               	movlw	1
  7004     1ECD  00AE               	movwf	??___lldiv
  7005     1ECE                     u4645:
  7006     1ECE  1003               	clrc
  7007     1ECF  0DA6               	rlf	___lldiv@divisor,f
  7008     1ED0  0DA7               	rlf	___lldiv@divisor+1,f
  7009     1ED1  0DA8               	rlf	___lldiv@divisor+2,f
  7010     1ED2  0DA9               	rlf	___lldiv@divisor+3,f
  7011     1ED3  0BAE               	decfsz	??___lldiv,f
  7012     1ED4  2ECE               	goto	u4645
  7013     1ED5  3001               	movlw	1
  7014     1ED6  00AE               	movwf	??___lldiv
  7015     1ED7  082E               	movf	??___lldiv,w
  7016     1ED8  07B3               	addwf	___lldiv@counter,f
  7017     1ED9                     l2959:
  7018     1ED9  1FA9               	btfss	___lldiv@divisor+3,7
  7019     1EDA  2EDC               	goto	u4651
  7020     1EDB  2EDD               	goto	u4650
  7021     1EDC                     u4651:
  7022     1EDC  2ECC               	goto	l2957
  7023     1EDD                     u4650:
  7024     1EDD                     l2961:
  7025     1EDD  3001               	movlw	1
  7026     1EDE  00AE               	movwf	??___lldiv
  7027     1EDF                     u4665:
  7028     1EDF  1003               	clrc
  7029     1EE0  0DAF               	rlf	___lldiv@quotient,f
  7030     1EE1  0DB0               	rlf	___lldiv@quotient+1,f
  7031     1EE2  0DB1               	rlf	___lldiv@quotient+2,f
  7032     1EE3  0DB2               	rlf	___lldiv@quotient+3,f
  7033     1EE4  0BAE               	decfsz	??___lldiv,f
  7034     1EE5  2EDF               	goto	u4665
  7035     1EE6                     l2963:
  7036     1EE6  0829               	movf	___lldiv@divisor+3,w
  7037     1EE7  022D               	subwf	___lldiv@dividend+3,w
  7038     1EE8  1D03               	skipz
  7039     1EE9  2EF4               	goto	u4675
  7040     1EEA  0828               	movf	___lldiv@divisor+2,w
  7041     1EEB  022C               	subwf	___lldiv@dividend+2,w
  7042     1EEC  1D03               	skipz
  7043     1EED  2EF4               	goto	u4675
  7044     1EEE  0827               	movf	___lldiv@divisor+1,w
  7045     1EEF  022B               	subwf	___lldiv@dividend+1,w
  7046     1EF0  1D03               	skipz
  7047     1EF1  2EF4               	goto	u4675
  7048     1EF2  0826               	movf	___lldiv@divisor,w
  7049     1EF3  022A               	subwf	___lldiv@dividend,w
  7050     1EF4                     u4675:
  7051     1EF4  1C03               	skipc
  7052     1EF5  2EF7               	goto	u4671
  7053     1EF6  2EF8               	goto	u4670
  7054     1EF7                     u4671:
  7055     1EF7  2F07               	goto	l2969
  7056     1EF8                     u4670:
  7057     1EF8                     l2965:
  7058     1EF8  0826               	movf	___lldiv@divisor,w
  7059     1EF9  02AA               	subwf	___lldiv@dividend,f
  7060     1EFA  0827               	movf	___lldiv@divisor+1,w
  7061     1EFB  1C03               	skipc
  7062     1EFC  0F27               	incfsz	___lldiv@divisor+1,w
  7063     1EFD  02AB               	subwf	___lldiv@dividend+1,f
  7064     1EFE  0828               	movf	___lldiv@divisor+2,w
  7065     1EFF  1C03               	skipc
  7066     1F00  0F28               	incfsz	___lldiv@divisor+2,w
  7067     1F01  02AC               	subwf	___lldiv@dividend+2,f
  7068     1F02  0829               	movf	___lldiv@divisor+3,w
  7069     1F03  1C03               	skipc
  7070     1F04  0F29               	incfsz	___lldiv@divisor+3,w
  7071     1F05  02AD               	subwf	___lldiv@dividend+3,f
  7072     1F06                     l2967:
  7073     1F06  142F               	bsf	___lldiv@quotient,0
  7074     1F07                     l2969:
  7075     1F07  3001               	movlw	1
  7076     1F08                     u4685:
  7077     1F08  1003               	clrc
  7078     1F09  0CA9               	rrf	___lldiv@divisor+3,f
  7079     1F0A  0CA8               	rrf	___lldiv@divisor+2,f
  7080     1F0B  0CA7               	rrf	___lldiv@divisor+1,f
  7081     1F0C  0CA6               	rrf	___lldiv@divisor,f
  7082     1F0D  3EFF               	addlw	-1
  7083     1F0E  1D03               	skipz
  7084     1F0F  2F08               	goto	u4685
  7085     1F10                     l2971:
  7086     1F10  3001               	movlw	1
  7087     1F11  02B3               	subwf	___lldiv@counter,f
  7088     1F12  1D03               	btfss	3,2
  7089     1F13  2F15               	goto	u4691
  7090     1F14  2F16               	goto	u4690
  7091     1F15                     u4691:
  7092     1F15  2EDD               	goto	l2961
  7093     1F16                     u4690:
  7094     1F16                     l2973:
  7095     1F16  0832               	movf	___lldiv@quotient+3,w
  7096     1F17  00A9               	movwf	?___lldiv+3
  7097     1F18  0831               	movf	___lldiv@quotient+2,w
  7098     1F19  00A8               	movwf	?___lldiv+2
  7099     1F1A  0830               	movf	___lldiv@quotient+1,w
  7100     1F1B  00A7               	movwf	?___lldiv+1
  7101     1F1C  082F               	movf	___lldiv@quotient,w
  7102     1F1D  00A6               	movwf	?___lldiv
  7103     1F1E                     l389:
  7104     1F1E  0008               	return
  7105     1F1F                     __end_of___lldiv:
  7106                           
  7107                           	psect	text13
  7108     1BE4                     __ptext13:	
  7109 ;; *************** function ___flsub *****************
  7110 ;; Defined at:
  7111 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  a               4   24[BANK1 ] unsigned long 
  7114 ;;  b               4   28[BANK1 ] unsigned long 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;		None
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  4   24[BANK1 ] unsigned long 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7126 ;;      Params:         0       0       8       0       0
  7127 ;;      Locals:         0       0       0       0       0
  7128 ;;      Temps:          0       0       0       0       0
  7129 ;;      Totals:         0       0       8       0       0
  7130 ;;Total ram usage:        8 bytes
  7131 ;; Hardware stack levels used: 1
  7132 ;; Hardware stack levels required when called: 3
  7133 ;; This function calls:
  7134 ;;		___fladd
  7135 ;; This function is called by:
  7136 ;;		_sprintf
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140     1BE4                     ___flsub:	
  7141                           ;psect for function ___flsub
  7142                           
  7143     1BE4                     l3779:	
  7144                           ;incstack = 0
  7145                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7146                           
  7147     1BE4  3080               	movlw	128
  7148     1BE5  1683               	bsf	3,5	;RP0=1, select bank1
  7149     1BE6  1303               	bcf	3,6	;RP1=0, select bank1
  7150     1BE7  06BB               	xorwf	(___flsub@a+3)^(0+128),f
  7151     1BE8                     l3781:
  7152     1BE8  083F               	movf	(___flsub@b+3)^(0+128),w
  7153     1BE9  00A3               	movwf	(___fladd@b+3)^(0+128)
  7154     1BEA  083E               	movf	(___flsub@b+2)^(0+128),w
  7155     1BEB  00A2               	movwf	(___fladd@b+2)^(0+128)
  7156     1BEC  083D               	movf	(___flsub@b+1)^(0+128),w
  7157     1BED  00A1               	movwf	(___fladd@b+1)^(0+128)
  7158     1BEE  083C               	movf	___flsub@b^(0+128),w
  7159     1BEF  00A0               	movwf	___fladd@b^(0+128)
  7160     1BF0  083B               	movf	(___flsub@a+3)^(0+128),w
  7161     1BF1  00A7               	movwf	(___fladd@a+3)^(0+128)
  7162     1BF2  083A               	movf	(___flsub@a+2)^(0+128),w
  7163     1BF3  00A6               	movwf	(___fladd@a+2)^(0+128)
  7164     1BF4  0839               	movf	(___flsub@a+1)^(0+128),w
  7165     1BF5  00A5               	movwf	(___fladd@a+1)^(0+128)
  7166     1BF6  0838               	movf	___flsub@a^(0+128),w
  7167     1BF7  00A4               	movwf	___fladd@a^(0+128)
  7168     1BF8  160A  118A  25A8  160A  158A  	fcall	___fladd
  7169     1BFD  1683               	bsf	3,5	;RP0=1, select bank1
  7170     1BFE  1303               	bcf	3,6	;RP1=0, select bank1
  7171     1BFF  0823               	movf	(?___fladd+3)^(0+128),w
  7172     1C00  00BB               	movwf	(?___flsub+3)^(0+128)
  7173     1C01  0822               	movf	(?___fladd+2)^(0+128),w
  7174     1C02  00BA               	movwf	(?___flsub+2)^(0+128)
  7175     1C03  0821               	movf	(?___fladd+1)^(0+128),w
  7176     1C04  00B9               	movwf	(?___flsub+1)^(0+128)
  7177     1C05  0820               	movf	?___fladd^(0+128),w
  7178     1C06  00B8               	movwf	?___flsub^(0+128)
  7179     1C07                     l726:
  7180     1C07  0008               	return
  7181     1C08                     __end_of___flsub:
  7182                           
  7183                           	psect	text14
  7184     15A8                     __ptext14:	
  7185 ;; *************** function ___fladd *****************
  7186 ;; Defined at:
  7187 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\sprcadd.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  b               4    0[BANK1 ] unsigned long 
  7190 ;;  a               4    4[BANK1 ] unsigned long 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;  grs             1   19[BANK1 ] unsigned char 
  7193 ;;  bexp            1   18[BANK1 ] unsigned char 
  7194 ;;  aexp            1   17[BANK1 ] unsigned char 
  7195 ;;  signs           1   16[BANK1 ] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  4    0[BANK1 ] unsigned char 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0, btemp+1
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7205 ;;      Params:         0       0       8       0       0
  7206 ;;      Locals:         0       0       4       0       0
  7207 ;;      Temps:          0       0       8       0       0
  7208 ;;      Totals:         0       0      20       0       0
  7209 ;;Total ram usage:       20 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; Hardware stack levels required when called: 2
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_sprintf
  7216 ;;		___flsub
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220     15A8                     ___fladd:	
  7221                           ;psect for function ___fladd
  7222                           
  7223     15A8                     l3549:	
  7224                           ;incstack = 0
  7225                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7226                           
  7227     15A8  1683               	bsf	3,5	;RP0=1, select bank1
  7228     15A9  1303               	bcf	3,6	;RP1=0, select bank1
  7229     15AA  0823               	movf	(___fladd@b^(0+128)+3),w
  7230     15AB  3980               	andlw	128
  7231     15AC  00B0               	movwf	___fladd@signs^(0+128)
  7232     15AD                     l3551:
  7233     15AD  0823               	movf	(___fladd@b^(0+128)+3),w
  7234     15AE  00A8               	movwf	??___fladd^(0+128)
  7235     15AF  0728               	addwf	??___fladd^(0+128),w
  7236     15B0  00B2               	movwf	___fladd@bexp^(0+128)
  7237     15B1                     l3553:
  7238     15B1  1FA2               	btfss	(___fladd@b^(0+128)+2),7
  7239     15B2  2DB4               	goto	u5691
  7240     15B3  2DB5               	goto	u5690
  7241     15B4                     u5691:
  7242     15B4  2DB6               	goto	l3557
  7243     15B5                     u5690:
  7244     15B5                     l3555:
  7245     15B5  1432               	bsf	___fladd@bexp^(0+128),0
  7246     15B6                     l3557:
  7247     15B6  0832               	movf	___fladd@bexp^(0+128),w
  7248     15B7  1903               	btfsc	3,2
  7249     15B8  2DBA               	goto	u5701
  7250     15B9  2DBB               	goto	u5700
  7251     15BA                     u5701:
  7252     15BA  2DCB               	goto	l3567
  7253     15BB                     u5700:
  7254     15BB                     l3559:
  7255     15BB  0A32               	incf	___fladd@bexp^(0+128),w
  7256     15BC  1D03               	btfss	3,2
  7257     15BD  2DBF               	goto	u5711
  7258     15BE  2DC0               	goto	u5710
  7259     15BF                     u5711:
  7260     15BF  2DC8               	goto	l3563
  7261     15C0                     u5710:
  7262     15C0                     l3561:
  7263     15C0  3000               	movlw	0
  7264     15C1  00A3               	movwf	(___fladd@b+3)^(0+128)
  7265     15C2  3000               	movlw	0
  7266     15C3  00A2               	movwf	(___fladd@b+2)^(0+128)
  7267     15C4  3000               	movlw	0
  7268     15C5  00A1               	movwf	(___fladd@b+1)^(0+128)
  7269     15C6  3000               	movlw	0
  7270     15C7  00A0               	movwf	___fladd@b^(0+128)
  7271     15C8                     l3563:
  7272     15C8  17A2               	bsf	(___fladd@b^(0+128)+2),7
  7273     15C9                     l3565:
  7274     15C9  01A3               	clrf	(___fladd@b^(0+128)+3)
  7275     15CA  2DD3               	goto	l3569
  7276     15CB                     l3567:
  7277     15CB  3000               	movlw	0
  7278     15CC  00A3               	movwf	(___fladd@b+3)^(0+128)
  7279     15CD  3000               	movlw	0
  7280     15CE  00A2               	movwf	(___fladd@b+2)^(0+128)
  7281     15CF  3000               	movlw	0
  7282     15D0  00A1               	movwf	(___fladd@b+1)^(0+128)
  7283     15D1  3000               	movlw	0
  7284     15D2  00A0               	movwf	___fladd@b^(0+128)
  7285     15D3                     l3569:
  7286     15D3  0827               	movf	(___fladd@a^(0+128)+3),w
  7287     15D4  3980               	andlw	128
  7288     15D5  00B1               	movwf	___fladd@aexp^(0+128)
  7289     15D6                     l3571:
  7290     15D6  0831               	movf	___fladd@aexp^(0+128),w
  7291     15D7  0630               	xorwf	___fladd@signs^(0+128),w
  7292     15D8  1903               	skipnz
  7293     15D9  2DDB               	goto	u5721
  7294     15DA  2DDC               	goto	u5720
  7295     15DB                     u5721:
  7296     15DB  2DDD               	goto	l3575
  7297     15DC                     u5720:
  7298     15DC                     l3573:
  7299     15DC  1730               	bsf	___fladd@signs^(0+128),6
  7300     15DD                     l3575:
  7301     15DD  0827               	movf	(___fladd@a^(0+128)+3),w
  7302     15DE  00A8               	movwf	??___fladd^(0+128)
  7303     15DF  0728               	addwf	??___fladd^(0+128),w
  7304     15E0  00B1               	movwf	___fladd@aexp^(0+128)
  7305     15E1                     l3577:
  7306     15E1  1FA6               	btfss	(___fladd@a^(0+128)+2),7
  7307     15E2  2DE4               	goto	u5731
  7308     15E3  2DE5               	goto	u5730
  7309     15E4                     u5731:
  7310     15E4  2DE6               	goto	l3581
  7311     15E5                     u5730:
  7312     15E5                     l3579:
  7313     15E5  1431               	bsf	___fladd@aexp^(0+128),0
  7314     15E6                     l3581:
  7315     15E6  0831               	movf	___fladd@aexp^(0+128),w
  7316     15E7  1903               	btfsc	3,2
  7317     15E8  2DEA               	goto	u5741
  7318     15E9  2DEB               	goto	u5740
  7319     15EA                     u5741:
  7320     15EA  2DFB               	goto	l3591
  7321     15EB                     u5740:
  7322     15EB                     l3583:
  7323     15EB  0A31               	incf	___fladd@aexp^(0+128),w
  7324     15EC  1D03               	btfss	3,2
  7325     15ED  2DEF               	goto	u5751
  7326     15EE  2DF0               	goto	u5750
  7327     15EF                     u5751:
  7328     15EF  2DF8               	goto	l3587
  7329     15F0                     u5750:
  7330     15F0                     l3585:
  7331     15F0  3000               	movlw	0
  7332     15F1  00A7               	movwf	(___fladd@a+3)^(0+128)
  7333     15F2  3000               	movlw	0
  7334     15F3  00A6               	movwf	(___fladd@a+2)^(0+128)
  7335     15F4  3000               	movlw	0
  7336     15F5  00A5               	movwf	(___fladd@a+1)^(0+128)
  7337     15F6  3000               	movlw	0
  7338     15F7  00A4               	movwf	___fladd@a^(0+128)
  7339     15F8                     l3587:
  7340     15F8  17A6               	bsf	(___fladd@a^(0+128)+2),7
  7341     15F9                     l3589:
  7342     15F9  01A7               	clrf	(___fladd@a^(0+128)+3)
  7343     15FA  2E03               	goto	l680
  7344     15FB                     l3591:
  7345     15FB  3000               	movlw	0
  7346     15FC  00A7               	movwf	(___fladd@a+3)^(0+128)
  7347     15FD  3000               	movlw	0
  7348     15FE  00A6               	movwf	(___fladd@a+2)^(0+128)
  7349     15FF  3000               	movlw	0
  7350     1600  00A5               	movwf	(___fladd@a+1)^(0+128)
  7351     1601  3000               	movlw	0
  7352     1602  00A4               	movwf	___fladd@a^(0+128)
  7353     1603                     l680:
  7354     1603  0832               	movf	___fladd@bexp^(0+128),w
  7355     1604  0231               	subwf	___fladd@aexp^(0+128),w
  7356     1605  1803               	skipnc
  7357     1606  2E08               	goto	u5761
  7358     1607  2E09               	goto	u5760
  7359     1608                     u5761:
  7360     1608  2E2F               	goto	l3627
  7361     1609                     u5760:
  7362     1609                     l3593:
  7363     1609  1F30               	btfss	___fladd@signs^(0+128),6
  7364     160A  2E0C               	goto	u5771
  7365     160B  2E0D               	goto	u5770
  7366     160C                     u5771:
  7367     160C  2E11               	goto	l3597
  7368     160D                     u5770:
  7369     160D                     l3595:
  7370     160D  3080               	movlw	128
  7371     160E  00A8               	movwf	??___fladd^(0+128)
  7372     160F  0828               	movf	??___fladd^(0+128),w
  7373     1610  06B0               	xorwf	___fladd@signs^(0+128),f
  7374     1611                     l3597:
  7375     1611  0832               	movf	___fladd@bexp^(0+128),w
  7376     1612  00B3               	movwf	___fladd@grs^(0+128)
  7377     1613                     l3599:
  7378     1613  0831               	movf	___fladd@aexp^(0+128),w
  7379     1614  00B2               	movwf	___fladd@bexp^(0+128)
  7380     1615                     l3601:
  7381     1615  0833               	movf	___fladd@grs^(0+128),w
  7382     1616  00B1               	movwf	___fladd@aexp^(0+128)
  7383     1617                     l3603:
  7384     1617  0820               	movf	___fladd@b^(0+128),w
  7385     1618  00B3               	movwf	___fladd@grs^(0+128)
  7386     1619                     l3605:
  7387     1619  0824               	movf	___fladd@a^(0+128),w
  7388     161A  00A0               	movwf	___fladd@b^(0+128)
  7389     161B                     l3607:
  7390     161B  0833               	movf	___fladd@grs^(0+128),w
  7391     161C  00A4               	movwf	___fladd@a^(0+128)
  7392     161D                     l3609:
  7393     161D  0821               	movf	(___fladd@b^(0+128)+1),w
  7394     161E  00B3               	movwf	___fladd@grs^(0+128)
  7395     161F                     l3611:
  7396     161F  0825               	movf	(___fladd@a^(0+128)+1),w
  7397     1620  00A1               	movwf	(___fladd@b^(0+128)+1)
  7398     1621                     l3613:
  7399     1621  0833               	movf	___fladd@grs^(0+128),w
  7400     1622  00A5               	movwf	(___fladd@a^(0+128)+1)
  7401     1623                     l3615:
  7402     1623  0822               	movf	(___fladd@b^(0+128)+2),w
  7403     1624  00B3               	movwf	___fladd@grs^(0+128)
  7404     1625                     l3617:
  7405     1625  0826               	movf	(___fladd@a^(0+128)+2),w
  7406     1626  00A2               	movwf	(___fladd@b^(0+128)+2)
  7407     1627                     l3619:
  7408     1627  0833               	movf	___fladd@grs^(0+128),w
  7409     1628  00A6               	movwf	(___fladd@a^(0+128)+2)
  7410     1629                     l3621:
  7411     1629  0823               	movf	(___fladd@b^(0+128)+3),w
  7412     162A  00B3               	movwf	___fladd@grs^(0+128)
  7413     162B                     l3623:
  7414     162B  0827               	movf	(___fladd@a^(0+128)+3),w
  7415     162C  00A3               	movwf	(___fladd@b^(0+128)+3)
  7416     162D                     l3625:
  7417     162D  0833               	movf	___fladd@grs^(0+128),w
  7418     162E  00A7               	movwf	(___fladd@a^(0+128)+3)
  7419     162F                     l3627:
  7420     162F  01B3               	clrf	___fladd@grs^(0+128)
  7421     1630                     l3629:
  7422     1630  0831               	movf	___fladd@aexp^(0+128),w
  7423     1631  00A8               	movwf	??___fladd^(0+128)
  7424     1632  01A9               	clrf	(??___fladd^(0+128)+1)
  7425     1633  0829               	movf	(??___fladd+1)^(0+128),w
  7426     1634  00AB               	movwf	((??___fladd+2)^(0+128)+1)
  7427     1635  0832               	movf	___fladd@bexp^(0+128),w
  7428     1636  0228               	subwf	??___fladd^(0+128),w
  7429     1637  00AA               	movwf	(??___fladd+2)^(0+128)
  7430     1638  1C03               	skipc
  7431     1639  03AB               	decf	((??___fladd+2)^(0+128)+1),f
  7432     163A  082B               	movf	(??___fladd+3)^(0+128),w
  7433     163B  3A80               	xorlw	128
  7434     163C  00FF               	movwf	btemp+1
  7435     163D  3080               	movlw	128
  7436     163E  027F               	subwf	btemp+1,w
  7437     163F  1D03               	skipz
  7438     1640  2E43               	goto	u5785
  7439     1641  301A               	movlw	26
  7440     1642  022A               	subwf	(??___fladd+2)^(0+128),w
  7441     1643                     u5785:
  7442     1643  1C03               	skipc
  7443     1644  2E46               	goto	u5781
  7444     1645  2E47               	goto	u5780
  7445     1646                     u5781:
  7446     1646  2E7E               	goto	l3645
  7447     1647                     u5780:
  7448     1647                     l3631:
  7449     1647  1683               	bsf	3,5	;RP0=1, select bank1
  7450     1648  1303               	bcf	3,6	;RP1=0, select bank1
  7451     1649  0823               	movf	(___fladd@b+3)^(0+128),w
  7452     164A  0422               	iorwf	(___fladd@b+2)^(0+128),w
  7453     164B  0421               	iorwf	(___fladd@b+1)^(0+128),w
  7454     164C  0420               	iorwf	___fladd@b^(0+128),w
  7455     164D  1D03               	skipz
  7456     164E  2E50               	goto	u5791
  7457     164F  2E52               	goto	u5790
  7458     1650                     u5791:
  7459     1650  3001               	movlw	1
  7460     1651  2E53               	goto	u5800
  7461     1652                     u5790:
  7462     1652  3000               	movlw	0
  7463     1653                     u5800:
  7464     1653  00B3               	movwf	___fladd@grs^(0+128)
  7465     1654  3000               	movlw	0
  7466     1655  00A3               	movwf	(___fladd@b+3)^(0+128)
  7467     1656  3000               	movlw	0
  7468     1657  00A2               	movwf	(___fladd@b+2)^(0+128)
  7469     1658  3000               	movlw	0
  7470     1659  00A1               	movwf	(___fladd@b+1)^(0+128)
  7471     165A  3000               	movlw	0
  7472     165B  00A0               	movwf	___fladd@b^(0+128)
  7473     165C  0831               	movf	___fladd@aexp^(0+128),w
  7474     165D  00B2               	movwf	___fladd@bexp^(0+128)
  7475     165E  2E86               	goto	l684
  7476     165F                     l686:
  7477     165F  1C33               	btfss	___fladd@grs^(0+128),0
  7478     1660  2E62               	goto	u5811
  7479     1661  2E63               	goto	u5810
  7480     1662                     u5811:
  7481     1662  2E6A               	goto	l3635
  7482     1663                     u5810:
  7483     1663                     l3633:
  7484     1663  0833               	movf	___fladd@grs^(0+128),w
  7485     1664  00A8               	movwf	??___fladd^(0+128)
  7486     1665  1003               	clrc
  7487     1666  0C28               	rrf	??___fladd^(0+128),w
  7488     1667  3801               	iorlw	1
  7489     1668  00B3               	movwf	___fladd@grs^(0+128)
  7490     1669  2E6C               	goto	l3637
  7491     166A                     l3635:
  7492     166A  1003               	clrc
  7493     166B  0CB3               	rrf	___fladd@grs^(0+128),f
  7494     166C                     l3637:
  7495     166C  1C20               	btfss	___fladd@b^(0+128),0
  7496     166D  2E6F               	goto	u5821
  7497     166E  2E70               	goto	u5820
  7498     166F                     u5821:
  7499     166F  2E71               	goto	l3641
  7500     1670                     u5820:
  7501     1670                     l3639:
  7502     1670  17B3               	bsf	___fladd@grs^(0+128),7
  7503     1671                     l3641:
  7504     1671  3001               	movlw	1
  7505     1672  00A8               	movwf	??___fladd^(0+128)
  7506     1673                     u5835:
  7507     1673  0D23               	rlf	(___fladd@b+3)^(0+128),w
  7508     1674  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  7509     1675  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  7510     1676  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  7511     1677  0CA0               	rrf	___fladd@b^(0+128),f
  7512     1678  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  7513     1679  2E73               	goto	u5835
  7514     167A                     l3643:
  7515     167A  3001               	movlw	1
  7516     167B  00A8               	movwf	??___fladd^(0+128)
  7517     167C  0828               	movf	??___fladd^(0+128),w
  7518     167D  07B2               	addwf	___fladd@bexp^(0+128),f
  7519     167E                     l3645:
  7520     167E  1683               	bsf	3,5	;RP0=1, select bank1
  7521     167F  1303               	bcf	3,6	;RP1=0, select bank1
  7522     1680  0831               	movf	___fladd@aexp^(0+128),w
  7523     1681  0232               	subwf	___fladd@bexp^(0+128),w
  7524     1682  1C03               	skipc
  7525     1683  2E85               	goto	u5841
  7526     1684  2E86               	goto	u5840
  7527     1685                     u5841:
  7528     1685  2E5F               	goto	l686
  7529     1686                     u5840:
  7530     1686                     l684:
  7531     1686  1B30               	btfsc	___fladd@signs^(0+128),6
  7532     1687  2E89               	goto	u5851
  7533     1688  2E8A               	goto	u5850
  7534     1689                     u5851:
  7535     1689  2ED3               	goto	l3671
  7536     168A                     u5850:
  7537     168A                     l3647:
  7538     168A  0832               	movf	___fladd@bexp^(0+128),w
  7539     168B  1D03               	btfss	3,2
  7540     168C  2E8E               	goto	u5861
  7541     168D  2E8F               	goto	u5860
  7542     168E                     u5861:
  7543     168E  2E98               	goto	l3653
  7544     168F                     u5860:
  7545     168F                     l3649:
  7546     168F  3000               	movlw	0
  7547     1690  00A3               	movwf	(?___fladd+3)^(0+128)
  7548     1691  3000               	movlw	0
  7549     1692  00A2               	movwf	(?___fladd+2)^(0+128)
  7550     1693  3000               	movlw	0
  7551     1694  00A1               	movwf	(?___fladd+1)^(0+128)
  7552     1695  3000               	movlw	0
  7553     1696  00A0               	movwf	?___fladd^(0+128)
  7554     1697  2FFF               	goto	l693
  7555     1698                     l3653:
  7556     1698  0824               	movf	___fladd@a^(0+128),w
  7557     1699  07A0               	addwf	___fladd@b^(0+128),f
  7558     169A  0825               	movf	(___fladd@a+1)^(0+128),w
  7559     169B  1103               	clrz
  7560     169C  1803               	skipnc
  7561     169D  3E01               	addlw	1
  7562     169E  1903               	skipnz
  7563     169F  2EA1               	goto	u5871
  7564     16A0  07A1               	addwf	(___fladd@b+1)^(0+128),f
  7565     16A1                     u5871:
  7566     16A1  0826               	movf	(___fladd@a+2)^(0+128),w
  7567     16A2  1103               	clrz
  7568     16A3  1803               	skipnc
  7569     16A4  3E01               	addlw	1
  7570     16A5  1903               	skipnz
  7571     16A6  2EA8               	goto	u5872
  7572     16A7  07A2               	addwf	(___fladd@b+2)^(0+128),f
  7573     16A8                     u5872:
  7574     16A8  0827               	movf	(___fladd@a+3)^(0+128),w
  7575     16A9  1103               	clrz
  7576     16AA  1803               	skipnc
  7577     16AB  3E01               	addlw	1
  7578     16AC  1903               	skipnz
  7579     16AD  2EAF               	goto	u5873
  7580     16AE  07A3               	addwf	(___fladd@b+3)^(0+128),f
  7581     16AF                     u5873:
  7582     16AF                     l3655:
  7583     16AF  1C23               	btfss	(___fladd@b+3)^(0+128),0
  7584     16B0  2EB2               	goto	u5881
  7585     16B1  2EB3               	goto	u5880
  7586     16B2                     u5881:
  7587     16B2  2F87               	goto	l3705
  7588     16B3                     u5880:
  7589     16B3                     l3657:
  7590     16B3  1C33               	btfss	___fladd@grs^(0+128),0
  7591     16B4  2EB6               	goto	u5891
  7592     16B5  2EB7               	goto	u5890
  7593     16B6                     u5891:
  7594     16B6  2EBE               	goto	l3661
  7595     16B7                     u5890:
  7596     16B7                     l3659:
  7597     16B7  0833               	movf	___fladd@grs^(0+128),w
  7598     16B8  00A8               	movwf	??___fladd^(0+128)
  7599     16B9  1003               	clrc
  7600     16BA  0C28               	rrf	??___fladd^(0+128),w
  7601     16BB  3801               	iorlw	1
  7602     16BC  00B3               	movwf	___fladd@grs^(0+128)
  7603     16BD  2EC0               	goto	l3663
  7604     16BE                     l3661:
  7605     16BE  1003               	clrc
  7606     16BF  0CB3               	rrf	___fladd@grs^(0+128),f
  7607     16C0                     l3663:
  7608     16C0  1C20               	btfss	___fladd@b^(0+128),0
  7609     16C1  2EC3               	goto	u5901
  7610     16C2  2EC4               	goto	u5900
  7611     16C3                     u5901:
  7612     16C3  2EC5               	goto	l3667
  7613     16C4                     u5900:
  7614     16C4                     l3665:
  7615     16C4  17B3               	bsf	___fladd@grs^(0+128),7
  7616     16C5                     l3667:
  7617     16C5  3001               	movlw	1
  7618     16C6  00A8               	movwf	??___fladd^(0+128)
  7619     16C7                     u5915:
  7620     16C7  0D23               	rlf	(___fladd@b+3)^(0+128),w
  7621     16C8  0CA3               	rrf	(___fladd@b+3)^(0+128),f
  7622     16C9  0CA2               	rrf	(___fladd@b+2)^(0+128),f
  7623     16CA  0CA1               	rrf	(___fladd@b+1)^(0+128),f
  7624     16CB  0CA0               	rrf	___fladd@b^(0+128),f
  7625     16CC  0BA8               	decfsz	(??___fladd^(0+128))& (0+127),f
  7626     16CD  2EC7               	goto	u5915
  7627     16CE                     l3669:
  7628     16CE  3001               	movlw	1
  7629     16CF  00A8               	movwf	??___fladd^(0+128)
  7630     16D0  0828               	movf	??___fladd^(0+128),w
  7631     16D1  07B2               	addwf	___fladd@bexp^(0+128),f
  7632     16D2  2F87               	goto	l3705
  7633     16D3                     l3671:
  7634     16D3  0823               	movf	(___fladd@b+3)^(0+128),w
  7635     16D4  3A80               	xorlw	128
  7636     16D5  00FF               	movwf	btemp+1
  7637     16D6  0827               	movf	(___fladd@a+3)^(0+128),w
  7638     16D7  3A80               	xorlw	128
  7639     16D8  027F               	subwf	btemp+1,w
  7640     16D9  1D03               	skipz
  7641     16DA  2EE5               	goto	u5923
  7642     16DB  0826               	movf	(___fladd@a+2)^(0+128),w
  7643     16DC  0222               	subwf	(___fladd@b+2)^(0+128),w
  7644     16DD  1D03               	skipz
  7645     16DE  2EE5               	goto	u5923
  7646     16DF  0825               	movf	(___fladd@a+1)^(0+128),w
  7647     16E0  0221               	subwf	(___fladd@b+1)^(0+128),w
  7648     16E1  1D03               	skipz
  7649     16E2  2EE5               	goto	u5923
  7650     16E3  0824               	movf	___fladd@a^(0+128),w
  7651     16E4  0220               	subwf	___fladd@b^(0+128),w
  7652     16E5                     u5923:
  7653     16E5  1803               	skipnc
  7654     16E6  2EE8               	goto	u5921
  7655     16E7  2EE9               	goto	u5920
  7656     16E8                     u5921:
  7657     16E8  2F41               	goto	l3681
  7658     16E9                     u5920:
  7659     16E9                     l3673:
  7660     16E9  30FF               	movlw	255
  7661     16EA  00A8               	movwf	??___fladd^(0+128)
  7662     16EB  30FF               	movlw	255
  7663     16EC  00A9               	movwf	(??___fladd^(0+128)+1)
  7664     16ED  30FF               	movlw	255
  7665     16EE  00AA               	movwf	(??___fladd^(0+128)+2)
  7666     16EF  30FF               	movlw	255
  7667     16F0  00AB               	movwf	(??___fladd^(0+128)+3)
  7668     16F1  0824               	movf	___fladd@a^(0+128),w
  7669     16F2  00AC               	movwf	(??___fladd+4)^(0+128)
  7670     16F3  0825               	movf	(___fladd@a+1)^(0+128),w
  7671     16F4  00AD               	movwf	((??___fladd+4)^(0+128)+1)
  7672     16F5  0826               	movf	(___fladd@a+2)^(0+128),w
  7673     16F6  00AE               	movwf	((??___fladd+4)^(0+128)+2)
  7674     16F7  0827               	movf	(___fladd@a+3)^(0+128),w
  7675     16F8  00AF               	movwf	((??___fladd+4)^(0+128)+3)
  7676     16F9  0820               	movf	___fladd@b^(0+128),w
  7677     16FA  02AC               	subwf	(??___fladd+4)^(0+128),f
  7678     16FB  0821               	movf	(___fladd@b+1)^(0+128),w
  7679     16FC  1C03               	skipc
  7680     16FD  0F21               	incfsz	(___fladd@b+1)^(0+128),w
  7681     16FE  2F00               	goto	u5931
  7682     16FF  2F01               	goto	u5932
  7683     1700                     u5931:
  7684     1700  02AD               	subwf	((??___fladd+4)^(0+128)+1),f
  7685     1701                     u5932:
  7686     1701  0822               	movf	(___fladd@b+2)^(0+128),w
  7687     1702  1C03               	skipc
  7688     1703  0F22               	incfsz	(___fladd@b+2)^(0+128),w
  7689     1704  2F06               	goto	u5933
  7690     1705  2F07               	goto	u5934
  7691     1706                     u5933:
  7692     1706  02AE               	subwf	((??___fladd+4)^(0+128)+2),f
  7693     1707                     u5934:
  7694     1707  0823               	movf	(___fladd@b+3)^(0+128),w
  7695     1708  1C03               	skipc
  7696     1709  0F23               	incfsz	(___fladd@b+3)^(0+128),w
  7697     170A  2F0C               	goto	u5935
  7698     170B  2F0D               	goto	u5936
  7699     170C                     u5935:
  7700     170C  02AF               	subwf	((??___fladd+4)^(0+128)+3),f
  7701     170D                     u5936:
  7702     170D  082C               	movf	(??___fladd+4)^(0+128),w
  7703     170E  07A8               	addwf	??___fladd^(0+128),f
  7704     170F  082D               	movf	(??___fladd+5)^(0+128),w
  7705     1710  1803               	skipnc
  7706     1711  0F2D               	incfsz	(??___fladd+5)^(0+128),w
  7707     1712  2F14               	goto	u5940
  7708     1713  2F15               	goto	u5941
  7709     1714                     u5940:
  7710     1714  07A9               	addwf	(??___fladd^(0+128)+1),f
  7711     1715                     u5941:
  7712     1715  082E               	movf	(??___fladd+6)^(0+128),w
  7713     1716  1803               	skipnc
  7714     1717  0F2E               	incfsz	(??___fladd+6)^(0+128),w
  7715     1718  2F1A               	goto	u5942
  7716     1719  2F1B               	goto	u5943
  7717     171A                     u5942:
  7718     171A  07AA               	addwf	(??___fladd^(0+128)+2),f
  7719     171B                     u5943:
  7720     171B  082F               	movf	(??___fladd+7)^(0+128),w
  7721     171C  1803               	skipnc
  7722     171D  0A2F               	incf	(??___fladd+7)^(0+128),w
  7723     171E  07AB               	addwf	(??___fladd^(0+128)+3),f
  7724     171F  082B               	movf	(??___fladd+3)^(0+128),w
  7725     1720  00A3               	movwf	(___fladd@b+3)^(0+128)
  7726     1721  082A               	movf	(??___fladd+2)^(0+128),w
  7727     1722  00A2               	movwf	(___fladd@b+2)^(0+128)
  7728     1723  0829               	movf	(??___fladd+1)^(0+128),w
  7729     1724  00A1               	movwf	(___fladd@b+1)^(0+128)
  7730     1725  0828               	movf	??___fladd^(0+128),w
  7731     1726  00A0               	movwf	___fladd@b^(0+128)
  7732     1727                     l3675:
  7733     1727  3080               	movlw	128
  7734     1728  00A8               	movwf	??___fladd^(0+128)
  7735     1729  0828               	movf	??___fladd^(0+128),w
  7736     172A  06B0               	xorwf	___fladd@signs^(0+128),f
  7737     172B  09B3               	comf	___fladd@grs^(0+128),f
  7738     172C  0AB3               	incf	___fladd@grs^(0+128),f
  7739     172D                     l3677:
  7740     172D  0833               	movf	___fladd@grs^(0+128),w
  7741     172E  1D03               	btfss	3,2
  7742     172F  2F31               	goto	u5951
  7743     1730  2F32               	goto	u5950
  7744     1731                     u5951:
  7745     1731  2F4F               	goto	l701
  7746     1732                     u5950:
  7747     1732                     l3679:
  7748     1732  3001               	movlw	1
  7749     1733  07A0               	addwf	___fladd@b^(0+128),f
  7750     1734  3000               	movlw	0
  7751     1735  1803               	skipnc
  7752     1736  3001               	movlw	1
  7753     1737  07A1               	addwf	(___fladd@b+1)^(0+128),f
  7754     1738  3000               	movlw	0
  7755     1739  1803               	skipnc
  7756     173A  3001               	movlw	1
  7757     173B  07A2               	addwf	(___fladd@b+2)^(0+128),f
  7758     173C  3000               	movlw	0
  7759     173D  1803               	skipnc
  7760     173E  3001               	movlw	1
  7761     173F  07A3               	addwf	(___fladd@b+3)^(0+128),f
  7762     1740  2F4F               	goto	l701
  7763     1741                     l3681:
  7764     1741  0824               	movf	___fladd@a^(0+128),w
  7765     1742  02A0               	subwf	___fladd@b^(0+128),f
  7766     1743  0825               	movf	(___fladd@a+1)^(0+128),w
  7767     1744  1C03               	skipc
  7768     1745  0F25               	incfsz	(___fladd@a+1)^(0+128),w
  7769     1746  02A1               	subwf	(___fladd@b+1)^(0+128),f
  7770     1747  0826               	movf	(___fladd@a+2)^(0+128),w
  7771     1748  1C03               	skipc
  7772     1749  0F26               	incfsz	(___fladd@a+2)^(0+128),w
  7773     174A  02A2               	subwf	(___fladd@b+2)^(0+128),f
  7774     174B  0827               	movf	(___fladd@a+3)^(0+128),w
  7775     174C  1C03               	skipc
  7776     174D  0F27               	incfsz	(___fladd@a+3)^(0+128),w
  7777     174E  02A3               	subwf	(___fladd@b+3)^(0+128),f
  7778     174F                     l701:
  7779     174F  0823               	movf	(___fladd@b+3)^(0+128),w
  7780     1750  0422               	iorwf	(___fladd@b+2)^(0+128),w
  7781     1751  0421               	iorwf	(___fladd@b+1)^(0+128),w
  7782     1752  0420               	iorwf	___fladd@b^(0+128),w
  7783     1753  1D03               	skipz
  7784     1754  2F56               	goto	u5961
  7785     1755  2F57               	goto	u5960
  7786     1756                     u5961:
  7787     1756  2F83               	goto	l3703
  7788     1757                     u5960:
  7789     1757                     l3683:
  7790     1757  0833               	movf	___fladd@grs^(0+128),w
  7791     1758  1D03               	btfss	3,2
  7792     1759  2F5B               	goto	u5971
  7793     175A  2F5C               	goto	u5970
  7794     175B                     u5971:
  7795     175B  2F83               	goto	l3703
  7796     175C                     u5970:
  7797     175C                     l3685:
  7798     175C  3000               	movlw	0
  7799     175D  00A3               	movwf	(?___fladd+3)^(0+128)
  7800     175E  3000               	movlw	0
  7801     175F  00A2               	movwf	(?___fladd+2)^(0+128)
  7802     1760  3000               	movlw	0
  7803     1761  00A1               	movwf	(?___fladd+1)^(0+128)
  7804     1762  3000               	movlw	0
  7805     1763  00A0               	movwf	?___fladd^(0+128)
  7806     1764  2FFF               	goto	l693
  7807     1765                     l3689:
  7808     1765  3001               	movlw	1
  7809     1766  00A8               	movwf	??___fladd^(0+128)
  7810     1767                     u5985:
  7811     1767  1003               	clrc
  7812     1768  0DA0               	rlf	___fladd@b^(0+128),f
  7813     1769  0DA1               	rlf	(___fladd@b+1)^(0+128),f
  7814     176A  0DA2               	rlf	(___fladd@b+2)^(0+128),f
  7815     176B  0DA3               	rlf	(___fladd@b+3)^(0+128),f
  7816     176C  0BA8               	decfsz	??___fladd^(0+128),f
  7817     176D  2F67               	goto	u5985
  7818     176E                     l3691:
  7819     176E  1FB3               	btfss	___fladd@grs^(0+128),7
  7820     176F  2F71               	goto	u5991
  7821     1770  2F72               	goto	u5990
  7822     1771                     u5991:
  7823     1771  2F73               	goto	l705
  7824     1772                     u5990:
  7825     1772                     l3693:
  7826     1772  1420               	bsf	___fladd@b^(0+128),0
  7827     1773                     l705:
  7828     1773  1C33               	btfss	___fladd@grs^(0+128),0
  7829     1774  2F76               	goto	u6001
  7830     1775  2F77               	goto	u6000
  7831     1776                     u6001:
  7832     1776  2F7A               	goto	l3697
  7833     1777                     u6000:
  7834     1777                     l3695:
  7835     1777  1403               	setc
  7836     1778  0DB3               	rlf	___fladd@grs^(0+128),f
  7837     1779  2F7C               	goto	l3699
  7838     177A                     l3697:
  7839     177A  1003               	clrc
  7840     177B  0DB3               	rlf	___fladd@grs^(0+128),f
  7841     177C                     l3699:
  7842     177C  0832               	movf	___fladd@bexp^(0+128),w
  7843     177D  1903               	btfsc	3,2
  7844     177E  2F80               	goto	u6011
  7845     177F  2F81               	goto	u6010
  7846     1780                     u6011:
  7847     1780  2F83               	goto	l3703
  7848     1781                     u6010:
  7849     1781                     l3701:
  7850     1781  3001               	movlw	1
  7851     1782  02B2               	subwf	___fladd@bexp^(0+128),f
  7852     1783                     l3703:
  7853     1783  1FA2               	btfss	(___fladd@b+2)^(0+128),7
  7854     1784  2F86               	goto	u6021
  7855     1785  2F87               	goto	u6020
  7856     1786                     u6021:
  7857     1786  2F65               	goto	l3689
  7858     1787                     u6020:
  7859     1787                     l3705:
  7860     1787  01B1               	clrf	___fladd@aexp^(0+128)
  7861     1788                     l3707:
  7862     1788  1FB3               	btfss	___fladd@grs^(0+128),7
  7863     1789  2F8B               	goto	u6031
  7864     178A  2F8C               	goto	u6030
  7865     178B                     u6031:
  7866     178B  2F9A               	goto	l3715
  7867     178C                     u6030:
  7868     178C                     l3709:
  7869     178C  0833               	movf	___fladd@grs^(0+128),w
  7870     178D  397F               	andlw	127
  7871     178E  1903               	btfsc	3,2
  7872     178F  2F91               	goto	u6041
  7873     1790  2F92               	goto	u6040
  7874     1791                     u6041:
  7875     1791  2F95               	goto	l711
  7876     1792                     u6040:
  7877     1792                     l3711:
  7878     1792  01B1               	clrf	___fladd@aexp^(0+128)
  7879     1793  0AB1               	incf	___fladd@aexp^(0+128),f
  7880     1794  2F9A               	goto	l3715
  7881     1795                     l711:
  7882     1795  1C20               	btfss	___fladd@b^(0+128),0
  7883     1796  2F98               	goto	u6051
  7884     1797  2F99               	goto	u6050
  7885     1798                     u6051:
  7886     1798  2F9A               	goto	l3715
  7887     1799                     u6050:
  7888     1799  2F92               	goto	l3711
  7889     179A                     l3715:
  7890     179A  0831               	movf	___fladd@aexp^(0+128),w
  7891     179B  1903               	btfsc	3,2
  7892     179C  2F9E               	goto	u6061
  7893     179D  2F9F               	goto	u6060
  7894     179E                     u6061:
  7895     179E  2FD3               	goto	l714
  7896     179F                     u6060:
  7897     179F                     l3717:
  7898     179F  3001               	movlw	1
  7899     17A0  07A0               	addwf	___fladd@b^(0+128),f
  7900     17A1  3000               	movlw	0
  7901     17A2  1803               	skipnc
  7902     17A3  3001               	movlw	1
  7903     17A4  07A1               	addwf	(___fladd@b+1)^(0+128),f
  7904     17A5  3000               	movlw	0
  7905     17A6  1803               	skipnc
  7906     17A7  3001               	movlw	1
  7907     17A8  07A2               	addwf	(___fladd@b+2)^(0+128),f
  7908     17A9  3000               	movlw	0
  7909     17AA  1803               	skipnc
  7910     17AB  3001               	movlw	1
  7911     17AC  07A3               	addwf	(___fladd@b+3)^(0+128),f
  7912     17AD                     l3719:
  7913     17AD  1C23               	btfss	(___fladd@b+3)^(0+128),0
  7914     17AE  2FB0               	goto	u6071
  7915     17AF  2FB1               	goto	u6070
  7916     17B0                     u6071:
  7917     17B0  2FD3               	goto	l714
  7918     17B1                     u6070:
  7919     17B1                     l3721:
  7920     17B1  0820               	movf	___fladd@b^(0+128),w
  7921     17B2  00A8               	movwf	??___fladd^(0+128)
  7922     17B3  0821               	movf	(___fladd@b+1)^(0+128),w
  7923     17B4  00A9               	movwf	(??___fladd^(0+128)+1)
  7924     17B5  0822               	movf	(___fladd@b+2)^(0+128),w
  7925     17B6  00AA               	movwf	(??___fladd^(0+128)+2)
  7926     17B7  0823               	movf	(___fladd@b+3)^(0+128),w
  7927     17B8  00AB               	movwf	(??___fladd^(0+128)+3)
  7928     17B9  3001               	movlw	1
  7929     17BA  00AC               	movwf	(??___fladd+4)^(0+128)
  7930     17BB                     u6085:
  7931     17BB  0D2B               	rlf	(??___fladd^(0+128)+3),w
  7932     17BC  0CAB               	rrf	(??___fladd^(0+128)+3),f
  7933     17BD  0CAA               	rrf	(??___fladd^(0+128)+2),f
  7934     17BE  0CA9               	rrf	(??___fladd^(0+128)+1),f
  7935     17BF  0CA8               	rrf	??___fladd^(0+128),f
  7936     17C0                     u6080:
  7937     17C0  0BAC               	decfsz	(??___fladd+4)^(0+128),f
  7938     17C1  2FBB               	goto	u6085
  7939     17C2  082B               	movf	(??___fladd+3)^(0+128),w
  7940     17C3  00A3               	movwf	(___fladd@b+3)^(0+128)
  7941     17C4  082A               	movf	(??___fladd+2)^(0+128),w
  7942     17C5  00A2               	movwf	(___fladd@b+2)^(0+128)
  7943     17C6  0829               	movf	(??___fladd+1)^(0+128),w
  7944     17C7  00A1               	movwf	(___fladd@b+1)^(0+128)
  7945     17C8  0828               	movf	??___fladd^(0+128),w
  7946     17C9  00A0               	movwf	___fladd@b^(0+128)
  7947     17CA  0A32               	incf	___fladd@bexp^(0+128),w
  7948     17CB  1903               	btfsc	3,2
  7949     17CC  2FCE               	goto	u6091
  7950     17CD  2FCF               	goto	u6090
  7951     17CE                     u6091:
  7952     17CE  2FD3               	goto	l714
  7953     17CF                     u6090:
  7954     17CF                     l3723:
  7955     17CF  3001               	movlw	1
  7956     17D0  00A8               	movwf	??___fladd^(0+128)
  7957     17D1  0828               	movf	??___fladd^(0+128),w
  7958     17D2  07B2               	addwf	___fladd@bexp^(0+128),f
  7959     17D3                     l714:
  7960     17D3  0A32               	incf	___fladd@bexp^(0+128),w
  7961     17D4  1903               	btfsc	3,2
  7962     17D5  2FD7               	goto	u6101
  7963     17D6  2FD8               	goto	u6100
  7964     17D7                     u6101:
  7965     17D7  2FDD               	goto	l3727
  7966     17D8                     u6100:
  7967     17D8                     l3725:
  7968     17D8  0832               	movf	___fladd@bexp^(0+128),w
  7969     17D9  1D03               	btfss	3,2
  7970     17DA  2FDC               	goto	u6111
  7971     17DB  2FDD               	goto	u6110
  7972     17DC                     u6111:
  7973     17DC  2FEB               	goto	l3733
  7974     17DD                     u6110:
  7975     17DD                     l3727:
  7976     17DD  3000               	movlw	0
  7977     17DE  00A3               	movwf	(___fladd@b+3)^(0+128)
  7978     17DF  3000               	movlw	0
  7979     17E0  00A2               	movwf	(___fladd@b+2)^(0+128)
  7980     17E1  3000               	movlw	0
  7981     17E2  00A1               	movwf	(___fladd@b+1)^(0+128)
  7982     17E3  3000               	movlw	0
  7983     17E4  00A0               	movwf	___fladd@b^(0+128)
  7984     17E5                     l3729:
  7985     17E5  0832               	movf	___fladd@bexp^(0+128),w
  7986     17E6  1D03               	btfss	3,2
  7987     17E7  2FE9               	goto	u6121
  7988     17E8  2FEA               	goto	u6120
  7989     17E9                     u6121:
  7990     17E9  2FEB               	goto	l3733
  7991     17EA                     u6120:
  7992     17EA                     l3731:
  7993     17EA  01B0               	clrf	___fladd@signs^(0+128)
  7994     17EB                     l3733:
  7995     17EB  1C32               	btfss	___fladd@bexp^(0+128),0
  7996     17EC  2FEE               	goto	u6131
  7997     17ED  2FEF               	goto	u6130
  7998     17EE                     u6131:
  7999     17EE  2FF1               	goto	l3737
  8000     17EF                     u6130:
  8001     17EF                     l3735:
  8002     17EF  17A2               	bsf	(___fladd@b^(0+128)+2),7
  8003     17F0  2FF5               	goto	l722
  8004     17F1                     l3737:
  8005     17F1  307F               	movlw	127
  8006     17F2  00A8               	movwf	??___fladd^(0+128)
  8007     17F3  0828               	movf	??___fladd^(0+128),w
  8008     17F4  05A2               	andwf	(___fladd@b^(0+128)+2),f
  8009     17F5                     l722:
  8010     17F5  0832               	movf	___fladd@bexp^(0+128),w
  8011     17F6  00A8               	movwf	??___fladd^(0+128)
  8012     17F7  1003               	clrc
  8013     17F8  0C28               	rrf	??___fladd^(0+128),w
  8014     17F9  00A3               	movwf	(___fladd@b^(0+128)+3)
  8015     17FA                     l3739:
  8016     17FA  1FB0               	btfss	___fladd@signs^(0+128),7
  8017     17FB  2FFD               	goto	u6141
  8018     17FC  2FFE               	goto	u6140
  8019     17FD                     u6141:
  8020     17FD  2FFF               	goto	l723
  8021     17FE                     u6140:
  8022     17FE                     l3741:
  8023     17FE  17A3               	bsf	(___fladd@b^(0+128)+3),7
  8024     17FF                     l723:
  8025     17FF                     l693:
  8026     17FF  0008               	return
  8027     1800                     __end_of___fladd:
  8028                           
  8029                           	psect	text15
  8030     1BA2                     __ptext15:	
  8031 ;; *************** function ___flneg *****************
  8032 ;; Defined at:
  8033 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flneg.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  f1              4    6[BANK0 ] unsigned char 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  4    6[BANK0 ] unsigned char 
  8040 ;; Registers used:
  8041 ;;		wreg
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8047 ;;      Params:         0       4       0       0       0
  8048 ;;      Locals:         0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0
  8050 ;;      Totals:         0       4       0       0       0
  8051 ;;Total ram usage:        4 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 2
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_sprintf
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061     1BA2                     ___flneg:	
  8062                           ;psect for function ___flneg
  8063                           
  8064     1BA2                     l3009:	
  8065                           ;incstack = 0
  8066                           ; Regs used in ___flneg: [wreg]
  8067                           
  8068     1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  8069     1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  8070     1BA4  0829               	movf	___flneg@f1+3,w
  8071     1BA5  0428               	iorwf	___flneg@f1+2,w
  8072     1BA6  0427               	iorwf	___flneg@f1+1,w
  8073     1BA7  0426               	iorwf	___flneg@f1,w
  8074     1BA8  1903               	skipnz
  8075     1BA9  2BAB               	goto	u4801
  8076     1BAA  2BAC               	goto	u4800
  8077     1BAB                     u4801:
  8078     1BAB  2BAE               	goto	l3013
  8079     1BAC                     u4800:
  8080     1BAC                     l3011:
  8081     1BAC  3080               	movlw	128
  8082     1BAD  06A9               	xorwf	___flneg@f1+3,f
  8083     1BAE                     l3013:
  8084     1BAE                     l552:
  8085     1BAE  0008               	return
  8086     1BAF                     __end_of___flneg:
  8087                           
  8088                           	psect	text16
  8089     10D0                     __ptext16:	
  8090 ;; *************** function ___flge *****************
  8091 ;; Defined at:
  8092 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\flge.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  ff1             4    6[BANK0 ] unsigned char 
  8095 ;;  ff2             4   10[BANK0 ] unsigned char 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;		None               void
  8100 ;; Registers used:
  8101 ;;		wreg, status,2, status,0
  8102 ;; Tracked objects:
  8103 ;;		On entry : 0/0
  8104 ;;		On exit  : 0/0
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8107 ;;      Params:         0       8       0       0       0
  8108 ;;      Locals:         0       0       0       0       0
  8109 ;;      Temps:          0       4       0       0       0
  8110 ;;      Totals:         0      12       0       0       0
  8111 ;;Total ram usage:       12 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 2
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_sprintf
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121     10D0                     ___flge:	
  8122                           ;psect for function ___flge
  8123                           
  8124     10D0                     l2989:	
  8125                           ;incstack = 0
  8126                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8127                           
  8128     10D0  3000               	movlw	0
  8129     10D1  1283               	bcf	3,5	;RP0=0, select bank0
  8130     10D2  1303               	bcf	3,6	;RP1=0, select bank0
  8131     10D3  0526               	andwf	___flge@ff1,w
  8132     10D4  00AE               	movwf	??___flge
  8133     10D5  3000               	movlw	0
  8134     10D6  0527               	andwf	___flge@ff1+1,w
  8135     10D7  00AF               	movwf	??___flge+1
  8136     10D8  3080               	movlw	128
  8137     10D9  0528               	andwf	___flge@ff1+2,w
  8138     10DA  00B0               	movwf	??___flge+2
  8139     10DB  307F               	movlw	127
  8140     10DC  0529               	andwf	___flge@ff1+3,w
  8141     10DD  00B1               	movwf	??___flge+3
  8142     10DE  0831               	movf	??___flge+3,w
  8143     10DF  0430               	iorwf	??___flge+2,w
  8144     10E0  042F               	iorwf	??___flge+1,w
  8145     10E1  042E               	iorwf	??___flge,w
  8146     10E2  1D03               	skipz
  8147     10E3  28E5               	goto	u4731
  8148     10E4  28E6               	goto	u4730
  8149     10E5                     u4731:
  8150     10E5  28EE               	goto	l544
  8151     10E6                     u4730:
  8152     10E6                     l2991:
  8153     10E6  3000               	movlw	0
  8154     10E7  00A9               	movwf	___flge@ff1+3
  8155     10E8  3000               	movlw	0
  8156     10E9  00A8               	movwf	___flge@ff1+2
  8157     10EA  3000               	movlw	0
  8158     10EB  00A7               	movwf	___flge@ff1+1
  8159     10EC  3000               	movlw	0
  8160     10ED  00A6               	movwf	___flge@ff1
  8161     10EE                     l544:
  8162     10EE  3000               	movlw	0
  8163     10EF  052A               	andwf	___flge@ff2,w
  8164     10F0  00AE               	movwf	??___flge
  8165     10F1  3000               	movlw	0
  8166     10F2  052B               	andwf	___flge@ff2+1,w
  8167     10F3  00AF               	movwf	??___flge+1
  8168     10F4  3080               	movlw	128
  8169     10F5  052C               	andwf	___flge@ff2+2,w
  8170     10F6  00B0               	movwf	??___flge+2
  8171     10F7  307F               	movlw	127
  8172     10F8  052D               	andwf	___flge@ff2+3,w
  8173     10F9  00B1               	movwf	??___flge+3
  8174     10FA  0831               	movf	??___flge+3,w
  8175     10FB  0430               	iorwf	??___flge+2,w
  8176     10FC  042F               	iorwf	??___flge+1,w
  8177     10FD  042E               	iorwf	??___flge,w
  8178     10FE  1D03               	skipz
  8179     10FF  2901               	goto	u4741
  8180     1100  2902               	goto	u4740
  8181     1101                     u4741:
  8182     1101  290A               	goto	l2995
  8183     1102                     u4740:
  8184     1102                     l2993:
  8185     1102  3000               	movlw	0
  8186     1103  00AD               	movwf	___flge@ff2+3
  8187     1104  3000               	movlw	0
  8188     1105  00AC               	movwf	___flge@ff2+2
  8189     1106  3000               	movlw	0
  8190     1107  00AB               	movwf	___flge@ff2+1
  8191     1108  3000               	movlw	0
  8192     1109  00AA               	movwf	___flge@ff2
  8193     110A                     l2995:
  8194     110A  1FA9               	btfss	___flge@ff1+3,7
  8195     110B  290D               	goto	u4751
  8196     110C  290E               	goto	u4750
  8197     110D                     u4751:
  8198     110D  2932               	goto	l2999
  8199     110E                     u4750:
  8200     110E                     l2997:
  8201     110E  3000               	movlw	0
  8202     110F  00AE               	movwf	??___flge
  8203     1110  3000               	movlw	0
  8204     1111  00AF               	movwf	??___flge+1
  8205     1112  3000               	movlw	0
  8206     1113  00B0               	movwf	??___flge+2
  8207     1114  3080               	movlw	128
  8208     1115  00B1               	movwf	??___flge+3
  8209     1116  0826               	movf	___flge@ff1,w
  8210     1117  02AE               	subwf	??___flge,f
  8211     1118  0827               	movf	___flge@ff1+1,w
  8212     1119  1C03               	skipc
  8213     111A  0F27               	incfsz	___flge@ff1+1,w
  8214     111B  291D               	goto	u4761
  8215     111C  291E               	goto	u4762
  8216     111D                     u4761:
  8217     111D  02AF               	subwf	??___flge+1,f
  8218     111E                     u4762:
  8219     111E  0828               	movf	___flge@ff1+2,w
  8220     111F  1C03               	skipc
  8221     1120  0F28               	incfsz	___flge@ff1+2,w
  8222     1121  2923               	goto	u4763
  8223     1122  2924               	goto	u4764
  8224     1123                     u4763:
  8225     1123  02B0               	subwf	??___flge+2,f
  8226     1124                     u4764:
  8227     1124  0829               	movf	___flge@ff1+3,w
  8228     1125  1C03               	skipc
  8229     1126  0F29               	incfsz	___flge@ff1+3,w
  8230     1127  2929               	goto	u4765
  8231     1128  292A               	goto	u4766
  8232     1129                     u4765:
  8233     1129  02B1               	subwf	??___flge+3,f
  8234     112A                     u4766:
  8235     112A  0831               	movf	??___flge+3,w
  8236     112B  00A9               	movwf	___flge@ff1+3
  8237     112C  0830               	movf	??___flge+2,w
  8238     112D  00A8               	movwf	___flge@ff1+2
  8239     112E  082F               	movf	??___flge+1,w
  8240     112F  00A7               	movwf	___flge@ff1+1
  8241     1130  082E               	movf	??___flge,w
  8242     1131  00A6               	movwf	___flge@ff1
  8243     1132                     l2999:
  8244     1132  1FAD               	btfss	___flge@ff2+3,7
  8245     1133  2935               	goto	u4771
  8246     1134  2936               	goto	u4770
  8247     1135                     u4771:
  8248     1135  295A               	goto	l547
  8249     1136                     u4770:
  8250     1136                     l3001:
  8251     1136  3000               	movlw	0
  8252     1137  00AE               	movwf	??___flge
  8253     1138  3000               	movlw	0
  8254     1139  00AF               	movwf	??___flge+1
  8255     113A  3000               	movlw	0
  8256     113B  00B0               	movwf	??___flge+2
  8257     113C  3080               	movlw	128
  8258     113D  00B1               	movwf	??___flge+3
  8259     113E  082A               	movf	___flge@ff2,w
  8260     113F  02AE               	subwf	??___flge,f
  8261     1140  082B               	movf	___flge@ff2+1,w
  8262     1141  1C03               	skipc
  8263     1142  0F2B               	incfsz	___flge@ff2+1,w
  8264     1143  2945               	goto	u4781
  8265     1144  2946               	goto	u4782
  8266     1145                     u4781:
  8267     1145  02AF               	subwf	??___flge+1,f
  8268     1146                     u4782:
  8269     1146  082C               	movf	___flge@ff2+2,w
  8270     1147  1C03               	skipc
  8271     1148  0F2C               	incfsz	___flge@ff2+2,w
  8272     1149  294B               	goto	u4783
  8273     114A  294C               	goto	u4784
  8274     114B                     u4783:
  8275     114B  02B0               	subwf	??___flge+2,f
  8276     114C                     u4784:
  8277     114C  082D               	movf	___flge@ff2+3,w
  8278     114D  1C03               	skipc
  8279     114E  0F2D               	incfsz	___flge@ff2+3,w
  8280     114F  2951               	goto	u4785
  8281     1150  2952               	goto	u4786
  8282     1151                     u4785:
  8283     1151  02B1               	subwf	??___flge+3,f
  8284     1152                     u4786:
  8285     1152  0831               	movf	??___flge+3,w
  8286     1153  00AD               	movwf	___flge@ff2+3
  8287     1154  0830               	movf	??___flge+2,w
  8288     1155  00AC               	movwf	___flge@ff2+2
  8289     1156  082F               	movf	??___flge+1,w
  8290     1157  00AB               	movwf	___flge@ff2+1
  8291     1158  082E               	movf	??___flge,w
  8292     1159  00AA               	movwf	___flge@ff2
  8293     115A                     l547:
  8294     115A  3080               	movlw	128
  8295     115B  06A9               	xorwf	___flge@ff1+3,f
  8296     115C  3080               	movlw	128
  8297     115D  06AD               	xorwf	___flge@ff2+3,f
  8298     115E  082D               	movf	___flge@ff2+3,w
  8299     115F  0229               	subwf	___flge@ff1+3,w
  8300     1160  1D03               	skipz
  8301     1161  296C               	goto	u4795
  8302     1162  082C               	movf	___flge@ff2+2,w
  8303     1163  0228               	subwf	___flge@ff1+2,w
  8304     1164  1D03               	skipz
  8305     1165  296C               	goto	u4795
  8306     1166  082B               	movf	___flge@ff2+1,w
  8307     1167  0227               	subwf	___flge@ff1+1,w
  8308     1168  1D03               	skipz
  8309     1169  296C               	goto	u4795
  8310     116A  082A               	movf	___flge@ff2,w
  8311     116B  0226               	subwf	___flge@ff1,w
  8312     116C                     u4795:
  8313     116C  1803               	skipnc
  8314     116D  296F               	goto	u4791
  8315     116E  2970               	goto	u4790
  8316     116F                     u4791:
  8317     116F  2972               	goto	l3005
  8318     1170                     u4790:
  8319     1170                     l3003:
  8320     1170  1003               	clrc
  8321     1171  2973               	goto	l548
  8322     1172                     l3005:
  8323     1172  1403               	setc
  8324     1173                     l548:
  8325     1173  0008               	return
  8326     1174                     __end_of___flge:
  8327                           
  8328                           	psect	text17
  8329     1CEA                     __ptext17:	
  8330 ;; *************** function ___fleq *****************
  8331 ;; Defined at:
  8332 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fleq.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  ff1             4    6[BANK0 ] unsigned char 
  8335 ;;  ff2             4   10[BANK0 ] unsigned char 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;		None               void
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8347 ;;      Params:         0       8       0       0       0
  8348 ;;      Locals:         0       0       0       0       0
  8349 ;;      Temps:          0       4       0       0       0
  8350 ;;      Totals:         0      12       0       0       0
  8351 ;;Total ram usage:       12 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 2
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_sprintf
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361     1CEA                     ___fleq:	
  8362                           ;psect for function ___fleq
  8363                           
  8364     1CEA                     l2977:	
  8365                           ;incstack = 0
  8366                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8367                           
  8368     1CEA  3000               	movlw	0
  8369     1CEB  1283               	bcf	3,5	;RP0=0, select bank0
  8370     1CEC  1303               	bcf	3,6	;RP1=0, select bank0
  8371     1CED  0526               	andwf	___fleq@ff1,w
  8372     1CEE  00AE               	movwf	??___fleq
  8373     1CEF  3000               	movlw	0
  8374     1CF0  0527               	andwf	___fleq@ff1+1,w
  8375     1CF1  00AF               	movwf	??___fleq+1
  8376     1CF2  3080               	movlw	128
  8377     1CF3  0528               	andwf	___fleq@ff1+2,w
  8378     1CF4  00B0               	movwf	??___fleq+2
  8379     1CF5  307F               	movlw	127
  8380     1CF6  0529               	andwf	___fleq@ff1+3,w
  8381     1CF7  00B1               	movwf	??___fleq+3
  8382     1CF8  0831               	movf	??___fleq+3,w
  8383     1CF9  0430               	iorwf	??___fleq+2,w
  8384     1CFA  042F               	iorwf	??___fleq+1,w
  8385     1CFB  042E               	iorwf	??___fleq,w
  8386     1CFC  1D03               	skipz
  8387     1CFD  2CFF               	goto	u4701
  8388     1CFE  2D00               	goto	u4700
  8389     1CFF                     u4701:
  8390     1CFF  2D08               	goto	l539
  8391     1D00                     u4700:
  8392     1D00                     l2979:
  8393     1D00  3000               	movlw	0
  8394     1D01  00A9               	movwf	___fleq@ff1+3
  8395     1D02  3000               	movlw	0
  8396     1D03  00A8               	movwf	___fleq@ff1+2
  8397     1D04  3000               	movlw	0
  8398     1D05  00A7               	movwf	___fleq@ff1+1
  8399     1D06  3000               	movlw	0
  8400     1D07  00A6               	movwf	___fleq@ff1
  8401     1D08                     l539:
  8402     1D08  3000               	movlw	0
  8403     1D09  052A               	andwf	___fleq@ff2,w
  8404     1D0A  00AE               	movwf	??___fleq
  8405     1D0B  3000               	movlw	0
  8406     1D0C  052B               	andwf	___fleq@ff2+1,w
  8407     1D0D  00AF               	movwf	??___fleq+1
  8408     1D0E  3080               	movlw	128
  8409     1D0F  052C               	andwf	___fleq@ff2+2,w
  8410     1D10  00B0               	movwf	??___fleq+2
  8411     1D11  307F               	movlw	127
  8412     1D12  052D               	andwf	___fleq@ff2+3,w
  8413     1D13  00B1               	movwf	??___fleq+3
  8414     1D14  0831               	movf	??___fleq+3,w
  8415     1D15  0430               	iorwf	??___fleq+2,w
  8416     1D16  042F               	iorwf	??___fleq+1,w
  8417     1D17  042E               	iorwf	??___fleq,w
  8418     1D18  1D03               	skipz
  8419     1D19  2D1B               	goto	u4711
  8420     1D1A  2D1C               	goto	u4710
  8421     1D1B                     u4711:
  8422     1D1B  2D24               	goto	l540
  8423     1D1C                     u4710:
  8424     1D1C                     l2981:
  8425     1D1C  3000               	movlw	0
  8426     1D1D  00AD               	movwf	___fleq@ff2+3
  8427     1D1E  3000               	movlw	0
  8428     1D1F  00AC               	movwf	___fleq@ff2+2
  8429     1D20  3000               	movlw	0
  8430     1D21  00AB               	movwf	___fleq@ff2+1
  8431     1D22  3000               	movlw	0
  8432     1D23  00AA               	movwf	___fleq@ff2
  8433     1D24                     l540:
  8434     1D24  082D               	movf	___fleq@ff2+3,w
  8435     1D25  0629               	xorwf	___fleq@ff1+3,w
  8436     1D26  1D03               	skipz
  8437     1D27  2D32               	goto	u4725
  8438     1D28  082C               	movf	___fleq@ff2+2,w
  8439     1D29  0628               	xorwf	___fleq@ff1+2,w
  8440     1D2A  1D03               	skipz
  8441     1D2B  2D32               	goto	u4725
  8442     1D2C  082B               	movf	___fleq@ff2+1,w
  8443     1D2D  0627               	xorwf	___fleq@ff1+1,w
  8444     1D2E  1D03               	skipz
  8445     1D2F  2D32               	goto	u4725
  8446     1D30  082A               	movf	___fleq@ff2,w
  8447     1D31  0626               	xorwf	___fleq@ff1,w
  8448     1D32                     u4725:
  8449     1D32  1903               	skipnz
  8450     1D33  2D35               	goto	u4721
  8451     1D34  2D36               	goto	u4720
  8452     1D35                     u4721:
  8453     1D35  2D38               	goto	l2985
  8454     1D36                     u4720:
  8455     1D36                     l2983:
  8456     1D36  1003               	clrc
  8457     1D37  2D39               	goto	l541
  8458     1D38                     l2985:
  8459     1D38  1403               	setc
  8460     1D39                     l541:
  8461     1D39  0008               	return
  8462     1D3A                     __end_of___fleq:
  8463                           
  8464                           	psect	text18
  8465     1C2F                     __ptext18:	
  8466 ;; *************** function _setup *****************
  8467 ;; Defined at:
  8468 ;;		line 96 in file "Lab2.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8482 ;;      Params:         0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0
  8484 ;;      Temps:          0       1       0       0       0
  8485 ;;      Totals:         0       1       0       0       0
  8486 ;;Total ram usage:        1 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; Hardware stack levels required when called: 2
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_main
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496     1C2F                     _setup:	
  8497                           ;psect for function _setup
  8498                           
  8499     1C2F                     l3151:	
  8500                           ;incstack = 0
  8501                           ; Regs used in _setup: [wreg+status,2+status,0]
  8502                           
  8503                           
  8504                           ;Lab2.c: 97:     ANSEL = 0b00000011;
  8505     1C2F  3003               	movlw	3
  8506     1C30  1683               	bsf	3,5	;RP0=1, select bank3
  8507     1C31  1703               	bsf	3,6	;RP1=1, select bank3
  8508     1C32  0088               	movwf	8	;volatile
  8509     1C33                     l3153:
  8510                           
  8511                           ;Lab2.c: 98:     ANSELH = 0;
  8512     1C33  0189               	clrf	9	;volatile
  8513     1C34                     l3155:
  8514                           
  8515                           ;Lab2.c: 100:     TRISA = 0xFF;
  8516     1C34  30FF               	movlw	255
  8517     1C35  1683               	bsf	3,5	;RP0=1, select bank1
  8518     1C36  1303               	bcf	3,6	;RP1=0, select bank1
  8519     1C37  0085               	movwf	5	;volatile
  8520     1C38                     l3157:
  8521                           
  8522                           ;Lab2.c: 101:     TRISB = 0b11111111;
  8523     1C38  30FF               	movlw	255
  8524     1C39  0086               	movwf	6	;volatile
  8525     1C3A                     l3159:
  8526                           
  8527                           ;Lab2.c: 102:     TRISC = 0;
  8528     1C3A  0187               	clrf	7	;volatile
  8529     1C3B                     l3161:
  8530                           
  8531                           ;Lab2.c: 103:     TRISD = 0;
  8532     1C3B  0188               	clrf	8	;volatile
  8533     1C3C                     l3163:
  8534                           
  8535                           ;Lab2.c: 104:     TRISE = 0;
  8536     1C3C  0189               	clrf	9	;volatile
  8537     1C3D                     l3165:
  8538                           
  8539                           ;Lab2.c: 105:     OPTION_REGbits.nRBPU = 0;
  8540     1C3D  1381               	bcf	1,7	;volatile
  8541                           
  8542                           ;Lab2.c: 106:     WPUB = 0b111111;
  8543     1C3E  303F               	movlw	63
  8544     1C3F  0095               	movwf	21	;volatile
  8545     1C40                     l3167:
  8546                           
  8547                           ;Lab2.c: 109:     PORTD = 0;
  8548     1C40  1283               	bcf	3,5	;RP0=0, select bank0
  8549     1C41  1303               	bcf	3,6	;RP1=0, select bank0
  8550     1C42  0188               	clrf	8	;volatile
  8551     1C43                     l3169:
  8552                           
  8553                           ;Lab2.c: 110:     PORTE = 0;
  8554     1C43  0189               	clrf	9	;volatile
  8555     1C44                     l3171:
  8556                           
  8557                           ;Lab2.c: 111:    PORTC = 0;
  8558     1C44  0187               	clrf	7	;volatile
  8559     1C45                     l3173:
  8560                           
  8561                           ;Lab2.c: 116:     OSCCONbits.IRCF = 0b0111;
  8562     1C45  3070               	movlw	112
  8563     1C46  1683               	bsf	3,5	;RP0=1, select bank1
  8564     1C47  1303               	bcf	3,6	;RP1=0, select bank1
  8565     1C48  048F               	iorwf	15,f	;volatile
  8566     1C49                     l3175:
  8567                           
  8568                           ;Lab2.c: 117:     OSCCONbits.SCS = 1;
  8569     1C49  140F               	bsf	15,0	;volatile
  8570     1C4A                     l3177:
  8571                           
  8572                           ;Lab2.c: 120:     ADCON1bits.ADFM = 0;
  8573     1C4A  139F               	bcf	31,7	;volatile
  8574     1C4B                     l3179:
  8575                           
  8576                           ;Lab2.c: 121:     ADCON1bits.VCFG0 = 0;
  8577     1C4B  121F               	bcf	31,4	;volatile
  8578     1C4C                     l3181:
  8579                           
  8580                           ;Lab2.c: 122:     ADCON1bits.VCFG1 = 0;
  8581     1C4C  129F               	bcf	31,5	;volatile
  8582     1C4D                     l3183:
  8583                           
  8584                           ;Lab2.c: 124:     ADCON0bits.ADCS = 0b01;
  8585     1C4D  1283               	bcf	3,5	;RP0=0, select bank0
  8586     1C4E  1303               	bcf	3,6	;RP1=0, select bank0
  8587     1C4F  081F               	movf	31,w	;volatile
  8588     1C50  393F               	andlw	-193
  8589     1C51  3840               	iorlw	64
  8590     1C52  009F               	movwf	31	;volatile
  8591     1C53                     l3185:
  8592                           
  8593                           ;Lab2.c: 125:     ADCON0bits.CHS = 0;
  8594     1C53  30C3               	movlw	-61
  8595     1C54  059F               	andwf	31,f	;volatile
  8596     1C55                     l3187:
  8597                           
  8598                           ;Lab2.c: 126:     ADCON0bits.ADON= 1;
  8599     1C55  141F               	bsf	31,0	;volatile
  8600     1C56                     l3189:
  8601                           
  8602                           ;Lab2.c: 127:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  8603     1C56  3020               	movlw	32
  8604     1C57  1283               	bcf	3,5	;RP0=0, select bank0
  8605     1C58  1303               	bcf	3,6	;RP1=0, select bank0
  8606     1C59  00A6               	movwf	??_setup
  8607     1C5A                     u6547:
  8608     1C5A  0BA6               	decfsz	??_setup,f
  8609     1C5B  2C5A               	goto	u6547
  8610     1C5C  0000               	nop
  8611     1C5D                     l3191:
  8612                           
  8613                           ;Lab2.c: 131:     PIR1bits.ADIF = 0;
  8614     1C5D  1283               	bcf	3,5	;RP0=0, select bank0
  8615     1C5E  1303               	bcf	3,6	;RP1=0, select bank0
  8616     1C5F  130C               	bcf	12,6	;volatile
  8617     1C60                     l3193:
  8618                           
  8619                           ;Lab2.c: 132:     PIE1bits.ADIE = 1;
  8620     1C60  1683               	bsf	3,5	;RP0=1, select bank1
  8621     1C61  1303               	bcf	3,6	;RP1=0, select bank1
  8622     1C62  170C               	bsf	12,6	;volatile
  8623     1C63                     l3195:
  8624                           
  8625                           ;Lab2.c: 134:     INTCONbits.RBIE = 0;
  8626     1C63  118B               	bcf	11,3	;volatile
  8627     1C64                     l3197:
  8628                           
  8629                           ;Lab2.c: 135:     INTCONbits.RBIF = 1;
  8630     1C64  140B               	bsf	11,0	;volatile
  8631     1C65                     l3199:
  8632                           
  8633                           ;Lab2.c: 137:     INTCONbits.PEIE = 1;
  8634     1C65  170B               	bsf	11,6	;volatile
  8635     1C66                     l3201:
  8636                           
  8637                           ;Lab2.c: 138:     INTCONbits.GIE = 1;
  8638     1C66  178B               	bsf	11,7	;volatile
  8639     1C67                     l183:
  8640     1C67  0008               	return
  8641     1C68                     __end_of_setup:
  8642                           
  8643                           	psect	text19
  8644     081A                     __ptext19:	
  8645 ;; *************** function _map *****************
  8646 ;; Defined at:
  8647 ;;		line 142 in file "Lab2.c"
  8648 ;; Parameters:    Size  Location     Type
  8649 ;;  varmap          2   24[BANK1 ] unsigned int 
  8650 ;;  minval          2   26[BANK1 ] unsigned int 
  8651 ;;  maxval          2   28[BANK1 ] unsigned int 
  8652 ;;  minsal          2   30[BANK1 ] unsigned int 
  8653 ;;  maxsal          2   32[BANK1 ] unsigned int 
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;  valmap          4   40[BANK1 ] float 
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  2   24[BANK1 ] unsigned int 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, pclath, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8665 ;;      Params:         0       0      10       0       0
  8666 ;;      Locals:         0       0       4       0       0
  8667 ;;      Temps:          0       0       6       0       0
  8668 ;;      Totals:         0       0      20       0       0
  8669 ;;Total ram usage:       20 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; Hardware stack levels required when called: 3
  8672 ;; This function calls:
  8673 ;;		___fltol
  8674 ;;		___lwdiv
  8675 ;;		___wmul
  8676 ;;		___xxtofl
  8677 ;; This function is called by:
  8678 ;;		_main
  8679 ;; This function uses a non-reentrant model
  8680 ;;
  8681                           
  8682     081A                     _map:	
  8683                           ;psect for function _map
  8684                           
  8685     081A                     l3785:	
  8686                           ;incstack = 0
  8687                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  8688                           
  8689                           
  8690                           ;Lab2.c: 143:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval - minval
      +                          ) + minsal;
  8691     081A  1683               	bsf	3,5	;RP0=1, select bank1
  8692     081B  1303               	bcf	3,6	;RP1=0, select bank1
  8693     081C  083E               	movf	map@minsal^(0+128),w
  8694     081D  0240               	subwf	map@maxsal^(0+128),w
  8695     081E  1283               	bcf	3,5	;RP0=0, select bank0
  8696     081F  1303               	bcf	3,6	;RP1=0, select bank0
  8697     0820  00A8               	movwf	___wmul@multiplicand
  8698     0821  1683               	bsf	3,5	;RP0=1, select bank1
  8699     0822  1303               	bcf	3,6	;RP1=0, select bank1
  8700     0823  083F               	movf	(map@minsal+1)^(0+128),w
  8701     0824  1C03               	skipc
  8702     0825  0A3F               	incf	(map@minsal+1)^(0+128),w
  8703     0826  0241               	subwf	(map@maxsal+1)^(0+128),w
  8704     0827  1283               	bcf	3,5	;RP0=0, select bank0
  8705     0828  1303               	bcf	3,6	;RP1=0, select bank0
  8706     0829  00A9               	movwf	___wmul@multiplicand+1
  8707     082A  1683               	bsf	3,5	;RP0=1, select bank1
  8708     082B  1303               	bcf	3,6	;RP1=0, select bank1
  8709     082C  083A               	movf	map@minval^(0+128),w
  8710     082D  0238               	subwf	map@varmap^(0+128),w
  8711     082E  1283               	bcf	3,5	;RP0=0, select bank0
  8712     082F  1303               	bcf	3,6	;RP1=0, select bank0
  8713     0830  00A6               	movwf	___wmul@multiplier
  8714     0831  1683               	bsf	3,5	;RP0=1, select bank1
  8715     0832  1303               	bcf	3,6	;RP1=0, select bank1
  8716     0833  083B               	movf	(map@minval+1)^(0+128),w
  8717     0834  1C03               	skipc
  8718     0835  0A3B               	incf	(map@minval+1)^(0+128),w
  8719     0836  0239               	subwf	(map@varmap+1)^(0+128),w
  8720     0837  1283               	bcf	3,5	;RP0=0, select bank0
  8721     0838  1303               	bcf	3,6	;RP1=0, select bank0
  8722     0839  00A7               	movwf	___wmul@multiplier+1
  8723     083A  160A  158A  2408  120A  158A  	fcall	___wmul
  8724     083F  1283               	bcf	3,5	;RP0=0, select bank0
  8725     0840  1303               	bcf	3,6	;RP1=0, select bank0
  8726     0841  0827               	movf	?___wmul+1,w
  8727     0842  00AF               	movwf	___lwdiv@dividend+1
  8728     0843  0826               	movf	?___wmul,w
  8729     0844  00AE               	movwf	___lwdiv@dividend
  8730     0845  1683               	bsf	3,5	;RP0=1, select bank1
  8731     0846  1303               	bcf	3,6	;RP1=0, select bank1
  8732     0847  083A               	movf	map@minval^(0+128),w
  8733     0848  023C               	subwf	map@maxval^(0+128),w
  8734     0849  1283               	bcf	3,5	;RP0=0, select bank0
  8735     084A  1303               	bcf	3,6	;RP1=0, select bank0
  8736     084B  00AC               	movwf	___lwdiv@divisor
  8737     084C  1683               	bsf	3,5	;RP0=1, select bank1
  8738     084D  1303               	bcf	3,6	;RP1=0, select bank1
  8739     084E  083B               	movf	(map@minval+1)^(0+128),w
  8740     084F  1C03               	skipc
  8741     0850  0A3B               	incf	(map@minval+1)^(0+128),w
  8742     0851  023D               	subwf	(map@maxval+1)^(0+128),w
  8743     0852  1283               	bcf	3,5	;RP0=0, select bank0
  8744     0853  1303               	bcf	3,6	;RP1=0, select bank0
  8745     0854  00AD               	movwf	___lwdiv@divisor+1
  8746     0855  160A  158A  24A4  120A  158A  	fcall	___lwdiv
  8747     085A  1683               	bsf	3,5	;RP0=1, select bank1
  8748     085B  1303               	bcf	3,6	;RP1=0, select bank1
  8749     085C  083E               	movf	map@minsal^(0+128),w
  8750     085D  1283               	bcf	3,5	;RP0=0, select bank0
  8751     085E  1303               	bcf	3,6	;RP1=0, select bank0
  8752     085F  072C               	addwf	?___lwdiv,w
  8753     0860  1683               	bsf	3,5	;RP0=1, select bank1
  8754     0861  1303               	bcf	3,6	;RP1=0, select bank1
  8755     0862  00C2               	movwf	??_map^(0+128)
  8756     0863  083F               	movf	(map@minsal+1)^(0+128),w
  8757     0864  1803               	skipnc
  8758     0865  0A3F               	incf	(map@minsal+1)^(0+128),w
  8759     0866  1283               	bcf	3,5	;RP0=0, select bank0
  8760     0867  1303               	bcf	3,6	;RP1=0, select bank0
  8761     0868  072D               	addwf	?___lwdiv+1,w
  8762     0869  1683               	bsf	3,5	;RP0=1, select bank1
  8763     086A  1303               	bcf	3,6	;RP1=0, select bank1
  8764     086B  00C3               	movwf	(??_map+1)^(0+128)
  8765     086C  0842               	movf	??_map^(0+128),w
  8766     086D  00C4               	movwf	(??_map+2)^(0+128)
  8767     086E  0843               	movf	(??_map+1)^(0+128),w
  8768     086F  00C5               	movwf	((??_map+2)^(0+128)+1)
  8769     0870  01C6               	clrf	((??_map+2)^(0+128)+2)
  8770     0871  01C7               	clrf	((??_map+2)^(0+128)+3)
  8771     0872  0847               	movf	(??_map+5)^(0+128),w
  8772     0873  00AD               	movwf	(___xxtofl@val+3)^(0+128)
  8773     0874  0846               	movf	(??_map+4)^(0+128),w
  8774     0875  00AC               	movwf	(___xxtofl@val+2)^(0+128)
  8775     0876  0845               	movf	(??_map+3)^(0+128),w
  8776     0877  00AB               	movwf	(___xxtofl@val+1)^(0+128)
  8777     0878  0844               	movf	(??_map+2)^(0+128),w
  8778     0879  00AA               	movwf	___xxtofl@val^(0+128)
  8779     087A  3000               	movlw	0
  8780     087B  120A  158A  209E  120A  158A  	fcall	___xxtofl
  8781     0880  1683               	bsf	3,5	;RP0=1, select bank1
  8782     0881  1303               	bcf	3,6	;RP1=0, select bank1
  8783     0882  082D               	movf	(?___xxtofl+3)^(0+128),w
  8784     0883  00CB               	movwf	(map@valmap+3)^(0+128)
  8785     0884  082C               	movf	(?___xxtofl+2)^(0+128),w
  8786     0885  00CA               	movwf	(map@valmap+2)^(0+128)
  8787     0886  082B               	movf	(?___xxtofl+1)^(0+128),w
  8788     0887  00C9               	movwf	(map@valmap+1)^(0+128)
  8789     0888  082A               	movf	?___xxtofl^(0+128),w
  8790     0889  00C8               	movwf	map@valmap^(0+128)
  8791                           
  8792                           ;Lab2.c: 144:   return valmap;
  8793     088A  084B               	movf	(map@valmap+3)^(0+128),w
  8794     088B  00A3               	movwf	(___fltol@f1+3)^(0+128)
  8795     088C  084A               	movf	(map@valmap+2)^(0+128),w
  8796     088D  00A2               	movwf	(___fltol@f1+2)^(0+128)
  8797     088E  0849               	movf	(map@valmap+1)^(0+128),w
  8798     088F  00A1               	movwf	(___fltol@f1+1)^(0+128)
  8799     0890  0848               	movf	map@valmap^(0+128),w
  8800     0891  00A0               	movwf	___fltol@f1^(0+128)
  8801     0892  160A  158A  2788  120A  158A  	fcall	___fltol
  8802     0897  1683               	bsf	3,5	;RP0=1, select bank1
  8803     0898  1303               	bcf	3,6	;RP1=0, select bank1
  8804     0899  0821               	movf	(?___fltol+1)^(0+128),w
  8805     089A  00B9               	movwf	(?_map+1)^(0+128)
  8806     089B  0820               	movf	?___fltol^(0+128),w
  8807     089C  00B8               	movwf	?_map^(0+128)
  8808     089D                     l186:
  8809     089D  0008               	return
  8810     089E                     __end_of_map:
  8811                           
  8812                           	psect	text20
  8813     089E                     __ptext20:	
  8814 ;; *************** function ___xxtofl *****************
  8815 ;; Defined at:
  8816 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  sign            1    wreg     unsigned char 
  8819 ;;  val             4   10[BANK1 ] long 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  sign            1   18[BANK1 ] unsigned char 
  8822 ;;  arg             4   20[BANK1 ] unsigned long 
  8823 ;;  exp             1   19[BANK1 ] unsigned char 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  4   10[BANK1 ] unsigned char 
  8826 ;; Registers used:
  8827 ;;		wreg, status,2, status,0
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8833 ;;      Params:         0       0       4       0       0
  8834 ;;      Locals:         0       0       6       0       0
  8835 ;;      Temps:          0       0       4       0       0
  8836 ;;      Totals:         0       0      14       0       0
  8837 ;;Total ram usage:       14 bytes
  8838 ;; Hardware stack levels used: 1
  8839 ;; Hardware stack levels required when called: 2
  8840 ;; This function calls:
  8841 ;;		Nothing
  8842 ;; This function is called by:
  8843 ;;		_main
  8844 ;;		_map
  8845 ;;		_sprintf
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849     089E                     ___xxtofl:	
  8850                           ;psect for function ___xxtofl
  8851                           
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8855                           ;___xxtofl@sign stored from wreg
  8856     089E  1683               	bsf	3,5	;RP0=1, select bank1
  8857     089F  1303               	bcf	3,6	;RP1=0, select bank1
  8858     08A0  00B2               	movwf	___xxtofl@sign^(0+128)
  8859     08A1                     l3079:
  8860     08A1  0832               	movf	___xxtofl@sign^(0+128),w
  8861     08A2  1903               	btfsc	3,2
  8862     08A3  28A5               	goto	u4971
  8863     08A4  28A6               	goto	u4970
  8864     08A5                     u4971:
  8865     08A5  28BA               	goto	l3085
  8866     08A6                     u4970:
  8867     08A6                     l3081:
  8868     08A6  1FAD               	btfss	(___xxtofl@val+3)^(0+128),7
  8869     08A7  28A9               	goto	u4981
  8870     08A8  28AA               	goto	u4980
  8871     08A9                     u4981:
  8872     08A9  28BA               	goto	l3085
  8873     08AA                     u4980:
  8874     08AA                     l3083:
  8875     08AA  092A               	comf	___xxtofl@val^(0+128),w
  8876     08AB  00B4               	movwf	___xxtofl@arg^(0+128)
  8877     08AC  092B               	comf	(___xxtofl@val^(0+128)+1),w
  8878     08AD  00B5               	movwf	(___xxtofl@arg+1)^(0+128)
  8879     08AE  092C               	comf	(___xxtofl@val^(0+128)+2),w
  8880     08AF  00B6               	movwf	(___xxtofl@arg+2)^(0+128)
  8881     08B0  092D               	comf	(___xxtofl@val^(0+128)+3),w
  8882     08B1  00B7               	movwf	(___xxtofl@arg+3)^(0+128)
  8883     08B2  0AB4               	incf	___xxtofl@arg^(0+128),f
  8884     08B3  1903               	skipnz
  8885     08B4  0AB5               	incf	(___xxtofl@arg+1)^(0+128),f
  8886     08B5  1903               	skipnz
  8887     08B6  0AB6               	incf	(___xxtofl@arg+2)^(0+128),f
  8888     08B7  1903               	skipnz
  8889     08B8  0AB7               	incf	(___xxtofl@arg+3)^(0+128),f
  8890     08B9  28C2               	goto	l820
  8891     08BA                     l3085:
  8892     08BA  082D               	movf	(___xxtofl@val+3)^(0+128),w
  8893     08BB  00B7               	movwf	(___xxtofl@arg+3)^(0+128)
  8894     08BC  082C               	movf	(___xxtofl@val+2)^(0+128),w
  8895     08BD  00B6               	movwf	(___xxtofl@arg+2)^(0+128)
  8896     08BE  082B               	movf	(___xxtofl@val+1)^(0+128),w
  8897     08BF  00B5               	movwf	(___xxtofl@arg+1)^(0+128)
  8898     08C0  082A               	movf	___xxtofl@val^(0+128),w
  8899     08C1  00B4               	movwf	___xxtofl@arg^(0+128)
  8900     08C2                     l820:
  8901     08C2  082D               	movf	(___xxtofl@val+3)^(0+128),w
  8902     08C3  042C               	iorwf	(___xxtofl@val+2)^(0+128),w
  8903     08C4  042B               	iorwf	(___xxtofl@val+1)^(0+128),w
  8904     08C5  042A               	iorwf	___xxtofl@val^(0+128),w
  8905     08C6  1D03               	skipz
  8906     08C7  28C9               	goto	u4991
  8907     08C8  28CA               	goto	u4990
  8908     08C9                     u4991:
  8909     08C9  28D3               	goto	l3091
  8910     08CA                     u4990:
  8911     08CA                     l3087:
  8912     08CA  3000               	movlw	0
  8913     08CB  00AD               	movwf	(?___xxtofl+3)^(0+128)
  8914     08CC  3000               	movlw	0
  8915     08CD  00AC               	movwf	(?___xxtofl+2)^(0+128)
  8916     08CE  3000               	movlw	0
  8917     08CF  00AB               	movwf	(?___xxtofl+1)^(0+128)
  8918     08D0  3000               	movlw	0
  8919     08D1  00AA               	movwf	?___xxtofl^(0+128)
  8920     08D2  2957               	goto	l822
  8921     08D3                     l3091:
  8922     08D3  3096               	movlw	150
  8923     08D4  00B3               	movwf	___xxtofl@exp^(0+128)
  8924     08D5  28E3               	goto	l3095
  8925     08D6                     l3093:
  8926     08D6  3001               	movlw	1
  8927     08D7  00AE               	movwf	??___xxtofl^(0+128)
  8928     08D8  082E               	movf	??___xxtofl^(0+128),w
  8929     08D9  07B3               	addwf	___xxtofl@exp^(0+128),f
  8930     08DA  3001               	movlw	1
  8931     08DB                     u5005:
  8932     08DB  1003               	clrc
  8933     08DC  0CB7               	rrf	(___xxtofl@arg+3)^(0+128),f
  8934     08DD  0CB6               	rrf	(___xxtofl@arg+2)^(0+128),f
  8935     08DE  0CB5               	rrf	(___xxtofl@arg+1)^(0+128),f
  8936     08DF  0CB4               	rrf	___xxtofl@arg^(0+128),f
  8937     08E0  3EFF               	addlw	-1
  8938     08E1  1D03               	skipz
  8939     08E2  28DB               	goto	u5005
  8940     08E3                     l3095:
  8941     08E3  30FE               	movlw	254
  8942     08E4  0537               	andwf	(___xxtofl@arg+3)^(0+128),w
  8943     08E5  1D03               	btfss	3,2
  8944     08E6  28E8               	goto	u5011
  8945     08E7  28E9               	goto	u5010
  8946     08E8                     u5011:
  8947     08E8  28D6               	goto	l3093
  8948     08E9                     u5010:
  8949     08E9  2905               	goto	l826
  8950     08EA                     l3097:
  8951     08EA  3001               	movlw	1
  8952     08EB  00AE               	movwf	??___xxtofl^(0+128)
  8953     08EC  082E               	movf	??___xxtofl^(0+128),w
  8954     08ED  07B3               	addwf	___xxtofl@exp^(0+128),f
  8955     08EE                     l3099:
  8956     08EE  3001               	movlw	1
  8957     08EF  07B4               	addwf	___xxtofl@arg^(0+128),f
  8958     08F0  3000               	movlw	0
  8959     08F1  1803               	skipnc
  8960     08F2  3001               	movlw	1
  8961     08F3  07B5               	addwf	(___xxtofl@arg+1)^(0+128),f
  8962     08F4  3000               	movlw	0
  8963     08F5  1803               	skipnc
  8964     08F6  3001               	movlw	1
  8965     08F7  07B6               	addwf	(___xxtofl@arg+2)^(0+128),f
  8966     08F8  3000               	movlw	0
  8967     08F9  1803               	skipnc
  8968     08FA  3001               	movlw	1
  8969     08FB  07B7               	addwf	(___xxtofl@arg+3)^(0+128),f
  8970     08FC                     l3101:
  8971     08FC  3001               	movlw	1
  8972     08FD                     u5025:
  8973     08FD  1003               	clrc
  8974     08FE  0CB7               	rrf	(___xxtofl@arg+3)^(0+128),f
  8975     08FF  0CB6               	rrf	(___xxtofl@arg+2)^(0+128),f
  8976     0900  0CB5               	rrf	(___xxtofl@arg+1)^(0+128),f
  8977     0901  0CB4               	rrf	___xxtofl@arg^(0+128),f
  8978     0902  3EFF               	addlw	-1
  8979     0903  1D03               	skipz
  8980     0904  28FD               	goto	u5025
  8981     0905                     l826:
  8982     0905  30FF               	movlw	255
  8983     0906  0537               	andwf	(___xxtofl@arg+3)^(0+128),w
  8984     0907  1D03               	btfss	3,2
  8985     0908  290A               	goto	u5031
  8986     0909  290B               	goto	u5030
  8987     090A                     u5031:
  8988     090A  28EA               	goto	l3097
  8989     090B                     u5030:
  8990     090B  2917               	goto	l3105
  8991     090C                     l3103:
  8992     090C  3001               	movlw	1
  8993     090D  02B3               	subwf	___xxtofl@exp^(0+128),f
  8994     090E  3001               	movlw	1
  8995     090F  00AE               	movwf	??___xxtofl^(0+128)
  8996     0910                     u5045:
  8997     0910  1003               	clrc
  8998     0911  0DB4               	rlf	___xxtofl@arg^(0+128),f
  8999     0912  0DB5               	rlf	(___xxtofl@arg+1)^(0+128),f
  9000     0913  0DB6               	rlf	(___xxtofl@arg+2)^(0+128),f
  9001     0914  0DB7               	rlf	(___xxtofl@arg+3)^(0+128),f
  9002     0915  0BAE               	decfsz	??___xxtofl^(0+128),f
  9003     0916  2910               	goto	u5045
  9004     0917                     l3105:
  9005     0917  1BB6               	btfsc	(___xxtofl@arg+2)^(0+128),7
  9006     0918  291A               	goto	u5051
  9007     0919  291B               	goto	u5050
  9008     091A                     u5051:
  9009     091A  2921               	goto	l833
  9010     091B                     u5050:
  9011     091B                     l3107:
  9012     091B  3002               	movlw	2
  9013     091C  0233               	subwf	___xxtofl@exp^(0+128),w
  9014     091D  1803               	skipnc
  9015     091E  2920               	goto	u5061
  9016     091F  2921               	goto	u5060
  9017     0920                     u5061:
  9018     0920  290C               	goto	l3103
  9019     0921                     u5060:
  9020     0921                     l833:
  9021     0921  1833               	btfsc	___xxtofl@exp^(0+128),0
  9022     0922  2924               	goto	u5071
  9023     0923  2925               	goto	u5070
  9024     0924                     u5071:
  9025     0924  292D               	goto	l834
  9026     0925                     u5070:
  9027     0925                     l3109:
  9028     0925  30FF               	movlw	255
  9029     0926  05B4               	andwf	___xxtofl@arg^(0+128),f
  9030     0927  30FF               	movlw	255
  9031     0928  05B5               	andwf	(___xxtofl@arg+1)^(0+128),f
  9032     0929  307F               	movlw	127
  9033     092A  05B6               	andwf	(___xxtofl@arg+2)^(0+128),f
  9034     092B  30FF               	movlw	255
  9035     092C  05B7               	andwf	(___xxtofl@arg+3)^(0+128),f
  9036     092D                     l834:
  9037     092D  1003               	clrc
  9038     092E  0CB3               	rrf	___xxtofl@exp^(0+128),f
  9039     092F                     l3111:
  9040     092F  0833               	movf	___xxtofl@exp^(0+128),w
  9041     0930  00AE               	movwf	??___xxtofl^(0+128)
  9042     0931  01AF               	clrf	(??___xxtofl^(0+128)+1)
  9043     0932  01B0               	clrf	(??___xxtofl^(0+128)+2)
  9044     0933  01B1               	clrf	(??___xxtofl^(0+128)+3)
  9045     0934  3018               	movlw	24
  9046     0935                     u5085:
  9047     0935  1003               	clrc
  9048     0936  0DAE               	rlf	??___xxtofl^(0+128),f
  9049     0937  0DAF               	rlf	(??___xxtofl^(0+128)+1),f
  9050     0938  0DB0               	rlf	(??___xxtofl^(0+128)+2),f
  9051     0939  0DB1               	rlf	(??___xxtofl^(0+128)+3),f
  9052     093A                     u5080:
  9053     093A  3EFF               	addlw	-1
  9054     093B  1D03               	skipz
  9055     093C  2935               	goto	u5085
  9056     093D  082E               	movf	??___xxtofl^(0+128),w
  9057     093E  04B4               	iorwf	___xxtofl@arg^(0+128),f
  9058     093F  082F               	movf	(??___xxtofl+1)^(0+128),w
  9059     0940  04B5               	iorwf	(___xxtofl@arg+1)^(0+128),f
  9060     0941  0830               	movf	(??___xxtofl+2)^(0+128),w
  9061     0942  04B6               	iorwf	(___xxtofl@arg+2)^(0+128),f
  9062     0943  0831               	movf	(??___xxtofl+3)^(0+128),w
  9063     0944  04B7               	iorwf	(___xxtofl@arg+3)^(0+128),f
  9064     0945                     l3113:
  9065     0945  0832               	movf	___xxtofl@sign^(0+128),w
  9066     0946  1903               	btfsc	3,2
  9067     0947  2949               	goto	u5091
  9068     0948  294A               	goto	u5090
  9069     0949                     u5091:
  9070     0949  294F               	goto	l3119
  9071     094A                     u5090:
  9072     094A                     l3115:
  9073     094A  1FAD               	btfss	(___xxtofl@val+3)^(0+128),7
  9074     094B  294D               	goto	u5101
  9075     094C  294E               	goto	u5100
  9076     094D                     u5101:
  9077     094D  294F               	goto	l3119
  9078     094E                     u5100:
  9079     094E                     l3117:
  9080     094E  17B7               	bsf	(___xxtofl@arg^(0+128)+3),7
  9081     094F                     l3119:
  9082     094F  0837               	movf	(___xxtofl@arg+3)^(0+128),w
  9083     0950  00AD               	movwf	(?___xxtofl+3)^(0+128)
  9084     0951  0836               	movf	(___xxtofl@arg+2)^(0+128),w
  9085     0952  00AC               	movwf	(?___xxtofl+2)^(0+128)
  9086     0953  0835               	movf	(___xxtofl@arg+1)^(0+128),w
  9087     0954  00AB               	movwf	(?___xxtofl+1)^(0+128)
  9088     0955  0834               	movf	___xxtofl@arg^(0+128),w
  9089     0956  00AA               	movwf	?___xxtofl^(0+128)
  9090     0957                     l822:
  9091     0957  0008               	return
  9092     0958                     __end_of___xxtofl:
  9093                           
  9094                           	psect	text21
  9095     1C08                     __ptext21:	
  9096 ;; *************** function ___wmul *****************
  9097 ;; Defined at:
  9098 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  9099 ;; Parameters:    Size  Location     Type
  9100 ;;  multiplier      2    6[BANK0 ] unsigned int 
  9101 ;;  multiplicand    2    8[BANK0 ] unsigned int 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  product         2   10[BANK0 ] unsigned int 
  9104 ;; Return value:  Size  Location     Type
  9105 ;;                  2    6[BANK0 ] unsigned int 
  9106 ;; Registers used:
  9107 ;;		wreg, status,2, status,0
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9113 ;;      Params:         0       4       0       0       0
  9114 ;;      Locals:         0       2       0       0       0
  9115 ;;      Temps:          0       0       0       0       0
  9116 ;;      Totals:         0       6       0       0       0
  9117 ;;Total ram usage:        6 bytes
  9118 ;; Hardware stack levels used: 1
  9119 ;; Hardware stack levels required when called: 2
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		_map
  9124 ;;		_sprintf
  9125 ;; This function uses a non-reentrant model
  9126 ;;
  9127                           
  9128     1C08                     ___wmul:	
  9129                           ;psect for function ___wmul
  9130                           
  9131     1C08                     l2939:	
  9132                           ;incstack = 0
  9133                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9134                           
  9135     1C08  1283               	bcf	3,5	;RP0=0, select bank0
  9136     1C09  1303               	bcf	3,6	;RP1=0, select bank0
  9137     1C0A  01AA               	clrf	___wmul@product
  9138     1C0B  01AB               	clrf	___wmul@product+1
  9139     1C0C                     l2941:
  9140     1C0C  1C26               	btfss	___wmul@multiplier,0
  9141     1C0D  2C0F               	goto	u4591
  9142     1C0E  2C10               	goto	u4590
  9143     1C0F                     u4591:
  9144     1C0F  2C16               	goto	l353
  9145     1C10                     u4590:
  9146     1C10                     l2943:
  9147     1C10  0828               	movf	___wmul@multiplicand,w
  9148     1C11  07AA               	addwf	___wmul@product,f
  9149     1C12  1803               	skipnc
  9150     1C13  0AAB               	incf	___wmul@product+1,f
  9151     1C14  0829               	movf	___wmul@multiplicand+1,w
  9152     1C15  07AB               	addwf	___wmul@product+1,f
  9153     1C16                     l353:
  9154     1C16  3001               	movlw	1
  9155     1C17                     u4605:
  9156     1C17  1003               	clrc
  9157     1C18  0DA8               	rlf	___wmul@multiplicand,f
  9158     1C19  0DA9               	rlf	___wmul@multiplicand+1,f
  9159     1C1A  3EFF               	addlw	-1
  9160     1C1B  1D03               	skipz
  9161     1C1C  2C17               	goto	u4605
  9162     1C1D                     l2945:
  9163     1C1D  3001               	movlw	1
  9164     1C1E                     u4615:
  9165     1C1E  1003               	clrc
  9166     1C1F  0CA7               	rrf	___wmul@multiplier+1,f
  9167     1C20  0CA6               	rrf	___wmul@multiplier,f
  9168     1C21  3EFF               	addlw	-1
  9169     1C22  1D03               	skipz
  9170     1C23  2C1E               	goto	u4615
  9171     1C24                     l2947:
  9172     1C24  0826               	movf	___wmul@multiplier,w
  9173     1C25  0427               	iorwf	___wmul@multiplier+1,w
  9174     1C26  1D03               	btfss	3,2
  9175     1C27  2C29               	goto	u4621
  9176     1C28  2C2A               	goto	u4620
  9177     1C29                     u4621:
  9178     1C29  2C0C               	goto	l2941
  9179     1C2A                     u4620:
  9180     1C2A                     l2949:
  9181     1C2A  082B               	movf	___wmul@product+1,w
  9182     1C2B  00A7               	movwf	?___wmul+1
  9183     1C2C  082A               	movf	___wmul@product,w
  9184     1C2D  00A6               	movwf	?___wmul
  9185     1C2E                     l355:
  9186     1C2E  0008               	return
  9187     1C2F                     __end_of___wmul:
  9188                           
  9189                           	psect	text22
  9190     1CA4                     __ptext22:	
  9191 ;; *************** function ___lwdiv *****************
  9192 ;; Defined at:
  9193 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  divisor         2   12[BANK0 ] unsigned int 
  9196 ;;  dividend        2   14[BANK0 ] unsigned int 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  quotient        2   17[BANK0 ] unsigned int 
  9199 ;;  counter         1   19[BANK0 ] unsigned char 
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  2   12[BANK0 ] unsigned int 
  9202 ;; Registers used:
  9203 ;;		wreg, status,2, status,0
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9209 ;;      Params:         0       4       0       0       0
  9210 ;;      Locals:         0       3       0       0       0
  9211 ;;      Temps:          0       1       0       0       0
  9212 ;;      Totals:         0       8       0       0       0
  9213 ;;Total ram usage:        8 bytes
  9214 ;; Hardware stack levels used: 1
  9215 ;; Hardware stack levels required when called: 2
  9216 ;; This function calls:
  9217 ;;		Nothing
  9218 ;; This function is called by:
  9219 ;;		_map
  9220 ;;		_fround
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224     1CA4                     ___lwdiv:	
  9225                           ;psect for function ___lwdiv
  9226                           
  9227     1CA4                     l2383:	
  9228                           ;incstack = 0
  9229                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9230                           
  9231     1CA4  1283               	bcf	3,5	;RP0=0, select bank0
  9232     1CA5  1303               	bcf	3,6	;RP1=0, select bank0
  9233     1CA6  01B1               	clrf	___lwdiv@quotient
  9234     1CA7  01B2               	clrf	___lwdiv@quotient+1
  9235     1CA8                     l2385:
  9236     1CA8  082C               	movf	___lwdiv@divisor,w
  9237     1CA9  042D               	iorwf	___lwdiv@divisor+1,w
  9238     1CAA  1903               	btfsc	3,2
  9239     1CAB  2CAD               	goto	u3121
  9240     1CAC  2CAE               	goto	u3120
  9241     1CAD                     u3121:
  9242     1CAD  2CE5               	goto	l2405
  9243     1CAE                     u3120:
  9244     1CAE                     l2387:
  9245     1CAE  01B3               	clrf	___lwdiv@counter
  9246     1CAF  0AB3               	incf	___lwdiv@counter,f
  9247     1CB0  2CBC               	goto	l2393
  9248     1CB1                     l2389:
  9249     1CB1  3001               	movlw	1
  9250     1CB2                     u3135:
  9251     1CB2  1003               	clrc
  9252     1CB3  0DAC               	rlf	___lwdiv@divisor,f
  9253     1CB4  0DAD               	rlf	___lwdiv@divisor+1,f
  9254     1CB5  3EFF               	addlw	-1
  9255     1CB6  1D03               	skipz
  9256     1CB7  2CB2               	goto	u3135
  9257     1CB8                     l2391:
  9258     1CB8  3001               	movlw	1
  9259     1CB9  00B0               	movwf	??___lwdiv
  9260     1CBA  0830               	movf	??___lwdiv,w
  9261     1CBB  07B3               	addwf	___lwdiv@counter,f
  9262     1CBC                     l2393:
  9263     1CBC  1FAD               	btfss	___lwdiv@divisor+1,7
  9264     1CBD  2CBF               	goto	u3141
  9265     1CBE  2CC0               	goto	u3140
  9266     1CBF                     u3141:
  9267     1CBF  2CB1               	goto	l2389
  9268     1CC0                     u3140:
  9269     1CC0                     l2395:
  9270     1CC0  3001               	movlw	1
  9271     1CC1                     u3155:
  9272     1CC1  1003               	clrc
  9273     1CC2  0DB1               	rlf	___lwdiv@quotient,f
  9274     1CC3  0DB2               	rlf	___lwdiv@quotient+1,f
  9275     1CC4  3EFF               	addlw	-1
  9276     1CC5  1D03               	skipz
  9277     1CC6  2CC1               	goto	u3155
  9278     1CC7  082D               	movf	___lwdiv@divisor+1,w
  9279     1CC8  022F               	subwf	___lwdiv@dividend+1,w
  9280     1CC9  1D03               	skipz
  9281     1CCA  2CCD               	goto	u3165
  9282     1CCB  082C               	movf	___lwdiv@divisor,w
  9283     1CCC  022E               	subwf	___lwdiv@dividend,w
  9284     1CCD                     u3165:
  9285     1CCD  1C03               	skipc
  9286     1CCE  2CD0               	goto	u3161
  9287     1CCF  2CD1               	goto	u3160
  9288     1CD0                     u3161:
  9289     1CD0  2CD8               	goto	l2401
  9290     1CD1                     u3160:
  9291     1CD1                     l2397:
  9292     1CD1  082C               	movf	___lwdiv@divisor,w
  9293     1CD2  02AE               	subwf	___lwdiv@dividend,f
  9294     1CD3  082D               	movf	___lwdiv@divisor+1,w
  9295     1CD4  1C03               	skipc
  9296     1CD5  03AF               	decf	___lwdiv@dividend+1,f
  9297     1CD6  02AF               	subwf	___lwdiv@dividend+1,f
  9298     1CD7                     l2399:
  9299     1CD7  1431               	bsf	___lwdiv@quotient,0
  9300     1CD8                     l2401:
  9301     1CD8  3001               	movlw	1
  9302     1CD9                     u3175:
  9303     1CD9  1003               	clrc
  9304     1CDA  0CAD               	rrf	___lwdiv@divisor+1,f
  9305     1CDB  0CAC               	rrf	___lwdiv@divisor,f
  9306     1CDC  3EFF               	addlw	-1
  9307     1CDD  1D03               	skipz
  9308     1CDE  2CD9               	goto	u3175
  9309     1CDF                     l2403:
  9310     1CDF  3001               	movlw	1
  9311     1CE0  02B3               	subwf	___lwdiv@counter,f
  9312     1CE1  1D03               	btfss	3,2
  9313     1CE2  2CE4               	goto	u3181
  9314     1CE3  2CE5               	goto	u3180
  9315     1CE4                     u3181:
  9316     1CE4  2CC0               	goto	l2395
  9317     1CE5                     u3180:
  9318     1CE5                     l2405:
  9319     1CE5  0832               	movf	___lwdiv@quotient+1,w
  9320     1CE6  00AD               	movwf	?___lwdiv+1
  9321     1CE7  0831               	movf	___lwdiv@quotient,w
  9322     1CE8  00AC               	movwf	?___lwdiv
  9323     1CE9                     l659:
  9324     1CE9  0008               	return
  9325     1CEA                     __end_of___lwdiv:
  9326                           
  9327                           	psect	text23
  9328     1F88                     __ptext23:	
  9329 ;; *************** function ___fltol *****************
  9330 ;; Defined at:
  9331 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  f1              4    0[BANK1 ] unsigned int 
  9334 ;; Auto vars:     Size  Location     Type
  9335 ;;  exp1            1    9[BANK1 ] unsigned char 
  9336 ;;  sign1           1    8[BANK1 ] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  4    0[BANK1 ] long 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9346 ;;      Params:         0       0       4       0       0
  9347 ;;      Locals:         0       0       2       0       0
  9348 ;;      Temps:          0       0       4       0       0
  9349 ;;      Totals:         0       0      10       0       0
  9350 ;;Total ram usage:       10 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 2
  9353 ;; This function calls:
  9354 ;;		Nothing
  9355 ;; This function is called by:
  9356 ;;		_main
  9357 ;;		_map
  9358 ;;		_sprintf
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362     1F88                     ___fltol:	
  9363                           ;psect for function ___fltol
  9364                           
  9365     1F88                     l3743:	
  9366                           ;incstack = 0
  9367                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9368                           
  9369     1F88  1003               	clrc
  9370     1F89  1683               	bsf	3,5	;RP0=1, select bank1
  9371     1F8A  1303               	bcf	3,6	;RP1=0, select bank1
  9372     1F8B  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  9373     1F8C  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  9374     1F8D  00A9               	movwf	___fltol@exp1^(0+128)
  9375     1F8E  0829               	movf	___fltol@exp1^(0+128),w
  9376     1F8F  1D03               	btfss	3,2
  9377     1F90  2F92               	goto	u6151
  9378     1F91  2F93               	goto	u6150
  9379     1F92                     u6151:
  9380     1F92  2F9C               	goto	l3749
  9381     1F93                     u6150:
  9382     1F93                     l3745:
  9383     1F93  3000               	movlw	0
  9384     1F94  00A3               	movwf	(?___fltol+3)^(0+128)
  9385     1F95  3000               	movlw	0
  9386     1F96  00A2               	movwf	(?___fltol+2)^(0+128)
  9387     1F97  3000               	movlw	0
  9388     1F98  00A1               	movwf	(?___fltol+1)^(0+128)
  9389     1F99  3000               	movlw	0
  9390     1F9A  00A0               	movwf	?___fltol^(0+128)
  9391     1F9B  2FFF               	goto	l556
  9392     1F9C                     l3749:
  9393     1F9C  0820               	movf	___fltol@f1^(0+128),w
  9394     1F9D  00A4               	movwf	??___fltol^(0+128)
  9395     1F9E  0821               	movf	(___fltol@f1+1)^(0+128),w
  9396     1F9F  00A5               	movwf	(??___fltol^(0+128)+1)
  9397     1FA0  0822               	movf	(___fltol@f1+2)^(0+128),w
  9398     1FA1  00A6               	movwf	(??___fltol^(0+128)+2)
  9399     1FA2  0823               	movf	(___fltol@f1+3)^(0+128),w
  9400     1FA3  00A7               	movwf	(??___fltol^(0+128)+3)
  9401     1FA4  301F               	movlw	31
  9402     1FA5                     u6165:
  9403     1FA5  1003               	clrc
  9404     1FA6  0CA7               	rrf	(??___fltol^(0+128)+3),f
  9405     1FA7  0CA6               	rrf	(??___fltol^(0+128)+2),f
  9406     1FA8  0CA5               	rrf	(??___fltol^(0+128)+1),f
  9407     1FA9  0CA4               	rrf	??___fltol^(0+128),f
  9408     1FAA                     u6160:
  9409     1FAA  3EFF               	addlw	-1
  9410     1FAB  1D03               	skipz
  9411     1FAC  2FA5               	goto	u6165
  9412     1FAD  0824               	movf	??___fltol^(0+128),w
  9413     1FAE  00A8               	movwf	___fltol@sign1^(0+128)
  9414     1FAF                     l3751:
  9415     1FAF  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  9416     1FB0                     l3753:
  9417     1FB0  30FF               	movlw	255
  9418     1FB1  05A0               	andwf	___fltol@f1^(0+128),f
  9419     1FB2  30FF               	movlw	255
  9420     1FB3  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  9421     1FB4  30FF               	movlw	255
  9422     1FB5  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  9423     1FB6  3000               	movlw	0
  9424     1FB7  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  9425     1FB8                     l3755:
  9426     1FB8  3096               	movlw	150
  9427     1FB9  02A9               	subwf	___fltol@exp1^(0+128),f
  9428     1FBA                     l3757:
  9429     1FBA  1FA9               	btfss	___fltol@exp1^(0+128),7
  9430     1FBB  2FBD               	goto	u6171
  9431     1FBC  2FBE               	goto	u6170
  9432     1FBD                     u6171:
  9433     1FBD  2FD8               	goto	l3767
  9434     1FBE                     u6170:
  9435     1FBE                     l3759:
  9436     1FBE  0829               	movf	___fltol@exp1^(0+128),w
  9437     1FBF  3A80               	xorlw	128
  9438     1FC0  3E97               	addlw	151
  9439     1FC1  1803               	skipnc
  9440     1FC2  2FC4               	goto	u6181
  9441     1FC3  2FC5               	goto	u6180
  9442     1FC4                     u6181:
  9443     1FC4  2FC6               	goto	l3765
  9444     1FC5                     u6180:
  9445     1FC5  2F93               	goto	l3745
  9446     1FC6                     l3765:
  9447     1FC6  3001               	movlw	1
  9448     1FC7                     u6195:
  9449     1FC7  1003               	clrc
  9450     1FC8  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  9451     1FC9  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  9452     1FCA  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  9453     1FCB  0CA0               	rrf	___fltol@f1^(0+128),f
  9454     1FCC  3EFF               	addlw	-1
  9455     1FCD  1D03               	skipz
  9456     1FCE  2FC7               	goto	u6195
  9457     1FCF  3001               	movlw	1
  9458     1FD0  00A4               	movwf	??___fltol^(0+128)
  9459     1FD1  0824               	movf	??___fltol^(0+128),w
  9460     1FD2  07A9               	addwf	___fltol@exp1^(0+128),f
  9461     1FD3  1D03               	btfss	3,2
  9462     1FD4  2FD6               	goto	u6201
  9463     1FD5  2FD7               	goto	u6200
  9464     1FD6                     u6201:
  9465     1FD6  2FC6               	goto	l3765
  9466     1FD7                     u6200:
  9467     1FD7  2FEF               	goto	l3775
  9468     1FD8                     l3767:
  9469     1FD8  3020               	movlw	32
  9470     1FD9  0229               	subwf	___fltol@exp1^(0+128),w
  9471     1FDA  1C03               	skipc
  9472     1FDB  2FDD               	goto	u6211
  9473     1FDC  2FDE               	goto	u6210
  9474     1FDD                     u6211:
  9475     1FDD  2FEA               	goto	l563
  9476     1FDE                     u6210:
  9477     1FDE  2F93               	goto	l3745
  9478     1FDF                     l3773:
  9479     1FDF  3001               	movlw	1
  9480     1FE0  00A4               	movwf	??___fltol^(0+128)
  9481     1FE1                     u6225:
  9482     1FE1  1003               	clrc
  9483     1FE2  0DA0               	rlf	___fltol@f1^(0+128),f
  9484     1FE3  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  9485     1FE4  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  9486     1FE5  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  9487     1FE6  0BA4               	decfsz	??___fltol^(0+128),f
  9488     1FE7  2FE1               	goto	u6225
  9489     1FE8  3001               	movlw	1
  9490     1FE9  02A9               	subwf	___fltol@exp1^(0+128),f
  9491     1FEA                     l563:
  9492     1FEA  0829               	movf	___fltol@exp1^(0+128),w
  9493     1FEB  1D03               	btfss	3,2
  9494     1FEC  2FEE               	goto	u6231
  9495     1FED  2FEF               	goto	u6230
  9496     1FEE                     u6231:
  9497     1FEE  2FDF               	goto	l3773
  9498     1FEF                     u6230:
  9499     1FEF                     l3775:
  9500     1FEF  0828               	movf	___fltol@sign1^(0+128),w
  9501     1FF0  1903               	btfsc	3,2
  9502     1FF1  2FF3               	goto	u6241
  9503     1FF2  2FF4               	goto	u6240
  9504     1FF3                     u6241:
  9505     1FF3  2FFF               	goto	l566
  9506     1FF4                     u6240:
  9507     1FF4                     l3777:
  9508     1FF4  09A0               	comf	___fltol@f1^(0+128),f
  9509     1FF5  09A1               	comf	(___fltol@f1+1)^(0+128),f
  9510     1FF6  09A2               	comf	(___fltol@f1+2)^(0+128),f
  9511     1FF7  09A3               	comf	(___fltol@f1+3)^(0+128),f
  9512     1FF8  0AA0               	incf	___fltol@f1^(0+128),f
  9513     1FF9  1903               	skipnz
  9514     1FFA  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  9515     1FFB  1903               	skipnz
  9516     1FFC  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  9517     1FFD  1903               	skipnz
  9518     1FFE  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  9519     1FFF                     l566:
  9520     1FFF                     l556:
  9521     1FFF  0008               	return
  9522     2000                     __end_of___fltol:
  9523                           
  9524                           	psect	text24
  9525     10B5                     __ptext24:	
  9526 ;; *************** function _WriteStringToLCD *****************
  9527 ;; Defined at:
  9528 ;;		line 47 in file "display8bits.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  s               1    wreg     PTR const unsigned char 
  9531 ;;		 -> main@s(20), 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  9534 ;;		 -> main@s(20), 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  1    wreg      void 
  9537 ;; Registers used:
  9538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9544 ;;      Params:         0       0       0       0       0
  9545 ;;      Locals:         0       1       0       0       0
  9546 ;;      Temps:          0       1       0       0       0
  9547 ;;      Totals:         0       2       0       0       0
  9548 ;;Total ram usage:        2 bytes
  9549 ;; Hardware stack levels used: 1
  9550 ;; Hardware stack levels required when called: 4
  9551 ;; This function calls:
  9552 ;;		_WriteDataToLCD
  9553 ;; This function is called by:
  9554 ;;		_main
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558     10B5                     _WriteStringToLCD:	
  9559                           ;psect for function _WriteStringToLCD
  9560                           
  9561                           
  9562                           ;incstack = 0
  9563                           ; Regs used in _WriteStringToLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9564                           ;WriteStringToLCD@s stored from wreg
  9565     10B5  1283               	bcf	3,5	;RP0=0, select bank0
  9566     10B6  1303               	bcf	3,6	;RP1=0, select bank0
  9567     10B7  00A9               	movwf	WriteStringToLCD@s
  9568     10B8                     l3139:
  9569                           
  9570                           ;display8bits.c: 47: void WriteStringToLCD(const char *s);display8bits.c: 48: {;display8
      +                          bits.c: 49:     while(*s)
  9571     10B8  28C7               	goto	l3145
  9572     10B9                     l3141:
  9573                           
  9574                           ;display8bits.c: 50:     {;display8bits.c: 51:         WriteDataToLCD(*s++);
  9575     10B9  0829               	movf	WriteStringToLCD@s,w
  9576     10BA  0084               	movwf	4
  9577     10BB  0800               	movf	0,w
  9578     10BC  160A  158A  2396  160A  118A  	fcall	_WriteDataToLCD
  9579     10C1                     l3143:
  9580     10C1  3001               	movlw	1
  9581     10C2  1283               	bcf	3,5	;RP0=0, select bank0
  9582     10C3  1303               	bcf	3,6	;RP1=0, select bank0
  9583     10C4  00A8               	movwf	??_WriteStringToLCD
  9584     10C5  0828               	movf	??_WriteStringToLCD,w
  9585     10C6  07A9               	addwf	WriteStringToLCD@s,f
  9586     10C7                     l3145:
  9587                           
  9588                           ;display8bits.c: 49:     while(*s)
  9589     10C7  0829               	movf	WriteStringToLCD@s,w
  9590     10C8  0084               	movwf	4
  9591     10C9  1783               	bsf	3,7	;select IRP bank2
  9592     10CA  0800               	movf	0,w
  9593     10CB  1D03               	btfss	3,2
  9594     10CC  28CE               	goto	u5111
  9595     10CD  28CF               	goto	u5110
  9596     10CE                     u5111:
  9597     10CE  28B9               	goto	l3141
  9598     10CF                     u5110:
  9599     10CF                     l89:
  9600     10CF  0008               	return
  9601     10D0                     __end_of_WriteStringToLCD:
  9602                           
  9603                           	psect	text25
  9604     1B96                     __ptext25:	
  9605 ;; *************** function _WriteDataToLCD *****************
  9606 ;; Defined at:
  9607 ;;		line 27 in file "display8bits.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;  LCDChar         1    wreg     unsigned char 
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  LCDChar         1    7[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0, pclath, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9621 ;;      Params:         0       0       0       0       0
  9622 ;;      Locals:         0       1       0       0       0
  9623 ;;      Temps:          0       0       0       0       0
  9624 ;;      Totals:         0       1       0       0       0
  9625 ;;Total ram usage:        1 bytes
  9626 ;; Hardware stack levels used: 1
  9627 ;; Hardware stack levels required when called: 3
  9628 ;; This function calls:
  9629 ;;		_ToggleEpinOfLCD
  9630 ;; This function is called by:
  9631 ;;		_WriteStringToLCD
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635     1B96                     _WriteDataToLCD:	
  9636                           ;psect for function _WriteDataToLCD
  9637                           
  9638                           
  9639                           ;incstack = 0
  9640                           ; Regs used in _WriteDataToLCD: [wreg+status,2+status,0+pclath+cstack]
  9641                           ;WriteDataToLCD@LCDChar stored from wreg
  9642     1B96  1283               	bcf	3,5	;RP0=0, select bank0
  9643     1B97  1303               	bcf	3,6	;RP1=0, select bank0
  9644     1B98  00A7               	movwf	WriteDataToLCD@LCDChar
  9645     1B99                     l2771:
  9646                           
  9647                           ;display8bits.c: 27: void WriteDataToLCD(char LCDChar);display8bits.c: 28: {;display8bit
      +                          s.c: 29:     RC6 = 1;
  9648     1B99  1707               	bsf	7,6	;volatile
  9649     1B9A                     l2773:
  9650                           
  9651                           ;display8bits.c: 30:     PORTD = LCDChar;
  9652     1B9A  0827               	movf	WriteDataToLCD@LCDChar,w
  9653     1B9B  0088               	movwf	8	;volatile
  9654     1B9C                     l2775:
  9655                           
  9656                           ;display8bits.c: 31:     ToggleEpinOfLCD();
  9657     1B9C  120A  158A  2003  160A  158A  	fcall	_ToggleEpinOfLCD
  9658     1BA1                     l80:
  9659     1BA1  0008               	return
  9660     1BA2                     __end_of_WriteDataToLCD:
  9661                           
  9662                           	psect	text26
  9663     1BC1                     __ptext26:	
  9664 ;; *************** function _InitLCD *****************
  9665 ;; Defined at:
  9666 ;;		line 33 in file "display8bits.c"
  9667 ;; Parameters:    Size  Location     Type
  9668 ;;		None
  9669 ;; Auto vars:     Size  Location     Type
  9670 ;;		None
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, status,2, status,0, pclath, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 0/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9680 ;;      Params:         0       0       0       0       0
  9681 ;;      Locals:         0       0       0       0       0
  9682 ;;      Temps:          0       0       0       0       0
  9683 ;;      Totals:         0       0       0       0       0
  9684 ;;Total ram usage:        0 bytes
  9685 ;; Hardware stack levels used: 1
  9686 ;; Hardware stack levels required when called: 4
  9687 ;; This function calls:
  9688 ;;		_WriteCommandToLCD
  9689 ;; This function is called by:
  9690 ;;		_main
  9691 ;; This function uses a non-reentrant model
  9692 ;;
  9693                           
  9694     1BC1                     _InitLCD:	
  9695                           ;psect for function _InitLCD
  9696                           
  9697     1BC1                     l3123:	
  9698                           ;incstack = 0
  9699                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  9700                           
  9701                           
  9702                           ;display8bits.c: 36:     RC7 = 0;
  9703     1BC1  1283               	bcf	3,5	;RP0=0, select bank0
  9704     1BC2  1303               	bcf	3,6	;RP1=0, select bank0
  9705     1BC3  1387               	bcf	7,7	;volatile
  9706                           
  9707                           ;display8bits.c: 37:     RC6 = 0;
  9708     1BC4  1307               	bcf	7,6	;volatile
  9709     1BC5                     l3125:
  9710                           
  9711                           ;display8bits.c: 38:     PORTD = 0;
  9712     1BC5  0188               	clrf	8	;volatile
  9713     1BC6                     l3127:
  9714                           
  9715                           ;display8bits.c: 39:     TRISC7 = 0;
  9716     1BC6  1683               	bsf	3,5	;RP0=1, select bank1
  9717     1BC7  1303               	bcf	3,6	;RP1=0, select bank1
  9718     1BC8  1387               	bcf	7,7	;volatile
  9719     1BC9                     l3129:
  9720                           
  9721                           ;display8bits.c: 40:     TRISC6 = 0;
  9722     1BC9  1307               	bcf	7,6	;volatile
  9723                           
  9724                           ;display8bits.c: 41:     TRISD = 0;
  9725     1BCA  0188               	clrf	8	;volatile
  9726     1BCB                     l3131:
  9727                           
  9728                           ;display8bits.c: 42:     WriteCommandToLCD(0x38);
  9729     1BCB  3038               	movlw	56
  9730     1BCC  160A  158A  238A  160A  158A  	fcall	_WriteCommandToLCD
  9731     1BD1                     l3133:
  9732                           
  9733                           ;display8bits.c: 43:     WriteCommandToLCD(0x0c);
  9734     1BD1  300C               	movlw	12
  9735     1BD2  160A  158A  238A  160A  158A  	fcall	_WriteCommandToLCD
  9736     1BD7                     l3135:
  9737                           
  9738                           ;display8bits.c: 44:     WriteCommandToLCD(0x01);
  9739     1BD7  3001               	movlw	1
  9740     1BD8  160A  158A  238A  160A  158A  	fcall	_WriteCommandToLCD
  9741     1BDD                     l3137:
  9742                           
  9743                           ;display8bits.c: 45:     WriteCommandToLCD(0x06);
  9744     1BDD  3006               	movlw	6
  9745     1BDE  160A  158A  238A  160A  158A  	fcall	_WriteCommandToLCD
  9746     1BE3                     l83:
  9747     1BE3  0008               	return
  9748     1BE4                     __end_of_InitLCD:
  9749                           
  9750                           	psect	text27
  9751     1BAF                     __ptext27:	
  9752 ;; *************** function _ClearLCDScreen *****************
  9753 ;; Defined at:
  9754 ;;		line 54 in file "display8bits.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0, pclath, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9768 ;;      Params:         0       0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0
  9770 ;;      Temps:          0       2       0       0       0
  9771 ;;      Totals:         0       2       0       0       0
  9772 ;;Total ram usage:        2 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 4
  9775 ;; This function calls:
  9776 ;;		_WriteCommandToLCD
  9777 ;; This function is called by:
  9778 ;;		_main
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782     1BAF                     _ClearLCDScreen:	
  9783                           ;psect for function _ClearLCDScreen
  9784                           
  9785     1BAF                     l3147:	
  9786                           ;incstack = 0
  9787                           ; Regs used in _ClearLCDScreen: [wreg+status,2+status,0+pclath+cstack]
  9788                           
  9789                           
  9790                           ;display8bits.c: 56:     WriteCommandToLCD(0x01);
  9791     1BAF  3001               	movlw	1
  9792     1BB0  160A  158A  238A  160A  158A  	fcall	_WriteCommandToLCD
  9793     1BB5                     l3149:
  9794                           
  9795                           ;display8bits.c: 57:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9796     1BB5  3006               	movlw	6
  9797     1BB6  1283               	bcf	3,5	;RP0=0, select bank0
  9798     1BB7  1303               	bcf	3,6	;RP1=0, select bank0
  9799     1BB8  00A9               	movwf	??_ClearLCDScreen+1
  9800     1BB9  302F               	movlw	47
  9801     1BBA  00A8               	movwf	??_ClearLCDScreen
  9802     1BBB                     u6557:
  9803     1BBB  0BA8               	decfsz	??_ClearLCDScreen,f
  9804     1BBC  2BBB               	goto	u6557
  9805     1BBD  0BA9               	decfsz	??_ClearLCDScreen+1,f
  9806     1BBE  2BBB               	goto	u6557
  9807     1BBF  2BC0               	nop2
  9808     1BC0                     l92:
  9809     1BC0  0008               	return
  9810     1BC1                     __end_of_ClearLCDScreen:
  9811                           
  9812                           	psect	text28
  9813     1B8A                     __ptext28:	
  9814 ;; *************** function _WriteCommandToLCD *****************
  9815 ;; Defined at:
  9816 ;;		line 21 in file "display8bits.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  Command         1    wreg     unsigned char 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  Command         1    7[BANK0 ] unsigned char 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      void 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0, pclath, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9830 ;;      Params:         0       0       0       0       0
  9831 ;;      Locals:         0       1       0       0       0
  9832 ;;      Temps:          0       0       0       0       0
  9833 ;;      Totals:         0       1       0       0       0
  9834 ;;Total ram usage:        1 bytes
  9835 ;; Hardware stack levels used: 1
  9836 ;; Hardware stack levels required when called: 3
  9837 ;; This function calls:
  9838 ;;		_ToggleEpinOfLCD
  9839 ;; This function is called by:
  9840 ;;		_InitLCD
  9841 ;;		_ClearLCDScreen
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845     1B8A                     _WriteCommandToLCD:	
  9846                           ;psect for function _WriteCommandToLCD
  9847                           
  9848                           
  9849                           ;incstack = 0
  9850                           ; Regs used in _WriteCommandToLCD: [wreg+status,2+status,0+pclath+cstack]
  9851                           ;WriteCommandToLCD@Command stored from wreg
  9852     1B8A  1283               	bcf	3,5	;RP0=0, select bank0
  9853     1B8B  1303               	bcf	3,6	;RP1=0, select bank0
  9854     1B8C  00A7               	movwf	WriteCommandToLCD@Command
  9855     1B8D                     l2765:
  9856                           
  9857                           ;display8bits.c: 21: void WriteCommandToLCD(unsigned char Command);display8bits.c: 22: {
      +                          ;display8bits.c: 23:     RC6 = 0;
  9858     1B8D  1307               	bcf	7,6	;volatile
  9859     1B8E                     l2767:
  9860                           
  9861                           ;display8bits.c: 24:     PORTD = Command;
  9862     1B8E  0827               	movf	WriteCommandToLCD@Command,w
  9863     1B8F  0088               	movwf	8	;volatile
  9864     1B90                     l2769:
  9865                           
  9866                           ;display8bits.c: 25:     ToggleEpinOfLCD();
  9867     1B90  120A  158A  2003  160A  158A  	fcall	_ToggleEpinOfLCD
  9868     1B95                     l77:
  9869     1B95  0008               	return
  9870     1B96                     __end_of_WriteCommandToLCD:
  9871                           
  9872                           	psect	text29
  9873     0803                     __ptext29:	
  9874 ;; *************** function _ToggleEpinOfLCD *****************
  9875 ;; Defined at:
  9876 ;;		line 14 in file "display8bits.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;		None
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;		None
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9890 ;;      Params:         0       0       0       0       0
  9891 ;;      Locals:         0       0       0       0       0
  9892 ;;      Temps:          0       1       0       0       0
  9893 ;;      Totals:         0       1       0       0       0
  9894 ;;Total ram usage:        1 bytes
  9895 ;; Hardware stack levels used: 1
  9896 ;; Hardware stack levels required when called: 2
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_WriteCommandToLCD
  9901 ;;		_WriteDataToLCD
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905     0803                     _ToggleEpinOfLCD:	
  9906                           ;psect for function _ToggleEpinOfLCD
  9907                           
  9908     0803                     l2295:	
  9909                           ;incstack = 0
  9910                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  9911                           
  9912                           
  9913                           ;display8bits.c: 16:     RC7 = 1;
  9914     0803  1283               	bcf	3,5	;RP0=0, select bank0
  9915     0804  1303               	bcf	3,6	;RP1=0, select bank0
  9916     0805  1787               	bsf	7,7	;volatile
  9917     0806                     l2297:
  9918                           
  9919                           ;display8bits.c: 17:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  9920     0806  30C7               	movlw	199
  9921     0807  1283               	bcf	3,5	;RP0=0, select bank0
  9922     0808  1303               	bcf	3,6	;RP1=0, select bank0
  9923     0809  00A6               	movwf	??_ToggleEpinOfLCD
  9924     080A                     u6567:
  9925     080A  280B               	nop2
  9926     080B  0BA6               	decfsz	??_ToggleEpinOfLCD,f
  9927     080C  280A               	goto	u6567
  9928     080D  280E               	nop2
  9929     080E                     l2299:
  9930                           
  9931                           ;display8bits.c: 18:     RC7 = 0;
  9932     080E  1283               	bcf	3,5	;RP0=0, select bank0
  9933     080F  1303               	bcf	3,6	;RP1=0, select bank0
  9934     0810  1387               	bcf	7,7	;volatile
  9935                           
  9936                           ;display8bits.c: 19:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  9937     0811  30C7               	movlw	199
  9938     0812  1283               	bcf	3,5	;RP0=0, select bank0
  9939     0813  1303               	bcf	3,6	;RP1=0, select bank0
  9940     0814  00A6               	movwf	??_ToggleEpinOfLCD
  9941     0815                     u6577:
  9942     0815  2816               	nop2
  9943     0816  0BA6               	decfsz	??_ToggleEpinOfLCD,f
  9944     0817  2815               	goto	u6577
  9945     0818  2819               	nop2
  9946     0819                     l74:
  9947     0819  0008               	return
  9948     081A                     __end_of_ToggleEpinOfLCD:
  9949                           
  9950                           	psect	text30
  9951     1DEB                     __ptext30:	
  9952 ;; *************** function _isr *****************
  9953 ;; Defined at:
  9954 ;;		line 35 in file "Lab2.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;		None
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;		None
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg, status,2, status,0, pclath, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9968 ;;      Params:         0       0       0       0       0
  9969 ;;      Locals:         0       0       0       0       0
  9970 ;;      Temps:          0       6       0       0       0
  9971 ;;      Totals:         0       6       0       0       0
  9972 ;;Total ram usage:        6 bytes
  9973 ;; Hardware stack levels used: 1
  9974 ;; Hardware stack levels required when called: 1
  9975 ;; This function calls:
  9976 ;;		i1___awdiv
  9977 ;;		i1___xxtofl
  9978 ;; This function is called by:
  9979 ;;		Interrupt level 1
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983     1DEB                     _isr:	
  9984                           ;psect for function _isr
  9985                           
  9986     1DEB                     i1l3467:
  9987                           
  9988                           ;Lab2.c: 37: if(PIR1bits.ADIF){
  9989     1DEB  1F0C               	btfss	12,6	;volatile
  9990     1DEC  2DEE               	goto	u563_21
  9991     1DED  2DEF               	goto	u563_20
  9992     1DEE                     u563_21:
  9993     1DEE  2E49               	goto	i1l167
  9994     1DEF                     u563_20:
  9995     1DEF                     i1l3469:
  9996                           
  9997                           ;Lab2.c: 39:        if (ADCON0bits.CHS ==1){
  9998     1DEF  0C1F               	rrf	31,w	;volatile
  9999     1DF0  00A0               	movwf	??_isr
 10000     1DF1  0C20               	rrf	??_isr,w
 10001     1DF2  390F               	andlw	15
 10002     1DF3  3A01               	xorlw	1
 10003     1DF4  1D03               	skipz
 10004     1DF5  2DF7               	goto	u564_21
 10005     1DF6  2DF8               	goto	u564_20
 10006     1DF7                     u564_21:
 10007     1DF7  2E0F               	goto	i1l3473
 10008     1DF8                     u564_20:
 10009     1DF8                     i1l3471:
 10010                           
 10011                           ;Lab2.c: 41:               valpot0 =5/ ADRESH;
 10012     1DF8  081E               	movf	30,w	;volatile
 10013     1DF9  00A0               	movwf	??_isr
 10014     1DFA  01A1               	clrf	??_isr+1
 10015     1DFB  0820               	movf	??_isr,w
 10016     1DFC  00F0               	movwf	i1___awdiv@divisor
 10017     1DFD  0821               	movf	??_isr+1,w
 10018     1DFE  00F1               	movwf	i1___awdiv@divisor+1
 10019     1DFF  3005               	movlw	5
 10020     1E00  00F2               	movwf	i1___awdiv@dividend
 10021     1E01  3000               	movlw	0
 10022     1E02  00F3               	movwf	i1___awdiv@dividend+1
 10023     1E03  160A  158A  2650  160A  158A  	fcall	i1___awdiv
 10024     1E08  0871               	movf	?i1___awdiv+1,w
 10025     1E09  1283               	bcf	3,5	;RP0=0, select bank0
 10026     1E0A  1303               	bcf	3,6	;RP1=0, select bank0
 10027     1E0B  00E9               	movwf	_valpot0+1
 10028     1E0C  0870               	movf	?i1___awdiv,w
 10029     1E0D  00E8               	movwf	_valpot0
 10030                           
 10031                           ;Lab2.c: 43:         }
 10032     1E0E  2E46               	goto	i1l3481
 10033     1E0F                     i1l3473:
 10034     1E0F  0C1F               	rrf	31,w	;volatile
 10035     1E10  00A0               	movwf	??_isr
 10036     1E11  0C20               	rrf	??_isr,w
 10037     1E12  390F               	andlw	15
 10038     1E13  3A00               	xorlw	0
 10039     1E14  1D03               	skipz
 10040     1E15  2E17               	goto	u565_21
 10041     1E16  2E18               	goto	u565_20
 10042     1E17                     u565_21:
 10043     1E17  2E36               	goto	i1l3477
 10044     1E18                     u565_20:
 10045     1E18                     i1l3475:
 10046                           
 10047                           ;Lab2.c: 46:          varvolt = ADRESH;
 10048     1E18  081E               	movf	30,w	;volatile
 10049     1E19  00A0               	movwf	??_isr
 10050     1E1A  01A1               	clrf	??_isr+1
 10051     1E1B  01A2               	clrf	??_isr+2
 10052     1E1C  01A3               	clrf	??_isr+3
 10053     1E1D  0823               	movf	??_isr+3,w
 10054     1E1E  00F3               	movwf	i1___xxtofl@val+3
 10055     1E1F  0822               	movf	??_isr+2,w
 10056     1E20  00F2               	movwf	i1___xxtofl@val+2
 10057     1E21  0821               	movf	??_isr+1,w
 10058     1E22  00F1               	movwf	i1___xxtofl@val+1
 10059     1E23  0820               	movf	??_isr,w
 10060     1E24  00F0               	movwf	i1___xxtofl@val
 10061     1E25  3000               	movlw	0
 10062     1E26  160A  118A  222B  160A  158A  	fcall	i1___xxtofl
 10063     1E2B  0873               	movf	?i1___xxtofl+3,w
 10064     1E2C  1683               	bsf	3,5	;RP0=1, select bank3
 10065     1E2D  1703               	bsf	3,6	;RP1=1, select bank3
 10066     1E2E  00B1               	movwf	(_varvolt+3)^(0+384)
 10067     1E2F  0872               	movf	?i1___xxtofl+2,w
 10068     1E30  00B0               	movwf	(_varvolt+2)^(0+384)
 10069     1E31  0871               	movf	?i1___xxtofl+1,w
 10070     1E32  00AF               	movwf	(_varvolt+1)^(0+384)
 10071     1E33  0870               	movf	?i1___xxtofl,w
 10072     1E34  00AE               	movwf	_varvolt^(0+384)
 10073                           
 10074                           ;Lab2.c: 47:         }
 10075     1E35  2E46               	goto	i1l3481
 10076     1E36                     i1l3477:
 10077     1E36  0C1F               	rrf	31,w	;volatile
 10078     1E37  00A0               	movwf	??_isr
 10079     1E38  0C20               	rrf	??_isr,w
 10080     1E39  390F               	andlw	15
 10081     1E3A  3A02               	xorlw	2
 10082     1E3B  1D03               	skipz
 10083     1E3C  2E3E               	goto	u566_21
 10084     1E3D  2E3F               	goto	u566_20
 10085     1E3E                     u566_21:
 10086     1E3E  2E46               	goto	i1l3481
 10087     1E3F                     u566_20:
 10088     1E3F                     i1l3479:
 10089                           
 10090                           ;Lab2.c: 49:             val = ADRESH;
 10091     1E3F  081E               	movf	30,w	;volatile
 10092     1E40  00A0               	movwf	??_isr
 10093     1E41  01A1               	clrf	??_isr+1
 10094     1E42  0820               	movf	??_isr,w
 10095     1E43  00E4               	movwf	_val
 10096     1E44  0821               	movf	??_isr+1,w
 10097     1E45  00E5               	movwf	_val+1
 10098     1E46                     i1l3481:
 10099                           
 10100                           ;Lab2.c: 51:             PIR1bits.ADIF =0;
 10101     1E46  1283               	bcf	3,5	;RP0=0, select bank0
 10102     1E47  1303               	bcf	3,6	;RP1=0, select bank0
 10103     1E48  130C               	bcf	12,6	;volatile
 10104     1E49                     i1l167:
 10105     1E49  0825               	movf	??_isr+5,w
 10106     1E4A  008A               	movwf	10
 10107     1E4B  0E24               	swapf	??_isr+4,w
 10108     1E4C  0083               	movwf	3
 10109     1E4D  0EFE               	swapf	btemp,f
 10110     1E4E  0E7E               	swapf	btemp,w
 10111     1E4F  0009               	retfie
 10112     1E50                     __end_of_isr:
 10113                           
 10114                           	psect	intentry
 10115     0004                     __pintentry:	
 10116                           ;incstack = 0
 10117                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 10118                           
 10119     0004                     interrupt_function:
 10120     007E                     saved_w	set	btemp
 10121     0004  00FE               	movwf	btemp
 10122     0005  0E03               	swapf	3,w
 10123     0006  1283               	bcf	3,5	;RP0=0, select bank0
 10124     0007  1303               	bcf	3,6	;RP1=0, select bank0
 10125     0008  00A4               	movwf	??_isr+4
 10126     0009  080A               	movf	10,w
 10127     000A  00A5               	movwf	??_isr+5
 10128     000B  160A  158A  2DEB   	ljmp	_isr
 10129                           
 10130                           	psect	text31
 10131     122B                     __ptext31:	
 10132 ;; *************** function i1___xxtofl *****************
 10133 ;; Defined at:
 10134 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  sign            1    wreg     unsigned char 
 10137 ;;  val             4    0[COMMON] long 
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  sign            1    8[COMMON] unsigned char 
 10140 ;;  arg             4   10[COMMON] unsigned long 
 10141 ;;  exp             1    9[COMMON] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  4    0[COMMON] unsigned char 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10151 ;;      Params:         4       0       0       0       0
 10152 ;;      Locals:         6       0       0       0       0
 10153 ;;      Temps:          4       0       0       0       0
 10154 ;;      Totals:        14       0       0       0       0
 10155 ;;Total ram usage:       14 bytes
 10156 ;; Hardware stack levels used: 1
 10157 ;; This function calls:
 10158 ;;		Nothing
 10159 ;; This function is called by:
 10160 ;;		_isr
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164     122B                     i1___xxtofl:	
 10165                           ;psect for function i1___xxtofl
 10166                           
 10167                           
 10168                           ;incstack = 0
 10169                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 10170                           ;i1___xxtofl@sign stored from wreg
 10171     122B  00F8               	movwf	i1___xxtofl@sign
 10172     122C                     i1l3423:
 10173     122C  0878               	movf	i1___xxtofl@sign,w
 10174     122D  1903               	btfsc	3,2
 10175     122E  2A30               	goto	u549_21
 10176     122F  2A31               	goto	u549_20
 10177     1230                     u549_21:
 10178     1230  2A45               	goto	i1l3429
 10179     1231                     u549_20:
 10180     1231                     i1l3425:
 10181     1231  1FF3               	btfss	i1___xxtofl@val+3,7
 10182     1232  2A34               	goto	u550_21
 10183     1233  2A35               	goto	u550_20
 10184     1234                     u550_21:
 10185     1234  2A45               	goto	i1l3429
 10186     1235                     u550_20:
 10187     1235                     i1l3427:
 10188     1235  0970               	comf	i1___xxtofl@val,w
 10189     1236  00FA               	movwf	i1___xxtofl@arg
 10190     1237  0971               	comf	i1___xxtofl@val+1,w
 10191     1238  00FB               	movwf	i1___xxtofl@arg+1
 10192     1239  0972               	comf	i1___xxtofl@val+2,w
 10193     123A  00FC               	movwf	i1___xxtofl@arg+2
 10194     123B  0973               	comf	i1___xxtofl@val+3,w
 10195     123C  00FD               	movwf	i1___xxtofl@arg+3
 10196     123D  0AFA               	incf	i1___xxtofl@arg,f
 10197     123E  1903               	skipnz
 10198     123F  0AFB               	incf	i1___xxtofl@arg+1,f
 10199     1240  1903               	skipnz
 10200     1241  0AFC               	incf	i1___xxtofl@arg+2,f
 10201     1242  1903               	skipnz
 10202     1243  0AFD               	incf	i1___xxtofl@arg+3,f
 10203     1244  2A4D               	goto	i1l820
 10204     1245                     i1l3429:
 10205     1245  0873               	movf	i1___xxtofl@val+3,w
 10206     1246  00FD               	movwf	i1___xxtofl@arg+3
 10207     1247  0872               	movf	i1___xxtofl@val+2,w
 10208     1248  00FC               	movwf	i1___xxtofl@arg+2
 10209     1249  0871               	movf	i1___xxtofl@val+1,w
 10210     124A  00FB               	movwf	i1___xxtofl@arg+1
 10211     124B  0870               	movf	i1___xxtofl@val,w
 10212     124C  00FA               	movwf	i1___xxtofl@arg
 10213     124D                     i1l820:
 10214     124D  0873               	movf	i1___xxtofl@val+3,w
 10215     124E  0472               	iorwf	i1___xxtofl@val+2,w
 10216     124F  0471               	iorwf	i1___xxtofl@val+1,w
 10217     1250  0470               	iorwf	i1___xxtofl@val,w
 10218     1251  1D03               	skipz
 10219     1252  2A54               	goto	u551_21
 10220     1253  2A55               	goto	u551_20
 10221     1254                     u551_21:
 10222     1254  2A5E               	goto	i1l3435
 10223     1255                     u551_20:
 10224     1255                     i1l3431:
 10225     1255  3000               	movlw	0
 10226     1256  00F3               	movwf	?i1___xxtofl+3
 10227     1257  3000               	movlw	0
 10228     1258  00F2               	movwf	?i1___xxtofl+2
 10229     1259  3000               	movlw	0
 10230     125A  00F1               	movwf	?i1___xxtofl+1
 10231     125B  3000               	movlw	0
 10232     125C  00F0               	movwf	?i1___xxtofl
 10233     125D  2AE2               	goto	i1l822
 10234     125E                     i1l3435:
 10235     125E  3096               	movlw	150
 10236     125F  00F9               	movwf	i1___xxtofl@exp
 10237     1260  2A6E               	goto	i1l3439
 10238     1261                     i1l3437:
 10239     1261  3001               	movlw	1
 10240     1262  00F4               	movwf	??i1___xxtofl
 10241     1263  0874               	movf	??i1___xxtofl,w
 10242     1264  07F9               	addwf	i1___xxtofl@exp,f
 10243     1265  3001               	movlw	1
 10244     1266                     u552_25:
 10245     1266  1003               	clrc
 10246     1267  0CFD               	rrf	i1___xxtofl@arg+3,f
 10247     1268  0CFC               	rrf	i1___xxtofl@arg+2,f
 10248     1269  0CFB               	rrf	i1___xxtofl@arg+1,f
 10249     126A  0CFA               	rrf	i1___xxtofl@arg,f
 10250     126B  3EFF               	addlw	-1
 10251     126C  1D03               	skipz
 10252     126D  2A66               	goto	u552_25
 10253     126E                     i1l3439:
 10254     126E  30FE               	movlw	254
 10255     126F  057D               	andwf	i1___xxtofl@arg+3,w
 10256     1270  1D03               	btfss	3,2
 10257     1271  2A73               	goto	u553_21
 10258     1272  2A74               	goto	u553_20
 10259     1273                     u553_21:
 10260     1273  2A61               	goto	i1l3437
 10261     1274                     u553_20:
 10262     1274  2A90               	goto	i1l826
 10263     1275                     i1l3441:
 10264     1275  3001               	movlw	1
 10265     1276  00F4               	movwf	??i1___xxtofl
 10266     1277  0874               	movf	??i1___xxtofl,w
 10267     1278  07F9               	addwf	i1___xxtofl@exp,f
 10268     1279                     i1l3443:
 10269     1279  3001               	movlw	1
 10270     127A  07FA               	addwf	i1___xxtofl@arg,f
 10271     127B  3000               	movlw	0
 10272     127C  1803               	skipnc
 10273     127D  3001               	movlw	1
 10274     127E  07FB               	addwf	i1___xxtofl@arg+1,f
 10275     127F  3000               	movlw	0
 10276     1280  1803               	skipnc
 10277     1281  3001               	movlw	1
 10278     1282  07FC               	addwf	i1___xxtofl@arg+2,f
 10279     1283  3000               	movlw	0
 10280     1284  1803               	skipnc
 10281     1285  3001               	movlw	1
 10282     1286  07FD               	addwf	i1___xxtofl@arg+3,f
 10283     1287                     i1l3445:
 10284     1287  3001               	movlw	1
 10285     1288                     u554_25:
 10286     1288  1003               	clrc
 10287     1289  0CFD               	rrf	i1___xxtofl@arg+3,f
 10288     128A  0CFC               	rrf	i1___xxtofl@arg+2,f
 10289     128B  0CFB               	rrf	i1___xxtofl@arg+1,f
 10290     128C  0CFA               	rrf	i1___xxtofl@arg,f
 10291     128D  3EFF               	addlw	-1
 10292     128E  1D03               	skipz
 10293     128F  2A88               	goto	u554_25
 10294     1290                     i1l826:
 10295     1290  30FF               	movlw	255
 10296     1291  057D               	andwf	i1___xxtofl@arg+3,w
 10297     1292  1D03               	btfss	3,2
 10298     1293  2A95               	goto	u555_21
 10299     1294  2A96               	goto	u555_20
 10300     1295                     u555_21:
 10301     1295  2A75               	goto	i1l3441
 10302     1296                     u555_20:
 10303     1296  2AA2               	goto	i1l3449
 10304     1297                     i1l3447:
 10305     1297  3001               	movlw	1
 10306     1298  02F9               	subwf	i1___xxtofl@exp,f
 10307     1299  3001               	movlw	1
 10308     129A  00F4               	movwf	??i1___xxtofl
 10309     129B                     u556_25:
 10310     129B  1003               	clrc
 10311     129C  0DFA               	rlf	i1___xxtofl@arg,f
 10312     129D  0DFB               	rlf	i1___xxtofl@arg+1,f
 10313     129E  0DFC               	rlf	i1___xxtofl@arg+2,f
 10314     129F  0DFD               	rlf	i1___xxtofl@arg+3,f
 10315     12A0  0BF4               	decfsz	??i1___xxtofl,f
 10316     12A1  2A9B               	goto	u556_25
 10317     12A2                     i1l3449:
 10318     12A2  1BFC               	btfsc	i1___xxtofl@arg+2,7
 10319     12A3  2AA5               	goto	u557_21
 10320     12A4  2AA6               	goto	u557_20
 10321     12A5                     u557_21:
 10322     12A5  2AAC               	goto	i1l833
 10323     12A6                     u557_20:
 10324     12A6                     i1l3451:
 10325     12A6  3002               	movlw	2
 10326     12A7  0279               	subwf	i1___xxtofl@exp,w
 10327     12A8  1803               	skipnc
 10328     12A9  2AAB               	goto	u558_21
 10329     12AA  2AAC               	goto	u558_20
 10330     12AB                     u558_21:
 10331     12AB  2A97               	goto	i1l3447
 10332     12AC                     u558_20:
 10333     12AC                     i1l833:
 10334     12AC  1879               	btfsc	i1___xxtofl@exp,0
 10335     12AD  2AAF               	goto	u559_21
 10336     12AE  2AB0               	goto	u559_20
 10337     12AF                     u559_21:
 10338     12AF  2AB8               	goto	i1l834
 10339     12B0                     u559_20:
 10340     12B0                     i1l3453:
 10341     12B0  30FF               	movlw	255
 10342     12B1  05FA               	andwf	i1___xxtofl@arg,f
 10343     12B2  30FF               	movlw	255
 10344     12B3  05FB               	andwf	i1___xxtofl@arg+1,f
 10345     12B4  307F               	movlw	127
 10346     12B5  05FC               	andwf	i1___xxtofl@arg+2,f
 10347     12B6  30FF               	movlw	255
 10348     12B7  05FD               	andwf	i1___xxtofl@arg+3,f
 10349     12B8                     i1l834:
 10350     12B8  1003               	clrc
 10351     12B9  0CF9               	rrf	i1___xxtofl@exp,f
 10352     12BA                     i1l3455:
 10353     12BA  0879               	movf	i1___xxtofl@exp,w
 10354     12BB  00F4               	movwf	??i1___xxtofl
 10355     12BC  01F5               	clrf	??i1___xxtofl+1
 10356     12BD  01F6               	clrf	??i1___xxtofl+2
 10357     12BE  01F7               	clrf	??i1___xxtofl+3
 10358     12BF  3018               	movlw	24
 10359     12C0                     u560_25:
 10360     12C0  1003               	clrc
 10361     12C1  0DF4               	rlf	??i1___xxtofl,f
 10362     12C2  0DF5               	rlf	??i1___xxtofl+1,f
 10363     12C3  0DF6               	rlf	??i1___xxtofl+2,f
 10364     12C4  0DF7               	rlf	??i1___xxtofl+3,f
 10365     12C5                     u560_20:
 10366     12C5  3EFF               	addlw	-1
 10367     12C6  1D03               	skipz
 10368     12C7  2AC0               	goto	u560_25
 10369     12C8  0874               	movf	??i1___xxtofl,w
 10370     12C9  04FA               	iorwf	i1___xxtofl@arg,f
 10371     12CA  0875               	movf	??i1___xxtofl+1,w
 10372     12CB  04FB               	iorwf	i1___xxtofl@arg+1,f
 10373     12CC  0876               	movf	??i1___xxtofl+2,w
 10374     12CD  04FC               	iorwf	i1___xxtofl@arg+2,f
 10375     12CE  0877               	movf	??i1___xxtofl+3,w
 10376     12CF  04FD               	iorwf	i1___xxtofl@arg+3,f
 10377     12D0                     i1l3457:
 10378     12D0  0878               	movf	i1___xxtofl@sign,w
 10379     12D1  1903               	btfsc	3,2
 10380     12D2  2AD4               	goto	u561_21
 10381     12D3  2AD5               	goto	u561_20
 10382     12D4                     u561_21:
 10383     12D4  2ADA               	goto	i1l3463
 10384     12D5                     u561_20:
 10385     12D5                     i1l3459:
 10386     12D5  1FF3               	btfss	i1___xxtofl@val+3,7
 10387     12D6  2AD8               	goto	u562_21
 10388     12D7  2AD9               	goto	u562_20
 10389     12D8                     u562_21:
 10390     12D8  2ADA               	goto	i1l3463
 10391     12D9                     u562_20:
 10392     12D9                     i1l3461:
 10393     12D9  17FD               	bsf	i1___xxtofl@arg+3,7
 10394     12DA                     i1l3463:
 10395     12DA  087D               	movf	i1___xxtofl@arg+3,w
 10396     12DB  00F3               	movwf	?i1___xxtofl+3
 10397     12DC  087C               	movf	i1___xxtofl@arg+2,w
 10398     12DD  00F2               	movwf	?i1___xxtofl+2
 10399     12DE  087B               	movf	i1___xxtofl@arg+1,w
 10400     12DF  00F1               	movwf	?i1___xxtofl+1
 10401     12E0  087A               	movf	i1___xxtofl@arg,w
 10402     12E1  00F0               	movwf	?i1___xxtofl
 10403     12E2                     i1l822:
 10404     12E2  0008               	return
 10405     12E3                     __end_ofi1___xxtofl:
 10406                           
 10407                           	psect	text32
 10408     1E50                     __ptext32:	
 10409 ;; *************** function i1___awdiv *****************
 10410 ;; Defined at:
 10411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  divisor         2    0[COMMON] int 
 10414 ;;  dividend        2    2[COMMON] int 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  quotient        2    7[COMMON] int 
 10417 ;;  sign            1    6[COMMON] unsigned char 
 10418 ;;  counter         1    5[COMMON] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  2    0[COMMON] int 
 10421 ;; Registers used:
 10422 ;;		wreg, status,2, status,0
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10428 ;;      Params:         4       0       0       0       0
 10429 ;;      Locals:         4       0       0       0       0
 10430 ;;      Temps:          1       0       0       0       0
 10431 ;;      Totals:         9       0       0       0       0
 10432 ;;Total ram usage:        9 bytes
 10433 ;; Hardware stack levels used: 1
 10434 ;; This function calls:
 10435 ;;		Nothing
 10436 ;; This function is called by:
 10437 ;;		_isr
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441     1E50                     i1___awdiv:	
 10442                           ;psect for function i1___awdiv
 10443                           
 10444     1E50                     i1l3379:	
 10445                           ;incstack = 0
 10446                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
 10447                           
 10448     1E50  01F6               	clrf	i1___awdiv@sign
 10449     1E51                     i1l3381:
 10450     1E51  1FF1               	btfss	i1___awdiv@divisor+1,7
 10451     1E52  2E54               	goto	u539_21
 10452     1E53  2E55               	goto	u539_20
 10453     1E54                     u539_21:
 10454     1E54  2E5C               	goto	i1l3387
 10455     1E55                     u539_20:
 10456     1E55                     i1l3383:
 10457     1E55  09F0               	comf	i1___awdiv@divisor,f
 10458     1E56  09F1               	comf	i1___awdiv@divisor+1,f
 10459     1E57  0AF0               	incf	i1___awdiv@divisor,f
 10460     1E58  1903               	skipnz
 10461     1E59  0AF1               	incf	i1___awdiv@divisor+1,f
 10462     1E5A                     i1l3385:
 10463     1E5A  01F6               	clrf	i1___awdiv@sign
 10464     1E5B  0AF6               	incf	i1___awdiv@sign,f
 10465     1E5C                     i1l3387:
 10466     1E5C  1FF3               	btfss	i1___awdiv@dividend+1,7
 10467     1E5D  2E5F               	goto	u540_21
 10468     1E5E  2E60               	goto	u540_20
 10469     1E5F                     u540_21:
 10470     1E5F  2E69               	goto	i1l3393
 10471     1E60                     u540_20:
 10472     1E60                     i1l3389:
 10473     1E60  09F2               	comf	i1___awdiv@dividend,f
 10474     1E61  09F3               	comf	i1___awdiv@dividend+1,f
 10475     1E62  0AF2               	incf	i1___awdiv@dividend,f
 10476     1E63  1903               	skipnz
 10477     1E64  0AF3               	incf	i1___awdiv@dividend+1,f
 10478     1E65                     i1l3391:
 10479     1E65  3001               	movlw	1
 10480     1E66  00F4               	movwf	??i1___awdiv
 10481     1E67  0874               	movf	??i1___awdiv,w
 10482     1E68  06F6               	xorwf	i1___awdiv@sign,f
 10483     1E69                     i1l3393:
 10484     1E69  01F7               	clrf	i1___awdiv@quotient
 10485     1E6A  01F8               	clrf	i1___awdiv@quotient+1
 10486     1E6B                     i1l3395:
 10487     1E6B  0870               	movf	i1___awdiv@divisor,w
 10488     1E6C  0471               	iorwf	i1___awdiv@divisor+1,w
 10489     1E6D  1903               	btfsc	3,2
 10490     1E6E  2E70               	goto	u541_21
 10491     1E6F  2E71               	goto	u541_20
 10492     1E70                     u541_21:
 10493     1E70  2EA8               	goto	i1l3415
 10494     1E71                     u541_20:
 10495     1E71                     i1l3397:
 10496     1E71  01F5               	clrf	i1___awdiv@counter
 10497     1E72  0AF5               	incf	i1___awdiv@counter,f
 10498     1E73  2E7F               	goto	i1l3403
 10499     1E74                     i1l3399:
 10500     1E74  3001               	movlw	1
 10501     1E75                     u542_25:
 10502     1E75  1003               	clrc
 10503     1E76  0DF0               	rlf	i1___awdiv@divisor,f
 10504     1E77  0DF1               	rlf	i1___awdiv@divisor+1,f
 10505     1E78  3EFF               	addlw	-1
 10506     1E79  1D03               	skipz
 10507     1E7A  2E75               	goto	u542_25
 10508     1E7B                     i1l3401:
 10509     1E7B  3001               	movlw	1
 10510     1E7C  00F4               	movwf	??i1___awdiv
 10511     1E7D  0874               	movf	??i1___awdiv,w
 10512     1E7E  07F5               	addwf	i1___awdiv@counter,f
 10513     1E7F                     i1l3403:
 10514     1E7F  1FF1               	btfss	i1___awdiv@divisor+1,7
 10515     1E80  2E82               	goto	u543_21
 10516     1E81  2E83               	goto	u543_20
 10517     1E82                     u543_21:
 10518     1E82  2E74               	goto	i1l3399
 10519     1E83                     u543_20:
 10520     1E83                     i1l3405:
 10521     1E83  3001               	movlw	1
 10522     1E84                     u544_25:
 10523     1E84  1003               	clrc
 10524     1E85  0DF7               	rlf	i1___awdiv@quotient,f
 10525     1E86  0DF8               	rlf	i1___awdiv@quotient+1,f
 10526     1E87  3EFF               	addlw	-1
 10527     1E88  1D03               	skipz
 10528     1E89  2E84               	goto	u544_25
 10529     1E8A  0871               	movf	i1___awdiv@divisor+1,w
 10530     1E8B  0273               	subwf	i1___awdiv@dividend+1,w
 10531     1E8C  1D03               	skipz
 10532     1E8D  2E90               	goto	u545_25
 10533     1E8E  0870               	movf	i1___awdiv@divisor,w
 10534     1E8F  0272               	subwf	i1___awdiv@dividend,w
 10535     1E90                     u545_25:
 10536     1E90  1C03               	skipc
 10537     1E91  2E93               	goto	u545_21
 10538     1E92  2E94               	goto	u545_20
 10539     1E93                     u545_21:
 10540     1E93  2E9B               	goto	i1l3411
 10541     1E94                     u545_20:
 10542     1E94                     i1l3407:
 10543     1E94  0870               	movf	i1___awdiv@divisor,w
 10544     1E95  02F2               	subwf	i1___awdiv@dividend,f
 10545     1E96  0871               	movf	i1___awdiv@divisor+1,w
 10546     1E97  1C03               	skipc
 10547     1E98  03F3               	decf	i1___awdiv@dividend+1,f
 10548     1E99  02F3               	subwf	i1___awdiv@dividend+1,f
 10549     1E9A                     i1l3409:
 10550     1E9A  1477               	bsf	i1___awdiv@quotient,0
 10551     1E9B                     i1l3411:
 10552     1E9B  3001               	movlw	1
 10553     1E9C                     u546_25:
 10554     1E9C  1003               	clrc
 10555     1E9D  0CF1               	rrf	i1___awdiv@divisor+1,f
 10556     1E9E  0CF0               	rrf	i1___awdiv@divisor,f
 10557     1E9F  3EFF               	addlw	-1
 10558     1EA0  1D03               	skipz
 10559     1EA1  2E9C               	goto	u546_25
 10560     1EA2                     i1l3413:
 10561     1EA2  3001               	movlw	1
 10562     1EA3  02F5               	subwf	i1___awdiv@counter,f
 10563     1EA4  1D03               	btfss	3,2
 10564     1EA5  2EA7               	goto	u547_21
 10565     1EA6  2EA8               	goto	u547_20
 10566     1EA7                     u547_21:
 10567     1EA7  2E83               	goto	i1l3405
 10568     1EA8                     u547_20:
 10569     1EA8                     i1l3415:
 10570     1EA8  0876               	movf	i1___awdiv@sign,w
 10571     1EA9  1903               	btfsc	3,2
 10572     1EAA  2EAC               	goto	u548_21
 10573     1EAB  2EAD               	goto	u548_20
 10574     1EAC                     u548_21:
 10575     1EAC  2EB2               	goto	i1l3419
 10576     1EAD                     u548_20:
 10577     1EAD                     i1l3417:
 10578     1EAD  09F7               	comf	i1___awdiv@quotient,f
 10579     1EAE  09F8               	comf	i1___awdiv@quotient+1,f
 10580     1EAF  0AF7               	incf	i1___awdiv@quotient,f
 10581     1EB0  1903               	skipnz
 10582     1EB1  0AF8               	incf	i1___awdiv@quotient+1,f
 10583     1EB2                     i1l3419:
 10584     1EB2  0878               	movf	i1___awdiv@quotient+1,w
 10585     1EB3  00F1               	movwf	?i1___awdiv+1
 10586     1EB4  0877               	movf	i1___awdiv@quotient,w
 10587     1EB5  00F0               	movwf	?i1___awdiv
 10588     1EB6                     i1l506:
 10589     1EB6  0008               	return
 10590     1EB7                     __end_ofi1___awdiv:
 10591     007E                     btemp	set	126	;btemp
 10592     007E                     wtemp0	set	126
 10593                           
 10594                           	psect	idloc
 10595                           
 10596                           ;Config register IDLOC0 @ 0x2000
 10597                           ;	unspecified, using default values
 10598     2000                     	org	8192
 10599     2000  3FFF               	dw	16383
 10600                           
 10601                           ;Config register IDLOC1 @ 0x2001
 10602                           ;	unspecified, using default values
 10603     2001                     	org	8193
 10604     2001  3FFF               	dw	16383
 10605                           
 10606                           ;Config register IDLOC2 @ 0x2002
 10607                           ;	unspecified, using default values
 10608     2002                     	org	8194
 10609     2002  3FFF               	dw	16383
 10610                           
 10611                           ;Config register IDLOC3 @ 0x2003
 10612                           ;	unspecified, using default values
 10613     2003                     	org	8195
 10614     2003  3FFF               	dw	16383
 10615                           
 10616                           	psect	config
 10617                           
 10618                           ;Config register CONFIG1 @ 0x2007
 10619                           ;	Oscillator Selection bits
 10620                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10621                           ;	Watchdog Timer Enable bit
 10622                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10623                           ;	Power-up Timer Enable bit
 10624                           ;	PWRTE = OFF, PWRT disabled
 10625                           ;	RE3/MCLR pin function select bit
 10626                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10627                           ;	Code Protection bit
 10628                           ;	CP = OFF, Program memory code protection is disabled
 10629                           ;	Data Code Protection bit
 10630                           ;	CPD = OFF, Data memory code protection is disabled
 10631                           ;	Brown Out Reset Selection bits
 10632                           ;	BOREN = OFF, BOR disabled
 10633                           ;	Internal External Switchover bit
 10634                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10635                           ;	Fail-Safe Clock Monitor Enabled bit
 10636                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10637                           ;	Low Voltage Programming Enable bit
 10638                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10639                           ;	In-Circuit Debugger Mode bit
 10640                           ;	DEBUG = 0x1, unprogrammed default
 10641     2007                     	org	8199
 10642     2007  20D5               	dw	8405
 10643                           
 10644                           ;Config register CONFIG2 @ 0x2008
 10645                           ;	Brown-out Reset Selection bit
 10646                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10647                           ;	Flash Program Memory Self Write Enable bits
 10648                           ;	WRT = OFF, Write protection off
 10649     2008                     	org	8200
 10650     2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    160
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      74
    BANK1            80     68      68
    BANK3            96     30      38
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    WriteStringToLCD@s	PTR const unsigned char  size(1) Largest target is 20
		 -> main@s(BANK3[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___xxtofl

Critical Paths under _main in BANK0

    _sprintf->_fround
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___flmul->___awdiv
    ___fladd->_fround
    ___lwdiv->___lwmod
    ___lwdiv->___wmul
    ___fltol->_scale
    _WriteStringToLCD->_WriteDataToLCD
    _WriteDataToLCD->_ToggleEpinOfLCD
    _InitLCD->_WriteCommandToLCD
    _ClearLCDScreen->_WriteCommandToLCD
    _WriteCommandToLCD->_ToggleEpinOfLCD

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub
    ___flsub->___xxtofl
    _map->___xxtofl
    ___xxtofl->___fltol

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   38777
                                             67 BANK1      1     1      0
                                              0 BANK3     30    30      0
                     _ClearLCDScreen
                            _InitLCD
                   _WriteStringToLCD
                            ___fltol
                           ___xxtofl
                                _map
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33768
                                             32 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7508
                                             48 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              6 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1464
                                             13 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             48 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                             22 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              6 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              6 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              6 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              6 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              6 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                             24 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                              0 BANK1     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              6 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              6 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              6 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    3254
                                             24 BANK1     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     600
                                             10 BANK1     14    10      4
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              6 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                             12 BANK0      8     4      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     787
                                              0 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteStringToLCD                                     2     2      0     100
                                              8 BANK0      2     2      0
                     _WriteDataToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataToLCD                                       1     1      0      22
                                              7 BANK0      1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      22
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (1) _ClearLCDScreen                                       2     2      0      22
                                              8 BANK0      2     2      0
                  _WriteCommandToLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCommandToLCD                                    1     1      0      22
                                              7 BANK0      1     1      0
                    _ToggleEpinOfLCD
 ---------------------------------------------------------------------------------
 (3) _ToggleEpinOfLCD                                      1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0     700
                                              0 BANK0      6     6      0
                          i1___awdiv
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (6) i1___xxtofl                                          14    10      4     348
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCDScreen
     _WriteCommandToLCD
       _ToggleEpinOfLCD
   _InitLCD
     _WriteCommandToLCD
   _WriteStringToLCD
     _WriteDataToLCD
       _ToggleEpinOfLCD
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
         ___wmul (ARG)
       ___lwmod (ARG)
     _scale (ARG)
       ___awdiv
       ___awmod
       ___flmul
   ___xxtofl
     ___fltol (ARG)
     ___lwdiv (ARG)
     ___wmul (ARG)
   _map
     ___fltol
     ___lwdiv
     ___wmul
     ___xxtofl
   _setup
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _scale

 _isr (ROOT)
   i1___awdiv
   i1___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     44      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1E      26       9       39.6%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C2      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 25 12:24:52 2023

                        _i 01B2                          pc 0002                         l80 1BA1  
                       l74 0819                         l83 1BE3                         l92 1BC0  
                       l77 1B95                         l89 10CF               ___awdiv@sign 0033  
                       fsr 0004        ___wmul@multiplicand 0028        __Umul8_16@word_mpld 002C  
               i1___xxtofl 122B                        l307 0040                        l332 04B9  
                      l183 1C67                        l353 1C16                        l186 089D  
                      l506 1F87                        l355 1C2E                        l523 139A  
                      l339 04F7                        l540 1D24                        l524 1301  
                      l541 1D39                        l701 174F                        l293 0FFF  
                      l349 06CA                        l534 138D                        l286 15A7  
                      l711 1795                        l527 135D                        l519 1DEA  
                      l544 10EE                        l552 1BAE                        l705 1773  
                      l609 1D8F                        l722 17F5                        l714 17D3  
                      l570 122A                        l563 1FEA                        l539 1D08  
                      l547 115A                        l723 17FF                        l571 119E  
                      l556 1FFF                        l820 08C2                        l548 1173  
                      l389 1F1E                        l581 121D                        l566 1FFF  
                      l822 0957                        l726 1C07                        l574 11ED  
                      l680 1603                        l833 0921                        l834 092D  
                      l826 0905                        l659 1CE9                        l684 1686  
                      l693 17FF                        l669 1CA3                        l686 165F  
                      l782 0C0C                        l776 0C9C                        l795 07EB  
                      l788 0C90                        l797 07FD                        _RD3 0043  
                      _RD4 0044                        _RC6 003E                        _RD5 0045  
                      _RC7 003F                        _RD6 0046                        _RD7 0047  
                      _map 081A                        _isr 1DEB                        _val 0064  
                      fsr0 0004                        indf 0000               ___awmod@sign 002C  
             ___flmul@aexp 0048               ___flmul@bexp 0049               ___flmul@sign 0043  
             ___flmul@temp 004E               ___flmul@prod 004A               ___fltol@exp1 00A9  
                     l3001 1136                       l3003 1170                       l3011 1BAC  
                     l3101 08FC                       l3005 1172                       l3013 1BAE  
                     l2301 1F1F                       l3111 092F                       l3103 090C  
                     l2311 1F31                       l2303 1F22                       l2401 1CD8  
                     l3113 0945                       l3105 0917                       l3201 1C66  
                     l3009 1BA2                       l2321 1F45                       l2313 1F36  
                     l2305 1F26                       l3131 1BCB                       l3123 1BC1  
                     l2403 1CDF                       l3115 094A                       l3107 091B  
                     l2411 1C70                       l2331 1F6B                       l2323 1F4C  
                     l2315 1F3A                       l2307 1F2B                       l3133 1BD1  
                     l3125 1BC5                       l3141 10B9                       l2405 1CE5  
                     l3117 094E                       l3109 0925                       l3061 1D58  
                     l3053 1D3A                       l2421 1C8C                       l2413 1C73  
                     l2341 1F83                       l2333 1F6C                       l2325 1F50  
                     l2317 1F3C                       l2309 1F2D                       l3135 1BD7  
                     l3127 1BC6                       l3143 10C1                       l3119 094F  
                     l3151 1C2F                       l3063 1D6A                       l3055 1D44  
                     l2423 1C92                       l2415 1C7A                       l2335 1F73  
                     l2327 1F54                       l2319 1F42                       l2351 1D9C  
                     l3137 1BDD                       l3129 1BC9                       l3145 10C7  
                     l3081 08A6                       l3161 1C3B                       l3153 1C33  
                     l3065 1D78                       l3057 1D47                       l2281 07D8  
                     l2425 1C99                       l2417 1C7E                       l2409 1C68  
                     l2329 1F65                       l2337 1F79                       l2361 1DB0  
                     l2353 1D9E                       l2345 1D90                       l3147 1BAF  
                     l3139 10B8                       l3091 08D3                       l3083 08AA  
                     l3171 1C44                       l3163 1C3C                       l3155 1C34  
                     l3067 1D81                       l3059 1D54                       l2291 07F9  
                     l2283 07DA                       l2419 1C82                       l2427 1C9F  
                     l2339 1F7E                       l2371 1DCF                       l2363 1DB7  
                     l2355 1DA2                       l2347 1D93                       l4027 0054  
                     l3149 1BB5                       l3093 08D6                       l3085 08BA  
                     l3181 1C4C                       l3173 1C45                       l3165 1C3D  
                     l3157 1C38                       l3069 1D87                       l2285 07E1  
                     l2701 0B3F                       l2373 1DD6                       l2365 1DBB  
                     l2357 1DA7                       l2349 1D97                       l2295 0803  
                     l2391 1CB8                       l2383 1CA4                       l3095 08E3  
                     l3087 08CA                       l3079 08A1                       l3191 1C5D  
                     l3183 1C4D                       l3175 1C49                       l3167 1C40  
                     l3159 1C3A                       l2287 07E5                       l2711 0BCF  
                     l2703 0B6A                       l2631 0965                       l2367 1DBF  
                     l2359 1DAD                       l2375 1DDC                       l2297 0806  
                     l2393 1CBC                       l2385 1CA8                       l3097 08EA  
                     l3193 1C60                       l3185 1C53                       l3177 1C4A  
                     l3169 1C43                       l3601 1615                       l2289 07F4  
                     l2713 0BD8                       l2721 0BEC                       l2705 0B90  
                     l2641 097A                       l2633 0966                       l2625 0958  
                     l2377 1DE1                       l2369 1DC9                       l2801 0CAD  
                     l2299 080E                       l2395 1CC0                       l2387 1CAE  
                     l3099 08EE                       l3195 1C63                       l3187 1C55  
                     l3179 1C4B                       l3611 161F                       l3603 1617  
                     l2723 0BF0                       l2715 0BDC                       l2707 0BB8  
                     l2651 0990                       l2643 0982                       l2635 096B  
                     l2627 095D                       l2379 1DE6                       l2397 1CD1  
                     l2389 1CB1                       l3197 1C64                       l3189 1C56  
                     l3701 1781                       l3621 1629                       l3613 1621  
                     l3605 1619                       l2901 130A                       l2741 0C41  
                     l2733 0C11                       l2725 0BF1                       l2717 0BDD  
                     l2709 0BC1                       l2661 09AC                       l2653 0995  
                     l2645 0987                       l2637 0970                       l2629 0961  
                     l2813 0E26                       l2399 1CD7                       l3199 1C65  
                     l3711 1792                       l3703 1783                       l3631 1647  
                     l3623 162B                       l3615 1623                       l3607 161B  
                     l3551 15AD                       l2911 133F                       l2903 131B  
                     l2751 0C78                       l2735 0C16                       l2743 0C47  
                     l2727 0BF5                       l2719 0BE6                       l2671 09CD  
                     l2663 09B1                       l2655 099A                       l2647 098B  
                     l2639 0978                       l2831 0FD3                       l2807 0D97  
                     l3721 17B1                       l3705 1787                       l3641 1671  
                     l3633 1663                       l3625 162D                       l3617 1625  
                     l3609 161D                       l3561 15C0                       l3553 15B1  
                     l2913 134D                       l2905 131D                       l2841 118E  
                     l2761 0C94                       l2753 0C7A                       l2745 0C54  
                     l2737 0C24                       l2729 0C09                       l2681 0A57  
                     l2673 09DA                       l2665 09B6                       l2657 09A2  
                     l2649 098F                       l2825 0F44                       l2809 0D9E  
                     l2817 0E53                       l3801 0042                       l2771 1B99  
                     l3731 17EA                       l3723 17CF                       l3715 179A  
                     l3707 1788                       l3643 167A                       l3635 166A  
                     l3619 1627                       l3627 162F                       l3571 15D6  
                     l3563 15C8                       l3555 15B5                       l2915 134E  
                     l2907 1324                       l2851 11B4                       l2835 1174  
                     l2755 0C86                       l2747 0C5F                       l2739 0C28  
                     l2691 0AB5                       l2683 0A73                       l2675 09F5  
                     l2659 09A4                       l2827 0F4B                       l2819 0E5A  
                     l3811 007E                       l3803 005C                       l2765 1B8D  
                     l2773 1B9A                       l2941 1C0C                       l3741 17FE  
                     l3733 17EB                       l3725 17D8                       l3717 179F  
                     l3709 178C                       l3661 16BE                       l3653 1698  
                     l3637 166C                       l3645 167E                       l3629 1630  
                     l3581 15E6                       l3573 15DC                       l3565 15C9  
                     l3557 15B6                       l3549 15A8                       l2933 1382  
                     l2925 1369                       l2917 1357                       l2909 132D  
                     l2861 11DE                       l2853 11B6                       l2837 1185  
                     l2757 0C8A                       l2749 0C6E                       l2693 0AD2  
                     l2685 0A7C                       l2677 0A11                       l2669 09BF  
                     l3901 04C1                       l3821 0109                       l3813 00A5  
                     l3805 0068                       ?_map 00B8                       l2767 1B8E  
                     l2775 1B9C                       l3751 1FAF                       l3743 1F88  
                     l2943 1C10                       l3735 17EF                       l3727 17DD  
                     l3719 17AD                       l3663 16C0                       l3655 16AF  
                     l3647 168A                       l3671 16D3                       l3639 1670  
                     l3583 15EB                       l3591 15FB                       l3575 15DD  
                     l3559 15BB                       l3567 15CB                       l2935 1392  
                     l2919 1361                       l2927 137B                       l2863 11DF  
                     l2855 11BD                       l2847 119F                       l2759 0C8B  
                     l2695 0AE9                       l2687 0A8A                       l2679 0A3B  
                     l2791 1564                       l3911 04EE                       l3903 04C8  
                     l3831 0164                       l3823 0114                       l3815 00DA  
                     l3807 006C                       l2769 1B90                       l3753 1FB0  
                     l3745 1F93                       l2945 1C1D                       l3737 17F1  
                     l3729 17E5                       l3673 16E9                       l3681 1741  
                     l3665 16C4                       l3657 16B3                       l3649 168F  
                     l3593 1609                       l3585 15F0                       l3577 15E1  
                     l3569 15D3                       l2961 1EDD                       l2953 1EB7  
                     l2881 1212                       l2873 11F9                       l2865 11E7  
                     l2857 11C6                       l2849 11A5                       l2697 0B06  
                     l2689 0AA7                       l2785 14B3                       l2777 139E  
                     l3921 050E                       l3913 04F3                       l3905 04CC  
                     l3841 0204                       l3833 016A                       l3825 011A  
                     l3817 00DE                       l3809 007A                       l3755 1FB8  
                     l2947 1C24                       l2939 1C08                       l3739 17FA  
                     l3691 176E                       l3683 1757                       l3675 1727  
                     l3667 16C5                       l3659 16B7                       l3595 160D  
                     l3587 15F8                       l3579 15E5                       l2971 1F10  
                     l2963 1EE6                       l2955 1EC9                       l2883 1222  
                     l2867 11F1                       l2875 120B                       l2859 11D4  
                     l2699 0B31                       l2787 14B9                       l2779 13A4  
                     l2795 0CA0                       l3931 062B                       l3923 052C  
                     l3915 0500                       l3907 04D2                       l3851 0277  
                     l3843 022D                       l3835 0189                       l3827 013D  
                     l3819 00E2                       l3773 1FDF                       l3765 1FC6  
                     l3757 1FBA                       l3749 1F9C                       l2949 1C2A  
                     l2981 1D1C                       l3693 1772                       l3685 175C  
                     l3677 172D                       l3669 16CE                       l3597 1611  
                     l3589 15F9                       l3781 1BE8                       l2965 1EF8  
                     l2957 1ECC                       l2973 1F16                       l2893 12F7  
                     l2797 0CA4                       l3941 069D                       l3925 0587  
                     l3933 0686                       l3917 0505                       l3909 04DF  
                     l3861 02F8                       l3853 02A0                       l3837 01D4  
                     l3829 0160                       l3845 0235                       l3775 1FEF  
                     l3759 1FBE                       l3767 1FD8                       l2983 1D36  
                     l2991 10E6                       l3695 1777                       l3679 1732  
                     l3599 1613                       l2967 1F06                       l2959 1ED9  
                     l2887 12E3                       l2799 0CA6                       l3935 068E  
                     l3927 05E2                       l3919 050A                       l3863 0300  
                     l3855 02B9                       l3871 0372                       l3847 0235  
                     l3839 01FB                       l3943 06A4                       l3951 06C6  
                     l3791 002D                       l3777 1FF4                       l3785 081A  
                     l2985 1D38                       l2977 1CEA                       l2993 1102  
                     l3697 177A                       l3689 1765                       l2969 1F07  
                     l2889 12EE                       l3945 06B0                       l3937 0693  
                     l3929 0621                       l3873 038B                       l3865 031E  
                     l3857 02C6                       l3849 026A                       l3793 0033  
                     l3961 06CB                       l2979 1D00                       l2995 110A  
                     l3699 177C                       l3779 1BE4                       l2899 1302  
                     l3939 0697                       l3891 040B                       l3883 03BE  
                     l3875 03BA                       l3859 02EF                       l3795 0038  
                     l3971 06E0                       l3963 06D0                       l2997 110E  
                     l2989 10D0                       l3893 0410                       l3877 03BC  
                     l3869 0369                       l3797 003D                       l3949 06B6  
                     l3789 002A                       l3981 06EF                       l3973 06E5  
                     l3965 06D3                       l2999 1132                       l3895 0415  
                     l3887 03F5                       l3991 07A4                       l3983 0702  
                     l3975 06EB                       l3967 06D7                       l3897 0470  
                     l3889 03FF                       l3993 07C6                       l3985 0703  
                     l3969 06DB                       l3899 04AF                       l3995 07CB  
                     l3987 070B                       ?_isr 0070                       l3989 0718  
                     STR_1 10A6                       u3010 1F79                       u3011 1F78  
                     u3020 1F7E                       u3100 1DDC                       u3021 1F7D  
                     u3005 1F6D                       u3101 1DDB                       u3110 1DE1  
                     u3030 1D97                       u3111 1DE0                       u3031 1D96  
                     u3120 1CAE                       u4000 0C09                       u3040 1DA2  
                     u3121 1CAD                       u4001 0C08                       u3041 1DA1  
                     u4010 0C10                       u3210 1C82                       u3050 1DAD  
                     u4011 0C0F                       u3211 1C81                       u3051 1DAC  
                     u3140 1CC0                       u4020 0C16                       u3220 1C8C  
                     u3141 1CBF                       u4021 0C15                       u3221 1C8B  
                     u3205 1C74                       u4030 0C28                       u3070 1DBF  
                     u3135 1CB2                       u4031 0C27                       u3071 1DBE  
                     u3160 1CD1                       u4040 0C37                       u3240 1C9F  
                     u4120 14B9                       u3080 1DC9                       u3161 1CD0  
                     u3241 1C9E                       u3225 1C88                       u4121 14B8  
                     u4105 141D                       u3081 1DC8                       u3065 1DB1  
                     u5010 08E9                       u4050 0C54                       u4210 0D9E  
                     u3155 1CC1                       u5011 08E8                       u4051 0C53  
                     u3235 1C93                       u4115 1472                       u4211 0D9D  
                     u3180 1CE5                       u5100 094E                       u4060 0C6E  
                     u3181 1CE4                       u3165 1CCD                       u5101 094D  
                     u5005 08DB                       u4061 0C6D                       u4045 0C32  
                     u3085 1DC5                       u4205 0D56                       u5110 10CF  
                     u5030 090B                       u4070 0C8A                       u3190 1C70  
                     u5111 10CE                       u3175 1CD9                       u5031 090A  
                     u4071 0C89                       u4055 0C50                       u3191 1C6F  
                     u4135 14D6                       u3095 1DD0                       u6000 1777  
                     u4400 11F8                       u4080 13A4                       u4160 0CA4  
                     u5025 08FD                       u6001 1776                       u4401 11F7  
                     u4065 0C6A                       u4145 1523                       u4081 13A3  
                     u4305 0F5E                       u4225 0DB1                       u4161 0CA3  
                     u5050 091B                       u6010 1781                       u4330 1185  
                     u4250 0E5A                       u4170 0CAD                       u5051 091A  
                     u6011 1780                       u4331 1184                       u4155 156F  
                     u4315 0F9A                       u4251 0E59                       u4235 0DED  
                     u4171 0CAC                       u5060 0921                       u6100 17D8  
                     u6020 1787                       u4420 120A                       u4340 119D  
                     u2900 07E5                       u5061 0920                       u5045 0910  
                     u6101 17D7                       u6021 1786                       u4421 1209  
                     u4341 119C                       u2901 07E4                       u4325 0FD6  
                     u4245 0E29                       u5070 0925                       u6110 17DD  
                     u6030 178C                       u4510 135D                       u4430 1211  
                     u3710 0965                       u5071 0924                       u6111 17DC  
                     u6031 178B                       u4511 135C                       u4431 1210  
                     u4415 11FA                       u3711 0964                       u4095 13C1  
                     u6200 1FD7                       u5080 093A                       u6120 17EA  
                     u6040 1792                       u4520 1361                       u4360 11D4  
                     u2920 07F9                       u3720 096B                       u6201 1FD6  
                     u6121 17E9                       u6041 1791                       u4521 1360  
                     u4505 1350                       u4361 11D3                       u2921 07F8  
                     u3801 0A1F                       u3721 096A                       u4265 0E7C  
                     u4185 0CCF                       u6210 1FDE                       u5090 094A  
                     u6130 17EF                       u6050 1799                       u4530 1368  
                     u4450 1222                       u3802 0A26                       u3730 0970  
                     u2930 1F26                       u4290 0F4B                       u6211 1FDD  
                     u5091 0949                       u6131 17EE                       u6051 1798  
                     u4531 1367                       u4451 1221                       u4355 11BF  
                     u2915 07EC                       u3811 0A49                       u3803 0A2D  
                     u3731 096F                       u2931 1F25                       u4291 0F4A  
                     u4275 0EB8                       u4195 0D0B                       u4620 1C2A  
                     u4700 1D00                       u6140 17FE                       u6060 179F  
                     u4460 12EE                       u4380 11ED                       u3900 0B76  
                     u3812 0A50                       u3740 098F                       u2940 1F31  
                     u6300 01FB                       u4621 1C29                       u4605 1C17  
                     u5085 0935                       u4701 1CFF                       u6141 17FD  
                     u6061 179E                       u4461 12ED                       u4445 1214  
                     u4381 11EC                       u4365 11D0                       u3821 0A65  
                     u3813 0A57                       u3741 098E                       u2941 1F30  
                     u4285 0F03                       u6301 01FA                       u6230 1FEF  
                     u6150 1F93                       u4710 1D1C                       u6070 17B1  
                     u4630 1EC9                       u4550 137A                       u4470 1300  
                     u4390 11F1                       u3822 0A6C                       u3750 0995  
                     u2950 1F42                       u6310 022D                       u6231 1FEE  
                     u6151 1F92                       u4615 1C1E                       u4711 1D1B  
                     u6071 17B0                       u4631 1EC8                       u4551 1379  
                     u4471 12FF                       u4391 11F0                       u4375 11E0  
                     u3911 0B82                       u3823 0A73                       u3751 0994  
                     u2951 1F41                       u6311 022C                       u6240 1FF4  
                     u6160 1FAA                       u4720 1D36                       u4800 1BAC  
                     u6080 17C0                       u4560 1381                       u3920 0B9E  
                     u3912 0B89                       u3760 099A                       u6400 040B  
                     u6320 0277                       u6241 1FF3                       u6225 1FE1  
                     u4721 1D35                       u4801 1BAB                       u4561 1380  
                     u4545 136A                       u3913 0B90                       u3905 0B71  
                     u3841 0A99                       u3761 0999                       u6401 040A  
                     u6321 0276                       u6170 1FBE                       u4730 10E6  
                     u6090 17CF                       u4650 1EDD                       u4490 133F  
                     u3842 0AA0                       u3770 09B1                       u2970 1F54  
                     u6330 02A0                       u6250 0033                       u6171 1FBD  
                     u4731 10E5                       u6091 17CE                       u4651 1EDC  
                     u4491 133E                       u3931 0BAA                       u3851 0AC4  
                     u3843 0AA7                       u3835 0A75                       u3771 09B0  
                     u2971 1F53                       u6331 029F                       u6251 0032  
                     u6180 1FC5                       u4740 1102                       u5700 15BB  
                     u4580 1392                       u3932 0BB1                       u3852 0ACB  
                     u3780 09B6                       u6500 06B0                       u6420 04C0  
                     u6340 02B9                       u6260 0068                       u6181 1FC4  
                     u6165 1FA5                       u4725 1D32                       u4741 1101  
                     u6085 17BB                       u5701 15BA                       u4645 1ECE  
                     u4581 1391                       u4485 1326                       u3933 0BB8  
                     u3925 0B99                       u3853 0AD2                       u3781 09B5  
                     u2965 1F46                       u6501 06AF                       u6421 04BF  
                     u6341 02B8                       u6325 0273                       u6261 0067  
                     u4590 1C10                       u4750 110E                       u5710 15C0  
                     u4670 1EF8                       u4910 1D44                       u2990 1F65  
                     u6510 06C6                       u6430 04DF                       u6350 02C6  
                     u6270 00A5                       u4591 1C0F                       u4751 110D  
                     u5711 15BF                       u4671 1EF7                       u4911 1D43  
                     u4575 1384                       u4495 133B                       u3871 0AF8  
                     u3791 0A03                       u2991 1F64                       u6511 06C5  
                     u6431 04DE                       u6415 0418                       u6351 02C5  
                     u6271 00A4                       u5800 1653                       u5720 15DC  
                     u3960 0BDC                       u3872 0AFF                       u3792 0A0A  
                     u6440 04EE                       u6360 02EF                       u6280 0109  
                     u6520 06EB                       u4761 111D                       u5721 15DB  
                     u4665 1EDF                       u3961 0BDB                       u3945 0BBA  
                     u3881 0B23                       u3873 0B06                       u3865 0AD4  
                     u3793 0A11                       u2985 1F55                       u6441 04ED  
                     u6361 02EE                       u6281 0108                       u6521 06EA  
                     u4770 1136                       u4762 111E                       u5810 1663  
                     u5730 15E5                       u4690 1F16                       u4930 1D58  
                     u3882 0B2A                       u6450 0505                       u6290 0164  
                     u6530 0718                       u6195 1FC7                       u4771 1135  
                     u4763 1123                       u5811 1662                       u5731 15E4  
                     u4691 1F15                       u4675 1EF4                       u4931 1D57  
                     u3955 0BD1                       u3891 0B4E                       u3883 0B31  
                     u2995 1F61                       u6451 0504                       u6435 04DB  
                     u6355 02C2                       u6291 0163                       u6531 0717  
                     u4764 1124                       u5900 16C4                       u5820 1670  
                     u5740 15EB                       u4940 1D6A                       u3980 0BF0  
                     u3892 0B55                       u6380 03F4                       u4781 1145  
                     u4765 1129                       u5901 16C3                       u5821 166F  
                     u5741 15EA                       u4685 1F08                       u4941 1D69  
                     u4925 1D49                       u3981 0BEF                       u3893 0B5C  
                     u6445 04EA                       u6381 03F3                       u4790 1170  
                     u4782 1146                       u4766 112A                       u5750 15F0  
                     u3990 0BF5                       u6390 03FF                       u4791 116F  
                     u4783 114B                       u5751 15EF                       u3991 0BF4  
                     u3975 0BDF                       u6391 03FE                       u6375 03C1  
                     u6535 0714                       u4784 114C                       u5920 16E9  
                     u5840 1686                       u5760 1609                       u4960 1D87  
                     u6480 068D                       u4785 1151                       u5921 16E8  
                     u5841 1685                       u5761 1608                       u4961 1D86  
                     u4945 1D66                       u6481 068C                       u6465 058A  
                     u6385 03F0                       u4970 08A6                       u4786 1152  
                     u5850 168A                       u5770 160D                       u5690 15B5  
                     u6490 06A3                       u4971 08A5                       u6547 1C5A  
                     u4795 116C                       u5931 1700                       u5923 16E5  
                     u5915 16C7                       u5851 1689                       u5835 1673  
                     u5771 160C                       u5691 15B4                       u4955 1D79  
                     u6491 06A2                       u6475 062E                       u4980 08AA  
                     u5940 1714                       u5932 1701                       u5860 168F  
                     u5780 1647                       u6557 1BBB                       u4981 08A9  
                     u5941 1715                       u5933 1706                       u5861 168E  
                     u5781 1646                       u4990 08CA                       u5950 1732  
                     u5942 171A                       u5934 1707                       u5790 1652  
                     u6567 080A                       u4991 08C9                       u5951 1731  
                     u5943 171B                       u5935 170C                       u5871 16A1  
                     u5791 1650                       u5960 1757                       u5936 170D  
                     u5880 16B3                       u5872 16A8                       u6577 0815  
                     u5961 1756                       u5881 16B2                       u5873 16AF  
                     u5785 1643                       u5970 175C                       u5890 16B7  
                     u5971 175B                       u5891 16B6                       u5990 1772  
                     u5991 1771                       u5985 1767                       _WPUB 0095  
                     _main 06CB                       btemp 007E                       start 000E  
             _sprintf$1097 00CA            __end_of_InitLCD 1BE4                      ??_map 00C2  
                    ??_isr 0020              ___fltol@sign1 00A8            __end_of___fladd 1800  
                    ?_main 0070             i1___awdiv@sign 0076            __end_of___awdiv 1F88  
          __end_of___flneg 1BAF            __end_of___awmod 1DEB            __end_of___flmul 0C9D  
          __end_of___flsub 1C08            __end_of___fltol 2000                      _CMCON 01B4  
                    _ANSEL 0188            __end_of___lldiv 1F1F            ___awdiv@divisor 002D  
          __end_of___llmod 1D90            __end_of___lwdiv 1CEA                      i1l167 1E49  
          __end_of___lwmod 1CA4                      i1l506 1EB6                      i1l820 124D  
                    i1l822 12E2                      i1l833 12AC                      i1l834 12B8  
                    i1l826 1290            ___awdiv@counter 0032                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089            __end_of_dpowers 10A6                      _scale 0C9D  
                    _setup 1C2F                      main@s 0190                      pclath 000A  
             main@varvolt2 01A4                      status 0003                      wtemp0 007E  
          __end_of_sprintf 06CB            __end_ofmain@msg 107E            _ToggleEpinOfLCD 0803  
          __initialization 0011               __end_of_main 07D5                     ??_main 00E3  
              ?i1___xxtofl 0070           ??_ClearLCDScreen 0028           ___llmod@dividend 002A  
                   ?_scale 0050                     _ADRESH 001E           ___awdiv@dividend 002F  
                   ?_setup 0070                     _ANSELH 0189                     i1l3401 1E7B  
                   i1l3411 1E9B                     i1l3403 1E7F                     i1l3413 1EA2  
                   i1l3405 1E83                     i1l3407 1E94                     i1l3415 1EA8  
                   i1l3431 1255                     i1l3423 122C                     i1l3417 1EAD  
                   i1l3409 1E9A                     i1l3441 1275                     i1l3425 1231  
                   i1l3419 1EB2                     i1l3451 12A6                     i1l3443 1279  
                   i1l3435 125E                     i1l3427 1235                     i1l3381 1E51  
                   i1l3461 12D9                     i1l3453 12B0                     i1l3445 1287  
                   i1l3437 1261                     i1l3429 1245                     i1l3391 1E65  
                   i1l3383 1E55                     i1l3463 12DA                     i1l3455 12BA  
                   i1l3447 1297                     i1l3439 126E                     i1l3471 1DF8  
                   i1l3393 1E69                     i1l3385 1E5A                     i1l3457 12D0  
                   i1l3449 12A2                     i1l3481 1E46                     i1l3473 1E0F  
                   i1l3395 1E6B                     i1l3387 1E5C                     i1l3379 1E50  
                   i1l3459 12D5                     i1l3475 1E18                     i1l3467 1DEB  
                   i1l3397 1E71                     i1l3389 1E60                     i1l3477 1E36  
                   i1l3469 1DEF                     i1l3399 1E74                     i1l3479 1E3F  
                   u540_20 1E60                     u540_21 1E5F                     u541_20 1E71  
                   u541_21 1E70                     u550_20 1235                     u550_21 1234  
                   u542_25 1E75                     u543_20 1E83                     u551_20 1255  
                   u543_21 1E82                     u551_21 1254                     u560_20 12C5  
                   u544_25 1E84                     u560_25 12C0                     u552_25 1266  
                   u545_20 1E94                     u561_20 12D5                     u553_20 1274  
                   u545_21 1E93                     u561_21 12D4                     u553_21 1273  
                   u545_25 1E90                     u562_20 12D9                     u562_21 12D8  
                   u546_25 1E9C                     u554_25 1288                     u547_20 1EA8  
                   u539_20 1E55                     u555_20 1296                     u563_20 1DEF  
                   u547_21 1EA7                     u539_21 1E54                     u555_21 1295  
                   u563_21 1DEE                     u548_20 1EAD                     u564_20 1DF8  
                   u548_21 1EAC                     u564_21 1DF7                     u556_25 129B  
                   u557_20 12A6                     u549_20 1231                     u565_20 1E18  
                   u557_21 12A5                     u549_21 1230                     u565_21 1E17  
                   u558_20 12AC                     u566_20 1E3F                     u558_21 12AB  
                   u566_21 1E3E                     u559_20 12B0                     u559_21 12AF  
                   _TRISC6 043E                     _TRISC7 043F           __end_of___xxtofl 0958  
                ??_InitLCD 0028           __end_of__powers_ 103A                     ___flge 10D0  
                   ___fleq 1CEA                  ??___fladd 00A8                     ___wmul 1C08  
                ??___awdiv 0031                  ??___flneg 002A                  ??___awmod 002A  
                ??___flmul 003E                  ??___flsub 0064                  ??___fltol 00A4  
                ??___lldiv 002E                  ??___llmod 002E                  ??___lwdiv 0030  
                ??___lwmod 002A                     _fround 139B           ___awdiv@quotient 0034  
          ___awmod@divisor 0026          WriteStringToLCD@s 0029            ___awmod@counter 002B  
        __end_ofi1___awdiv 1EB7          ?_WriteStringToLCD 0070                     saved_w 007E  
       ??_WriteStringToLCD 0028                  ??_sprintf 00C5    __end_of_ToggleEpinOfLCD 081A  
               ___flge@ff1 0026                 ___flge@ff2 002A               ___xxtofl@arg 00B4  
             ___xxtofl@exp 00B3               ___xxtofl@val 00AA                 ___fleq@ff1 0026  
               ___fleq@ff2 002A    __end_of__initialization 0023                 ___flneg@f1 0026  
               ___fltol@f1 00A0             __pcstackCOMMON 0070              __end_of_scale 1000  
            __end_of_setup 1C68                 __div_to_l_ 12E3             _OPTION_REGbits 0081  
 WriteCommandToLCD@Command 0027            __div_to_l_@exp1 0034            __div_to_l_@cntr 0033  
                  ??_scale 0054            __div_to_l_@quot 002F                    ??_setup 0026  
               __pbssBANK0 0064                 __pbssBANK3 01AE             _WriteDataToLCD 1B96  
           i1___xxtofl@arg 007A             i1___xxtofl@exp 0079             i1___xxtofl@val 0070  
            __div_to_l_@f1 0026              __div_to_l_@f2 002A          __end_of__Umul8_16 07FE  
               __pmaintext 06CB                    ?___flge 0026                    ?___fleq 0026  
    WriteDataToLCD@LCDChar 0027                    ?___wmul 0026                 __pintentry 0004  
                  ?_fround 0050         i1___awdiv@dividend 0072                  ?___xxtofl 00AA  
   __end_of_WriteDataToLCD 1BA2                 __stringtab 1000           ?_ToggleEpinOfLCD 0070  
                  _InitLCD 1BC1          __end_of__npowers_ 106E                 _scale$1096 005E  
       i1___awdiv@quotient 0077                    ___fladd 15A8                    ___awdiv 1F1F  
                  ___flneg 1BA2                    ___awmod 1D90                    ___flmul 0958  
                  ___flsub 1BE4                    ___fltol 1F88                    ___lldiv 1EB7  
                  ___llmod 1D3A                    ___lwdiv 1CA4                    ___lwmod 1C68  
             ??i1___xxtofl 0074                    __ptext1 0027                    __ptext2 0C9D  
                  __ptext3 1D90                    __ptext4 1F1F                    __ptext5 139B  
                  __ptext6 1C68                    __ptext7 0958                    __ptext8 07D5  
                  __ptext9 1174                ?__div_to_l_ 0026                    _dpowers 107E  
               ??___xxtofl 00AE           ___awmod@dividend 0028                    _valpot0 0068  
                  _valpot1 0066                    _varvolt 01AE                    _sprintf 0027  
                  main@msg 106E       end_of_initialization 0023            ?_WriteDataToLCD 0070  
          ___lldiv@divisor 0026         __end_ofi1___xxtofl 12E3            ___lldiv@counter 0033  
           __tdiv_to_l_@f1 0026             __tdiv_to_l_@f2 002A              ??__tdiv_to_l_ 002E  
                _PORTDbits 0008                ___fladd@grs 00B3              ___xxtofl@sign 00B2  
                i1___awdiv 1E50                ___flmul@grs 0044             __end_of___flge 1174  
           __end_of___fleq 1D3A             __end_of___wmul 1C2F             __end_of_fround 15A8  
      start_initialization 0011        __end_of__tdiv_to_l_ 122B                __end_of_map 089E  
              __end_of_isr 1E50                 ?i1___awdiv 0070            ___llmod@divisor 0026  
          ___llmod@counter 002F                   ??___flge 002E                   ??___fleq 002E  
                 ??___wmul 002A                  __Umul8_16 07D5                   ??_fround 0054  
            sprintf@tmpval 00DA                  ___fladd@a 00A4                  ___fladd@b 00A0  
               fround@prec 0063                  ___flmul@a 003A                  ___flmul@b 0036  
                ___flsub@a 00B8                  ___flsub@b 00BC                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK3 0190  
          i1___xxtofl@sign 0078                sprintf@flag 00CF                sprintf@eexp 00D7  
              sprintf@fval 00DE                sprintf@prec 00D1                   ?_InitLCD 0070  
                _main$1092 01AC                  _main$1093 01A8           ___lwdiv@dividend 002E  
                 ?___fladd 00A0                   ?___awdiv 002D                   ?___flneg 0026  
                 ?___awmod 0026                   ?___flmul 0036                   ?___flsub 00B8  
                 ?___fltol 00A0                   ?___lldiv 0026                   ?___llmod 0026  
                __npowers_ 103A                 ?__Umul8_16 0026                   ?___lwdiv 002C  
                 ?___lwmod 0026          i1___awdiv@divisor 0070          i1___awdiv@counter 0075  
                __pstrings 1000                __tdiv_to_l_ 1174               ??__div_to_l_ 002E  
         ??_WriteDataToLCD 0027                ??i1___awdiv 0074           ___lwdiv@quotient 0031  
                 ?_sprintf 00C0          interrupt_function 0004             ___wmul@product 002A  
         _WriteStringToLCD 10B5                   _PIE1bits 008C                   _PIR1bits 000C  
       __end_of__div_to_l_ 139B                  map@maxsal 00C0                  map@maxval 00BC  
                map@minsal 00BE                  map@minval 00BA                 _ADCON0bits 001F  
              __stringbase 1005                 _ADCON1bits 009F          ___wmul@multiplier 0026  
                map@valmap 00C8                  map@varmap 00B8             _ClearLCDScreen 1BAF  
        _WriteCommandToLCD 1B8A         ?_WriteCommandToLCD 0070        ??_WriteCommandToLCD 0027  
              ??__Umul8_16 0028                _fround$1094 005F                _fround$1095 005B  
       __end_of__stringtab 1006                 sprintf@val 00D3                   ___xxtofl 089E  
          ___lwdiv@divisor 002C     __end_of_ClearLCDScreen 1BC1            ___lwdiv@counter 0033  
                 __ptext10 12E3                   __ptext11 1D3A                   __ptext20 089E  
                 __ptext12 1EB7                   __ptext21 1C08                   __ptext13 1BE4  
                 __ptext30 1DEB                   __ptext22 1CA4                   __ptext14 15A8  
                 __ptext31 122B                   __ptext23 1F88                   __ptext15 1BA2  
                 __ptext32 1E50                   __ptext24 10B5                   __ptext16 10D0  
                 __ptext25 1B96                   __ptext17 1CEA                   __ptext26 1BC1  
                 __ptext18 1C2F                   __ptext27 1BAF                   __ptext19 081A  
                 __ptext28 1B8A                   __ptext29 0803                   __powers_ 1006  
__end_of_WriteCommandToLCD 1B96          ??_ToggleEpinOfLCD 0026                 _INTCONbits 000B  
          ?_ClearLCDScreen 0070                   scale@scl 0062                   intlevel1 0000  
                sprintf@ap 00CE           __tdiv_to_l_@exp1 0036           __tdiv_to_l_@cntr 0035  
                sprintf@sp 00D9           __tdiv_to_l_@quot 0031           ___lwmod@dividend 0028  
         ___lldiv@dividend 002A                  stringcode 1000                 _OSCCONbits 008F  
             ?__tdiv_to_l_ 0026     __Umul8_16@multiplicand 0026                   sprintf@c 00E2  
                 sprintf@f 00C0   __end_of_WriteStringToLCD 10D0           ___lldiv@quotient 002F  
          ___lwmod@divisor 0026            ___lwmod@counter 002B                   stringdir 1000  
                 stringtab 1000              ___fladd@signs 00B0               ___fladd@aexp 00B1  
             ___fladd@bexp 00B2       __Umul8_16@multiplier 002E          __Umul8_16@product 002A  
