

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 18 13:27:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     008F                     	;# 
   102     0090                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0095                     	;# 
   110     0096                     	;# 
   111     0097                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009A                     	;# 
   115     009B                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     0105                     	;# 
   121     0107                     	;# 
   122     0108                     	;# 
   123     0109                     	;# 
   124     010C                     	;# 
   125     010C                     	;# 
   126     010D                     	;# 
   127     010E                     	;# 
   128     010F                     	;# 
   129     0185                     	;# 
   130     0187                     	;# 
   131     0188                     	;# 
   132     0189                     	;# 
   133     018C                     	;# 
   134     018D                     	;# 
   135     0000                     	;# 
   136     0001                     	;# 
   137     0002                     	;# 
   138     0003                     	;# 
   139     0004                     	;# 
   140     0005                     	;# 
   141     0006                     	;# 
   142     0007                     	;# 
   143     0008                     	;# 
   144     0009                     	;# 
   145     000A                     	;# 
   146     000B                     	;# 
   147     000C                     	;# 
   148     000D                     	;# 
   149     000E                     	;# 
   150     000E                     	;# 
   151     000F                     	;# 
   152     0010                     	;# 
   153     0011                     	;# 
   154     0012                     	;# 
   155     0013                     	;# 
   156     0014                     	;# 
   157     0015                     	;# 
   158     0015                     	;# 
   159     0016                     	;# 
   160     0017                     	;# 
   161     0018                     	;# 
   162     0019                     	;# 
   163     001A                     	;# 
   164     001B                     	;# 
   165     001B                     	;# 
   166     001C                     	;# 
   167     001D                     	;# 
   168     001E                     	;# 
   169     001F                     	;# 
   170     0081                     	;# 
   171     0085                     	;# 
   172     0086                     	;# 
   173     0087                     	;# 
   174     0088                     	;# 
   175     0089                     	;# 
   176     008C                     	;# 
   177     008D                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0091                     	;# 
   182     0092                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0095                     	;# 
   188     0096                     	;# 
   189     0097                     	;# 
   190     0098                     	;# 
   191     0099                     	;# 
   192     009A                     	;# 
   193     009B                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     0105                     	;# 
   199     0107                     	;# 
   200     0108                     	;# 
   201     0109                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     0185                     	;# 
   208     0187                     	;# 
   209     0188                     	;# 
   210     0189                     	;# 
   211     018C                     	;# 
   212     018D                     	;# 
   213     0000                     	;# 
   214     0001                     	;# 
   215     0002                     	;# 
   216     0003                     	;# 
   217     0004                     	;# 
   218     0005                     	;# 
   219     0006                     	;# 
   220     0007                     	;# 
   221     0008                     	;# 
   222     0009                     	;# 
   223     000A                     	;# 
   224     000B                     	;# 
   225     000C                     	;# 
   226     000D                     	;# 
   227     000E                     	;# 
   228     000E                     	;# 
   229     000F                     	;# 
   230     0010                     	;# 
   231     0011                     	;# 
   232     0012                     	;# 
   233     0013                     	;# 
   234     0014                     	;# 
   235     0015                     	;# 
   236     0015                     	;# 
   237     0016                     	;# 
   238     0017                     	;# 
   239     0018                     	;# 
   240     0019                     	;# 
   241     001A                     	;# 
   242     001B                     	;# 
   243     001B                     	;# 
   244     001C                     	;# 
   245     001D                     	;# 
   246     001E                     	;# 
   247     001F                     	;# 
   248     0081                     	;# 
   249     0085                     	;# 
   250     0086                     	;# 
   251     0087                     	;# 
   252     0088                     	;# 
   253     0089                     	;# 
   254     008C                     	;# 
   255     008D                     	;# 
   256     008E                     	;# 
   257     008F                     	;# 
   258     0090                     	;# 
   259     0091                     	;# 
   260     0092                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0094                     	;# 
   265     0095                     	;# 
   266     0096                     	;# 
   267     0097                     	;# 
   268     0098                     	;# 
   269     0099                     	;# 
   270     009A                     	;# 
   271     009B                     	;# 
   272     009C                     	;# 
   273     009D                     	;# 
   274     009E                     	;# 
   275     009F                     	;# 
   276     0105                     	;# 
   277     0107                     	;# 
   278     0108                     	;# 
   279     0109                     	;# 
   280     010C                     	;# 
   281     010C                     	;# 
   282     010D                     	;# 
   283     010E                     	;# 
   284     010F                     	;# 
   285     0185                     	;# 
   286     0187                     	;# 
   287     0188                     	;# 
   288     0189                     	;# 
   289     018C                     	;# 
   290     018D                     	;# 
   291     0000                     	;# 
   292     0001                     	;# 
   293     0002                     	;# 
   294     0003                     	;# 
   295     0004                     	;# 
   296     0005                     	;# 
   297     0006                     	;# 
   298     0007                     	;# 
   299     0008                     	;# 
   300     0009                     	;# 
   301     000A                     	;# 
   302     000B                     	;# 
   303     000C                     	;# 
   304     000D                     	;# 
   305     000E                     	;# 
   306     000E                     	;# 
   307     000F                     	;# 
   308     0010                     	;# 
   309     0011                     	;# 
   310     0012                     	;# 
   311     0013                     	;# 
   312     0014                     	;# 
   313     0015                     	;# 
   314     0015                     	;# 
   315     0016                     	;# 
   316     0017                     	;# 
   317     0018                     	;# 
   318     0019                     	;# 
   319     001A                     	;# 
   320     001B                     	;# 
   321     001B                     	;# 
   322     001C                     	;# 
   323     001D                     	;# 
   324     001E                     	;# 
   325     001F                     	;# 
   326     0081                     	;# 
   327     0085                     	;# 
   328     0086                     	;# 
   329     0087                     	;# 
   330     0088                     	;# 
   331     0089                     	;# 
   332     008C                     	;# 
   333     008D                     	;# 
   334     008E                     	;# 
   335     008F                     	;# 
   336     0090                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0094                     	;# 
   343     0095                     	;# 
   344     0096                     	;# 
   345     0097                     	;# 
   346     0098                     	;# 
   347     0099                     	;# 
   348     009A                     	;# 
   349     009B                     	;# 
   350     009C                     	;# 
   351     009D                     	;# 
   352     009E                     	;# 
   353     009F                     	;# 
   354     0105                     	;# 
   355     0107                     	;# 
   356     0108                     	;# 
   357     0109                     	;# 
   358     010C                     	;# 
   359     010C                     	;# 
   360     010D                     	;# 
   361     010E                     	;# 
   362     010F                     	;# 
   363     0185                     	;# 
   364     0187                     	;# 
   365     0188                     	;# 
   366     0189                     	;# 
   367     018C                     	;# 
   368     018D                     	;# 
   369     0000                     	;# 
   370     0001                     	;# 
   371     0002                     	;# 
   372     0003                     	;# 
   373     0004                     	;# 
   374     0005                     	;# 
   375     0006                     	;# 
   376     0007                     	;# 
   377     0008                     	;# 
   378     0009                     	;# 
   379     000A                     	;# 
   380     000B                     	;# 
   381     000C                     	;# 
   382     000D                     	;# 
   383     000E                     	;# 
   384     000E                     	;# 
   385     000F                     	;# 
   386     0010                     	;# 
   387     0011                     	;# 
   388     0012                     	;# 
   389     0013                     	;# 
   390     0014                     	;# 
   391     0015                     	;# 
   392     0015                     	;# 
   393     0016                     	;# 
   394     0017                     	;# 
   395     0018                     	;# 
   396     0019                     	;# 
   397     001A                     	;# 
   398     001B                     	;# 
   399     001B                     	;# 
   400     001C                     	;# 
   401     001D                     	;# 
   402     001E                     	;# 
   403     001F                     	;# 
   404     0081                     	;# 
   405     0085                     	;# 
   406     0086                     	;# 
   407     0087                     	;# 
   408     0088                     	;# 
   409     0089                     	;# 
   410     008C                     	;# 
   411     008D                     	;# 
   412     008E                     	;# 
   413     008F                     	;# 
   414     0090                     	;# 
   415     0091                     	;# 
   416     0092                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0094                     	;# 
   421     0095                     	;# 
   422     0096                     	;# 
   423     0097                     	;# 
   424     0098                     	;# 
   425     0099                     	;# 
   426     009A                     	;# 
   427     009B                     	;# 
   428     009C                     	;# 
   429     009D                     	;# 
   430     009E                     	;# 
   431     009F                     	;# 
   432     0105                     	;# 
   433     0107                     	;# 
   434     0108                     	;# 
   435     0109                     	;# 
   436     010C                     	;# 
   437     010C                     	;# 
   438     010D                     	;# 
   439     010E                     	;# 
   440     010F                     	;# 
   441     0185                     	;# 
   442     0187                     	;# 
   443     0188                     	;# 
   444     0189                     	;# 
   445     018C                     	;# 
   446     018D                     	;# 
   447     000B                     _INTCONbits	set	11
   448     000C                     _PIR1bits	set	12
   449     0009                     _PORTE	set	9
   450     0008                     _PORTD	set	8
   451     0007                     _PORTC	set	7
   452     0005                     _PORTA	set	5
   453     001E                     _ADRESH	set	30
   454     001F                     _ADCON0bits	set	31
   455     008C                     _PIE1bits	set	140
   456     008F                     _OSCCONbits	set	143
   457     0095                     _WPUB	set	149
   458     0081                     _OPTION_REGbits	set	129
   459     0089                     _TRISE	set	137
   460     0088                     _TRISD	set	136
   461     0087                     _TRISC	set	135
   462     0086                     _TRISB	set	134
   463     0085                     _TRISA	set	133
   464     009F                     _ADCON1bits	set	159
   465     0189                     _ANSELH	set	393
   466     0188                     _ANSEL	set	392
   467                           
   468                           	psect	cinit
   469     000F                     start_initialization:	
   470                           ; #config settings
   471                           
   472     000F                     __initialization:
   473                           
   474                           ; Clear objects allocated to COMMON
   475     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   476     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   477     0011                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480     0011                     __end_of__initialization:
   481     0011  0183               	clrf	3
   482     0012  120A  118A  2888   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	bssCOMMON
   485     007A                     __pbssCOMMON:
   486     007A                     _varadc:
   487     007A                     	ds	1
   488     007B                     _portval:
   489     007B                     	ds	1
   490                           
   491                           	psect	cstackCOMMON
   492     0070                     __pcstackCOMMON:
   493     0070                     ?_valdisplay:
   494     0070                     ?_isr:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_isr:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_main:	
   501                           ; 1 bytes @ 0x0
   502                           
   503                           
   504                           ; 1 bytes @ 0x0
   505     0070                     	ds	2
   506     0072                     ??_valdisplay:
   507     0072                     ??_adc_init:	
   508                           ; 1 bytes @ 0x2
   509                           
   510     0072                     ?_config_pines:	
   511                           ; 1 bytes @ 0x2
   512                           
   513     0072                     ?_config_tris:	
   514                           ; 1 bytes @ 0x2
   515                           
   516     0072                     ?_config_ports:	
   517                           ; 1 bytes @ 0x2
   518                           
   519     0072                     ?_config_pullup:	
   520                           ; 1 bytes @ 0x2
   521                           
   522     0072                     ?_adc_read:	
   523                           ; 1 bytes @ 0x2
   524                           
   525     0072                     config_tris@tris_b:	
   526                           ; 2 bytes @ 0x2
   527                           
   528     0072                     config_ports@port_c:	
   529                           ; 1 bytes @ 0x2
   530                           
   531     0072                     config_pines@ansh:	
   532                           ; 1 bytes @ 0x2
   533                           
   534     0072                     config_pullup@pulles:	
   535                           ; 2 bytes @ 0x2
   536                           
   537                           
   538                           ; 2 bytes @ 0x2
   539     0072                     	ds	1
   540     0073                     config_tris@tris_c:
   541     0073                     config_ports@port_d:	
   542                           ; 1 bytes @ 0x3
   543                           
   544                           
   545                           ; 1 bytes @ 0x3
   546     0073                     	ds	1
   547     0074                     ??_adc_read:
   548     0074                     ??_config_pines:	
   549                           ; 1 bytes @ 0x4
   550                           
   551     0074                     config_pines@ans:	
   552                           ; 1 bytes @ 0x4
   553                           
   554     0074                     config_tris@tris_d:	
   555                           ; 1 bytes @ 0x4
   556                           
   557     0074                     config_ports@port_e:	
   558                           ; 1 bytes @ 0x4
   559                           
   560     0074                     config_pullup@pinpull:	
   561                           ; 1 bytes @ 0x4
   562                           
   563     0074                     valdisplay@val:	
   564                           ; 1 bytes @ 0x4
   565                           
   566                           
   567                           ; 1 bytes @ 0x4
   568     0074                     	ds	1
   569     0075                     ??_config_ports:
   570     0075                     ??_config_pullup:	
   571                           ; 1 bytes @ 0x5
   572                           
   573     0075                     config_tris@tris_e:	
   574                           ; 1 bytes @ 0x5
   575                           
   576     0075                     config_ports@port_a:	
   577                           ; 1 bytes @ 0x5
   578                           
   579                           
   580                           ; 1 bytes @ 0x5
   581     0075                     	ds	1
   582     0076                     ??_config_tris:
   583     0076                     config_tris@tris_a:	
   584                           ; 1 bytes @ 0x6
   585                           
   586                           
   587                           ; 1 bytes @ 0x6
   588     0076                     	ds	1
   589     0077                     ??_main:
   590                           
   591                           ; 1 bytes @ 0x7
   592     0077                     	ds	3
   593                           
   594                           	psect	cstackBANK0
   595     0020                     __pcstackBANK0:
   596     0020                     ?_adc_init:
   597     0020                     adc_init@channel:	
   598                           ; 1 bytes @ 0x0
   599                           
   600                           
   601                           ; 2 bytes @ 0x0
   602     0020                     	ds	2
   603     0022                     adc_init@justf:
   604                           
   605                           ; 2 bytes @ 0x2
   606     0022                     	ds	2
   607     0024                     adc_init@vcf0:
   608                           
   609                           ; 2 bytes @ 0x4
   610     0024                     	ds	2
   611     0026                     adc_init@vcf1:
   612                           
   613                           ; 2 bytes @ 0x6
   614     0026                     	ds	2
   615     0028                     adc_init@adcs:
   616                           
   617                           ; 1 bytes @ 0x8
   618     0028                     	ds	1
   619                           
   620                           	psect	maintext
   621     0088                     __pmaintext:	
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 56 in file "Postlab1.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : B00/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          3       0       0       0       0
   644 ;;      Totals:         3       0       0       0       0
   645 ;;Total ram usage:        3 bytes
   646 ;; Hardware stack levels required when called: 2
   647 ;; This function calls:
   648 ;;		_adc_init
   649 ;;		_adc_read
   650 ;;		_config_pines
   651 ;;		_config_ports
   652 ;;		_config_pullup
   653 ;;		_config_tris
   654 ;;		_valdisplay
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     0088                     _main:	
   661                           ;psect for function _main
   662                           
   663     0088                     l957:	
   664                           ;incstack = 0
   665                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;Postlab1.c: 58:  config_pines ( 0b00000000, 0);
   669     0088  3000               	movlw	0
   670     0089  00F2               	movwf	config_pines@ansh
   671     008A  00F3               	movwf	config_pines@ansh+1
   672     008B  3000               	movlw	0
   673     008C  120A  118A  2152  120A  118A  	fcall	_config_pines
   674                           
   675                           ;Postlab1.c: 59:   config_tris ( 0, 0b11111111, 0, 0, 0);
   676     0091  30FF               	movlw	255
   677     0092  00F2               	movwf	config_tris@tris_b
   678     0093  01F3               	clrf	config_tris@tris_c
   679     0094  01F4               	clrf	config_tris@tris_d
   680     0095  01F5               	clrf	config_tris@tris_e
   681     0096  3000               	movlw	0
   682     0097  120A  118A  212E  120A  118A  	fcall	_config_tris
   683                           
   684                           ;Postlab1.c: 60:  config_ports ( 0, 0, 0, 0);
   685     009C  01F2               	clrf	config_ports@port_c
   686     009D  01F3               	clrf	config_ports@port_d
   687     009E  01F4               	clrf	config_ports@port_e
   688     009F  3000               	movlw	0
   689     00A0  120A  118A  213C  120A  118A  	fcall	_config_ports
   690                           
   691                           ;Postlab1.c: 61:  config_pullup (0, 0b11111111);
   692     00A5  3000               	movlw	0
   693     00A6  00F2               	movwf	config_pullup@pulles
   694     00A7  00F3               	movwf	config_pullup@pulles+1
   695     00A8  30FF               	movlw	255
   696     00A9  00F4               	movwf	config_pullup@pinpull
   697     00AA  120A  118A  2148  120A  118A  	fcall	_config_pullup
   698                           
   699                           ;Postlab1.c: 64: adc_init( 0, 0,0,0,0b01);
   700     00AF  3000               	movlw	0
   701     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   702     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   703     00B2  00A0               	movwf	adc_init@channel
   704     00B3  00A1               	movwf	adc_init@channel+1
   705     00B4  3000               	movlw	0
   706     00B5  00A2               	movwf	adc_init@justf
   707     00B6  00A3               	movwf	adc_init@justf+1
   708     00B7  3000               	movlw	0
   709     00B8  00A4               	movwf	adc_init@vcf0
   710     00B9  00A5               	movwf	adc_init@vcf0+1
   711     00BA  3000               	movlw	0
   712     00BB  00A6               	movwf	adc_init@vcf1
   713     00BC  00A7               	movwf	adc_init@vcf1+1
   714     00BD  01A8               	clrf	adc_init@adcs
   715     00BE  0AA8               	incf	adc_init@adcs,f
   716     00BF  120A  118A  20E7  120A  118A  	fcall	_adc_init
   717     00C4                     l959:
   718                           
   719                           ;Postlab1.c: 66:  _delay((unsigned long)((100)*(8000000/4000.0)));
   720     00C4  3002               	movlw	2
   721     00C5  00F9               	movwf	??_main+2
   722     00C6  3004               	movlw	4
   723     00C7  00F8               	movwf	??_main+1
   724     00C8  30BA               	movlw	186
   725     00C9  00F7               	movwf	??_main
   726     00CA                     u37:
   727     00CA  0BF7               	decfsz	??_main,f
   728     00CB  28CA               	goto	u37
   729     00CC  0BF8               	decfsz	??_main+1,f
   730     00CD  28CA               	goto	u37
   731     00CE  0BF9               	decfsz	??_main+2,f
   732     00CF  28CA               	goto	u37
   733     00D0  0000               	nop
   734     00D1                     l961:
   735                           
   736                           ;Postlab1.c: 68:     {;Postlab1.c: 69:         varadc= adc_read();
   737     00D1  120A  118A  211F  120A  118A  	fcall	_adc_read
   738     00D6  0872               	movf	?_adc_read,w
   739     00D7  00FA               	movwf	_varadc
   740     00D8                     l963:
   741                           
   742                           ;Postlab1.c: 70:      PORTC = valdisplay(varadc);
   743     00D8  087A               	movf	_varadc,w
   744     00D9  120A  118A  2015  120A  118A  	fcall	_valdisplay
   745     00DE  1283               	bcf	3,5	;RP0=0, select bank0
   746     00DF  1303               	bcf	3,6	;RP1=0, select bank0
   747     00E0  0087               	movwf	7	;volatile
   748     00E1                     l965:
   749                           
   750                           ;Postlab1.c: 71:      PORTD = 0b00000001;
   751     00E1  3001               	movlw	1
   752     00E2  0088               	movwf	8	;volatile
   753     00E3  28D1               	goto	l961
   754     00E4  120A  118A  280C   	ljmp	start
   755     00E7                     __end_of_main:
   756                           
   757                           	psect	text1
   758     0015                     __ptext1:	
   759 ;; *************** function _valdisplay *****************
   760 ;; Defined at:
   761 ;;		line 16 in file "displaylib.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  val             1    wreg     unsigned char 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  val             1    4[COMMON] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      unsigned char 
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   775 ;;      Params:         0       0       0       0       0
   776 ;;      Locals:         1       0       0       0       0
   777 ;;      Temps:          2       0       0       0       0
   778 ;;      Totals:         3       0       0       0       0
   779 ;;Total ram usage:        3 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789     0015                     _valdisplay:	
   790                           ;psect for function _valdisplay
   791                           
   792                           
   793                           ;incstack = 0
   794                           ; Regs used in _valdisplay: [wreg-fsr0h+status,2+status,0]
   795                           ;valdisplay@val stored from wreg
   796     0015  00F4               	movwf	valdisplay@val
   797     0016                     l755:
   798                           
   799                           ;displaylib.c: 17:     switch (val){
   800     0016  2847               	goto	l791
   801     0017                     l757:
   802                           
   803                           ;displaylib.c: 19:         portval = 0b00111111;
   804     0017  303F               	movlw	63
   805     0018  00FB               	movwf	_portval
   806                           
   807                           ;displaylib.c: 20:             break;
   808     0019  2886               	goto	l793
   809     001A                     l759:
   810                           
   811                           ;displaylib.c: 22:          portval = 0b00000110;
   812     001A  3006               	movlw	6
   813     001B  00FB               	movwf	_portval
   814                           
   815                           ;displaylib.c: 23:             break;
   816     001C  2886               	goto	l793
   817     001D                     l761:
   818                           
   819                           ;displaylib.c: 25:             portval = 0b01011011;
   820     001D  305B               	movlw	91
   821     001E  00FB               	movwf	_portval
   822                           
   823                           ;displaylib.c: 26:             break;
   824     001F  2886               	goto	l793
   825     0020                     l763:
   826                           
   827                           ;displaylib.c: 28:             portval = 0b11110010;
   828     0020  30F2               	movlw	242
   829     0021  00FB               	movwf	_portval
   830                           
   831                           ;displaylib.c: 29:             break;
   832     0022  2886               	goto	l793
   833     0023                     l765:
   834                           
   835                           ;displaylib.c: 31:             portval = 0b01100110;
   836     0023  3066               	movlw	102
   837     0024  00FB               	movwf	_portval
   838                           
   839                           ;displaylib.c: 32:             break;
   840     0025  2886               	goto	l793
   841     0026                     l767:
   842                           
   843                           ;displaylib.c: 34:             portval = 0b10110110;
   844     0026  30B6               	movlw	182
   845     0027  00FB               	movwf	_portval
   846                           
   847                           ;displaylib.c: 35:             break;
   848     0028  2886               	goto	l793
   849     0029                     l769:
   850                           
   851                           ;displaylib.c: 37:             portval = 0b10111110;
   852     0029  30BE               	movlw	190
   853     002A  00FB               	movwf	_portval
   854                           
   855                           ;displaylib.c: 38:             break;
   856     002B  2886               	goto	l793
   857     002C                     l771:
   858                           
   859                           ;displaylib.c: 40:             portval = 0b11100000;
   860     002C  30E0               	movlw	224
   861     002D  00FB               	movwf	_portval
   862                           
   863                           ;displaylib.c: 41:             break;
   864     002E  2886               	goto	l793
   865     002F                     l773:
   866                           
   867                           ;displaylib.c: 43:             portval = 0b11111110;
   868     002F  30FE               	movlw	254
   869     0030  00FB               	movwf	_portval
   870                           
   871                           ;displaylib.c: 44:             break;
   872     0031  2886               	goto	l793
   873     0032                     l775:
   874                           
   875                           ;displaylib.c: 46:             portval = 0b11110110;
   876     0032  30F6               	movlw	246
   877     0033  00FB               	movwf	_portval
   878                           
   879                           ;displaylib.c: 47:             break;
   880     0034  2886               	goto	l793
   881     0035                     l777:
   882                           
   883                           ;displaylib.c: 49:             portval = 0b11101110;
   884     0035  30EE               	movlw	238
   885     0036  00FB               	movwf	_portval
   886                           
   887                           ;displaylib.c: 50:             break;
   888     0037  2886               	goto	l793
   889     0038                     l779:
   890                           
   891                           ;displaylib.c: 52:             portval =0b00111110 ;
   892     0038  303E               	movlw	62
   893     0039  00FB               	movwf	_portval
   894                           
   895                           ;displaylib.c: 53:             break;
   896     003A  2886               	goto	l793
   897     003B                     l781:
   898                           
   899                           ;displaylib.c: 55:             portval = 0b10011100;
   900     003B  309C               	movlw	156
   901     003C  00FB               	movwf	_portval
   902                           
   903                           ;displaylib.c: 56:             break;
   904     003D  2886               	goto	l793
   905     003E                     l783:
   906                           
   907                           ;displaylib.c: 58:             portval = 0b01111010;
   908     003E  307A               	movlw	122
   909     003F  00FB               	movwf	_portval
   910                           
   911                           ;displaylib.c: 59:             break;
   912     0040  2886               	goto	l793
   913     0041                     l785:
   914                           
   915                           ;displaylib.c: 61:             portval = 0b10011110;
   916     0041  309E               	movlw	158
   917     0042  00FB               	movwf	_portval
   918                           
   919                           ;displaylib.c: 62:             break;
   920     0043  2886               	goto	l793
   921     0044                     l787:
   922                           
   923                           ;displaylib.c: 64:             portval = 0b10001110;
   924     0044  308E               	movlw	142
   925     0045  00FB               	movwf	_portval
   926                           
   927                           ;displaylib.c: 65:             break;
   928     0046  2886               	goto	l793
   929     0047                     l791:
   930     0047  0874               	movf	valdisplay@val,w
   931     0048  00F2               	movwf	??_valdisplay
   932     0049  01F3               	clrf	??_valdisplay+1
   933                           
   934                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   935                           ; Switch size 1, requested type "simple"
   936                           ; Number of cases is 2, Range of values is 0 to 49
   937                           ; switch strategies available:
   938                           ; Name         Instructions Cycles
   939                           ; simple_byte            7     4 (average)
   940                           ; direct_byte          158     8 (fixed)
   941                           ; jumptable            260     6 (fixed)
   942                           ;	Chosen strategy is simple_byte
   943     004A  0873               	movf	??_valdisplay+1,w
   944     004B  3A00               	xorlw	0	; case 0
   945     004C  1903               	skipnz
   946     004D  2852               	goto	l1007
   947     004E  3A31               	xorlw	49	; case 49
   948     004F  1903               	skipnz
   949     0050  2872               	goto	l1009
   950     0051  2886               	goto	l793
   951     0052                     l1007:
   952                           
   953                           ; Switch size 1, requested type "simple"
   954                           ; Number of cases is 10, Range of values is 48 to 57
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte           31    16 (average)
   958                           ; direct_byte           41    11 (fixed)
   959                           ; jumptable            263     9 (fixed)
   960                           ;	Chosen strategy is simple_byte
   961     0052  0872               	movf	??_valdisplay,w
   962     0053  3A30               	xorlw	48	; case 48
   963     0054  1903               	skipnz
   964     0055  2817               	goto	l757
   965     0056  3A01               	xorlw	1	; case 49
   966     0057  1903               	skipnz
   967     0058  281A               	goto	l759
   968     0059  3A03               	xorlw	3	; case 50
   969     005A  1903               	skipnz
   970     005B  281D               	goto	l761
   971     005C  3A01               	xorlw	1	; case 51
   972     005D  1903               	skipnz
   973     005E  2820               	goto	l763
   974     005F  3A07               	xorlw	7	; case 52
   975     0060  1903               	skipnz
   976     0061  2823               	goto	l765
   977     0062  3A01               	xorlw	1	; case 53
   978     0063  1903               	skipnz
   979     0064  2826               	goto	l767
   980     0065  3A03               	xorlw	3	; case 54
   981     0066  1903               	skipnz
   982     0067  2829               	goto	l769
   983     0068  3A01               	xorlw	1	; case 55
   984     0069  1903               	skipnz
   985     006A  282C               	goto	l771
   986     006B  3A0F               	xorlw	15	; case 56
   987     006C  1903               	skipnz
   988     006D  282F               	goto	l773
   989     006E  3A01               	xorlw	1	; case 57
   990     006F  1903               	skipnz
   991     0070  2832               	goto	l775
   992     0071  2886               	goto	l793
   993     0072                     l1009:
   994                           
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 6, Range of values is 48 to 53
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte           19    10 (average)
  1000                           ; direct_byte           29    11 (fixed)
  1001                           ; jumptable            263     9 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003     0072  0872               	movf	??_valdisplay,w
  1004     0073  3A30               	xorlw	48	; case 48
  1005     0074  1903               	skipnz
  1006     0075  2835               	goto	l777
  1007     0076  3A01               	xorlw	1	; case 49
  1008     0077  1903               	skipnz
  1009     0078  2838               	goto	l779
  1010     0079  3A03               	xorlw	3	; case 50
  1011     007A  1903               	skipnz
  1012     007B  283B               	goto	l781
  1013     007C  3A01               	xorlw	1	; case 51
  1014     007D  1903               	skipnz
  1015     007E  283E               	goto	l783
  1016     007F  3A07               	xorlw	7	; case 52
  1017     0080  1903               	skipnz
  1018     0081  2841               	goto	l785
  1019     0082  3A01               	xorlw	1	; case 53
  1020     0083  1903               	skipnz
  1021     0084  2844               	goto	l787
  1022     0085  2886               	goto	l793
  1023     0086                     l793:
  1024                           
  1025                           ;displaylib.c: 68:   return portval;
  1026     0086  087B               	movf	_portval,w
  1027     0087                     l135:
  1028     0087  0008               	return
  1029     0088                     __end_of_valdisplay:
  1030                           
  1031                           	psect	text2
  1032     012E                     __ptext2:	
  1033 ;; *************** function _config_tris *****************
  1034 ;; Defined at:
  1035 ;;		line 19 in file "setup_lb.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  tris_a          1    wreg     unsigned char 
  1038 ;;  tris_b          1    2[COMMON] unsigned char 
  1039 ;;  tris_c          1    3[COMMON] unsigned char 
  1040 ;;  tris_d          1    4[COMMON] unsigned char 
  1041 ;;  tris_e          1    5[COMMON] unsigned char 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  tris_a          1    6[COMMON] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         4       0       0       0       0
  1054 ;;      Locals:         1       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         5       0       0       0       0
  1057 ;;Total ram usage:        5 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067     012E                     _config_tris:	
  1068                           ;psect for function _config_tris
  1069                           
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _config_tris: [wreg]
  1073                           ;config_tris@tris_a stored from wreg
  1074     012E  00F6               	movwf	config_tris@tris_a
  1075     012F                     l889:
  1076                           
  1077                           ;setup_lb.c: 20:     TRISA= tris_a;
  1078     012F  0876               	movf	config_tris@tris_a,w
  1079     0130  1683               	bsf	3,5	;RP0=1, select bank1
  1080     0131  1303               	bcf	3,6	;RP1=0, select bank1
  1081     0132  0085               	movwf	5	;volatile
  1082                           
  1083                           ;setup_lb.c: 21:     TRISB = tris_b;
  1084     0133  0872               	movf	config_tris@tris_b,w
  1085     0134  0086               	movwf	6	;volatile
  1086                           
  1087                           ;setup_lb.c: 22:     TRISC = tris_c;
  1088     0135  0873               	movf	config_tris@tris_c,w
  1089     0136  0087               	movwf	7	;volatile
  1090                           
  1091                           ;setup_lb.c: 23:     TRISD = tris_d;
  1092     0137  0874               	movf	config_tris@tris_d,w
  1093     0138  0088               	movwf	8	;volatile
  1094                           
  1095                           ;setup_lb.c: 24:     TRISE = tris_e;
  1096     0139  0875               	movf	config_tris@tris_e,w
  1097     013A  0089               	movwf	9	;volatile
  1098     013B                     l61:
  1099     013B  0008               	return
  1100     013C                     __end_of_config_tris:
  1101                           
  1102                           	psect	text3
  1103     0148                     __ptext3:	
  1104 ;; *************** function _config_pullup *****************
  1105 ;; Defined at:
  1106 ;;		line 33 in file "setup_lb.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  pulles          2    2[COMMON] int 
  1109 ;;  pinpull         1    4[COMMON] unsigned char 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,0
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         3       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0
  1124 ;;      Totals:         3       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_main
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135     0148                     _config_pullup:	
  1136                           ;psect for function _config_pullup
  1137                           
  1138     0148                     l893:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _config_pullup: [wreg+status,0]
  1141                           
  1142                           
  1143                           ;setup_lb.c: 34:  OPTION_REGbits.nRBPU = pulles;
  1144     0148  0C72               	rrf	config_pullup@pulles,w
  1145     0149  1683               	bsf	3,5	;RP0=1, select bank1
  1146     014A  1303               	bcf	3,6	;RP1=0, select bank1
  1147     014B  1C03               	skipc
  1148     014C  1381               	bcf	1,7	;volatile
  1149     014D  1803               	skipnc
  1150     014E  1781               	bsf	1,7	;volatile
  1151     014F                     l895:
  1152                           
  1153                           ;setup_lb.c: 35:     WPUB = pinpull;
  1154     014F  0874               	movf	config_pullup@pinpull,w
  1155     0150  0095               	movwf	21	;volatile
  1156     0151                     l67:
  1157     0151  0008               	return
  1158     0152                     __end_of_config_pullup:
  1159                           
  1160                           	psect	text4
  1161     013C                     __ptext4:	
  1162 ;; *************** function _config_ports *****************
  1163 ;; Defined at:
  1164 ;;		line 27 in file "setup_lb.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  port_a          1    wreg     unsigned char 
  1167 ;;  port_c          1    2[COMMON] unsigned char 
  1168 ;;  port_d          1    3[COMMON] unsigned char 
  1169 ;;  port_e          1    4[COMMON] unsigned char 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  port_a          1    5[COMMON] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         3       0       0       0       0
  1182 ;;      Locals:         1       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0
  1184 ;;      Totals:         4       0       0       0       0
  1185 ;;Total ram usage:        4 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195     013C                     _config_ports:	
  1196                           ;psect for function _config_ports
  1197                           
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _config_ports: [wreg]
  1201                           ;config_ports@port_a stored from wreg
  1202     013C  00F5               	movwf	config_ports@port_a
  1203     013D                     l891:
  1204                           
  1205                           ;setup_lb.c: 28:     PORTA = port_a;
  1206     013D  0875               	movf	config_ports@port_a,w
  1207     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1208     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1209     0140  0085               	movwf	5	;volatile
  1210                           
  1211                           ;setup_lb.c: 29:     PORTC = port_c;
  1212     0141  0872               	movf	config_ports@port_c,w
  1213     0142  0087               	movwf	7	;volatile
  1214                           
  1215                           ;setup_lb.c: 30:     PORTD = port_d;
  1216     0143  0873               	movf	config_ports@port_d,w
  1217     0144  0088               	movwf	8	;volatile
  1218                           
  1219                           ;setup_lb.c: 31:     PORTE = port_e;
  1220     0145  0874               	movf	config_ports@port_e,w
  1221     0146  0089               	movwf	9	;volatile
  1222     0147                     l64:
  1223     0147  0008               	return
  1224     0148                     __end_of_config_ports:
  1225                           
  1226                           	psect	text5
  1227     0152                     __ptext5:	
  1228 ;; *************** function _config_pines *****************
  1229 ;; Defined at:
  1230 ;;		line 15 in file "setup_lb.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  ans             1    wreg     unsigned char 
  1233 ;;  ansh            2    2[COMMON] int 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  ans             1    4[COMMON] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         2       0       0       0       0
  1246 ;;      Locals:         1       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0
  1248 ;;      Totals:         3       0       0       0       0
  1249 ;;Total ram usage:        3 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 1
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259     0152                     _config_pines:	
  1260                           ;psect for function _config_pines
  1261                           
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _config_pines: [wreg]
  1265                           ;config_pines@ans stored from wreg
  1266     0152  00F4               	movwf	config_pines@ans
  1267     0153                     l887:
  1268                           
  1269                           ;setup_lb.c: 16: ANSEL = ans;
  1270     0153  0874               	movf	config_pines@ans,w
  1271     0154  1683               	bsf	3,5	;RP0=1, select bank3
  1272     0155  1703               	bsf	3,6	;RP1=1, select bank3
  1273     0156  0088               	movwf	8	;volatile
  1274                           
  1275                           ;setup_lb.c: 17:  ANSELH = ansh;
  1276     0157  0872               	movf	config_pines@ansh,w
  1277     0158  0089               	movwf	9	;volatile
  1278     0159                     l58:
  1279     0159  0008               	return
  1280     015A                     __end_of_config_pines:
  1281                           
  1282                           	psect	text6
  1283     011F                     __ptext6:	
  1284 ;; *************** function _adc_read *****************
  1285 ;; Defined at:
  1286 ;;		line 25 in file "adclib.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2    2[COMMON] int 
  1293 ;; Registers used:
  1294 ;;		wreg
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         2       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0
  1303 ;;      Totals:         4       0       0       0       0
  1304 ;;Total ram usage:        4 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     011F                     _adc_read:	
  1315                           ;psect for function _adc_read
  1316                           
  1317     011F                     l879:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _adc_read: [wreg]
  1320                           
  1321     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0120  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0121  189F               	btfsc	31,1	;volatile
  1324     0122  2924               	goto	u21
  1325     0123  2925               	goto	u20
  1326     0124                     u21:
  1327     0124  2926               	goto	l883
  1328     0125                     u20:
  1329     0125                     l881:
  1330     0125  149F               	bsf	31,1	;volatile
  1331     0126                     l883:
  1332     0126  081E               	movf	30,w	;volatile
  1333     0127  00F4               	movwf	??_adc_read
  1334     0128  01F5               	clrf	??_adc_read+1
  1335     0129  0874               	movf	??_adc_read,w
  1336     012A  00F2               	movwf	?_adc_read
  1337     012B  0875               	movf	??_adc_read+1,w
  1338     012C  00F3               	movwf	?_adc_read+1
  1339     012D                     l15:
  1340     012D  0008               	return
  1341     012E                     __end_of_adc_read:
  1342                           
  1343                           	psect	text7
  1344     00E7                     __ptext7:	
  1345 ;; *************** function _adc_init *****************
  1346 ;; Defined at:
  1347 ;;		line 15 in file "adclib.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  channel         2    0[BANK0 ] int 
  1350 ;;  justf           2    2[BANK0 ] int 
  1351 ;;  vcf0            2    4[BANK0 ] int 
  1352 ;;  vcf1            2    6[BANK0 ] int 
  1353 ;;  adcs            1    8[BANK0 ] unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1    wreg      void 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1365 ;;      Params:         0       9       0       0       0
  1366 ;;      Locals:         0       0       0       0       0
  1367 ;;      Temps:          1       0       0       0       0
  1368 ;;      Totals:         1       9       0       0       0
  1369 ;;Total ram usage:       10 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379     00E7                     _adc_init:	
  1380                           ;psect for function _adc_init
  1381                           
  1382     00E7                     l947:	
  1383                           ;incstack = 0
  1384                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1385                           
  1386     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1387     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1388     00E9  0C22               	rrf	adc_init@justf,w
  1389     00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1390     00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1391     00EC  1C03               	skipc
  1392     00ED  139F               	bcf	31,7	;volatile
  1393     00EE  1803               	skipnc
  1394     00EF  179F               	bsf	31,7	;volatile
  1395     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1396     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1397     00F2  0C24               	rrf	adc_init@vcf0,w
  1398     00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1399     00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1400     00F5  1C03               	skipc
  1401     00F6  121F               	bcf	31,4	;volatile
  1402     00F7  1803               	skipnc
  1403     00F8  161F               	bsf	31,4	;volatile
  1404     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1405     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1406     00FB  0C26               	rrf	adc_init@vcf1,w
  1407     00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1408     00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1409     00FE  1C03               	skipc
  1410     00FF  129F               	bcf	31,5	;volatile
  1411     0100  1803               	skipnc
  1412     0101  169F               	bsf	31,5	;volatile
  1413     0102                     l949:
  1414     0102  1283               	bcf	3,5	;RP0=0, select bank0
  1415     0103  1303               	bcf	3,6	;RP1=0, select bank0
  1416     0104  141F               	bsf	31,0	;volatile
  1417     0105                     l951:
  1418     0105  3021               	movlw	33
  1419     0106  00F2               	movwf	??_adc_init
  1420     0107                     u47:
  1421     0107  0BF2               	decfsz	??_adc_init,f
  1422     0108  2907               	goto	u47
  1423     0109                     l953:
  1424     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1425     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1426     010B  0828               	movf	adc_init@adcs,w
  1427     010C  00F2               	movwf	??_adc_init
  1428     010D  0EF2               	swapf	??_adc_init,f
  1429     010E  0DF2               	rlf	??_adc_init,f
  1430     010F  0DF2               	rlf	??_adc_init,f
  1431     0110  081F               	movf	31,w	;volatile
  1432     0111  0672               	xorwf	??_adc_init,w
  1433     0112  393F               	andlw	-193
  1434     0113  0672               	xorwf	??_adc_init,w
  1435     0114  009F               	movwf	31	;volatile
  1436     0115                     l955:
  1437     0115  0820               	movf	adc_init@channel,w
  1438     0116  00F2               	movwf	??_adc_init
  1439     0117  0DF2               	rlf	??_adc_init,f
  1440     0118  0DF2               	rlf	??_adc_init,f
  1441     0119  081F               	movf	31,w	;volatile
  1442     011A  0672               	xorwf	??_adc_init,w
  1443     011B  39C3               	andlw	-61
  1444     011C  0672               	xorwf	??_adc_init,w
  1445     011D  009F               	movwf	31	;volatile
  1446     011E                     l11:
  1447     011E  0008               	return
  1448     011F                     __end_of_adc_init:
  1449                           
  1450                           	psect	text8
  1451     015A                     __ptext8:	
  1452 ;; *************** function _isr *****************
  1453 ;; Defined at:
  1454 ;;		line 48 in file "Postlab1.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		None
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          2       0       0       0       0
  1471 ;;      Totals:         2       0       0       0       0
  1472 ;;Total ram usage:        2 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		Interrupt level 1
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481     015A                     _isr:	
  1482                           ;psect for function _isr
  1483                           
  1484     015A                     i1l817:
  1485                           
  1486                           ;Postlab1.c: 51:     __nop();
  1487     015A  0000               	nop
  1488     015B                     i1l104:
  1489     015B  0871               	movf	??_isr+1,w
  1490     015C  008A               	movwf	10
  1491     015D  0E70               	swapf	??_isr,w
  1492     015E  0083               	movwf	3
  1493     015F  0EFE               	swapf	btemp,f
  1494     0160  0E7E               	swapf	btemp,w
  1495     0161  0009               	retfie
  1496     0162                     __end_of_isr:
  1497     007E                     btemp	set	126	;btemp
  1498     007E                     wtemp0	set	126
  1499                           
  1500                           	psect	intentry
  1501     0004                     __pintentry:	
  1502                           ;incstack = 0
  1503                           ; Regs used in _isr: []
  1504                           
  1505     0004                     interrupt_function:
  1506     007E                     saved_w	set	btemp
  1507     0004  00FE               	movwf	btemp
  1508     0005  0E03               	swapf	3,w
  1509     0006  00F0               	movwf	??_isr
  1510     0007  080A               	movf	10,w
  1511     0008  00F1               	movwf	??_isr+1
  1512     0009  120A  118A  295A   	ljmp	_isr
  1513                           
  1514                           	psect	idloc
  1515                           
  1516                           ;Config register IDLOC0 @ 0x2000
  1517                           ;	unspecified, using default values
  1518     2000                     	org	8192
  1519     2000  3FFF               	dw	16383
  1520                           
  1521                           ;Config register IDLOC1 @ 0x2001
  1522                           ;	unspecified, using default values
  1523     2001                     	org	8193
  1524     2001  3FFF               	dw	16383
  1525                           
  1526                           ;Config register IDLOC2 @ 0x2002
  1527                           ;	unspecified, using default values
  1528     2002                     	org	8194
  1529     2002  3FFF               	dw	16383
  1530                           
  1531                           ;Config register IDLOC3 @ 0x2003
  1532                           ;	unspecified, using default values
  1533     2003                     	org	8195
  1534     2003  3FFF               	dw	16383
  1535                           
  1536                           	psect	config
  1537                           
  1538                           ;Config register CONFIG1 @ 0x2007
  1539                           ;	Oscillator Selection bits
  1540                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1541                           ;	Watchdog Timer Enable bit
  1542                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1543                           ;	Power-up Timer Enable bit
  1544                           ;	PWRTE = OFF, PWRT disabled
  1545                           ;	RE3/MCLR pin function select bit
  1546                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1547                           ;	Code Protection bit
  1548                           ;	CP = OFF, Program memory code protection is disabled
  1549                           ;	Data Code Protection bit
  1550                           ;	CPD = OFF, Data memory code protection is disabled
  1551                           ;	Brown Out Reset Selection bits
  1552                           ;	BOREN = OFF, BOR disabled
  1553                           ;	Internal External Switchover bit
  1554                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1555                           ;	Fail-Safe Clock Monitor Enabled bit
  1556                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1557                           ;	Low Voltage Programming Enable bit
  1558                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1559                           ;	In-Circuit Debugger Mode bit
  1560                           ;	DEBUG = 0x1, unprogrammed default
  1561     2007                     	org	8199
  1562     2007  20D5               	dw	8405
  1563                           
  1564                           ;Config register CONFIG2 @ 0x2008
  1565                           ;	Brown-out Reset Selection bit
  1566                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1567                           ;	Flash Program Memory Self Write Enable bits
  1568                           ;	WRT = OFF, Write protection off
  1569     2008                     	org	8200
  1570     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      9       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_config_tris

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1666
                                              7 COMMON     3     3      0
                           _adc_init
                           _adc_read
                       _config_pines
                       _config_ports
                      _config_pullup
                        _config_tris
                         _valdisplay
 ---------------------------------------------------------------------------------
 (1) _valdisplay                                           3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _config_tris                                          5     1      4     414
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _config_pullup                                        3     0      3     196
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _config_ports                                         4     1      3     316
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _config_pines                                         3     1      2     120
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             4     2      2       0
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                            10     1      9     605
                                              2 COMMON     1     1      0
                                              0 BANK0      9     0      9
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read
   _config_pines
   _config_ports
   _config_pullup
   _config_tris
   _valdisplay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 18 13:27:37 2023

                     l11 011E                       l15 012D                       l61 013B  
                     l64 0147                       l58 0159                       l67 0151  
                     u20 0125                       u21 0124                       u37 00CA  
                     u47 0107                      l135 0087                      l761 001D  
                    l771 002C                      l763 0020                      l755 0016  
                    l781 003B                      l773 002F                      l765 0023  
                    l757 0017                      l951 0105                      l783 003E  
                    l775 0032                      l767 0026                      l759 001A  
                    l791 0047                      l953 0109                      l881 0125  
                    l785 0041                      l777 0035                      l769 0029  
                    l793 0086                      l961 00D1                      l955 0115  
                    l947 00E7                      l883 0126                      l891 013D  
                    l787 0044                      l779 0038                      l963 00D8  
                    l949 0102                      l893 0148                      l965 00E1  
                    l957 0088                      l879 011F                      l887 0153  
                    l895 014F                      l959 00C4                      l889 012F  
                    _isr 015A         config_pines@ansh 0072                     l1007 0052  
                   l1009 0072                     ?_isr 0070                     _WPUB 0095  
                   _main 0088                     btemp 007E           ??_config_pines 0074  
                   start 000C           ??_config_ports 0075                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l104 015B  
                  i1l817 015A                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    pclath 000A                    status 0003  
                  wtemp0 007E          ??_config_pullup 0075          __initialization 000F  
           __end_of_main 00E7                   ??_main 0077                   _ADRESH 001E  
                 _ANSELH 0189         __end_of_adc_init 011F         __end_of_adc_read 012E  
      config_tris@tris_a 0076        config_tris@tris_b 0072        config_tris@tris_c 0073  
      config_tris@tris_d 0074        config_tris@tris_e 0075                   _varadc 007A  
   __end_of_config_pines 015A                   saved_w 007E     __end_of_config_ports 0148  
__end_of__initialization 0011           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
     config_ports@port_a 0075       config_ports@port_c 0072       config_ports@port_d 0073  
     config_ports@port_e 0074             adc_init@adcs 0028             adc_init@vcf0 0024  
           adc_init@vcf1 0026               __pmaintext 0088               __pintentry 0004  
              ?_adc_init 0020                ?_adc_read 0072               ??_adc_init 0072  
             ??_adc_read 0074                  __ptext1 0015                  __ptext2 012E  
                __ptext3 0148                  __ptext4 013C                  __ptext5 0152  
                __ptext6 011F                  __ptext7 00E7                  __ptext8 015A  
                _portval 007B     end_of_initialization 0011     config_pullup@pinpull 0074  
  __end_of_config_pullup 0152             _config_pines 0152             _config_ports 013C  
             _valdisplay 0015          config_pines@ans 0074            ??_config_tris 0076  
    start_initialization 000F              __end_of_isr 0162              ?_valdisplay 0070  
        adc_init@channel 0020      __end_of_config_tris 013C              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020            adc_init@justf 0022  
      interrupt_function 0004                 _PIE1bits 008C      config_pullup@pulles 0072  
          valdisplay@val 0074                 _PIR1bits 000C              _config_tris 012E  
             _ADCON0bits 001F               _ADCON1bits 009F                 _adc_init 00E7  
               _adc_read 011F             ??_valdisplay 0072               _INTCONbits 000B  
     __end_of_valdisplay 0088                 intlevel1 0000               _OSCCONbits 008F  
          _config_pullup 0148           ?_config_pullup 0072            ?_config_pines 0072  
          ?_config_ports 0072             ?_config_tris 0072  
