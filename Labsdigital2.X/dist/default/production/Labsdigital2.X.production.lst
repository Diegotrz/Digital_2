

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jul 25 22:26:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.40
    32                           ; Generated 17/11/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     008F                     	;# 
   111     0090                     	;# 
   112     0091                     	;# 
   113     0092                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0093                     	;# 
   117     0094                     	;# 
   118     0095                     	;# 
   119     0096                     	;# 
   120     0097                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009A                     	;# 
   124     009B                     	;# 
   125     009C                     	;# 
   126     009D                     	;# 
   127     009E                     	;# 
   128     009F                     	;# 
   129     0105                     	;# 
   130     0107                     	;# 
   131     0108                     	;# 
   132     0109                     	;# 
   133     010C                     	;# 
   134     010C                     	;# 
   135     010D                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0185                     	;# 
   139     0187                     	;# 
   140     0188                     	;# 
   141     0189                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     008F                     	;# 
   189     0090                     	;# 
   190     0091                     	;# 
   191     0092                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0095                     	;# 
   197     0096                     	;# 
   198     0097                     	;# 
   199     0098                     	;# 
   200     0099                     	;# 
   201     009A                     	;# 
   202     009B                     	;# 
   203     009C                     	;# 
   204     009D                     	;# 
   205     009E                     	;# 
   206     009F                     	;# 
   207     0105                     	;# 
   208     0107                     	;# 
   209     0108                     	;# 
   210     0109                     	;# 
   211     010C                     	;# 
   212     010C                     	;# 
   213     010D                     	;# 
   214     010E                     	;# 
   215     010F                     	;# 
   216     0185                     	;# 
   217     0187                     	;# 
   218     0188                     	;# 
   219     0189                     	;# 
   220     018C                     	;# 
   221     018D                     	;# 
   222     0000                     	;# 
   223     0001                     	;# 
   224     0002                     	;# 
   225     0003                     	;# 
   226     0004                     	;# 
   227     0005                     	;# 
   228     0006                     	;# 
   229     0007                     	;# 
   230     0008                     	;# 
   231     0009                     	;# 
   232     000A                     	;# 
   233     000B                     	;# 
   234     000C                     	;# 
   235     000D                     	;# 
   236     000E                     	;# 
   237     000E                     	;# 
   238     000F                     	;# 
   239     0010                     	;# 
   240     0011                     	;# 
   241     0012                     	;# 
   242     0013                     	;# 
   243     0014                     	;# 
   244     0015                     	;# 
   245     0015                     	;# 
   246     0016                     	;# 
   247     0017                     	;# 
   248     0018                     	;# 
   249     0019                     	;# 
   250     001A                     	;# 
   251     001B                     	;# 
   252     001B                     	;# 
   253     001C                     	;# 
   254     001D                     	;# 
   255     001E                     	;# 
   256     001F                     	;# 
   257     0081                     	;# 
   258     0085                     	;# 
   259     0086                     	;# 
   260     0087                     	;# 
   261     0088                     	;# 
   262     0089                     	;# 
   263     008C                     	;# 
   264     008D                     	;# 
   265     008E                     	;# 
   266     008F                     	;# 
   267     0090                     	;# 
   268     0091                     	;# 
   269     0092                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0093                     	;# 
   273     0094                     	;# 
   274     0095                     	;# 
   275     0096                     	;# 
   276     0097                     	;# 
   277     0098                     	;# 
   278     0099                     	;# 
   279     009A                     	;# 
   280     009B                     	;# 
   281     009C                     	;# 
   282     009D                     	;# 
   283     009E                     	;# 
   284     009F                     	;# 
   285     0105                     	;# 
   286     0107                     	;# 
   287     0108                     	;# 
   288     0109                     	;# 
   289     010C                     	;# 
   290     010C                     	;# 
   291     010D                     	;# 
   292     010E                     	;# 
   293     010F                     	;# 
   294     0185                     	;# 
   295     0187                     	;# 
   296     0188                     	;# 
   297     0189                     	;# 
   298     018C                     	;# 
   299     018D                     	;# 
   300     0000                     	;# 
   301     0001                     	;# 
   302     0002                     	;# 
   303     0003                     	;# 
   304     0004                     	;# 
   305     0005                     	;# 
   306     0006                     	;# 
   307     0007                     	;# 
   308     0008                     	;# 
   309     0009                     	;# 
   310     000A                     	;# 
   311     000B                     	;# 
   312     000C                     	;# 
   313     000D                     	;# 
   314     000E                     	;# 
   315     000E                     	;# 
   316     000F                     	;# 
   317     0010                     	;# 
   318     0011                     	;# 
   319     0012                     	;# 
   320     0013                     	;# 
   321     0014                     	;# 
   322     0015                     	;# 
   323     0015                     	;# 
   324     0016                     	;# 
   325     0017                     	;# 
   326     0018                     	;# 
   327     0019                     	;# 
   328     001A                     	;# 
   329     001B                     	;# 
   330     001B                     	;# 
   331     001C                     	;# 
   332     001D                     	;# 
   333     001E                     	;# 
   334     001F                     	;# 
   335     0081                     	;# 
   336     0085                     	;# 
   337     0086                     	;# 
   338     0087                     	;# 
   339     0088                     	;# 
   340     0089                     	;# 
   341     008C                     	;# 
   342     008D                     	;# 
   343     008E                     	;# 
   344     008F                     	;# 
   345     0090                     	;# 
   346     0091                     	;# 
   347     0092                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0093                     	;# 
   351     0094                     	;# 
   352     0095                     	;# 
   353     0096                     	;# 
   354     0097                     	;# 
   355     0098                     	;# 
   356     0099                     	;# 
   357     009A                     	;# 
   358     009B                     	;# 
   359     009C                     	;# 
   360     009D                     	;# 
   361     009E                     	;# 
   362     009F                     	;# 
   363     0105                     	;# 
   364     0107                     	;# 
   365     0108                     	;# 
   366     0109                     	;# 
   367     010C                     	;# 
   368     010C                     	;# 
   369     010D                     	;# 
   370     010E                     	;# 
   371     010F                     	;# 
   372     0185                     	;# 
   373     0187                     	;# 
   374     0188                     	;# 
   375     0189                     	;# 
   376     018C                     	;# 
   377     018D                     	;# 
   378     0000                     	;# 
   379     0001                     	;# 
   380     0002                     	;# 
   381     0003                     	;# 
   382     0004                     	;# 
   383     0005                     	;# 
   384     0006                     	;# 
   385     0007                     	;# 
   386     0008                     	;# 
   387     0009                     	;# 
   388     000A                     	;# 
   389     000B                     	;# 
   390     000C                     	;# 
   391     000D                     	;# 
   392     000E                     	;# 
   393     000E                     	;# 
   394     000F                     	;# 
   395     0010                     	;# 
   396     0011                     	;# 
   397     0012                     	;# 
   398     0013                     	;# 
   399     0014                     	;# 
   400     0015                     	;# 
   401     0015                     	;# 
   402     0016                     	;# 
   403     0017                     	;# 
   404     0018                     	;# 
   405     0019                     	;# 
   406     001A                     	;# 
   407     001B                     	;# 
   408     001B                     	;# 
   409     001C                     	;# 
   410     001D                     	;# 
   411     001E                     	;# 
   412     001F                     	;# 
   413     0081                     	;# 
   414     0085                     	;# 
   415     0086                     	;# 
   416     0087                     	;# 
   417     0088                     	;# 
   418     0089                     	;# 
   419     008C                     	;# 
   420     008D                     	;# 
   421     008E                     	;# 
   422     008F                     	;# 
   423     0090                     	;# 
   424     0091                     	;# 
   425     0092                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0093                     	;# 
   429     0094                     	;# 
   430     0095                     	;# 
   431     0096                     	;# 
   432     0097                     	;# 
   433     0098                     	;# 
   434     0099                     	;# 
   435     009A                     	;# 
   436     009B                     	;# 
   437     009C                     	;# 
   438     009D                     	;# 
   439     009E                     	;# 
   440     009F                     	;# 
   441     0105                     	;# 
   442     0107                     	;# 
   443     0108                     	;# 
   444     0109                     	;# 
   445     010C                     	;# 
   446     010C                     	;# 
   447     010D                     	;# 
   448     010E                     	;# 
   449     010F                     	;# 
   450     0185                     	;# 
   451     0187                     	;# 
   452     0188                     	;# 
   453     0189                     	;# 
   454     018C                     	;# 
   455     018D                     	;# 
   456                           
   457                           	psect	strings
   458     039E                     __pstrings:
   459     039E                     stringtab:
   460     039E                     __stringtab:
   461                           
   462                           ;	String table - string pointers are 1 byte each
   463     039E  1BFF               	btfsc	btemp+1,7
   464     039F  2BA8               	ljmp	stringcode
   465     03A0  1383               	bcf	3,7
   466     03A1  187F               	btfsc	btemp+1,0
   467     03A2  1783               	bsf	3,7
   468     03A3  0800               	movf	0,w
   469     03A4  0A84               	incf	4,f
   470     03A5  1903               	skipnz
   471     03A6  0AFF               	incf	btemp+1,f
   472     03A7  0008               	return
   473     03A8                     stringcode:
   474     03A8                     stringdir:
   475     03A8  3003               	movlw	high stringdir
   476     03A9  008A               	movwf	10
   477     03AA  0804               	movf	4,w
   478     03AB  0A84               	incf	4,f
   479     03AC  0782               	addwf	2,f
   480     03AD                     __stringbase:
   481     03AD  3400               	retlw	0
   482     03AE                     __end_of__stringtab:
   483     03AE                     _dpowers:
   484     03AE  3401               	retlw	1
   485     03AF  3400               	retlw	0
   486     03B0  340A               	retlw	10
   487     03B1  3400               	retlw	0
   488     03B2  3464               	retlw	100
   489     03B3  3400               	retlw	0
   490     03B4  34E8               	retlw	232
   491     03B5  3403               	retlw	3
   492     03B6  3410               	retlw	16
   493     03B7  3427               	retlw	39
   494     03B8                     __end_of_dpowers:
   495     03B8                     _message:
   496     03B8  3432               	retlw	50
   497     03B9  342E               	retlw	46
   498     03BA  3445               	retlw	69
   499     03BB  346E               	retlw	110
   500     03BC  3476               	retlw	118
   501     03BD  3469               	retlw	105
   502     03BE  3461               	retlw	97
   503     03BF  3472               	retlw	114
   504     03C0  3420               	retlw	32
   505     03C1  3441               	retlw	65
   506     03C2  3473               	retlw	115
   507     03C3  3463               	retlw	99
   508     03C4  3469               	retlw	105
   509     03C5  3469               	retlw	105
   510     03C6  3400               	retlw	0
   511     03C7                     __end_of_message:
   512     0019                     _TXREG	set	25
   513     0018                     _RCSTA	set	24
   514     000B                     _INTCONbits	set	11
   515     001A                     _RCREG	set	26
   516     0018                     _RCSTAbits	set	24
   517     001E                     _ADRESH	set	30
   518     001F                     _ADCON0bits	set	31
   519     000C                     _PIR1bits	set	12
   520     0008                     _PORTD	set	8
   521     0008                     _PORTDbits	set	8
   522     00C4                     _CREN	set	196
   523     00C1                     _OERR	set	193
   524     0065                     _RCIF	set	101
   525     003E                     _RC6	set	62
   526     003F                     _RC7	set	63
   527     0043                     _RD3	set	67
   528     0047                     _RD7	set	71
   529     0046                     _RD6	set	70
   530     0045                     _RD5	set	69
   531     0044                     _RD4	set	68
   532     0098                     _TXSTA	set	152
   533     0099                     _SPBRG	set	153
   534     008C                     _PIE1bits	set	140
   535     009F                     _ADCON1bits	set	159
   536     0085                     _TRISA	set	133
   537     008F                     _OSCCON	set	143
   538     0088                     _TRISD	set	136
   539     04C1                     _TRMT	set	1217
   540     043E                     _TRISC6	set	1086
   541     043F                     _TRISC7	set	1087
   542     0189                     _ANSELH	set	393
   543     0188                     _ANSEL	set	392
   544     03C7                     STR_1:
   545     03C7  3431               	retlw	49	;'1'
   546     03C8  342E               	retlw	46	;'.'
   547     03C9  344C               	retlw	76	;'L'
   548     03CA  3465               	retlw	101	;'e'
   549     03CB  3465               	retlw	101	;'e'
   550     03CC  3472               	retlw	114	;'r'
   551     03CD  3420               	retlw	32	;' '
   552     03CE  3470               	retlw	112	;'p'
   553     03CF  346F               	retlw	111	;'o'
   554     03D0  3474               	retlw	116	;'t'
   555     03D1  3465               	retlw	101	;'e'
   556     03D2  346E               	retlw	110	;'n'
   557     03D3  3463               	retlw	99	;'c'
   558     03D4  3469               	retlw	105	;'i'
   559     03D5  346F               	retlw	111	;'o'
   560     03D6  346D               	retlw	109	;'m'
   561     03D7  3465               	retlw	101	;'e'
   562     03D8  3474               	retlw	116	;'t'
   563     03D9  3472               	retlw	114	;'r'
   564     03DA  346F               	retlw	111	;'o'
   565     03DB  340D               	retlw	13
   566     03DC  340A               	retlw	10
   567     03DD  3400               	retlw	0
   568     03DE                     STR_4:
   569     03DE  3425               	retlw	37	;'%'
   570     03DF  3430               	retlw	48	;'0'
   571     03E0  3433               	retlw	51	;'3'
   572     03E1  3475               	retlw	117	;'u'
   573     03E2  340D               	retlw	13
   574     03E3  340A               	retlw	10
   575     03E4  3400               	retlw	0
   576     03DB                     
   577                           	psect	cinit
   578     000F                     start_initialization:	
   579                           ; #config settings
   580                           
   581     000F                     __initialization:
   582                           
   583                           ; Clear objects allocated to COMMON
   584     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   585     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   586                           
   587                           ; Clear objects allocated to BANK0
   588     0011  1283               	bcf	3,5	;RP0=0, select bank0
   589     0012  1303               	bcf	3,6	;RP1=0, select bank0
   590     0013  01C4               	clrf	__pbssBANK0& (0+127)
   591     0014                     end_of_initialization:	
   592                           ;End of C runtime variable initialization code
   593                           
   594     0014                     __end_of__initialization:
   595     0014  0183               	clrf	3
   596     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMMON
   599     0079                     __pbssCOMMON:
   600     0079                     _CMCON:
   601     0079                     	ds	2
   602                           
   603                           	psect	bssBANK0
   604     0044                     __pbssBANK0:
   605     0044                     _valpot:
   606     0044                     	ds	1
   607                           
   608                           	psect	cstackCOMMON
   609     0070                     __pcstackCOMMON:
   610     0070                     ?_UART_Data_Ready:
   611     0070                     ?_isdigit:	
   612                           ; 1 bit 
   613                           
   614     0070                     ?_setup:	
   615                           ; 1 bit 
   616                           
   617     0070                     ?_preguntas:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_UART_GetC:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_UART_PutC:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_isr:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ??_isr:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_uart_read:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_main:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 1 bytes @ 0x0
   640     0070                     	ds	3
   641     0073                     ??_setup:
   642     0073                     ??_UART_Data_Ready:	
   643                           ; 1 bytes @ 0x3
   644                           
   645     0073                     ??_UART_GetC:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     ??_UART_PutC:	
   649                           ; 1 bytes @ 0x3
   650                           
   651     0073                     ??_isdigit:	
   652                           ; 1 bytes @ 0x3
   653                           
   654     0073                     ??_uart_read:	
   655                           ; 1 bytes @ 0x3
   656                           
   657     0073                     ??___lldiv:	
   658                           ; 1 bytes @ 0x3
   659                           
   660     0073                     ?___wmul:	
   661                           ; 1 bytes @ 0x3
   662                           
   663     0073                     ?___lwdiv:	
   664                           ; 2 bytes @ 0x3
   665                           
   666     0073                     UART_PutC@data:	
   667                           ; 2 bytes @ 0x3
   668                           
   669     0073                     _isdigit$877:	
   670                           ; 1 bytes @ 0x3
   671                           
   672     0073                     ___wmul@multiplier:	
   673                           ; 1 bytes @ 0x3
   674                           
   675     0073                     ___lwdiv@divisor:	
   676                           ; 2 bytes @ 0x3
   677                           
   678                           
   679                           ; 2 bytes @ 0x3
   680     0073                     	ds	1
   681     0074                     ?_UART_Print:
   682     0074                     isdigit@c:	
   683                           ; 1 bytes @ 0x4
   684                           
   685     0074                     UART_Print@data:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     ___lldiv@quotient:	
   689                           ; 2 bytes @ 0x4
   690                           
   691                           
   692                           ; 4 bytes @ 0x4
   693     0074                     	ds	1
   694     0075                     ___wmul@multiplicand:
   695     0075                     ___lwdiv@dividend:	
   696                           ; 2 bytes @ 0x5
   697                           
   698                           
   699                           ; 2 bytes @ 0x5
   700     0075                     	ds	1
   701     0076                     ??_UART_Print:
   702                           
   703                           ; 1 bytes @ 0x6
   704     0076                     	ds	1
   705     0077                     ??___wmul:
   706     0077                     ??___lwdiv:	
   707                           ; 1 bytes @ 0x7
   708                           
   709     0077                     ___wmul@product:	
   710                           ; 1 bytes @ 0x7
   711                           
   712                           
   713                           ; 2 bytes @ 0x7
   714     0077                     	ds	1
   715     0078                     ??___lwmod:
   716     0078                     UART_Print@i:	
   717                           ; 1 bytes @ 0x8
   718                           
   719     0078                     ___lldiv@counter:	
   720                           ; 1 bytes @ 0x8
   721                           
   722                           
   723                           ; 1 bytes @ 0x8
   724     0078                     	ds	1
   725     0079                     ??_preguntas:
   726                           
   727                           	psect	cstackBANK0
   728     0020                     __pcstackBANK0:	
   729                           ; 1 bytes @ 0x9
   730                           
   731     0020                     ?___lldiv:
   732     0020                     ___lwdiv@counter:	
   733                           ; 4 bytes @ 0x0
   734                           
   735     0020                     ___lldiv@divisor:	
   736                           ; 1 bytes @ 0x0
   737                           
   738                           
   739                           ; 4 bytes @ 0x0
   740     0020                     	ds	1
   741     0021                     ___lwdiv@quotient:
   742                           
   743                           ; 2 bytes @ 0x1
   744     0021                     	ds	2
   745     0023                     ?___lwmod:
   746     0023                     ___lwmod@divisor:	
   747                           ; 2 bytes @ 0x3
   748                           
   749                           
   750                           ; 2 bytes @ 0x3
   751     0023                     	ds	1
   752     0024                     ___lldiv@dividend:
   753                           
   754                           ; 4 bytes @ 0x4
   755     0024                     	ds	1
   756     0025                     ___lwmod@dividend:
   757                           
   758                           ; 2 bytes @ 0x5
   759     0025                     	ds	2
   760     0027                     ___lwmod@counter:
   761                           
   762                           ; 1 bytes @ 0x7
   763     0027                     	ds	1
   764     0028                     ?_UART_Init:
   765     0028                     ?_sprintf:	
   766                           ; 1 bytes @ 0x8
   767                           
   768     0028                     sprintf@f:	
   769                           ; 2 bytes @ 0x8
   770                           
   771     0028                     UART_Init@baud_rate:	
   772                           ; 1 bytes @ 0x8
   773                           
   774                           
   775                           ; 4 bytes @ 0x8
   776     0028                     	ds	3
   777     002B                     ??_sprintf:
   778                           
   779                           ; 1 bytes @ 0xB
   780     002B                     	ds	1
   781     002C                     ??_UART_Init:
   782                           
   783                           ; 1 bytes @ 0xC
   784     002C                     	ds	2
   785     002E                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0xE
   788     002E                     	ds	1
   789     002F                     sprintf@flag:
   790                           
   791                           ; 1 bytes @ 0xF
   792     002F                     	ds	1
   793     0030                     UART_Init@n:
   794     0030                     sprintf@val:	
   795                           ; 2 bytes @ 0x10
   796                           
   797                           
   798                           ; 2 bytes @ 0x10
   799     0030                     	ds	2
   800     0032                     sprintf@prec:
   801                           
   802                           ; 1 bytes @ 0x12
   803     0032                     	ds	1
   804     0033                     sprintf@sp:
   805                           
   806                           ; 1 bytes @ 0x13
   807     0033                     	ds	1
   808     0034                     sprintf@width:
   809                           
   810                           ; 2 bytes @ 0x14
   811     0034                     	ds	2
   812     0036                     sprintf@c:
   813                           
   814                           ; 1 bytes @ 0x16
   815     0036                     	ds	1
   816     0037                     ??_main:
   817                           
   818                           ; 1 bytes @ 0x17
   819     0037                     	ds	3
   820     003A                     main@text:
   821                           
   822                           ; 9 bytes @ 0x1A
   823     003A                     	ds	9
   824     0043                     main@c:
   825                           
   826                           ; 1 bytes @ 0x23
   827     0043                     	ds	1
   828                           
   829                           	psect	maintext
   830     019E                     __pmaintext:	
   831 ;;
   832 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   833 ;;
   834 ;; *************** function _main *****************
   835 ;; Defined at:
   836 ;;		line 63 in file "postlab2.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;		None
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  c               1   35[BANK0 ] unsigned char 
   841 ;;  text            9   26[BANK0 ] unsigned char [9]
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : B00/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       0       0       0       0
   852 ;;      Locals:         0      10       0       0       0
   853 ;;      Temps:          0       3       0       0       0
   854 ;;      Totals:         0      13       0       0       0
   855 ;;Total ram usage:       13 bytes
   856 ;; Hardware stack levels required when called: 4
   857 ;; This function calls:
   858 ;;		_UART_Data_Ready
   859 ;;		_UART_GetC
   860 ;;		_UART_Init
   861 ;;		_UART_Print
   862 ;;		_UART_PutC
   863 ;;		_preguntas
   864 ;;		_setup
   865 ;;		_sprintf
   866 ;;		_uart_read
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872     019E                     _main:	
   873                           ;psect for function _main
   874                           
   875     019E                     l2009:	
   876                           ;incstack = 0
   877                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   878                           
   879                           
   880                           ;postlab2.c: 65:     setup();
   881     019E  120A  118A  24BF  120A  118A  	fcall	_setup
   882     01A3                     l2011:
   883                           
   884                           ;postlab2.c: 66:   OSCCON = 0x70;
   885     01A3  3070               	movlw	112
   886     01A4  1683               	bsf	3,5	;RP0=1, select bank1
   887     01A5  1303               	bcf	3,6	;RP1=0, select bank1
   888     01A6  008F               	movwf	15	;volatile
   889     01A7                     l2013:
   890                           
   891                           ;postlab2.c: 68:   UART_Init(9600);
   892     01A7  3000               	movlw	0
   893     01A8  1283               	bcf	3,5	;RP0=0, select bank0
   894     01A9  1303               	bcf	3,6	;RP1=0, select bank0
   895     01AA  00AB               	movwf	UART_Init@baud_rate+3
   896     01AB  3000               	movlw	0
   897     01AC  00AA               	movwf	UART_Init@baud_rate+2
   898     01AD  3025               	movlw	37
   899     01AE  00A9               	movwf	UART_Init@baud_rate+1
   900     01AF  3080               	movlw	128
   901     01B0  00A8               	movwf	UART_Init@baud_rate
   902     01B1  120A  118A  2296  120A  118A  	fcall	_UART_Init
   903     01B6                     l2015:
   904                           
   905                           ;postlab2.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   906     01B6  3015               	movlw	21
   907     01B7  1283               	bcf	3,5	;RP0=0, select bank0
   908     01B8  1303               	bcf	3,6	;RP1=0, select bank0
   909     01B9  00B9               	movwf	??_main+2
   910     01BA  304B               	movlw	75
   911     01BB  00B8               	movwf	??_main+1
   912     01BC  30BD               	movlw	189
   913     01BD  00B7               	movwf	??_main
   914     01BE                     u1627:
   915     01BE  0BB7               	decfsz	??_main,f
   916     01BF  29BE               	goto	u1627
   917     01C0  0BB8               	decfsz	??_main+1,f
   918     01C1  29BE               	goto	u1627
   919     01C2  0BB9               	decfsz	??_main+2,f
   920     01C3  29BE               	goto	u1627
   921     01C4  29C5               	nop2
   922     01C5                     l2017:
   923                           
   924                           ;postlab2.c: 72:   UART_Print("1.Leer potenciometro\r\n");
   925     01C5  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   926     01C6  00F4               	movwf	UART_Print@data
   927     01C7  3080               	movlw	128
   928     01C8  00F5               	movwf	UART_Print@data+1
   929     01C9  120A  118A  2467  120A  118A  	fcall	_UART_Print
   930     01CE                     l2019:
   931                           
   932                           ;postlab2.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   933     01CE  300B               	movlw	11
   934     01CF  1283               	bcf	3,5	;RP0=0, select bank0
   935     01D0  1303               	bcf	3,6	;RP1=0, select bank0
   936     01D1  00B9               	movwf	??_main+2
   937     01D2  3026               	movlw	38
   938     01D3  00B8               	movwf	??_main+1
   939     01D4  305D               	movlw	93
   940     01D5  00B7               	movwf	??_main
   941     01D6                     u1637:
   942     01D6  0BB7               	decfsz	??_main,f
   943     01D7  29D6               	goto	u1637
   944     01D8  0BB8               	decfsz	??_main+1,f
   945     01D9  29D6               	goto	u1637
   946     01DA  0BB9               	decfsz	??_main+2,f
   947     01DB  29D6               	goto	u1637
   948     01DC                     l2021:
   949                           
   950                           ;postlab2.c: 76:   UART_Print(message);
   951     01DC  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
   952     01DD  00F4               	movwf	UART_Print@data
   953     01DE  3080               	movlw	128
   954     01DF  00F5               	movwf	UART_Print@data+1
   955     01E0  120A  118A  2467  120A  118A  	fcall	_UART_Print
   956     01E5                     l2023:
   957                           
   958                           ;postlab2.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   959     01E5  300B               	movlw	11
   960     01E6  1283               	bcf	3,5	;RP0=0, select bank0
   961     01E7  1303               	bcf	3,6	;RP1=0, select bank0
   962     01E8  00B9               	movwf	??_main+2
   963     01E9  3026               	movlw	38
   964     01EA  00B8               	movwf	??_main+1
   965     01EB  305D               	movlw	93
   966     01EC  00B7               	movwf	??_main
   967     01ED                     u1647:
   968     01ED  0BB7               	decfsz	??_main,f
   969     01EE  29ED               	goto	u1647
   970     01EF  0BB8               	decfsz	??_main+1,f
   971     01F0  29ED               	goto	u1647
   972     01F1  0BB9               	decfsz	??_main+2,f
   973     01F2  29ED               	goto	u1647
   974     01F3                     l2025:
   975                           
   976                           ;postlab2.c: 80:   UART_Print("\r\n");
   977     01F3  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
   978     01F4  00F4               	movwf	UART_Print@data
   979     01F5  3080               	movlw	128
   980     01F6  00F5               	movwf	UART_Print@data+1
   981     01F7  120A  118A  2467  120A  118A  	fcall	_UART_Print
   982     01FC                     l2027:
   983                           
   984                           ;postlab2.c: 81:  ADCON0bits.GO =1;
   985     01FC  1283               	bcf	3,5	;RP0=0, select bank0
   986     01FD  1303               	bcf	3,6	;RP1=0, select bank0
   987     01FE  149F               	bsf	31,1	;volatile
   988     01FF                     l2029:
   989                           
   990                           ;postlab2.c: 84:   {;postlab2.c: 85:        if (ADCON0bits.GO ==0)
   991     01FF  1283               	bcf	3,5	;RP0=0, select bank0
   992     0200  1303               	bcf	3,6	;RP1=0, select bank0
   993     0201  189F               	btfsc	31,1	;volatile
   994     0202  2A04               	goto	u1601
   995     0203  2A05               	goto	u1600
   996     0204                     u1601:
   997     0204  2A65               	goto	l2055
   998     0205                     u1600:
   999     0205                     l2031:
  1000                           
  1001                           ;postlab2.c: 86:      ADCON0bits.GO =1;
  1002     0205  149F               	bsf	31,1	;volatile
  1003     0206  2A65               	goto	l2055
  1004     0207                     l2033:
  1005                           
  1006                           ;postlab2.c: 102:                valpot = ADRESH;
  1007     0207  081E               	movf	30,w	;volatile
  1008     0208  00C4               	movwf	_valpot
  1009     0209                     l2035:
  1010                           
  1011                           ;postlab2.c: 103:                UART_Print ("\r\n");
  1012     0209  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1013     020A  00F4               	movwf	UART_Print@data
  1014     020B  3080               	movlw	128
  1015     020C  00F5               	movwf	UART_Print@data+1
  1016     020D  120A  118A  2467  120A  118A  	fcall	_UART_Print
  1017     0212                     l2037:
  1018                           
  1019                           ;postlab2.c: 104:             sprintf(text, "%03u\r\n", valpot);
  1020     0212  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1021     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1022     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1023     0215  00A8               	movwf	sprintf@f
  1024     0216  0844               	movf	_valpot,w
  1025     0217  00B7               	movwf	??_main
  1026     0218  01B8               	clrf	??_main+1
  1027     0219  0837               	movf	??_main,w
  1028     021A  00A9               	movwf	?_sprintf+1
  1029     021B  0838               	movf	??_main+1,w
  1030     021C  00AA               	movwf	?_sprintf+2
  1031     021D  303A               	movlw	(low (main@text| 0))& (0+255)
  1032     021E  120A  118A  2018  120A  118A  	fcall	_sprintf
  1033     0223                     l2039:
  1034                           
  1035                           ;postlab2.c: 105:             UART_Print(text);
  1036     0223  303A               	movlw	(low (main@text| 0))& (0+255)
  1037     0224  00F4               	movwf	UART_Print@data
  1038     0225  3000               	movlw	0
  1039     0226  00F5               	movwf	UART_Print@data+1
  1040     0227  120A  118A  2467  120A  118A  	fcall	_UART_Print
  1041     022C                     l2041:
  1042                           
  1043                           ;postlab2.c: 108:               preguntas();
  1044     022C  120A  118A  250D  120A  118A  	fcall	_preguntas
  1045                           
  1046                           ;postlab2.c: 109:              RCREG ='0';
  1047     0231  3030               	movlw	48
  1048     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0234  009A               	movwf	26	;volatile
  1051                           
  1052                           ;postlab2.c: 111:              break;
  1053     0235  2A7B               	goto	l2057
  1054     0236                     l2043:
  1055                           
  1056                           ;postlab2.c: 113:                _delay((unsigned long)((9200000)*(8000000/4000000.0)));
  1057     0236  305E               	movlw	94
  1058     0237  1283               	bcf	3,5	;RP0=0, select bank0
  1059     0238  1303               	bcf	3,6	;RP1=0, select bank0
  1060     0239  00B9               	movwf	??_main+2
  1061     023A  3058               	movlw	88
  1062     023B  00B8               	movwf	??_main+1
  1063     023C  30D9               	movlw	217
  1064     023D  00B7               	movwf	??_main
  1065     023E                     u1657:
  1066     023E  0BB7               	decfsz	??_main,f
  1067     023F  2A3E               	goto	u1657
  1068     0240  0BB8               	decfsz	??_main+1,f
  1069     0241  2A3E               	goto	u1657
  1070     0242  0BB9               	decfsz	??_main+2,f
  1071     0243  2A3E               	goto	u1657
  1072     0244  2A45               	nop2
  1073     0245                     l2045:
  1074                           
  1075                           ;postlab2.c: 114:                UART_Print ("\r\n");
  1076     0245  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1077     0246  00F4               	movwf	UART_Print@data
  1078     0247  3080               	movlw	128
  1079     0248  00F5               	movwf	UART_Print@data+1
  1080     0249  120A  118A  2467  120A  118A  	fcall	_UART_Print
  1081     024E                     l2047:
  1082                           
  1083                           ;postlab2.c: 115:                UART_Print(uart_read());
  1084     024E  120A  118A  24FA  120A  118A  	fcall	_uart_read
  1085     0253  00F4               	movwf	UART_Print@data
  1086     0254  3080               	movlw	128
  1087     0255  00F5               	movwf	UART_Print@data+1
  1088     0256  120A  118A  2467  120A  118A  	fcall	_UART_Print
  1089     025B                     l2049:
  1090                           
  1091                           ;postlab2.c: 116:                UART_Print ("\r\n");
  1092     025B  302E               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1093     025C  00F4               	movwf	UART_Print@data
  1094     025D  3080               	movlw	128
  1095     025E  00F5               	movwf	UART_Print@data+1
  1096     025F  120A  118A  2467  120A  118A  	fcall	_UART_Print
  1097     0264  2A2C               	goto	l2041
  1098     0265                     l2055:
  1099     0265  120A  118A  24FA  120A  118A  	fcall	_uart_read
  1100     026A  1283               	bcf	3,5	;RP0=0, select bank0
  1101     026B  1303               	bcf	3,6	;RP1=0, select bank0
  1102     026C  00B7               	movwf	??_main
  1103     026D  01B8               	clrf	??_main+1
  1104                           
  1105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1106                           ; Switch size 1, requested type "simple"
  1107                           ; Number of cases is 1, Range of values is 0 to 0
  1108                           ; switch strategies available:
  1109                           ; Name         Instructions Cycles
  1110                           ; simple_byte            4     3 (average)
  1111                           ; direct_byte           11     8 (fixed)
  1112                           ; jumptable            260     6 (fixed)
  1113                           ;	Chosen strategy is simple_byte
  1114     026E  0838               	movf	??_main+1,w
  1115     026F  3A00               	xorlw	0	; case 0
  1116     0270  1903               	skipnz
  1117     0271  2A73               	goto	l2127
  1118     0272  2A7B               	goto	l2057
  1119     0273                     l2127:
  1120                           
  1121                           ; Switch size 1, requested type "simple"
  1122                           ; Number of cases is 2, Range of values is 49 to 50
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte            7     4 (average)
  1126                           ; direct_byte           17    11 (fixed)
  1127                           ; jumptable            263     9 (fixed)
  1128                           ;	Chosen strategy is simple_byte
  1129     0273  0837               	movf	??_main,w
  1130     0274  3A31               	xorlw	49	; case 49
  1131     0275  1903               	skipnz
  1132     0276  2A07               	goto	l2033
  1133     0277  3A03               	xorlw	3	; case 50
  1134     0278  1903               	skipnz
  1135     0279  2A36               	goto	l2043
  1136     027A  2A7B               	goto	l2057
  1137     027B                     l2057:
  1138                           
  1139                           ;postlab2.c: 124:     if ( UART_Data_Ready() )
  1140     027B  120A  118A  254C  120A  118A  	fcall	_UART_Data_Ready
  1141     0280  1C03               	btfss	3,0
  1142     0281  2A83               	goto	u1611
  1143     0282  2A84               	goto	u1610
  1144     0283                     u1611:
  1145     0283  29FF               	goto	l2029
  1146     0284                     u1610:
  1147     0284                     l2059:
  1148                           
  1149                           ;postlab2.c: 125:     {;postlab2.c: 126:       uint8_t c = UART_GetC();
  1150     0284  120A  118A  2532  120A  118A  	fcall	_UART_GetC
  1151     0289  1283               	bcf	3,5	;RP0=0, select bank0
  1152     028A  1303               	bcf	3,6	;RP1=0, select bank0
  1153     028B  00C3               	movwf	main@c
  1154     028C                     l2061:
  1155                           
  1156                           ;postlab2.c: 127:       UART_PutC(c);
  1157     028C  0843               	movf	main@c,w
  1158     028D  120A  118A  2540  120A  118A  	fcall	_UART_PutC
  1159     0292  29FF               	goto	l2029
  1160     0293  120A  118A  280C   	ljmp	start
  1161     0296                     __end_of_main:
  1162                           
  1163                           	psect	text1
  1164     04FA                     __ptext1:	
  1165 ;; *************** function _uart_read *****************
  1166 ;; Defined at:
  1167 ;;		line 50 in file "postlab2.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      unsigned char 
  1174 ;; Registers used:
  1175 ;;		wreg
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0
  1184 ;;      Totals:         0       0       0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195     04FA                     _uart_read:	
  1196                           ;psect for function _uart_read
  1197                           
  1198     04FA                     l1521:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _uart_read: [wreg]
  1201                           
  1202                           
  1203                           ;postlab2.c: 51:  if(PIR1bits.RCIF== 0){
  1204     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1205     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1206     04FC  1A8C               	btfsc	12,5	;volatile
  1207     04FD  2CFF               	goto	u951
  1208     04FE  2D00               	goto	u950
  1209     04FF                     u951:
  1210     04FF  2D0B               	goto	l1533
  1211     0500                     u950:
  1212     0500                     l1523:
  1213                           
  1214                           ;postlab2.c: 52:      if (RCSTAbits.OERR){
  1215     0500  1C98               	btfss	24,1	;volatile
  1216     0501  2D03               	goto	u961
  1217     0502  2D04               	goto	u960
  1218     0503                     u961:
  1219     0503  2D09               	goto	l1527
  1220     0504                     u960:
  1221     0504                     l1525:
  1222                           
  1223                           ;postlab2.c: 53:          RCSTAbits.CREN =0;
  1224     0504  1218               	bcf	24,4	;volatile
  1225                           
  1226                           ;postlab2.c: 54:          __nop();
  1227     0505  0000               	nop
  1228                           
  1229                           ;postlab2.c: 55:          RCSTAbits.CREN =1;
  1230     0506  1283               	bcf	3,5	;RP0=0, select bank0
  1231     0507  1303               	bcf	3,6	;RP1=0, select bank0
  1232     0508  1618               	bsf	24,4	;volatile
  1233     0509                     l1527:
  1234                           
  1235                           ;postlab2.c: 57:      return RCREG;
  1236     0509  081A               	movf	26,w	;volatile
  1237     050A  2D0C               	goto	l152
  1238     050B                     l1533:
  1239                           
  1240                           ;postlab2.c: 60:      return 0;
  1241     050B  3000               	movlw	0
  1242     050C                     l152:
  1243     050C  0008               	return
  1244     050D                     __end_of_uart_read:
  1245                           
  1246                           	psect	text2
  1247     0018                     __ptext2:	
  1248 ;; *************** function _sprintf *****************
  1249 ;; Defined at:
  1250 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  sp              1    wreg     PTR unsigned char 
  1253 ;;		 -> main@text(9), 
  1254 ;;  f               1    8[BANK0 ] PTR const unsigned char 
  1255 ;;		 -> STR_4(7), 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  1258 ;;		 -> main@text(9), 
  1259 ;;  tmpval          4    0        struct .
  1260 ;;  width           2   20[BANK0 ] int 
  1261 ;;  val             2   16[BANK0 ] unsigned int 
  1262 ;;  cp              2    0        PTR const unsigned char 
  1263 ;;  len             2    0        unsigned int 
  1264 ;;  c               1   22[BANK0 ] unsigned char 
  1265 ;;  prec            1   18[BANK0 ] char 
  1266 ;;  flag            1   15[BANK0 ] unsigned char 
  1267 ;;  ap              1   14[BANK0 ] PTR void [1]
  1268 ;;		 -> ?_sprintf(2), 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2    8[BANK0 ] int 
  1271 ;; Registers used:
  1272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       3       0       0       0
  1279 ;;      Locals:         0       9       0       0       0
  1280 ;;      Temps:          0       3       0       0       0
  1281 ;;      Totals:         0      15       0       0       0
  1282 ;;Total ram usage:       15 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 2
  1285 ;; This function calls:
  1286 ;;		___lwdiv
  1287 ;;		___lwmod
  1288 ;;		___wmul
  1289 ;;		_isdigit
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295     0018                     _sprintf:	
  1296                           ;psect for function _sprintf
  1297                           
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1301                           ;sprintf@sp stored from wreg
  1302     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1303     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1304     001A  00B3               	movwf	sprintf@sp
  1305     001B                     l1911:
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1308     001B  3029               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1309     001C  00AE               	movwf	sprintf@ap
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1312     001D  2989               	goto	l1995
  1313     001E                     l1913:
  1314                           
  1315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1316     001E  3025               	movlw	37
  1317     001F  0636               	xorwf	sprintf@c,w
  1318     0020  1903               	btfsc	3,2
  1319     0021  2823               	goto	u1471
  1320     0022  2824               	goto	u1470
  1321     0023                     u1471:
  1322     0023  282E               	goto	l1919
  1323     0024                     u1470:
  1324     0024                     l1915:
  1325                           
  1326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1327     0024  0833               	movf	sprintf@sp,w
  1328     0025  0084               	movwf	4
  1329     0026  0836               	movf	sprintf@c,w
  1330     0027  1383               	bcf	3,7	;select IRP bank0
  1331     0028  0080               	movwf	0
  1332     0029                     l1917:
  1333     0029  3001               	movlw	1
  1334     002A  00AB               	movwf	??_sprintf
  1335     002B  082B               	movf	??_sprintf,w
  1336     002C  07B3               	addwf	sprintf@sp,f
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1339     002D  2989               	goto	l1995
  1340     002E                     l1919:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1343     002E  01B4               	clrf	sprintf@width
  1344     002F  01B5               	clrf	sprintf@width+1
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1347     0030  01AF               	clrf	sprintf@flag
  1348     0031  2837               	goto	l1925
  1349     0032                     l324:	
  1350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1351                           
  1352                           
  1353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1354     0032  152F               	bsf	sprintf@flag,2
  1355     0033                     l1921:
  1356                           
  1357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1358     0033  3001               	movlw	1
  1359     0034  00AB               	movwf	??_sprintf
  1360     0035  082B               	movf	??_sprintf,w
  1361     0036  07A8               	addwf	sprintf@f,f
  1362     0037                     l1925:	
  1363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1364                           
  1365     0037  0828               	movf	sprintf@f,w
  1366     0038  0084               	movwf	4
  1367     0039  120A  118A  23A8  120A  118A  	fcall	stringdir
  1368     003E  00AB               	movwf	??_sprintf
  1369     003F  01AC               	clrf	??_sprintf+1
  1370                           
  1371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1372                           ; Switch size 1, requested type "simple"
  1373                           ; Number of cases is 1, Range of values is 0 to 0
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte            4     3 (average)
  1377                           ; direct_byte           11     8 (fixed)
  1378                           ; jumptable            260     6 (fixed)
  1379                           ;	Chosen strategy is simple_byte
  1380     0040  082C               	movf	??_sprintf+1,w
  1381     0041  3A00               	xorlw	0	; case 0
  1382     0042  1903               	skipnz
  1383     0043  2845               	goto	l2129
  1384     0044  284A               	goto	l1927
  1385     0045                     l2129:
  1386                           
  1387                           ; Switch size 1, requested type "simple"
  1388                           ; Number of cases is 1, Range of values is 48 to 48
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte            4     3 (average)
  1392                           ; direct_byte           14    11 (fixed)
  1393                           ; jumptable            263     9 (fixed)
  1394                           ;	Chosen strategy is simple_byte
  1395     0045  082B               	movf	??_sprintf,w
  1396     0046  3A30               	xorlw	48	; case 48
  1397     0047  1903               	skipnz
  1398     0048  2832               	goto	l324
  1399     0049  284A               	goto	l1927
  1400     004A                     l1927:
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1403     004A  0828               	movf	sprintf@f,w
  1404     004B  0084               	movwf	4
  1405     004C  120A  118A  23A8  120A  118A  	fcall	stringdir
  1406     0051  120A  118A  2520  120A  118A  	fcall	_isdigit
  1407     0056  1C03               	btfss	3,0
  1408     0057  2859               	goto	u1481
  1409     0058  285A               	goto	u1480
  1410     0059                     u1481:
  1411     0059  28A0               	goto	l1943
  1412     005A                     u1480:
  1413     005A                     l1929:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1416     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1417     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1418     005C  01B4               	clrf	sprintf@width
  1419     005D  01B5               	clrf	sprintf@width+1
  1420     005E                     l1931:
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1423     005E  300A               	movlw	10
  1424     005F  00F3               	movwf	___wmul@multiplier
  1425     0060  3000               	movlw	0
  1426     0061  00F4               	movwf	___wmul@multiplier+1
  1427     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1428     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1429     0064  0835               	movf	sprintf@width+1,w
  1430     0065  00F6               	movwf	___wmul@multiplicand+1
  1431     0066  0834               	movf	sprintf@width,w
  1432     0067  00F5               	movwf	___wmul@multiplicand
  1433     0068  120A  118A  249A  120A  118A  	fcall	___wmul
  1434     006D  0874               	movf	?___wmul+1,w
  1435     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1436     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1437     0070  00B5               	movwf	sprintf@width+1
  1438     0071  0873               	movf	?___wmul,w
  1439     0072  00B4               	movwf	sprintf@width
  1440     0073                     l1933:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1443     0073  0828               	movf	sprintf@f,w
  1444     0074  0084               	movwf	4
  1445     0075  120A  118A  23A8  120A  118A  	fcall	stringdir
  1446     007A  3ED0               	addlw	208
  1447     007B  00AB               	movwf	??_sprintf
  1448     007C  30FF               	movlw	255
  1449     007D  1803               	skipnc
  1450     007E  3000               	movlw	0
  1451     007F  00AC               	movwf	??_sprintf+1
  1452     0080  082B               	movf	??_sprintf,w
  1453     0081  07B4               	addwf	sprintf@width,f
  1454     0082  1803               	skipnc
  1455     0083  0AB5               	incf	sprintf@width+1,f
  1456     0084  082C               	movf	??_sprintf+1,w
  1457     0085  07B5               	addwf	sprintf@width+1,f
  1458     0086                     l1935:
  1459     0086  3001               	movlw	1
  1460     0087  00AB               	movwf	??_sprintf
  1461     0088  082B               	movf	??_sprintf,w
  1462     0089  07A8               	addwf	sprintf@f,f
  1463     008A                     l1937:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1466     008A  0828               	movf	sprintf@f,w
  1467     008B  0084               	movwf	4
  1468     008C  120A  118A  23A8  120A  118A  	fcall	stringdir
  1469     0091  120A  118A  2520  120A  118A  	fcall	_isdigit
  1470     0096  1803               	btfsc	3,0
  1471     0097  2899               	goto	u1491
  1472     0098  289A               	goto	u1490
  1473     0099                     u1491:
  1474     0099  285E               	goto	l1931
  1475     009A                     u1490:
  1476     009A  28A0               	goto	l1943
  1477     009B                     l1939:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1480     009B  30C0               	movlw	192
  1481     009C  00AB               	movwf	??_sprintf
  1482     009D  082B               	movf	??_sprintf,w
  1483     009E  04AF               	iorwf	sprintf@flag,f
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1486     009F  28BC               	goto	l1945
  1487     00A0                     l1943:
  1488     00A0  3001               	movlw	1
  1489     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1490     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1491     00A3  07A8               	addwf	sprintf@f,f
  1492     00A4  30FF               	movlw	-1
  1493     00A5  0728               	addwf	sprintf@f,w
  1494     00A6  0084               	movwf	4
  1495     00A7  120A  118A  23A8  120A  118A  	fcall	stringdir
  1496     00AC  00B6               	movwf	sprintf@c
  1497     00AD  00AB               	movwf	??_sprintf
  1498     00AE  01AC               	clrf	??_sprintf+1
  1499                           
  1500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1501                           ; Switch size 1, requested type "simple"
  1502                           ; Number of cases is 1, Range of values is 0 to 0
  1503                           ; switch strategies available:
  1504                           ; Name         Instructions Cycles
  1505                           ; simple_byte            4     3 (average)
  1506                           ; direct_byte           11     8 (fixed)
  1507                           ; jumptable            260     6 (fixed)
  1508                           ;	Chosen strategy is simple_byte
  1509     00AF  082C               	movf	??_sprintf+1,w
  1510     00B0  3A00               	xorlw	0	; case 0
  1511     00B1  1903               	skipnz
  1512     00B2  28B4               	goto	l2131
  1513     00B3  2989               	goto	l1995
  1514     00B4                     l2131:
  1515                           
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 2, Range of values is 0 to 117
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte            7     4 (average)
  1521                           ; jumptable            260     6 (fixed)
  1522                           ;	Chosen strategy is simple_byte
  1523     00B4  082B               	movf	??_sprintf,w
  1524     00B5  3A00               	xorlw	0	; case 0
  1525     00B6  1903               	skipnz
  1526     00B7  2999               	goto	l1997
  1527     00B8  3A75               	xorlw	117	; case 117
  1528     00B9  1903               	skipnz
  1529     00BA  289B               	goto	l1939
  1530     00BB  2989               	goto	l1995
  1531     00BC                     l1945:
  1532                           
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1534     00BC  082E               	movf	sprintf@ap,w
  1535     00BD  0084               	movwf	4
  1536     00BE  1383               	bcf	3,7	;select IRP bank0
  1537     00BF  0800               	movf	0,w
  1538     00C0  00B0               	movwf	sprintf@val
  1539     00C1  0A84               	incf	4,f
  1540     00C2  0800               	movf	0,w
  1541     00C3  00B1               	movwf	sprintf@val+1
  1542     00C4                     l1947:
  1543     00C4  3002               	movlw	2
  1544     00C5  00AB               	movwf	??_sprintf
  1545     00C6  082B               	movf	??_sprintf,w
  1546     00C7  07AE               	addwf	sprintf@ap,f
  1547     00C8                     l1949:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1550     00C8  01B6               	clrf	sprintf@c
  1551     00C9  0AB6               	incf	sprintf@c,f
  1552     00CA                     l1955:
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1555     00CA  0836               	movf	sprintf@c,w
  1556     00CB  00AB               	movwf	??_sprintf
  1557     00CC  072B               	addwf	??_sprintf,w
  1558     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1559     00CE  0084               	movwf	4
  1560     00CF  120A  118A  23A8  120A  118A  	fcall	stringdir
  1561     00D4  00AC               	movwf	??_sprintf+1
  1562     00D5  120A  118A  23A8  120A  118A  	fcall	stringdir
  1563     00DA  00AD               	movwf	??_sprintf+2
  1564     00DB  082D               	movf	??_sprintf+2,w
  1565     00DC  0231               	subwf	sprintf@val+1,w
  1566     00DD  1D03               	skipz
  1567     00DE  28E1               	goto	u1505
  1568     00DF  082C               	movf	??_sprintf+1,w
  1569     00E0  0230               	subwf	sprintf@val,w
  1570     00E1                     u1505:
  1571     00E1  1803               	skipnc
  1572     00E2  28E4               	goto	u1501
  1573     00E3  28E5               	goto	u1500
  1574     00E4                     u1501:
  1575     00E4  28E6               	goto	l1959
  1576     00E5                     u1500:
  1577     00E5  28F0               	goto	l1961
  1578     00E6                     l1959:
  1579     00E6  3001               	movlw	1
  1580     00E7  00AB               	movwf	??_sprintf
  1581     00E8  082B               	movf	??_sprintf,w
  1582     00E9  07B6               	addwf	sprintf@c,f
  1583     00EA  3005               	movlw	5
  1584     00EB  0636               	xorwf	sprintf@c,w
  1585     00EC  1D03               	btfss	3,2
  1586     00ED  28EF               	goto	u1511
  1587     00EE  28F0               	goto	u1510
  1588     00EF                     u1511:
  1589     00EF  28CA               	goto	l1955
  1590     00F0                     u1510:
  1591     00F0                     l1961:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1594     00F0  0835               	movf	sprintf@width+1,w
  1595     00F1  3A80               	xorlw	128
  1596     00F2  3C80               	sublw	128
  1597     00F3  1D03               	skipz
  1598     00F4  28F7               	goto	u1525
  1599     00F5  0834               	movf	sprintf@width,w
  1600     00F6  0236               	subwf	sprintf@c,w
  1601     00F7                     u1525:
  1602     00F7  1803               	skipnc
  1603     00F8  28FA               	goto	u1521
  1604     00F9  28FB               	goto	u1520
  1605     00FA                     u1521:
  1606     00FA  2907               	goto	l1965
  1607     00FB                     u1520:
  1608     00FB                     l1963:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1611     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1612     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1613     00FD  0836               	movf	sprintf@c,w
  1614     00FE  00AB               	movwf	??_sprintf
  1615     00FF  01AC               	clrf	??_sprintf+1
  1616     0100  082B               	movf	??_sprintf,w
  1617     0101  02B4               	subwf	sprintf@width,f
  1618     0102  082C               	movf	??_sprintf+1,w
  1619     0103  1C03               	skipc
  1620     0104  03B5               	decf	sprintf@width+1,f
  1621     0105  02B5               	subwf	sprintf@width+1,f
  1622     0106  290B               	goto	l1967
  1623     0107                     l1965:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1626     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1627     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1628     0109  01B4               	clrf	sprintf@width
  1629     010A  01B5               	clrf	sprintf@width+1
  1630     010B                     l1967:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1633     010B  1D2F               	btfss	sprintf@flag,2
  1634     010C  290E               	goto	u1531
  1635     010D  290F               	goto	u1530
  1636     010E                     u1531:
  1637     010E  292B               	goto	l1977
  1638     010F                     u1530:
  1639     010F                     l1969:
  1640                           
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1642     010F  0834               	movf	sprintf@width,w
  1643     0110  0435               	iorwf	sprintf@width+1,w
  1644     0111  1903               	btfsc	3,2
  1645     0112  2914               	goto	u1541
  1646     0113  2915               	goto	u1540
  1647     0114                     u1541:
  1648     0114  2946               	goto	l1985
  1649     0115                     u1540:
  1650     0115                     l1971:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1653     0115  0833               	movf	sprintf@sp,w
  1654     0116  0084               	movwf	4
  1655     0117  3030               	movlw	48
  1656     0118  1383               	bcf	3,7	;select IRP bank0
  1657     0119  0080               	movwf	0
  1658     011A                     l1973:
  1659     011A  3001               	movlw	1
  1660     011B  00AB               	movwf	??_sprintf
  1661     011C  082B               	movf	??_sprintf,w
  1662     011D  07B3               	addwf	sprintf@sp,f
  1663     011E                     l1975:
  1664     011E  30FF               	movlw	255
  1665     011F  07B4               	addwf	sprintf@width,f
  1666     0120  1803               	skipnc
  1667     0121  0AB5               	incf	sprintf@width+1,f
  1668     0122  30FF               	movlw	255
  1669     0123  07B5               	addwf	sprintf@width+1,f
  1670     0124  0834               	movf	sprintf@width,w
  1671     0125  0435               	iorwf	sprintf@width+1,w
  1672     0126  1D03               	btfss	3,2
  1673     0127  2929               	goto	u1551
  1674     0128  292A               	goto	u1550
  1675     0129                     u1551:
  1676     0129  2915               	goto	l1971
  1677     012A                     u1550:
  1678     012A  2946               	goto	l1985
  1679     012B                     l1977:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1682     012B  0834               	movf	sprintf@width,w
  1683     012C  0435               	iorwf	sprintf@width+1,w
  1684     012D  1903               	btfsc	3,2
  1685     012E  2930               	goto	u1561
  1686     012F  2931               	goto	u1560
  1687     0130                     u1561:
  1688     0130  2946               	goto	l1985
  1689     0131                     u1560:
  1690     0131                     l1979:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1693     0131  0833               	movf	sprintf@sp,w
  1694     0132  0084               	movwf	4
  1695     0133  3020               	movlw	32
  1696     0134  1383               	bcf	3,7	;select IRP bank0
  1697     0135  0080               	movwf	0
  1698     0136                     l1981:
  1699     0136  3001               	movlw	1
  1700     0137  00AB               	movwf	??_sprintf
  1701     0138  082B               	movf	??_sprintf,w
  1702     0139  07B3               	addwf	sprintf@sp,f
  1703     013A                     l1983:
  1704     013A  30FF               	movlw	255
  1705     013B  07B4               	addwf	sprintf@width,f
  1706     013C  1803               	skipnc
  1707     013D  0AB5               	incf	sprintf@width+1,f
  1708     013E  30FF               	movlw	255
  1709     013F  07B5               	addwf	sprintf@width+1,f
  1710     0140  0834               	movf	sprintf@width,w
  1711     0141  0435               	iorwf	sprintf@width+1,w
  1712     0142  1D03               	btfss	3,2
  1713     0143  2945               	goto	u1571
  1714     0144  2946               	goto	u1570
  1715     0145                     u1571:
  1716     0145  2931               	goto	l1979
  1717     0146                     u1570:
  1718     0146                     l1985:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1721     0146  0836               	movf	sprintf@c,w
  1722     0147  00B2               	movwf	sprintf@prec
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1725     0148  2980               	goto	l1993
  1726     0149                     l1987:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1729     0149  300A               	movlw	10
  1730     014A  00A3               	movwf	___lwmod@divisor
  1731     014B  3000               	movlw	0
  1732     014C  00A4               	movwf	___lwmod@divisor+1
  1733     014D  0832               	movf	sprintf@prec,w
  1734     014E  00AB               	movwf	??_sprintf
  1735     014F  072B               	addwf	??_sprintf,w
  1736     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1737     0151  0084               	movwf	4
  1738     0152  120A  118A  23A8  120A  118A  	fcall	stringdir
  1739     0157  00F3               	movwf	___lwdiv@divisor
  1740     0158  120A  118A  23A8  120A  118A  	fcall	stringdir
  1741     015D  00F4               	movwf	___lwdiv@divisor+1
  1742     015E  0831               	movf	sprintf@val+1,w
  1743     015F  00F6               	movwf	___lwdiv@dividend+1
  1744     0160  0830               	movf	sprintf@val,w
  1745     0161  00F5               	movwf	___lwdiv@dividend
  1746     0162  120A  118A  23E5  120A  118A  	fcall	___lwdiv
  1747     0167  0874               	movf	?___lwdiv+1,w
  1748     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1749     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1750     016A  00A6               	movwf	___lwmod@dividend+1
  1751     016B  0873               	movf	?___lwdiv,w
  1752     016C  00A5               	movwf	___lwmod@dividend
  1753     016D  120A  118A  242B  120A  118A  	fcall	___lwmod
  1754     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1755     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1756     0174  0823               	movf	?___lwmod,w
  1757     0175  3E30               	addlw	48
  1758     0176  00B6               	movwf	sprintf@c
  1759     0177                     l1989:
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1762     0177  0833               	movf	sprintf@sp,w
  1763     0178  0084               	movwf	4
  1764     0179  0836               	movf	sprintf@c,w
  1765     017A  1383               	bcf	3,7	;select IRP bank0
  1766     017B  0080               	movwf	0
  1767     017C                     l1991:
  1768     017C  3001               	movlw	1
  1769     017D  00AB               	movwf	??_sprintf
  1770     017E  082B               	movf	??_sprintf,w
  1771     017F  07B3               	addwf	sprintf@sp,f
  1772     0180                     l1993:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1775     0180  30FF               	movlw	255
  1776     0181  00AB               	movwf	??_sprintf
  1777     0182  082B               	movf	??_sprintf,w
  1778     0183  07B2               	addwf	sprintf@prec,f
  1779     0184  0A32               	incf	sprintf@prec,w
  1780     0185  1D03               	btfss	3,2
  1781     0186  2988               	goto	u1581
  1782     0187  2989               	goto	u1580
  1783     0188                     u1581:
  1784     0188  2949               	goto	l1987
  1785     0189                     u1580:
  1786     0189                     l1995:
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1789     0189  3001               	movlw	1
  1790     018A  07A8               	addwf	sprintf@f,f
  1791     018B  30FF               	movlw	-1
  1792     018C  0728               	addwf	sprintf@f,w
  1793     018D  0084               	movwf	4
  1794     018E  120A  118A  23A8  120A  118A  	fcall	stringdir
  1795     0193  00B6               	movwf	sprintf@c
  1796     0194  0836               	movf	sprintf@c,w
  1797     0195  1D03               	btfss	3,2
  1798     0196  2998               	goto	u1591
  1799     0197  2999               	goto	u1590
  1800     0198                     u1591:
  1801     0198  281E               	goto	l1913
  1802     0199                     u1590:
  1803     0199                     l1997:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1806     0199  0833               	movf	sprintf@sp,w
  1807     019A  0084               	movwf	4
  1808     019B  1383               	bcf	3,7	;select IRP bank0
  1809     019C  0180               	clrf	0
  1810     019D                     l354:
  1811     019D  0008               	return
  1812     019E                     __end_of_sprintf:
  1813                           
  1814                           	psect	text3
  1815     0520                     __ptext3:	
  1816 ;; *************** function _isdigit *****************
  1817 ;; Defined at:
  1818 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  c               1    wreg     unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  c               1    4[COMMON] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;		None               void
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         2       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         2       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_sprintf
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846     0520                     _isdigit:	
  1847                           ;psect for function _isdigit
  1848                           
  1849                           
  1850                           ;incstack = 0
  1851                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1852                           ;isdigit@c stored from wreg
  1853     0520  00F4               	movwf	isdigit@c
  1854     0521                     l1423:
  1855     0521  01F3               	clrf	_isdigit$877
  1856     0522                     l1425:
  1857     0522  303A               	movlw	58
  1858     0523  0274               	subwf	isdigit@c,w
  1859     0524  1803               	skipnc
  1860     0525  2D27               	goto	u691
  1861     0526  2D28               	goto	u690
  1862     0527                     u691:
  1863     0527  2D30               	goto	l1431
  1864     0528                     u690:
  1865     0528                     l1427:
  1866     0528  3030               	movlw	48
  1867     0529  0274               	subwf	isdigit@c,w
  1868     052A  1C03               	skipc
  1869     052B  2D2D               	goto	u701
  1870     052C  2D2E               	goto	u700
  1871     052D                     u701:
  1872     052D  2D30               	goto	l1431
  1873     052E                     u700:
  1874     052E                     l1429:
  1875     052E  01F3               	clrf	_isdigit$877
  1876     052F  0AF3               	incf	_isdigit$877,f
  1877     0530                     l1431:
  1878     0530  0C73               	rrf	_isdigit$877,w
  1879     0531                     l811:
  1880     0531  0008               	return
  1881     0532                     __end_of_isdigit:
  1882                           
  1883                           	psect	text4
  1884     049A                     __ptext4:	
  1885 ;; *************** function ___wmul *****************
  1886 ;; Defined at:
  1887 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  multiplier      2    3[COMMON] unsigned int 
  1890 ;;  multiplicand    2    5[COMMON] unsigned int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  product         2    7[COMMON] unsigned int 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  2    3[COMMON] unsigned int 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         4       0       0       0       0
  1903 ;;      Locals:         2       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         6       0       0       0       0
  1906 ;;Total ram usage:        6 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_sprintf
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     049A                     ___wmul:	
  1917                           ;psect for function ___wmul
  1918                           
  1919     049A                     l1435:	
  1920                           ;incstack = 0
  1921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1922                           
  1923     049A  01F7               	clrf	___wmul@product
  1924     049B  01F8               	clrf	___wmul@product+1
  1925     049C                     l1437:
  1926     049C  1C73               	btfss	___wmul@multiplier,0
  1927     049D  2C9F               	goto	u711
  1928     049E  2CA0               	goto	u710
  1929     049F                     u711:
  1930     049F  2CA6               	goto	l358
  1931     04A0                     u710:
  1932     04A0                     l1439:
  1933     04A0  0875               	movf	___wmul@multiplicand,w
  1934     04A1  07F7               	addwf	___wmul@product,f
  1935     04A2  1803               	skipnc
  1936     04A3  0AF8               	incf	___wmul@product+1,f
  1937     04A4  0876               	movf	___wmul@multiplicand+1,w
  1938     04A5  07F8               	addwf	___wmul@product+1,f
  1939     04A6                     l358:
  1940     04A6  3001               	movlw	1
  1941     04A7                     u725:
  1942     04A7  1003               	clrc
  1943     04A8  0DF5               	rlf	___wmul@multiplicand,f
  1944     04A9  0DF6               	rlf	___wmul@multiplicand+1,f
  1945     04AA  3EFF               	addlw	-1
  1946     04AB  1D03               	skipz
  1947     04AC  2CA7               	goto	u725
  1948     04AD                     l1441:
  1949     04AD  3001               	movlw	1
  1950     04AE                     u735:
  1951     04AE  1003               	clrc
  1952     04AF  0CF4               	rrf	___wmul@multiplier+1,f
  1953     04B0  0CF3               	rrf	___wmul@multiplier,f
  1954     04B1  3EFF               	addlw	-1
  1955     04B2  1D03               	skipz
  1956     04B3  2CAE               	goto	u735
  1957     04B4                     l1443:
  1958     04B4  0873               	movf	___wmul@multiplier,w
  1959     04B5  0474               	iorwf	___wmul@multiplier+1,w
  1960     04B6  1D03               	btfss	3,2
  1961     04B7  2CB9               	goto	u741
  1962     04B8  2CBA               	goto	u740
  1963     04B9                     u741:
  1964     04B9  2C9C               	goto	l1437
  1965     04BA                     u740:
  1966     04BA                     l1445:
  1967     04BA  0878               	movf	___wmul@product+1,w
  1968     04BB  00F4               	movwf	?___wmul+1
  1969     04BC  0877               	movf	___wmul@product,w
  1970     04BD  00F3               	movwf	?___wmul
  1971     04BE                     l360:
  1972     04BE  0008               	return
  1973     04BF                     __end_of___wmul:
  1974                           
  1975                           	psect	text5
  1976     042B                     __ptext5:	
  1977 ;; *************** function ___lwmod *****************
  1978 ;; Defined at:
  1979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  divisor         2    3[BANK0 ] unsigned int 
  1982 ;;  dividend        2    5[BANK0 ] unsigned int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  counter         1    7[BANK0 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    3[BANK0 ] unsigned int 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       4       0       0       0
  1995 ;;      Locals:         0       1       0       0       0
  1996 ;;      Temps:          1       0       0       0       0
  1997 ;;      Totals:         1       5       0       0       0
  1998 ;;Total ram usage:        6 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_sprintf
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008     042B                     ___lwmod:	
  2009                           ;psect for function ___lwmod
  2010                           
  2011     042B                     l1873:	
  2012                           ;incstack = 0
  2013                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2014                           
  2015     042B  1283               	bcf	3,5	;RP0=0, select bank0
  2016     042C  1303               	bcf	3,6	;RP1=0, select bank0
  2017     042D  0823               	movf	___lwmod@divisor,w
  2018     042E  0424               	iorwf	___lwmod@divisor+1,w
  2019     042F  1903               	btfsc	3,2
  2020     0430  2C32               	goto	u1361
  2021     0431  2C33               	goto	u1360
  2022     0432                     u1361:
  2023     0432  2C62               	goto	l1891
  2024     0433                     u1360:
  2025     0433                     l1875:
  2026     0433  01A7               	clrf	___lwmod@counter
  2027     0434  0AA7               	incf	___lwmod@counter,f
  2028     0435  2C41               	goto	l1881
  2029     0436                     l1877:
  2030     0436  3001               	movlw	1
  2031     0437                     u1375:
  2032     0437  1003               	clrc
  2033     0438  0DA3               	rlf	___lwmod@divisor,f
  2034     0439  0DA4               	rlf	___lwmod@divisor+1,f
  2035     043A  3EFF               	addlw	-1
  2036     043B  1D03               	skipz
  2037     043C  2C37               	goto	u1375
  2038     043D                     l1879:
  2039     043D  3001               	movlw	1
  2040     043E  00F8               	movwf	??___lwmod
  2041     043F  0878               	movf	??___lwmod,w
  2042     0440  07A7               	addwf	___lwmod@counter,f
  2043     0441                     l1881:
  2044     0441  1FA4               	btfss	___lwmod@divisor+1,7
  2045     0442  2C44               	goto	u1381
  2046     0443  2C45               	goto	u1380
  2047     0444                     u1381:
  2048     0444  2C36               	goto	l1877
  2049     0445                     u1380:
  2050     0445                     l1883:
  2051     0445  0824               	movf	___lwmod@divisor+1,w
  2052     0446  0226               	subwf	___lwmod@dividend+1,w
  2053     0447  1D03               	skipz
  2054     0448  2C4B               	goto	u1395
  2055     0449  0823               	movf	___lwmod@divisor,w
  2056     044A  0225               	subwf	___lwmod@dividend,w
  2057     044B                     u1395:
  2058     044B  1C03               	skipc
  2059     044C  2C4E               	goto	u1391
  2060     044D  2C4F               	goto	u1390
  2061     044E                     u1391:
  2062     044E  2C55               	goto	l1887
  2063     044F                     u1390:
  2064     044F                     l1885:
  2065     044F  0823               	movf	___lwmod@divisor,w
  2066     0450  02A5               	subwf	___lwmod@dividend,f
  2067     0451  0824               	movf	___lwmod@divisor+1,w
  2068     0452  1C03               	skipc
  2069     0453  03A6               	decf	___lwmod@dividend+1,f
  2070     0454  02A6               	subwf	___lwmod@dividend+1,f
  2071     0455                     l1887:
  2072     0455  3001               	movlw	1
  2073     0456                     u1405:
  2074     0456  1003               	clrc
  2075     0457  0CA4               	rrf	___lwmod@divisor+1,f
  2076     0458  0CA3               	rrf	___lwmod@divisor,f
  2077     0459  3EFF               	addlw	-1
  2078     045A  1D03               	skipz
  2079     045B  2C56               	goto	u1405
  2080     045C                     l1889:
  2081     045C  3001               	movlw	1
  2082     045D  02A7               	subwf	___lwmod@counter,f
  2083     045E  1D03               	btfss	3,2
  2084     045F  2C61               	goto	u1411
  2085     0460  2C62               	goto	u1410
  2086     0461                     u1411:
  2087     0461  2C45               	goto	l1883
  2088     0462                     u1410:
  2089     0462                     l1891:
  2090     0462  0826               	movf	___lwmod@dividend+1,w
  2091     0463  00A4               	movwf	?___lwmod+1
  2092     0464  0825               	movf	___lwmod@dividend,w
  2093     0465  00A3               	movwf	?___lwmod
  2094     0466                     l640:
  2095     0466  0008               	return
  2096     0467                     __end_of___lwmod:
  2097                           
  2098                           	psect	text6
  2099     03E5                     __ptext6:	
  2100 ;; *************** function ___lwdiv *****************
  2101 ;; Defined at:
  2102 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  divisor         2    3[COMMON] unsigned int 
  2105 ;;  dividend        2    5[COMMON] unsigned int 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  quotient        2    1[BANK0 ] unsigned int 
  2108 ;;  counter         1    0[BANK0 ] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    3[COMMON] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         4       0       0       0       0
  2119 ;;      Locals:         0       3       0       0       0
  2120 ;;      Temps:          1       0       0       0       0
  2121 ;;      Totals:         5       3       0       0       0
  2122 ;;Total ram usage:        8 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_sprintf
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132     03E5                     ___lwdiv:	
  2133                           ;psect for function ___lwdiv
  2134                           
  2135     03E5                     l1847:	
  2136                           ;incstack = 0
  2137                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2138                           
  2139     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2140     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2141     03E7  01A1               	clrf	___lwdiv@quotient
  2142     03E8  01A2               	clrf	___lwdiv@quotient+1
  2143     03E9                     l1849:
  2144     03E9  0873               	movf	___lwdiv@divisor,w
  2145     03EA  0474               	iorwf	___lwdiv@divisor+1,w
  2146     03EB  1903               	btfsc	3,2
  2147     03EC  2BEE               	goto	u1291
  2148     03ED  2BEF               	goto	u1290
  2149     03EE                     u1291:
  2150     03EE  2C26               	goto	l1869
  2151     03EF                     u1290:
  2152     03EF                     l1851:
  2153     03EF  01A0               	clrf	___lwdiv@counter
  2154     03F0  0AA0               	incf	___lwdiv@counter,f
  2155     03F1  2BFD               	goto	l1857
  2156     03F2                     l1853:
  2157     03F2  3001               	movlw	1
  2158     03F3                     u1305:
  2159     03F3  1003               	clrc
  2160     03F4  0DF3               	rlf	___lwdiv@divisor,f
  2161     03F5  0DF4               	rlf	___lwdiv@divisor+1,f
  2162     03F6  3EFF               	addlw	-1
  2163     03F7  1D03               	skipz
  2164     03F8  2BF3               	goto	u1305
  2165     03F9                     l1855:
  2166     03F9  3001               	movlw	1
  2167     03FA  00F7               	movwf	??___lwdiv
  2168     03FB  0877               	movf	??___lwdiv,w
  2169     03FC  07A0               	addwf	___lwdiv@counter,f
  2170     03FD                     l1857:
  2171     03FD  1FF4               	btfss	___lwdiv@divisor+1,7
  2172     03FE  2C00               	goto	u1311
  2173     03FF  2C01               	goto	u1310
  2174     0400                     u1311:
  2175     0400  2BF2               	goto	l1853
  2176     0401                     u1310:
  2177     0401                     l1859:
  2178     0401  3001               	movlw	1
  2179     0402                     u1325:
  2180     0402  1003               	clrc
  2181     0403  0DA1               	rlf	___lwdiv@quotient,f
  2182     0404  0DA2               	rlf	___lwdiv@quotient+1,f
  2183     0405  3EFF               	addlw	-1
  2184     0406  1D03               	skipz
  2185     0407  2C02               	goto	u1325
  2186     0408  0874               	movf	___lwdiv@divisor+1,w
  2187     0409  0276               	subwf	___lwdiv@dividend+1,w
  2188     040A  1D03               	skipz
  2189     040B  2C0E               	goto	u1335
  2190     040C  0873               	movf	___lwdiv@divisor,w
  2191     040D  0275               	subwf	___lwdiv@dividend,w
  2192     040E                     u1335:
  2193     040E  1C03               	skipc
  2194     040F  2C11               	goto	u1331
  2195     0410  2C12               	goto	u1330
  2196     0411                     u1331:
  2197     0411  2C19               	goto	l1865
  2198     0412                     u1330:
  2199     0412                     l1861:
  2200     0412  0873               	movf	___lwdiv@divisor,w
  2201     0413  02F5               	subwf	___lwdiv@dividend,f
  2202     0414  0874               	movf	___lwdiv@divisor+1,w
  2203     0415  1C03               	skipc
  2204     0416  03F6               	decf	___lwdiv@dividend+1,f
  2205     0417  02F6               	subwf	___lwdiv@dividend+1,f
  2206     0418                     l1863:
  2207     0418  1421               	bsf	___lwdiv@quotient,0
  2208     0419                     l1865:
  2209     0419  3001               	movlw	1
  2210     041A                     u1345:
  2211     041A  1003               	clrc
  2212     041B  0CF4               	rrf	___lwdiv@divisor+1,f
  2213     041C  0CF3               	rrf	___lwdiv@divisor,f
  2214     041D  3EFF               	addlw	-1
  2215     041E  1D03               	skipz
  2216     041F  2C1A               	goto	u1345
  2217     0420                     l1867:
  2218     0420  3001               	movlw	1
  2219     0421  02A0               	subwf	___lwdiv@counter,f
  2220     0422  1D03               	btfss	3,2
  2221     0423  2C25               	goto	u1351
  2222     0424  2C26               	goto	u1350
  2223     0425                     u1351:
  2224     0425  2C01               	goto	l1859
  2225     0426                     u1350:
  2226     0426                     l1869:
  2227     0426  0822               	movf	___lwdiv@quotient+1,w
  2228     0427  00F4               	movwf	?___lwdiv+1
  2229     0428  0821               	movf	___lwdiv@quotient,w
  2230     0429  00F3               	movwf	?___lwdiv
  2231     042A                     l630:
  2232     042A  0008               	return
  2233     042B                     __end_of___lwdiv:
  2234                           
  2235                           	psect	text7
  2236     04BF                     __ptext7:	
  2237 ;; *************** function _setup *****************
  2238 ;; Defined at:
  2239 ;;		line 133 in file "postlab2.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          1       0       0       0       0
  2256 ;;      Totals:         1       0       0       0       0
  2257 ;;Total ram usage:        1 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 1
  2260 ;; This function calls:
  2261 ;;		Nothing
  2262 ;; This function is called by:
  2263 ;;		_main
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267     04BF                     _setup:	
  2268                           ;psect for function _setup
  2269                           
  2270     04BF                     l1537:	
  2271                           ;incstack = 0
  2272                           ; Regs used in _setup: [wreg+status,2+status,0]
  2273                           
  2274                           
  2275                           ;postlab2.c: 134:     ANSEL = 0b00000011;
  2276     04BF  3003               	movlw	3
  2277     04C0  1683               	bsf	3,5	;RP0=1, select bank3
  2278     04C1  1703               	bsf	3,6	;RP1=1, select bank3
  2279     04C2  0088               	movwf	8	;volatile
  2280     04C3                     l1539:
  2281                           
  2282                           ;postlab2.c: 135:     ANSELH = 0;
  2283     04C3  0189               	clrf	9	;volatile
  2284     04C4                     l1541:
  2285                           
  2286                           ;postlab2.c: 137:     TRISA = 0xFF;
  2287     04C4  30FF               	movlw	255
  2288     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2289     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2290     04C7  0085               	movwf	5	;volatile
  2291     04C8                     l1543:
  2292                           
  2293                           ;postlab2.c: 141:     ADCON1bits.ADFM = 0;
  2294     04C8  139F               	bcf	31,7	;volatile
  2295     04C9                     l1545:
  2296                           
  2297                           ;postlab2.c: 142:     ADCON1bits.VCFG0 = 0;
  2298     04C9  121F               	bcf	31,4	;volatile
  2299     04CA                     l1547:
  2300                           
  2301                           ;postlab2.c: 143:     ADCON1bits.VCFG1 = 0;
  2302     04CA  129F               	bcf	31,5	;volatile
  2303     04CB                     l1549:
  2304                           
  2305                           ;postlab2.c: 145:     ADCON0bits.ADCS = 0b01;
  2306     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2307     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2308     04CD  081F               	movf	31,w	;volatile
  2309     04CE  393F               	andlw	-193
  2310     04CF  3840               	iorlw	64
  2311     04D0  009F               	movwf	31	;volatile
  2312     04D1                     l1551:
  2313                           
  2314                           ;postlab2.c: 146:     ADCON0bits.CHS = 0;
  2315     04D1  30C3               	movlw	-61
  2316     04D2  059F               	andwf	31,f	;volatile
  2317     04D3                     l1553:
  2318                           
  2319                           ;postlab2.c: 147:     ADCON0bits.ADON= 1;
  2320     04D3  141F               	bsf	31,0	;volatile
  2321     04D4                     l1555:
  2322                           
  2323                           ;postlab2.c: 148:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2324     04D4  3021               	movlw	33
  2325     04D5  00F3               	movwf	??_setup
  2326     04D6                     u1667:
  2327     04D6  0BF3               	decfsz	??_setup,f
  2328     04D7  2CD6               	goto	u1667
  2329     04D8                     l1557:
  2330                           
  2331                           ;postlab2.c: 150:     PIR1bits.ADIF = 0;
  2332     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2333     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2334     04DA  130C               	bcf	12,6	;volatile
  2335     04DB                     l1559:
  2336                           
  2337                           ;postlab2.c: 151:     PIE1bits.ADIE = 1;
  2338     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2339     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2340     04DD  170C               	bsf	12,6	;volatile
  2341     04DE                     l1561:
  2342                           
  2343                           ;postlab2.c: 152:     INTCONbits.PEIE = 1;
  2344     04DE  170B               	bsf	11,6	;volatile
  2345     04DF                     l1563:
  2346                           
  2347                           ;postlab2.c: 153:     INTCONbits.GIE = 1;
  2348     04DF  178B               	bsf	11,7	;volatile
  2349     04E0                     l170:
  2350     04E0  0008               	return
  2351     04E1                     __end_of_setup:
  2352                           
  2353                           	psect	text8
  2354     050D                     __ptext8:	
  2355 ;; *************** function _preguntas *****************
  2356 ;; Defined at:
  2357 ;;		line 156 in file "postlab2.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 3
  2378 ;; This function calls:
  2379 ;;		_UART_Print
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     050D                     _preguntas:	
  2386                           ;psect for function _preguntas
  2387                           
  2388     050D                     l1679:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2391                           
  2392                           
  2393                           ;postlab2.c: 158:     UART_Print ("1.Leer potenciometro\r\n");
  2394     050D  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2395     050E  00F4               	movwf	UART_Print@data
  2396     050F  3080               	movlw	128
  2397     0510  00F5               	movwf	UART_Print@data+1
  2398     0511  120A  118A  2467  120A  118A  	fcall	_UART_Print
  2399                           
  2400                           ;postlab2.c: 159:     UART_Print (message);
  2401     0516  300B               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2402     0517  00F4               	movwf	UART_Print@data
  2403     0518  3080               	movlw	128
  2404     0519  00F5               	movwf	UART_Print@data+1
  2405     051A  120A  118A  2467  120A  118A  	fcall	_UART_Print
  2406     051F                     l173:
  2407     051F  0008               	return
  2408     0520                     __end_of_preguntas:
  2409                           
  2410                           	psect	text9
  2411     0467                     __ptext9:	
  2412 ;; *************** function _UART_Print *****************
  2413 ;; Defined at:
  2414 ;;		line 65 in file "USARTmodl.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  data            2    4[COMMON] PTR const unsigned char 
  2417 ;;		 -> STR_7(23), STR_6(3), ROM(8192), STR_5(3), 
  2418 ;;		 -> main@text(9), STR_3(3), STR_2(3), message(15), 
  2419 ;;		 -> STR_1(23), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  i               1    8[COMMON] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2431 ;;      Params:         2       0       0       0       0
  2432 ;;      Locals:         1       0       0       0       0
  2433 ;;      Temps:          2       0       0       0       0
  2434 ;;      Totals:         5       0       0       0       0
  2435 ;;Total ram usage:        5 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 2
  2438 ;; This function calls:
  2439 ;;		_UART_PutC
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;;		_preguntas
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     0467                     _UART_Print:	
  2447                           ;psect for function _UART_Print
  2448                           
  2449     0467                     l1415:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2452                           
  2453                           
  2454                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2455     0467  01F8               	clrf	UART_Print@i
  2456                           
  2457                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2458     0468  2C82               	goto	l1421
  2459     0469                     l1417:
  2460                           
  2461                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2462     0469  0878               	movf	UART_Print@i,w
  2463     046A  00F6               	movwf	??_UART_Print
  2464     046B  01F7               	clrf	??_UART_Print+1
  2465     046C  0876               	movf	??_UART_Print,w
  2466     046D  0774               	addwf	UART_Print@data,w
  2467     046E  0084               	movwf	4
  2468     046F  0877               	movf	??_UART_Print+1,w
  2469     0470  1803               	skipnc
  2470     0471  0A77               	incf	??_UART_Print+1,w
  2471     0472  0775               	addwf	UART_Print@data+1,w
  2472     0473  00FF               	movwf	btemp+1
  2473     0474  120A  118A  239E  120A  118A  	fcall	stringtab
  2474     0479  120A  118A  2540  120A  118A  	fcall	_UART_PutC
  2475     047E                     l1419:
  2476     047E  3001               	movlw	1
  2477     047F  00F6               	movwf	??_UART_Print
  2478     0480  0876               	movf	??_UART_Print,w
  2479     0481  07F8               	addwf	UART_Print@i,f
  2480     0482                     l1421:
  2481                           
  2482                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2483     0482  0878               	movf	UART_Print@i,w
  2484     0483  00F6               	movwf	??_UART_Print
  2485     0484  01F7               	clrf	??_UART_Print+1
  2486     0485  0876               	movf	??_UART_Print,w
  2487     0486  0774               	addwf	UART_Print@data,w
  2488     0487  0084               	movwf	4
  2489     0488  0877               	movf	??_UART_Print+1,w
  2490     0489  1803               	skipnc
  2491     048A  0A77               	incf	??_UART_Print+1,w
  2492     048B  0775               	addwf	UART_Print@data+1,w
  2493     048C  1283               	bcf	3,5	;RP0=0, select bank0
  2494     048D  1303               	bcf	3,6	;RP1=0, select bank0
  2495     048E  00FF               	movwf	btemp+1
  2496     048F  120A  118A  239E  120A  118A  	fcall	stringtab
  2497     0494  3A00               	xorlw	0
  2498     0495  1D03               	skipz
  2499     0496  2C98               	goto	u681
  2500     0497  2C99               	goto	u680
  2501     0498                     u681:
  2502     0498  2C69               	goto	l1417
  2503     0499                     u680:
  2504     0499                     l226:
  2505     0499  0008               	return
  2506     049A                     __end_of_UART_Print:
  2507                           
  2508                           	psect	text10
  2509     0540                     __ptext10:	
  2510 ;; *************** function _UART_PutC *****************
  2511 ;; Defined at:
  2512 ;;		line 59 in file "USARTmodl.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  data            1    wreg     const unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  data            1    3[COMMON] const unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0
  2529 ;;      Totals:         1       0       0       0       0
  2530 ;;Total ram usage:        1 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;;		_UART_Print
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541     0540                     _UART_PutC:	
  2542                           ;psect for function _UART_PutC
  2543                           
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _UART_PutC: [wreg]
  2547                           ;UART_PutC@data stored from wreg
  2548     0540  00F3               	movwf	UART_PutC@data
  2549     0541                     l1411:
  2550     0541                     l217:	
  2551                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2552                           
  2553     0541  1683               	bsf	3,5	;RP0=1, select bank1
  2554     0542  1303               	bcf	3,6	;RP1=0, select bank1
  2555     0543  1C98               	btfss	24,1	;volatile
  2556     0544  2D46               	goto	u671
  2557     0545  2D47               	goto	u670
  2558     0546                     u671:
  2559     0546  2D41               	goto	l217
  2560     0547                     u670:
  2561     0547                     l1413:
  2562                           
  2563                           ;USARTmodl.c: 62:   TXREG = data;
  2564     0547  0873               	movf	UART_PutC@data,w
  2565     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2566     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2567     054A  0099               	movwf	25	;volatile
  2568     054B                     l220:
  2569     054B  0008               	return
  2570     054C                     __end_of_UART_PutC:
  2571                           
  2572                           	psect	text11
  2573     0296                     __ptext11:	
  2574 ;; *************** function _UART_Init *****************
  2575 ;; Defined at:
  2576 ;;		line 14 in file "USARTmodl.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  n               2   16[BANK0 ] int 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2590 ;;      Params:         0       4       0       0       0
  2591 ;;      Locals:         0       2       0       0       0
  2592 ;;      Temps:          0       4       0       0       0
  2593 ;;      Totals:         0      10       0       0       0
  2594 ;;Total ram usage:       10 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 2
  2597 ;; This function calls:
  2598 ;;		___lldiv
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604     0296                     _UART_Init:	
  2605                           ;psect for function _UART_Init
  2606                           
  2607     0296                     l1895:	
  2608                           ;incstack = 0
  2609                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2610                           
  2611                           
  2612                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  2613     0296  1283               	bcf	3,5	;RP0=0, select bank0
  2614     0297  1303               	bcf	3,6	;RP1=0, select bank0
  2615     0298  0828               	movf	UART_Init@baud_rate,w
  2616     0299  00AC               	movwf	??_UART_Init
  2617     029A  0829               	movf	UART_Init@baud_rate+1,w
  2618     029B  00AD               	movwf	??_UART_Init+1
  2619     029C  082A               	movf	UART_Init@baud_rate+2,w
  2620     029D  00AE               	movwf	??_UART_Init+2
  2621     029E  082B               	movf	UART_Init@baud_rate+3,w
  2622     029F  00AF               	movwf	??_UART_Init+3
  2623     02A0  3004               	movlw	4
  2624     02A1                     u1425:
  2625     02A1  1003               	clrc
  2626     02A2  0DAC               	rlf	??_UART_Init,f
  2627     02A3  0DAD               	rlf	??_UART_Init+1,f
  2628     02A4  0DAE               	rlf	??_UART_Init+2,f
  2629     02A5  0DAF               	rlf	??_UART_Init+3,f
  2630     02A6                     u1420:
  2631     02A6  3EFF               	addlw	-1
  2632     02A7  1D03               	skipz
  2633     02A8  2AA1               	goto	u1425
  2634     02A9  082F               	movf	??_UART_Init+3,w
  2635     02AA  00A3               	movwf	___lldiv@divisor+3
  2636     02AB  082E               	movf	??_UART_Init+2,w
  2637     02AC  00A2               	movwf	___lldiv@divisor+2
  2638     02AD  082D               	movf	??_UART_Init+1,w
  2639     02AE  00A1               	movwf	___lldiv@divisor+1
  2640     02AF  082C               	movf	??_UART_Init,w
  2641     02B0  00A0               	movwf	___lldiv@divisor
  2642     02B1  3000               	movlw	0
  2643     02B2  00A7               	movwf	___lldiv@dividend+3
  2644     02B3  307A               	movlw	122
  2645     02B4  00A6               	movwf	___lldiv@dividend+2
  2646     02B5  3012               	movlw	18
  2647     02B6  00A5               	movwf	___lldiv@dividend+1
  2648     02B7  3000               	movlw	0
  2649     02B8  00A4               	movwf	___lldiv@dividend
  2650     02B9  120A  118A  2336  120A  118A  	fcall	___lldiv
  2651     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2652     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2653     02C0  0820               	movf	?___lldiv,w
  2654     02C1  3EFF               	addlw	255
  2655     02C2  00B0               	movwf	UART_Init@n
  2656     02C3  0821               	movf	?___lldiv+1,w
  2657     02C4  1803               	skipnc
  2658     02C5  3E01               	addlw	1
  2659     02C6  3EFF               	addlw	255
  2660     02C7  00B1               	movwf	UART_Init@n+1
  2661     02C8                     l1897:
  2662                           
  2663                           ;USARTmodl.c: 18:   if (n < 0)
  2664     02C8  1FB1               	btfss	UART_Init@n+1,7
  2665     02C9  2ACB               	goto	u1431
  2666     02CA  2ACC               	goto	u1430
  2667     02CB                     u1431:
  2668     02CB  2ACE               	goto	l1901
  2669     02CC                     u1430:
  2670     02CC                     l1899:
  2671                           
  2672                           ;USARTmodl.c: 19:     n = 0;
  2673     02CC  01B0               	clrf	UART_Init@n
  2674     02CD  01B1               	clrf	UART_Init@n+1
  2675     02CE                     l1901:
  2676                           
  2677                           ;USARTmodl.c: 21:   if (n > 255)
  2678     02CE  0831               	movf	UART_Init@n+1,w
  2679     02CF  3A80               	xorlw	128
  2680     02D0  00FF               	movwf	btemp+1
  2681     02D1  3081               	movlw	129
  2682     02D2  027F               	subwf	btemp+1,w
  2683     02D3  1D03               	skipz
  2684     02D4  2AD7               	goto	u1445
  2685     02D5  3000               	movlw	0
  2686     02D6  0230               	subwf	UART_Init@n,w
  2687     02D7                     u1445:
  2688     02D7  1C03               	skipc
  2689     02D8  2ADA               	goto	u1441
  2690     02D9  2ADB               	goto	u1440
  2691     02DA                     u1441:
  2692     02DA  2B29               	goto	l1909
  2693     02DB                     u1440:
  2694     02DB                     l1903:
  2695                           
  2696                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  2697     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2698     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2699     02DD  0828               	movf	UART_Init@baud_rate,w
  2700     02DE  00AC               	movwf	??_UART_Init
  2701     02DF  0829               	movf	UART_Init@baud_rate+1,w
  2702     02E0  00AD               	movwf	??_UART_Init+1
  2703     02E1  082A               	movf	UART_Init@baud_rate+2,w
  2704     02E2  00AE               	movwf	??_UART_Init+2
  2705     02E3  082B               	movf	UART_Init@baud_rate+3,w
  2706     02E4  00AF               	movwf	??_UART_Init+3
  2707     02E5  3006               	movlw	6
  2708     02E6                     u1455:
  2709     02E6  1003               	clrc
  2710     02E7  0DAC               	rlf	??_UART_Init,f
  2711     02E8  0DAD               	rlf	??_UART_Init+1,f
  2712     02E9  0DAE               	rlf	??_UART_Init+2,f
  2713     02EA  0DAF               	rlf	??_UART_Init+3,f
  2714     02EB                     u1450:
  2715     02EB  3EFF               	addlw	-1
  2716     02EC  1D03               	skipz
  2717     02ED  2AE6               	goto	u1455
  2718     02EE  082F               	movf	??_UART_Init+3,w
  2719     02EF  00A3               	movwf	___lldiv@divisor+3
  2720     02F0  082E               	movf	??_UART_Init+2,w
  2721     02F1  00A2               	movwf	___lldiv@divisor+2
  2722     02F2  082D               	movf	??_UART_Init+1,w
  2723     02F3  00A1               	movwf	___lldiv@divisor+1
  2724     02F4  082C               	movf	??_UART_Init,w
  2725     02F5  00A0               	movwf	___lldiv@divisor
  2726     02F6  3000               	movlw	0
  2727     02F7  00A7               	movwf	___lldiv@dividend+3
  2728     02F8  307A               	movlw	122
  2729     02F9  00A6               	movwf	___lldiv@dividend+2
  2730     02FA  3012               	movlw	18
  2731     02FB  00A5               	movwf	___lldiv@dividend+1
  2732     02FC  3000               	movlw	0
  2733     02FD  00A4               	movwf	___lldiv@dividend
  2734     02FE  120A  118A  2336  120A  118A  	fcall	___lldiv
  2735     0303  1283               	bcf	3,5	;RP0=0, select bank0
  2736     0304  1303               	bcf	3,6	;RP1=0, select bank0
  2737     0305  0820               	movf	?___lldiv,w
  2738     0306  3EFF               	addlw	255
  2739     0307  00B0               	movwf	UART_Init@n
  2740     0308  0821               	movf	?___lldiv+1,w
  2741     0309  1803               	skipnc
  2742     030A  3E01               	addlw	1
  2743     030B  3EFF               	addlw	255
  2744     030C  00B1               	movwf	UART_Init@n+1
  2745     030D                     l1905:
  2746                           
  2747                           ;USARTmodl.c: 24:     if (n > 255)
  2748     030D  0831               	movf	UART_Init@n+1,w
  2749     030E  3A80               	xorlw	128
  2750     030F  00FF               	movwf	btemp+1
  2751     0310  3081               	movlw	129
  2752     0311  027F               	subwf	btemp+1,w
  2753     0312  1D03               	skipz
  2754     0313  2B16               	goto	u1465
  2755     0314  3000               	movlw	0
  2756     0315  0230               	subwf	UART_Init@n,w
  2757     0316                     u1465:
  2758     0316  1C03               	skipc
  2759     0317  2B19               	goto	u1461
  2760     0318  2B1A               	goto	u1460
  2761     0319                     u1461:
  2762     0319  2B20               	goto	l198
  2763     031A                     u1460:
  2764     031A                     l1907:
  2765                           
  2766                           ;USARTmodl.c: 25:       n = 255;
  2767     031A  30FF               	movlw	255
  2768     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2769     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2770     031D  00B0               	movwf	UART_Init@n
  2771     031E  3000               	movlw	0
  2772     031F  00B1               	movwf	UART_Init@n+1
  2773     0320                     l198:
  2774                           
  2775                           ;USARTmodl.c: 26:     SPBRG = n;
  2776     0320  1283               	bcf	3,5	;RP0=0, select bank0
  2777     0321  1303               	bcf	3,6	;RP1=0, select bank0
  2778     0322  0830               	movf	UART_Init@n,w
  2779     0323  1683               	bsf	3,5	;RP0=1, select bank1
  2780     0324  1303               	bcf	3,6	;RP1=0, select bank1
  2781     0325  0099               	movwf	25	;volatile
  2782                           
  2783                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  2784     0326  3020               	movlw	32
  2785     0327  0098               	movwf	24	;volatile
  2786                           
  2787                           ;USARTmodl.c: 28:   }
  2788     0328  2B31               	goto	l199
  2789     0329                     l1909:
  2790                           
  2791                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  2792     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2793     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2794     032B  0830               	movf	UART_Init@n,w
  2795     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2796     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2797     032E  0099               	movwf	25	;volatile
  2798                           
  2799                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  2800     032F  3024               	movlw	36
  2801     0330  0098               	movwf	24	;volatile
  2802     0331                     l199:	
  2803                           ;USARTmodl.c: 34:   }
  2804                           
  2805                           
  2806                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  2807     0331  3090               	movlw	144
  2808     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2809     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2810     0334  0098               	movwf	24	;volatile
  2811     0335                     l200:
  2812     0335  0008               	return
  2813     0336                     __end_of_UART_Init:
  2814                           
  2815                           	psect	text12
  2816     0336                     __ptext12:	
  2817 ;; *************** function ___lldiv *****************
  2818 ;; Defined at:
  2819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  divisor         4    0[BANK0 ] unsigned long 
  2822 ;;  dividend        4    4[BANK0 ] unsigned long 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  quotient        4    4[COMMON] unsigned long 
  2825 ;;  counter         1    8[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  4    0[BANK0 ] unsigned long 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       8       0       0       0
  2836 ;;      Locals:         5       0       0       0       0
  2837 ;;      Temps:          1       0       0       0       0
  2838 ;;      Totals:         6       8       0       0       0
  2839 ;;Total ram usage:       14 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_UART_Init
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     0336                     ___lldiv:	
  2850                           ;psect for function ___lldiv
  2851                           
  2852     0336                     l1823:	
  2853                           ;incstack = 0
  2854                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2855                           
  2856     0336  3000               	movlw	0
  2857     0337  00F7               	movwf	___lldiv@quotient+3
  2858     0338  3000               	movlw	0
  2859     0339  00F6               	movwf	___lldiv@quotient+2
  2860     033A  3000               	movlw	0
  2861     033B  00F5               	movwf	___lldiv@quotient+1
  2862     033C  3000               	movlw	0
  2863     033D  00F4               	movwf	___lldiv@quotient
  2864     033E  1283               	bcf	3,5	;RP0=0, select bank0
  2865     033F  1303               	bcf	3,6	;RP1=0, select bank0
  2866     0340  0823               	movf	___lldiv@divisor+3,w
  2867     0341  0422               	iorwf	___lldiv@divisor+2,w
  2868     0342  0421               	iorwf	___lldiv@divisor+1,w
  2869     0343  0420               	iorwf	___lldiv@divisor,w
  2870     0344  1903               	skipnz
  2871     0345  2B47               	goto	u1221
  2872     0346  2B48               	goto	u1220
  2873     0347                     u1221:
  2874     0347  2B95               	goto	l1843
  2875     0348                     u1220:
  2876     0348                     l1825:
  2877     0348  01F8               	clrf	___lldiv@counter
  2878     0349  0AF8               	incf	___lldiv@counter,f
  2879     034A  2B58               	goto	l1829
  2880     034B                     l1827:
  2881     034B  3001               	movlw	1
  2882     034C  00F3               	movwf	??___lldiv
  2883     034D                     u1235:
  2884     034D  1003               	clrc
  2885     034E  0DA0               	rlf	___lldiv@divisor,f
  2886     034F  0DA1               	rlf	___lldiv@divisor+1,f
  2887     0350  0DA2               	rlf	___lldiv@divisor+2,f
  2888     0351  0DA3               	rlf	___lldiv@divisor+3,f
  2889     0352  0BF3               	decfsz	??___lldiv,f
  2890     0353  2B4D               	goto	u1235
  2891     0354  3001               	movlw	1
  2892     0355  00F3               	movwf	??___lldiv
  2893     0356  0873               	movf	??___lldiv,w
  2894     0357  07F8               	addwf	___lldiv@counter,f
  2895     0358                     l1829:
  2896     0358  1FA3               	btfss	___lldiv@divisor+3,7
  2897     0359  2B5B               	goto	u1241
  2898     035A  2B5C               	goto	u1240
  2899     035B                     u1241:
  2900     035B  2B4B               	goto	l1827
  2901     035C                     u1240:
  2902     035C                     l1831:
  2903     035C  3001               	movlw	1
  2904     035D  00F3               	movwf	??___lldiv
  2905     035E                     u1255:
  2906     035E  1003               	clrc
  2907     035F  0DF4               	rlf	___lldiv@quotient,f
  2908     0360  0DF5               	rlf	___lldiv@quotient+1,f
  2909     0361  0DF6               	rlf	___lldiv@quotient+2,f
  2910     0362  0DF7               	rlf	___lldiv@quotient+3,f
  2911     0363  0BF3               	decfsz	??___lldiv,f
  2912     0364  2B5E               	goto	u1255
  2913     0365                     l1833:
  2914     0365  0823               	movf	___lldiv@divisor+3,w
  2915     0366  0227               	subwf	___lldiv@dividend+3,w
  2916     0367  1D03               	skipz
  2917     0368  2B73               	goto	u1265
  2918     0369  0822               	movf	___lldiv@divisor+2,w
  2919     036A  0226               	subwf	___lldiv@dividend+2,w
  2920     036B  1D03               	skipz
  2921     036C  2B73               	goto	u1265
  2922     036D  0821               	movf	___lldiv@divisor+1,w
  2923     036E  0225               	subwf	___lldiv@dividend+1,w
  2924     036F  1D03               	skipz
  2925     0370  2B73               	goto	u1265
  2926     0371  0820               	movf	___lldiv@divisor,w
  2927     0372  0224               	subwf	___lldiv@dividend,w
  2928     0373                     u1265:
  2929     0373  1C03               	skipc
  2930     0374  2B76               	goto	u1261
  2931     0375  2B77               	goto	u1260
  2932     0376                     u1261:
  2933     0376  2B86               	goto	l1839
  2934     0377                     u1260:
  2935     0377                     l1835:
  2936     0377  0820               	movf	___lldiv@divisor,w
  2937     0378  02A4               	subwf	___lldiv@dividend,f
  2938     0379  0821               	movf	___lldiv@divisor+1,w
  2939     037A  1C03               	skipc
  2940     037B  0F21               	incfsz	___lldiv@divisor+1,w
  2941     037C  02A5               	subwf	___lldiv@dividend+1,f
  2942     037D  0822               	movf	___lldiv@divisor+2,w
  2943     037E  1C03               	skipc
  2944     037F  0F22               	incfsz	___lldiv@divisor+2,w
  2945     0380  02A6               	subwf	___lldiv@dividend+2,f
  2946     0381  0823               	movf	___lldiv@divisor+3,w
  2947     0382  1C03               	skipc
  2948     0383  0F23               	incfsz	___lldiv@divisor+3,w
  2949     0384  02A7               	subwf	___lldiv@dividend+3,f
  2950     0385                     l1837:
  2951     0385  1474               	bsf	___lldiv@quotient,0
  2952     0386                     l1839:
  2953     0386  3001               	movlw	1
  2954     0387                     u1275:
  2955     0387  1003               	clrc
  2956     0388  0CA3               	rrf	___lldiv@divisor+3,f
  2957     0389  0CA2               	rrf	___lldiv@divisor+2,f
  2958     038A  0CA1               	rrf	___lldiv@divisor+1,f
  2959     038B  0CA0               	rrf	___lldiv@divisor,f
  2960     038C  3EFF               	addlw	-1
  2961     038D  1D03               	skipz
  2962     038E  2B87               	goto	u1275
  2963     038F                     l1841:
  2964     038F  3001               	movlw	1
  2965     0390  02F8               	subwf	___lldiv@counter,f
  2966     0391  1D03               	btfss	3,2
  2967     0392  2B94               	goto	u1281
  2968     0393  2B95               	goto	u1280
  2969     0394                     u1281:
  2970     0394  2B5C               	goto	l1831
  2971     0395                     u1280:
  2972     0395                     l1843:
  2973     0395  0877               	movf	___lldiv@quotient+3,w
  2974     0396  00A3               	movwf	?___lldiv+3
  2975     0397  0876               	movf	___lldiv@quotient+2,w
  2976     0398  00A2               	movwf	?___lldiv+2
  2977     0399  0875               	movf	___lldiv@quotient+1,w
  2978     039A  00A1               	movwf	?___lldiv+1
  2979     039B  0874               	movf	___lldiv@quotient,w
  2980     039C  00A0               	movwf	?___lldiv
  2981     039D                     l394:
  2982     039D  0008               	return
  2983     039E                     __end_of___lldiv:
  2984                           
  2985                           	psect	text13
  2986     0532                     __ptext13:	
  2987 ;; *************** function _UART_GetC *****************
  2988 ;; Defined at:
  2989 ;;		line 46 in file "USARTmodl.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      unsigned char 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017     0532                     _UART_GetC:	
  3018                           ;psect for function _UART_GetC
  3019                           
  3020     0532                     l1689:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _UART_GetC: [wreg]
  3023                           
  3024     0532                     l210:	
  3025                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3026                           
  3027     0532  1283               	bcf	3,5	;RP0=0, select bank0
  3028     0533  1303               	bcf	3,6	;RP1=0, select bank0
  3029     0534  1E8C               	btfss	12,5	;volatile
  3030     0535  2D37               	goto	u1161
  3031     0536  2D38               	goto	u1160
  3032     0537                     u1161:
  3033     0537  2D32               	goto	l210
  3034     0538                     u1160:
  3035     0538                     l212:
  3036                           
  3037                           ;USARTmodl.c: 49:   if (OERR)
  3038     0538  1C98               	btfss	24,1	;volatile
  3039     0539  2D3B               	goto	u1171
  3040     053A  2D3C               	goto	u1170
  3041     053B                     u1171:
  3042     053B  2D3E               	goto	l1693
  3043     053C                     u1170:
  3044     053C                     l1691:
  3045                           
  3046                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3047     053C  1218               	bcf	24,4	;volatile
  3048                           
  3049                           ;USARTmodl.c: 52:     CREN = 1;
  3050     053D  1618               	bsf	24,4	;volatile
  3051     053E                     l1693:
  3052                           
  3053                           ;USARTmodl.c: 54:   return RCREG;
  3054     053E  081A               	movf	26,w	;volatile
  3055     053F                     l214:
  3056     053F  0008               	return
  3057     0540                     __end_of_UART_GetC:
  3058                           
  3059                           	psect	text14
  3060     054C                     __ptext14:	
  3061 ;; *************** function _UART_Data_Ready *****************
  3062 ;; Defined at:
  3063 ;;		line 41 in file "USARTmodl.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;		None
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;		None
  3068 ;; Return value:  Size  Location     Type
  3069 ;;		None               void
  3070 ;; Registers used:
  3071 ;;		status,2, status,0
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3077 ;;      Params:         0       0       0       0       0
  3078 ;;      Locals:         0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0
  3080 ;;      Totals:         0       0       0       0       0
  3081 ;;Total ram usage:        0 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091     054C                     _UART_Data_Ready:	
  3092                           ;psect for function _UART_Data_Ready
  3093                           
  3094     054C                     l1681:	
  3095                           ;incstack = 0
  3096                           ; Regs used in _UART_Data_Ready: [status]
  3097                           
  3098                           
  3099                           ;USARTmodl.c: 43:   return RCIF;
  3100     054C  1283               	bcf	3,5	;RP0=0, select bank0
  3101     054D  1303               	bcf	3,6	;RP1=0, select bank0
  3102     054E  1A8C               	btfsc	12,5	;volatile
  3103     054F  2D51               	goto	u1151
  3104     0550  2D52               	goto	u1150
  3105     0551                     u1151:
  3106     0551  2D54               	goto	l1685
  3107     0552                     u1150:
  3108     0552                     l1683:
  3109     0552  1003               	clrc
  3110     0553  2D55               	goto	l207
  3111     0554                     l1685:
  3112     0554  1403               	setc
  3113     0555                     l207:
  3114     0555  0008               	return
  3115     0556                     __end_of_UART_Data_Ready:
  3116                           
  3117                           	psect	text15
  3118     04E1                     __ptext15:	
  3119 ;; *************** function _isr *****************
  3120 ;; Defined at:
  3121 ;;		line 34 in file "postlab2.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0
  3137 ;;      Temps:          3       0       0       0       0
  3138 ;;      Totals:         3       0       0       0       0
  3139 ;;Total ram usage:        3 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		Interrupt level 1
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148     04E1                     _isr:	
  3149                           ;psect for function _isr
  3150                           
  3151     04E1                     i1l1697:
  3152                           
  3153                           ;postlab2.c: 36:     if(PIR1bits.ADIF){
  3154     04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3155     04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3156     04E3  1F0C               	btfss	12,6	;volatile
  3157     04E4  2CE6               	goto	u118_21
  3158     04E5  2CE7               	goto	u118_20
  3159     04E6                     u118_21:
  3160     04E6  2CF3               	goto	i1l147
  3161     04E7                     u118_20:
  3162     04E7                     i1l1699:
  3163                           
  3164                           ;postlab2.c: 38:          if (ADCON0bits.CHS ==0)
  3165     04E7  0C1F               	rrf	31,w	;volatile
  3166     04E8  00F0               	movwf	??_isr
  3167     04E9  0C70               	rrf	??_isr,w
  3168     04EA  390F               	andlw	15
  3169     04EB  3A00               	xorlw	0
  3170     04EC  1D03               	skipz
  3171     04ED  2CEF               	goto	u119_21
  3172     04EE  2CF0               	goto	u119_20
  3173     04EF                     u119_21:
  3174     04EF  2CF2               	goto	i1l1703
  3175     04F0                     u119_20:
  3176     04F0                     i1l1701:
  3177                           
  3178                           ;postlab2.c: 39:           valpot = ADRESH;
  3179     04F0  081E               	movf	30,w	;volatile
  3180     04F1  00C4               	movwf	_valpot
  3181     04F2                     i1l1703:
  3182                           
  3183                           ;postlab2.c: 40:          PIR1bits.ADIF =0;
  3184     04F2  130C               	bcf	12,6	;volatile
  3185     04F3                     i1l147:
  3186     04F3  0872               	movf	??_isr+2,w
  3187     04F4  008A               	movwf	10
  3188     04F5  0E71               	swapf	??_isr+1,w
  3189     04F6  0083               	movwf	3
  3190     04F7  0EFE               	swapf	btemp,f
  3191     04F8  0E7E               	swapf	btemp,w
  3192     04F9  0009               	retfie
  3193     04FA                     __end_of_isr:
  3194     007E                     btemp	set	126	;btemp
  3195     007E                     wtemp0	set	126
  3196                           
  3197                           	psect	intentry
  3198     0004                     __pintentry:	
  3199                           ;incstack = 0
  3200                           ; Regs used in _isr: [wreg+status,2+status,0]
  3201                           
  3202     0004                     interrupt_function:
  3203     007E                     saved_w	set	btemp
  3204     0004  00FE               	movwf	btemp
  3205     0005  0E03               	swapf	3,w
  3206     0006  00F1               	movwf	??_isr+1
  3207     0007  080A               	movf	10,w
  3208     0008  00F2               	movwf	??_isr+2
  3209     0009  120A  118A  2CE1   	ljmp	_isr
  3210                           
  3211                           	psect	idloc
  3212                           
  3213                           ;Config register IDLOC0 @ 0x2000
  3214                           ;	unspecified, using default values
  3215     2000                     	org	8192
  3216     2000  3FFF               	dw	16383
  3217                           
  3218                           ;Config register IDLOC1 @ 0x2001
  3219                           ;	unspecified, using default values
  3220     2001                     	org	8193
  3221     2001  3FFF               	dw	16383
  3222                           
  3223                           ;Config register IDLOC2 @ 0x2002
  3224                           ;	unspecified, using default values
  3225     2002                     	org	8194
  3226     2002  3FFF               	dw	16383
  3227                           
  3228                           ;Config register IDLOC3 @ 0x2003
  3229                           ;	unspecified, using default values
  3230     2003                     	org	8195
  3231     2003  3FFF               	dw	16383
  3232                           
  3233                           	psect	config
  3234                           
  3235                           ;Config register CONFIG1 @ 0x2007
  3236                           ;	Oscillator Selection bits
  3237                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3238                           ;	Watchdog Timer Enable bit
  3239                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3240                           ;	Power-up Timer Enable bit
  3241                           ;	PWRTE = OFF, PWRT disabled
  3242                           ;	RE3/MCLR pin function select bit
  3243                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3244                           ;	Code Protection bit
  3245                           ;	CP = OFF, Program memory code protection is disabled
  3246                           ;	Data Code Protection bit
  3247                           ;	CPD = OFF, Data memory code protection is disabled
  3248                           ;	Brown Out Reset Selection bits
  3249                           ;	BOREN = OFF, BOR disabled
  3250                           ;	Internal External Switchover bit
  3251                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3252                           ;	Fail-Safe Clock Monitor Enabled bit
  3253                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3254                           ;	Low Voltage Programming Enable bit
  3255                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  3256                           ;	In-Circuit Debugger Mode bit
  3257                           ;	DEBUG = 0x1, unprogrammed default
  3258     2007                     	org	8199
  3259     2007  38D5               	dw	14549
  3260                           
  3261                           ;Config register CONFIG2 @ 0x2008
  3262                           ;	Brown-out Reset Selection bit
  3263                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3264                           ;	Flash Program Memory Self Write Enable bits
  3265                           ;	WRT = OFF, Write protection off
  3266     2008                     	org	8200
  3267     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    25
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     36      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 8192
		 -> STR_7(CODE[23]), STR_6(CODE[3]), ROM(CODE[8192]), STR_5(CODE[3]), 
		 -> main@text(BANK0[9]), STR_3(CODE[3]), STR_2(CODE[3]), message(CODE[15]), 
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _main->_UART_Print
    _sprintf->___lwmod
    _sprintf->___wmul
    ___lwmod->___lwdiv
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5153
                                             23 BANK0     13    13      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2335
                                              8 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     1     1      0
                                              3 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     872
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           5     3      2     872
                                              4 COMMON     5     3      2
                          _UART_PutC
                          _uart_read (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              8 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
     _uart_read (ARG)
   _UART_PutC
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jul 25 22:26:54 2023

                      pc 0002                       fsr 0004      ___wmul@multiplicand 0075  
                    l200 0335                      l210 0532                      l212 0538  
                    l220 054B                      l214 053F                      l207 0555  
                    l152 050C                      l217 0541                      l226 0499  
                    l170 04E0                      l324 0032                      l173 051F  
                    l360 04BE                      l354 019D                      l198 0320  
                    l630 042A                      l358 04A6                      l199 0331  
                    l640 0466                      l394 039D                      l811 0531  
                    _RD3 0043                      _RD4 0044                      _RC6 003E  
                    _RD5 0045                      _RC7 003F                      _RD6 0046  
                    _RD7 0047                      u700 052E                      u701 052D  
                    u710 04A0                      u711 049F                      u740 04BA  
                    u741 04B9                      u725 04A7                      u670 0547  
                    u671 0546                      u735 04AE                      u680 0499  
                    u681 0498                      u690 0528                      u691 0527  
                    u950 0500                      u951 04FF                      u960 0504  
                    u961 0503                      _isr 04E1                      fsr0 0004  
                    indf 0000                     l2011 01A3                     l2021 01DC  
                   l2013 01A7                     l2031 0205                     l2023 01E5  
                   l2015 01B6                     l2041 022C                     l2033 0207  
                   l2025 01F3                     l2017 01C5                     l2009 019E  
                   l1411 0541                     l2131 00B4                     l2043 0236  
                   l2035 0209                     l2027 01FC                     l2019 01CE  
                   l1413 0547                     l1421 0482                     l2061 028C  
                   l2045 0245                     l2037 0212                     l2029 01FF  
                   l1415 0467                     l1431 0530                     l1423 0521  
                   l2127 0273                     l2047 024E                     l2039 0223  
                   l2055 0265                     l1417 0469                     l1441 04AD  
                   l1425 0522                     l2129 0045                     l1521 04FA  
                   l2049 025B                     l2057 027B                     l1419 047E  
                   l1443 04B4                     l1435 049A                     l1427 0528  
                   l1523 0500                     l2059 0284                     l1541 04C4  
                   l1445 04BA                     l1437 049C                     l1429 052E  
                   l1525 0504                     l1533 050B                     l1551 04D1  
                   l1543 04C8                     l1439 04A0                     l1527 0509  
                   l1561 04DE                     l1553 04D3                     l1545 04C9  
                   l1537 04BF                     l1563 04DF                     l1555 04D4  
                   l1547 04CA                     l1539 04C3                     l1901 02CE  
                   l1557 04D8                     l1549 04CB                     l1831 035C  
                   l1823 0336                     l1903 02DB                     l1559 04DB  
                   l1911 001B                     l1681 054C                     l1841 038F  
                   l1833 0365                     l1825 0348                     l1905 030D  
                   l1921 0033                     l1913 001E                     l1683 0552  
                   l1691 053C                     l1835 0377                     l1827 034B  
                   l1843 0395                     l1907 031A                     l1851 03EF  
                   l1931 005E                     l1915 0024                     l1685 0554  
                   l1693 053E                     l1837 0385                     l1829 0358  
                   l1909 0329                     l1861 0412                     l1853 03F2  
                   l1933 0073                     l1925 0037                     l1917 0029  
                   l1839 0386                     l1679 050D                     l1863 0418  
                   l1855 03F9                     l1847 03E5                     l1935 0086  
                   l1943 00A0                     l1927 004A                     l1919 002E  
                   l1689 0532                     l1865 0419                     l1857 03FD  
                   l1849 03E9                     l1881 0441                     l1873 042B  
                   l1961 00F0                     l1945 00BC                     l1937 008A  
                   l1929 005A                     l1867 0420                     l1859 0401  
                   l1883 0445                     l1875 0433                     l1891 0462  
                   l1971 0115                     l1963 00FB                     l1955 00CA  
                   l1947 00C4                     l1939 009B                     l1869 0426  
                   l1885 044F                     l1877 0436                     l1981 0136  
                   l1973 011A                     l1965 0107                     l1949 00C8  
                   l1895 0296                     l1887 0455                     l1879 043D  
                   l1991 017C                     l1983 013A                     l1975 011E  
                   l1967 010B                     l1959 00E6                     l1897 02C8  
                   l1889 045C                     l1993 0180                     l1985 0146  
                   l1969 010F                     l1977 012B                     l1899 02CC  
                   l1987 0149                     l1979 0131                     l1995 0189  
                   l1989 0177                     l1997 0199                     ?_isr 0070  
                   STR_1 03C7                     STR_2 03DB                     STR_3 03DB  
                   STR_4 03DE                     STR_5 03DB                     STR_6 03DB  
                   STR_7 03C7                     _CREN 00C4                     u1220 0348  
                   u1221 0347                     u1150 0552                     u1310 0401  
                   u1151 0551                     u1311 0400                     u1160 0538  
                   u1240 035C                     u1161 0537                     u1241 035B  
                   u1305 03F3                     u1170 053C                     u1330 0412  
                   u1410 0462                     u1171 053B                     u1235 034D  
                   u1331 0411                     u1411 0461                     u1260 0377  
                   u1420 02A6                     u1500 00E5                     u1261 0376  
                   u1325 0402                     u1405 0456                     u1501 00E4  
                   u1430 02CC                     u1350 0426                     u1510 00F0  
                   u1255 035E                     u1431 02CB                     u1351 0425  
                   u1335 040E                     u1511 00EF                     u1280 0395  
                   u1440 02DB                     u1360 0433                     u1520 00FB  
                   u1600 0205                     u1281 0394                     u1265 0373  
                   u1441 02DA                     u1425 02A1                     u1345 041A  
                   u1361 0432                     u1521 00FA                     u1505 00E1  
                   u1601 0204                     u1450 02EB                     u1290 03EF  
                   u1530 010F                     u1610 0284                     u1275 0387  
                   u1291 03EE                     u1531 010E                     u1611 0283  
                   u1460 031A                     u1380 0445                     u1540 0115  
                   u1461 0319                     u1445 02D7                     u1381 0444  
                   u1541 0114                     u1525 00F7                     u1390 044F  
                   u1550 012A                     u1470 0024                     u1455 02E6  
                   u1391 044E                     u1375 0437                     u1551 0129  
                   u1471 0023                     u1560 0131                     u1480 005A  
                   u1465 0316                     u1561 0130                     u1481 0059  
                   u1570 0146                     u1490 009A                     u1395 044B  
                   u1571 0145                     u1491 0099                     u1627 01BE  
                   u1580 0189                     u1581 0188                     u1637 01D6  
                   u1590 0199                     u1591 0198                     u1647 01ED  
                   u1657 023E                     u1667 04D6                     _RCIF 0065  
                   _OERR 00C1                     _TRMT 04C1                     _main 019E  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _CMCON 0079                    _ANSEL 0188  
        __end_of___lldiv 039E          __end_of___lwdiv 042B                    i1l147 04F3  
        __end_of___lwmod 0467                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
            ?_UART_Print 0074          __end_of_dpowers 03B8          __end_of_isdigit 0532  
        __end_of_message 03C7                    _setup 04BF                    main@c 0043  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 019E          __initialization 000F             __end_of_main 0296  
                 ??_main 0037                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1701 04F0                   i1l1703 04F2  
                 i1l1697 04E1                   i1l1699 04E7                   u118_20 04E7  
                 u118_21 04E6                   u119_20 04F0                   u119_21 04EF  
                 _OSCCON 008F                   _TRISC6 043E                   _TRISC7 043F  
      __end_of_UART_GetC 0540        __end_of_UART_Init 0336        __end_of_UART_PutC 054C  
                 ___wmul 049A                ??___lldiv 0073                ??___lwdiv 0077  
              ??___lwmod 0078                   _valpot 0044                ??_isdigit 0073  
                 saved_w 007E                ??_sprintf 002B  __end_of__initialization 0014  
         __pcstackCOMMON 0070            __end_of_setup 04E1             sprintf@width 0034  
                ??_setup 0073               __pbssBANK0 0044               __pmaintext 019E  
                ?___wmul 0073               __pintentry 0004             ??_UART_Print 0076  
             __stringtab 039E       __end_of_UART_Print 049A                  ___lldiv 0336  
                ___lwdiv 03E5                  ___lwmod 042B                  __ptext1 04FA  
                __ptext2 0018                  __ptext3 0520                  __ptext4 049A  
                __ptext5 042B                  __ptext6 03E5                  __ptext7 04BF  
                __ptext8 050D                  __ptext9 0467                  _dpowers 03AE  
                _isdigit 0520                  _message 03B8              UART_Print@i 0078  
         UART_Print@data 0074                  _sprintf 0018     end_of_initialization 0014  
      __end_of_uart_read 050D        __end_of_preguntas 0520          ___lldiv@divisor 0020  
        ___lldiv@counter 0078                _RCSTAbits 0018        ??_UART_Data_Ready 0073  
              _UART_GetC 0532                _UART_Init 0296                _UART_PutC 0540  
              _PORTDbits 0008       UART_Init@baud_rate 0028           __end_of___wmul 04BF  
             ?_UART_GetC 0070               ?_UART_Init 0028               ?_UART_PutC 0070  
    start_initialization 000F              __end_of_isr 04FA                 ??___wmul 0077  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
            sprintf@flag 002F              sprintf@prec 0032         ___lwdiv@dividend 0075  
               ?___lldiv 0020                 ?___lwdiv 0073                 ?___lwmod 0023  
            ??_UART_GetC 0073              ??_UART_Init 002C              ??_UART_PutC 0073  
              __pstrings 039E                 ?_isdigit 0070            UART_PutC@data 0073  
       ___lwdiv@quotient 0021                 ?_sprintf 0028               UART_Init@n 0030  
      interrupt_function 0004           ___wmul@product 0077          _UART_Data_Ready 054C  
               _PIE1bits 008C                 _PIR1bits 000C                _uart_read 04FA  
              _preguntas 050D               _ADCON0bits 001F              __stringbase 03AD  
             _ADCON1bits 009F        ___wmul@multiplier 0073               ?_uart_read 0070  
             ?_preguntas 0070       __end_of__stringtab 03AE              _isdigit$877 0073  
             sprintf@val 0030          ___lwdiv@divisor 0073          ___lwdiv@counter 0020  
               __ptext10 0540                 __ptext11 0296                 __ptext12 0336  
               __ptext13 0532                 __ptext14 054C                 __ptext15 04E1  
__end_of_UART_Data_Ready 0556                 main@text 003A               _INTCONbits 000B  
               isdigit@c 0074                 intlevel1 0000                sprintf@ap 002E  
              sprintf@sp 0033         ___lwmod@dividend 0025         ___lldiv@dividend 0024  
              stringcode 03A8              ??_uart_read 0073              ??_preguntas 0079  
               sprintf@c 0036                 sprintf@f 0028         ___lldiv@quotient 0074  
        ___lwmod@divisor 0023          ___lwmod@counter 0027                 stringdir 03A8  
               stringtab 039E               _UART_Print 0467         ?_UART_Data_Ready 0070  
