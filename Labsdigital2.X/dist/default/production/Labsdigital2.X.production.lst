

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Jul 29 23:42:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459                           
   460                           	psect	strings
   461     0500                     __pstrings:
   462     0500                     stringtab:
   463     0500                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466     0500  1BFF               	btfsc	btemp+1,7
   467     0501  2D0A               	ljmp	stringcode
   468     0502  1383               	bcf	3,7
   469     0503  187F               	btfsc	btemp+1,0
   470     0504  1783               	bsf	3,7
   471     0505  0800               	movf	0,w
   472     0506  0A84               	incf	4,f
   473     0507  1903               	skipnz
   474     0508  0AFF               	incf	btemp+1,f
   475     0509  0008               	return
   476     050A                     stringcode:
   477     050A                     stringdir:
   478     050A  3005               	movlw	high stringdir
   479     050B  008A               	movwf	10
   480     050C  0804               	movf	4,w
   481     050D  0A84               	incf	4,f
   482     050E  0782               	addwf	2,f
   483     050F                     __stringbase:
   484     050F  3400               	retlw	0
   485     0510                     __end_of__stringtab:
   486     0510                     _dpowers:
   487     0510  3401               	retlw	1
   488     0511  3400               	retlw	0
   489     0512  340A               	retlw	10
   490     0513  3400               	retlw	0
   491     0514  3464               	retlw	100
   492     0515  3400               	retlw	0
   493     0516  34E8               	retlw	232
   494     0517  3403               	retlw	3
   495     0518  3410               	retlw	16
   496     0519  3427               	retlw	39
   497     051A                     __end_of_dpowers:
   498     051A                     _message2:
   499     051A  342D               	retlw	45
   500     051B  3420               	retlw	32
   501     051C  3470               	retlw	112
   502     051D  3461               	retlw	97
   503     051E  3472               	retlw	114
   504     051F  3461               	retlw	97
   505     0520  3420               	retlw	32
   506     0521  3464               	retlw	100
   507     0522  3469               	retlw	105
   508     0523  3473               	retlw	115
   509     0524  346D               	retlw	109
   510     0525  3469               	retlw	105
   511     0526  346E               	retlw	110
   512     0527  3475               	retlw	117
   513     0528  3469               	retlw	105
   514     0529  3472               	retlw	114
   515     052A  3420               	retlw	32
   516     052B  3463               	retlw	99
   517     052C  346F               	retlw	111
   518     052D  346E               	retlw	110
   519     052E  3474               	retlw	116
   520     052F  3461               	retlw	97
   521     0530  3464               	retlw	100
   522     0531  346F               	retlw	111
   523     0532  3472               	retlw	114
   524     0533  340D               	retlw	13
   525     0534  340A               	retlw	10
   526     0535  3400               	retlw	0
   527     0536                     __end_of_message2:
   528     0536                     _message:
   529     0536  3420               	retlw	32
   530     0537  342B               	retlw	43
   531     0538  3420               	retlw	32
   532     0539  3470               	retlw	112
   533     053A  3461               	retlw	97
   534     053B  3472               	retlw	114
   535     053C  3461               	retlw	97
   536     053D  3420               	retlw	32
   537     053E  3461               	retlw	97
   538     053F  3475               	retlw	117
   539     0540  346D               	retlw	109
   540     0541  3465               	retlw	101
   541     0542  346E               	retlw	110
   542     0543  3474               	retlw	116
   543     0544  3461               	retlw	97
   544     0545  3472               	retlw	114
   545     0546  3420               	retlw	32
   546     0547  3463               	retlw	99
   547     0548  346F               	retlw	111
   548     0549  346E               	retlw	110
   549     054A  3474               	retlw	116
   550     054B  3461               	retlw	97
   551     054C  3464               	retlw	100
   552     054D  346F               	retlw	111
   553     054E  3472               	retlw	114
   554     054F  340D               	retlw	13
   555     0550  340A               	retlw	10
   556     0551  3400               	retlw	0
   557     0552                     __end_of_message:
   558     0019                     _TXREG	set	25
   559     0018                     _RCSTA	set	24
   560     000B                     _INTCONbits	set	11
   561     0006                     _PORTB	set	6
   562     001A                     _RCREG	set	26
   563     0018                     _RCSTAbits	set	24
   564     001E                     _ADRESH	set	30
   565     001F                     _ADCON0bits	set	31
   566     000C                     _PIR1bits	set	12
   567     0008                     _PORTD	set	8
   568     0007                     _PORTCbits	set	7
   569     00C4                     _CREN	set	196
   570     00C1                     _OERR	set	193
   571     0065                     _RCIF	set	101
   572     003E                     _RC6	set	62
   573     003F                     _RC7	set	63
   574     0047                     _RD7	set	71
   575     0046                     _RD6	set	70
   576     0045                     _RD5	set	69
   577     0044                     _RD4	set	68
   578     0098                     _TXSTA	set	152
   579     0099                     _SPBRG	set	153
   580     008C                     _PIE1bits	set	140
   581     009F                     _ADCON1bits	set	159
   582     0086                     _TRISB	set	134
   583     008F                     _OSCCON	set	143
   584     0088                     _TRISD	set	136
   585     04C1                     _TRMT	set	1217
   586     043E                     _TRISC6	set	1086
   587     043F                     _TRISC7	set	1087
   588     0189                     _ANSELH	set	393
   589     0188                     _ANSEL	set	392
   590     0552                     STR_1:
   591     0552  3431               	retlw	49	;'1'
   592     0553  342E               	retlw	46	;'.'
   593     0554  344C               	retlw	76	;'L'
   594     0555  3465               	retlw	101	;'e'
   595     0556  3465               	retlw	101	;'e'
   596     0557  3472               	retlw	114	;'r'
   597     0558  3420               	retlw	32	;' '
   598     0559  3470               	retlw	112	;'p'
   599     055A  346F               	retlw	111	;'o'
   600     055B  3474               	retlw	116	;'t'
   601     055C  3465               	retlw	101	;'e'
   602     055D  346E               	retlw	110	;'n'
   603     055E  3463               	retlw	99	;'c'
   604     055F  3469               	retlw	105	;'i'
   605     0560  346F               	retlw	111	;'o'
   606     0561  346D               	retlw	109	;'m'
   607     0562  3465               	retlw	101	;'e'
   608     0563  3474               	retlw	116	;'t'
   609     0564  3472               	retlw	114	;'r'
   610     0565  346F               	retlw	111	;'o'
   611     0566  340D               	retlw	13
   612     0567  340A               	retlw	10
   613     0568  3400               	retlw	0
   614     0569                     STR_4:
   615     0569  3425               	retlw	37	;'%'
   616     056A  3430               	retlw	48	;'0'
   617     056B  3433               	retlw	51	;'3'
   618     056C  3475               	retlw	117	;'u'
   619     056D  340D               	retlw	13
   620     056E  340A               	retlw	10
   621     056F  3400               	retlw	0
   622     0566                     
   623                           	psect	cinit
   624     000F                     start_initialization:	
   625                           ; #config settings
   626                           
   627     000F                     __initialization:
   628                           
   629                           ; Clear objects allocated to COMMON
   630     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   631     0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   632                           
   633                           ; Clear objects allocated to BANK0
   634     0011  1283               	bcf	3,5	;RP0=0, select bank0
   635     0012  1303               	bcf	3,6	;RP1=0, select bank0
   636     0013  01DA               	clrf	__pbssBANK0& (0+127)
   637     0014                     end_of_initialization:	
   638                           ;End of C runtime variable initialization code
   639                           
   640     0014                     __end_of__initialization:
   641     0014  0183               	clrf	3
   642     0015  120A  118A  299E   	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	bssCOMMON
   645     0079                     __pbssCOMMON:
   646     0079                     _CMCON:
   647     0079                     	ds	2
   648                           
   649                           	psect	bssBANK0
   650     005A                     __pbssBANK0:
   651     005A                     _valpot:
   652     005A                     	ds	1
   653                           
   654                           	psect	cstackCOMMON
   655     0070                     __pcstackCOMMON:
   656     0070                     ?_UART_Data_Ready:
   657     0070                     ?_isdigit:	
   658                           ; 1 bit 
   659                           
   660     0070                     ?_setup:	
   661                           ; 1 bit 
   662                           
   663     0070                     ?_preguntas:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_UART_GetC:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_UART_PutC:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_isr:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??_isr:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_uart_read:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686     0070                     	ds	3
   687     0073                     ??_setup:
   688     0073                     ??_UART_Data_Ready:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0073                     ??_UART_GetC:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0073                     ??_UART_PutC:	
   695                           ; 1 bytes @ 0x3
   696                           
   697     0073                     ??_isdigit:	
   698                           ; 1 bytes @ 0x3
   699                           
   700     0073                     ??_uart_read:	
   701                           ; 1 bytes @ 0x3
   702                           
   703     0073                     ??___lldiv:	
   704                           ; 1 bytes @ 0x3
   705                           
   706     0073                     ?___wmul:	
   707                           ; 1 bytes @ 0x3
   708                           
   709     0073                     ?___fltol:	
   710                           ; 2 bytes @ 0x3
   711                           
   712     0073                     UART_PutC@data:	
   713                           ; 4 bytes @ 0x3
   714                           
   715     0073                     _isdigit$895:	
   716                           ; 1 bytes @ 0x3
   717                           
   718     0073                     ___wmul@multiplier:	
   719                           ; 1 bytes @ 0x3
   720                           
   721     0073                     ___fltol@f1:	
   722                           ; 2 bytes @ 0x3
   723                           
   724                           
   725                           ; 4 bytes @ 0x3
   726     0073                     	ds	1
   727     0074                     ?_UART_Print:
   728     0074                     isdigit@c:	
   729                           ; 1 bytes @ 0x4
   730                           
   731     0074                     UART_Print@data:	
   732                           ; 1 bytes @ 0x4
   733                           
   734     0074                     ___lldiv@quotient:	
   735                           ; 2 bytes @ 0x4
   736                           
   737                           
   738                           ; 4 bytes @ 0x4
   739     0074                     	ds	1
   740     0075                     ___wmul@multiplicand:
   741                           
   742                           ; 2 bytes @ 0x5
   743     0075                     	ds	1
   744     0076                     ??_UART_Print:
   745                           
   746                           ; 1 bytes @ 0x6
   747     0076                     	ds	1
   748     0077                     ??___wmul:
   749     0077                     UART_Print@i:	
   750                           ; 1 bytes @ 0x7
   751                           
   752     0077                     ___fltol@sign1:	
   753                           ; 1 bytes @ 0x7
   754                           
   755     0077                     ___wmul@product:	
   756                           ; 1 bytes @ 0x7
   757                           
   758                           
   759                           ; 2 bytes @ 0x7
   760     0077                     	ds	1
   761     0078                     ??_preguntas:
   762     0078                     ___lldiv@counter:	
   763                           ; 1 bytes @ 0x8
   764                           
   765     0078                     ___fltol@exp1:	
   766                           ; 1 bytes @ 0x8
   767                           
   768                           
   769                           ; 1 bytes @ 0x8
   770     0078                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773     0020                     __pcstackBANK0:
   774     0020                     ??___fltol:
   775     0020                     ?___lwdiv:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0020                     ?___lldiv:	
   779                           ; 2 bytes @ 0x0
   780                           
   781     0020                     ___lwdiv@divisor:	
   782                           ; 4 bytes @ 0x0
   783                           
   784     0020                     ___lldiv@divisor:	
   785                           ; 2 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789     0020                     	ds	2
   790     0022                     ___lwdiv@dividend:
   791                           
   792                           ; 2 bytes @ 0x2
   793     0022                     	ds	2
   794     0024                     ??___lwdiv:
   795     0024                     ___lldiv@dividend:	
   796                           ; 1 bytes @ 0x4
   797                           
   798                           
   799                           ; 4 bytes @ 0x4
   800     0024                     	ds	1
   801     0025                     ___lwdiv@counter:
   802                           
   803                           ; 1 bytes @ 0x5
   804     0025                     	ds	1
   805     0026                     ___lwdiv@quotient:
   806                           
   807                           ; 2 bytes @ 0x6
   808     0026                     	ds	2
   809     0028                     ?_UART_Init:
   810     0028                     ?___lwmod:	
   811                           ; 1 bytes @ 0x8
   812                           
   813     0028                     ?___xxtofl:	
   814                           ; 2 bytes @ 0x8
   815                           
   816     0028                     ___lwmod@divisor:	
   817                           ; 4 bytes @ 0x8
   818                           
   819     0028                     UART_Init@baud_rate:	
   820                           ; 2 bytes @ 0x8
   821                           
   822     0028                     ___xxtofl@val:	
   823                           ; 4 bytes @ 0x8
   824                           
   825                           
   826                           ; 4 bytes @ 0x8
   827     0028                     	ds	2
   828     002A                     ___lwmod@dividend:
   829                           
   830                           ; 2 bytes @ 0xA
   831     002A                     	ds	2
   832     002C                     ??_UART_Init:
   833     002C                     ??___lwmod:	
   834                           ; 1 bytes @ 0xC
   835                           
   836     002C                     ??___xxtofl:	
   837                           ; 1 bytes @ 0xC
   838                           
   839                           
   840                           ; 1 bytes @ 0xC
   841     002C                     	ds	1
   842     002D                     ___lwmod@counter:
   843                           
   844                           ; 1 bytes @ 0xD
   845     002D                     	ds	1
   846     002E                     ?_sprintf:
   847     002E                     sprintf@f:	
   848                           ; 2 bytes @ 0xE
   849                           
   850                           
   851                           ; 1 bytes @ 0xE
   852     002E                     	ds	2
   853     0030                     ___xxtofl@sign:
   854     0030                     UART_Init@n:	
   855                           ; 1 bytes @ 0x10
   856                           
   857                           
   858                           ; 2 bytes @ 0x10
   859     0030                     	ds	1
   860     0031                     ??_sprintf:
   861     0031                     ___xxtofl@exp:	
   862                           ; 1 bytes @ 0x11
   863                           
   864                           
   865                           ; 1 bytes @ 0x11
   866     0031                     	ds	1
   867     0032                     ___xxtofl@arg:
   868                           
   869                           ; 4 bytes @ 0x12
   870     0032                     	ds	2
   871     0034                     sprintf@ap:
   872                           
   873                           ; 1 bytes @ 0x14
   874     0034                     	ds	1
   875     0035                     sprintf@flag:
   876                           
   877                           ; 1 bytes @ 0x15
   878     0035                     	ds	1
   879     0036                     ?_map:
   880     0036                     map@varmap:	
   881                           ; 2 bytes @ 0x16
   882                           
   883     0036                     sprintf@val:	
   884                           ; 2 bytes @ 0x16
   885                           
   886                           
   887                           ; 2 bytes @ 0x16
   888     0036                     	ds	2
   889     0038                     sprintf@prec:
   890     0038                     map@minval:	
   891                           ; 1 bytes @ 0x18
   892                           
   893                           
   894                           ; 2 bytes @ 0x18
   895     0038                     	ds	1
   896     0039                     sprintf@sp:
   897                           
   898                           ; 1 bytes @ 0x19
   899     0039                     	ds	1
   900     003A                     map@maxval:
   901     003A                     sprintf@width:	
   902                           ; 2 bytes @ 0x1A
   903                           
   904                           
   905                           ; 2 bytes @ 0x1A
   906     003A                     	ds	2
   907     003C                     sprintf@c:
   908     003C                     map@minsal:	
   909                           ; 1 bytes @ 0x1C
   910                           
   911                           
   912                           ; 2 bytes @ 0x1C
   913     003C                     	ds	2
   914     003E                     map@maxsal:
   915                           
   916                           ; 2 bytes @ 0x1E
   917     003E                     	ds	2
   918     0040                     ??_map:
   919                           
   920                           ; 1 bytes @ 0x20
   921     0040                     	ds	6
   922     0046                     map@valmap:
   923                           
   924                           ; 4 bytes @ 0x26
   925     0046                     	ds	4
   926     004A                     ??_main:
   927                           
   928                           ; 1 bytes @ 0x2A
   929     004A                     	ds	3
   930     004D                     main@text:
   931                           
   932                           ; 9 bytes @ 0x2D
   933     004D                     	ds	9
   934     0056                     main@varvolt2:
   935                           
   936                           ; 2 bytes @ 0x36
   937     0056                     	ds	2
   938     0058                     main@valuart:
   939                           
   940                           ; 1 bytes @ 0x38
   941     0058                     	ds	1
   942     0059                     main@c:
   943                           
   944                           ; 1 bytes @ 0x39
   945     0059                     	ds	1
   946                           
   947                           	psect	maintext
   948     019E                     __pmaintext:	
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 63 in file "postlab2.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  c               1   57[BANK0 ] unsigned char 
   959 ;;  varvolt2        2   54[BANK0 ] unsigned int 
   960 ;;  valuart         1   56[BANK0 ] unsigned char 
   961 ;;  text            9   45[BANK0 ] unsigned char [9]
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : B00/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0      13       0       0       0
   973 ;;      Temps:          0       3       0       0       0
   974 ;;      Totals:         0      16       0       0       0
   975 ;;Total ram usage:       16 bytes
   976 ;; Hardware stack levels required when called: 4
   977 ;; This function calls:
   978 ;;		_UART_Data_Ready
   979 ;;		_UART_GetC
   980 ;;		_UART_Init
   981 ;;		_UART_Print
   982 ;;		_UART_PutC
   983 ;;		_map
   984 ;;		_preguntas
   985 ;;		_setup
   986 ;;		_sprintf
   987 ;;		_uart_read
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993     019E                     _main:	
   994                           ;psect for function _main
   995                           
   996     019E                     l2265:	
   997                           ;incstack = 0
   998                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   999                           
  1000                           
  1001                           ;postlab2.c: 65:     setup();
  1002     019E  120A  118A  26EB  120A  118A  	fcall	_setup
  1003     01A3                     l2267:
  1004                           
  1005                           ;postlab2.c: 66:   OSCCON = 0x70;
  1006     01A3  3070               	movlw	112
  1007     01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1008     01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1009     01A6  008F               	movwf	15	;volatile
  1010     01A7                     l2269:
  1011                           
  1012                           ;postlab2.c: 68:   UART_Init(9600);
  1013     01A7  3000               	movlw	0
  1014     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1015     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1016     01AA  00AB               	movwf	UART_Init@baud_rate+3
  1017     01AB  3000               	movlw	0
  1018     01AC  00AA               	movwf	UART_Init@baud_rate+2
  1019     01AD  3025               	movlw	37
  1020     01AE  00A9               	movwf	UART_Init@baud_rate+1
  1021     01AF  3080               	movlw	128
  1022     01B0  00A8               	movwf	UART_Init@baud_rate
  1023     01B1  120A  118A  2379  120A  118A  	fcall	_UART_Init
  1024     01B6                     l2271:
  1025                           
  1026                           ;postlab2.c: 70:   _delay((unsigned long)((2000)*(8000000/4000.0)));
  1027     01B6  3015               	movlw	21
  1028     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1029     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1030     01B9  00CC               	movwf	??_main+2
  1031     01BA  304B               	movlw	75
  1032     01BB  00CB               	movwf	??_main+1
  1033     01BC  30BD               	movlw	189
  1034     01BD  00CA               	movwf	??_main
  1035     01BE                     u2207:
  1036     01BE  0BCA               	decfsz	??_main,f
  1037     01BF  29BE               	goto	u2207
  1038     01C0  0BCB               	decfsz	??_main+1,f
  1039     01C1  29BE               	goto	u2207
  1040     01C2  0BCC               	decfsz	??_main+2,f
  1041     01C3  29BE               	goto	u2207
  1042     01C4  29C5               	nop2
  1043     01C5                     l2273:
  1044                           
  1045                           ;postlab2.c: 72:   UART_Print("1.Leer potenciometro\r\n");
  1046     01C5  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1047     01C6  00F4               	movwf	UART_Print@data
  1048     01C7  3080               	movlw	128
  1049     01C8  00F5               	movwf	UART_Print@data+1
  1050     01C9  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1051     01CE                     l2275:
  1052                           
  1053                           ;postlab2.c: 74:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1054     01CE  300B               	movlw	11
  1055     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1056     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1057     01D1  00CC               	movwf	??_main+2
  1058     01D2  3026               	movlw	38
  1059     01D3  00CB               	movwf	??_main+1
  1060     01D4  305D               	movlw	93
  1061     01D5  00CA               	movwf	??_main
  1062     01D6                     u2217:
  1063     01D6  0BCA               	decfsz	??_main,f
  1064     01D7  29D6               	goto	u2217
  1065     01D8  0BCB               	decfsz	??_main+1,f
  1066     01D9  29D6               	goto	u2217
  1067     01DA  0BCC               	decfsz	??_main+2,f
  1068     01DB  29D6               	goto	u2217
  1069     01DC                     l2277:
  1070                           
  1071                           ;postlab2.c: 76:   UART_Print(message);
  1072     01DC  3027               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  1073     01DD  00F4               	movwf	UART_Print@data
  1074     01DE  3080               	movlw	128
  1075     01DF  00F5               	movwf	UART_Print@data+1
  1076     01E0  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1077     01E5                     l2279:
  1078                           
  1079                           ;postlab2.c: 77:  UART_Print (message2);
  1080     01E5  300B               	movlw	(low ((_message2-__stringbase)| (0+32768)))& (0+255)
  1081     01E6  00F4               	movwf	UART_Print@data
  1082     01E7  3080               	movlw	128
  1083     01E8  00F5               	movwf	UART_Print@data+1
  1084     01E9  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1085     01EE                     l2281:
  1086                           
  1087                           ;postlab2.c: 78:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  1088     01EE  300B               	movlw	11
  1089     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1090     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1091     01F1  00CC               	movwf	??_main+2
  1092     01F2  3026               	movlw	38
  1093     01F3  00CB               	movwf	??_main+1
  1094     01F4  305D               	movlw	93
  1095     01F5  00CA               	movwf	??_main
  1096     01F6                     u2227:
  1097     01F6  0BCA               	decfsz	??_main,f
  1098     01F7  29F6               	goto	u2227
  1099     01F8  0BCB               	decfsz	??_main+1,f
  1100     01F9  29F6               	goto	u2227
  1101     01FA  0BCC               	decfsz	??_main+2,f
  1102     01FB  29F6               	goto	u2227
  1103     01FC                     l2283:
  1104                           
  1105                           ;postlab2.c: 79:  RCREG ='0';
  1106     01FC  3030               	movlw	48
  1107     01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1108     01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1109     01FF  009A               	movwf	26	;volatile
  1110     0200                     l2285:
  1111                           
  1112                           ;postlab2.c: 80:   UART_Print("\r\n");
  1113     0200  3057               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1114     0201  00F4               	movwf	UART_Print@data
  1115     0202  3080               	movlw	128
  1116     0203  00F5               	movwf	UART_Print@data+1
  1117     0204  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1118     0209                     l2287:
  1119                           
  1120                           ;postlab2.c: 81:  ADCON0bits.GO =1;
  1121     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1122     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1123     020B  149F               	bsf	31,1	;volatile
  1124     020C                     l2289:
  1125                           
  1126                           ;postlab2.c: 84:   {;postlab2.c: 85:        if (ADCON0bits.GO ==0)
  1127     020C  1283               	bcf	3,5	;RP0=0, select bank0
  1128     020D  1303               	bcf	3,6	;RP1=0, select bank0
  1129     020E  189F               	btfsc	31,1	;volatile
  1130     020F  2A11               	goto	u2181
  1131     0210  2A12               	goto	u2180
  1132     0211                     u2181:
  1133     0211  2A13               	goto	l2293
  1134     0212                     u2180:
  1135     0212                     l2291:
  1136                           
  1137                           ;postlab2.c: 86:      ADCON0bits.GO =1;
  1138     0212  149F               	bsf	31,1	;volatile
  1139     0213                     l2293:
  1140                           
  1141                           ;postlab2.c: 100:        char valuart = uart_read();
  1142     0213  120A  118A  276D  120A  118A  	fcall	_uart_read
  1143     0218  1283               	bcf	3,5	;RP0=0, select bank0
  1144     0219  1303               	bcf	3,6	;RP1=0, select bank0
  1145     021A  00D8               	movwf	main@valuart
  1146     021B                     l2295:
  1147                           
  1148                           ;postlab2.c: 101:        _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1149     021B  3006               	movlw	6
  1150     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1151     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1152     021E  00CB               	movwf	??_main+1
  1153     021F  302F               	movlw	47
  1154     0220  00CA               	movwf	??_main
  1155     0221                     u2237:
  1156     0221  0BCA               	decfsz	??_main,f
  1157     0222  2A21               	goto	u2237
  1158     0223  0BCB               	decfsz	??_main+1,f
  1159     0224  2A21               	goto	u2237
  1160     0225  2A26               	nop2
  1161                           
  1162                           ;postlab2.c: 102:       switch (valuart){
  1163     0226  2A8F               	goto	l2329
  1164     0227                     l2297:
  1165                           
  1166                           ;postlab2.c: 107:                valpot = ADRESH;
  1167     0227  081E               	movf	30,w	;volatile
  1168     0228  00DA               	movwf	_valpot
  1169     0229                     l2299:
  1170                           
  1171                           ;postlab2.c: 108:               uint16_t varvolt2 = map(valpot,0,255,0,5);
  1172     0229  085A               	movf	_valpot,w
  1173     022A  00CA               	movwf	??_main
  1174     022B  01CB               	clrf	??_main+1
  1175     022C  084A               	movf	??_main,w
  1176     022D  00B6               	movwf	map@varmap
  1177     022E  084B               	movf	??_main+1,w
  1178     022F  00B7               	movwf	map@varmap+1
  1179     0230  3000               	movlw	0
  1180     0231  00B8               	movwf	map@minval
  1181     0232  00B9               	movwf	map@minval+1
  1182     0233  30FF               	movlw	255
  1183     0234  00BA               	movwf	map@maxval
  1184     0235  3000               	movlw	0
  1185     0236  00BB               	movwf	map@maxval+1
  1186     0237  3000               	movlw	0
  1187     0238  00BC               	movwf	map@minsal
  1188     0239  00BD               	movwf	map@minsal+1
  1189     023A  3005               	movlw	5
  1190     023B  00BE               	movwf	map@maxsal
  1191     023C  3000               	movlw	0
  1192     023D  00BF               	movwf	map@maxsal+1
  1193     023E  120A  118A  25D8  120A  118A  	fcall	_map
  1194     0243  1283               	bcf	3,5	;RP0=0, select bank0
  1195     0244  1303               	bcf	3,6	;RP1=0, select bank0
  1196     0245  0837               	movf	?_map+1,w
  1197     0246  00D7               	movwf	main@varvolt2+1
  1198     0247  0836               	movf	?_map,w
  1199     0248  00D6               	movwf	main@varvolt2
  1200     0249                     l2301:
  1201                           
  1202                           ;postlab2.c: 110:               UART_Print ("\r\n");
  1203     0249  3057               	movlw	(low (((STR_1+20)-__stringbase)| (0+32768)))& (0+255)
  1204     024A  00F4               	movwf	UART_Print@data
  1205     024B  3080               	movlw	128
  1206     024C  00F5               	movwf	UART_Print@data+1
  1207     024D  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1208     0252                     l2303:
  1209                           
  1210                           ;postlab2.c: 111:             sprintf(text, "%03u\r\n", varvolt2);
  1211     0252  305A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1212     0253  1283               	bcf	3,5	;RP0=0, select bank0
  1213     0254  1303               	bcf	3,6	;RP1=0, select bank0
  1214     0255  00AE               	movwf	sprintf@f
  1215     0256  0857               	movf	main@varvolt2+1,w
  1216     0257  00B0               	movwf	?_sprintf+2
  1217     0258  0856               	movf	main@varvolt2,w
  1218     0259  00AF               	movwf	?_sprintf+1
  1219     025A  304D               	movlw	(low (main@text| 0))& (0+255)
  1220     025B  120A  118A  2018  120A  118A  	fcall	_sprintf
  1221     0260                     l2305:
  1222                           
  1223                           ;postlab2.c: 112:             UART_Print(text);
  1224     0260  304D               	movlw	(low (main@text| 0))& (0+255)
  1225     0261  00F4               	movwf	UART_Print@data
  1226     0262  3000               	movlw	0
  1227     0263  00F5               	movwf	UART_Print@data+1
  1228     0264  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  1229     0269                     l2307:
  1230                           
  1231                           ;postlab2.c: 115:               preguntas();
  1232     0269  120A  118A  2738  120A  118A  	fcall	_preguntas
  1233     026E                     l2309:
  1234                           
  1235                           ;postlab2.c: 116:              RCREG ='0';
  1236     026E  3030               	movlw	48
  1237     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1239     0271  009A               	movwf	26	;volatile
  1240                           
  1241                           ;postlab2.c: 118:              break;
  1242     0272  2AA4               	goto	l2331
  1243     0273                     l2311:
  1244                           
  1245                           ;postlab2.c: 120:                _delay((unsigned long)((500)*(8000000/4000000.0)));
  1246     0273  30C7               	movlw	199
  1247     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0275  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0276  00CA               	movwf	??_main
  1250     0277                     u2247:
  1251     0277  2A78               	nop2
  1252     0278  0BCA               	decfsz	??_main,f
  1253     0279  2A77               	goto	u2247
  1254     027A  2A7B               	nop2
  1255     027B                     l2313:
  1256                           
  1257                           ;postlab2.c: 121:                PORTB ++;
  1258     027B  3001               	movlw	1
  1259     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1260     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1261     027E  00CA               	movwf	??_main
  1262     027F  084A               	movf	??_main,w
  1263     0280  0786               	addwf	6,f	;volatile
  1264     0281  2A69               	goto	l2307
  1265     0282                     l2319:
  1266                           
  1267                           ;postlab2.c: 127:                _delay((unsigned long)((500)*(8000000/4000000.0)));
  1268     0282  30C7               	movlw	199
  1269     0283  1283               	bcf	3,5	;RP0=0, select bank0
  1270     0284  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0285  00CA               	movwf	??_main
  1272     0286                     u2257:
  1273     0286  2A87               	nop2
  1274     0287  0BCA               	decfsz	??_main,f
  1275     0288  2A86               	goto	u2257
  1276     0289  2A8A               	nop2
  1277     028A                     l2321:
  1278                           
  1279                           ;postlab2.c: 128:                PORTB --;
  1280     028A  3001               	movlw	1
  1281     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1282     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1283     028D  0286               	subwf	6,f	;volatile
  1284     028E  2A69               	goto	l2307
  1285     028F                     l2329:
  1286     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1287     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1288     0291  0858               	movf	main@valuart,w
  1289     0292  00CA               	movwf	??_main
  1290     0293  01CB               	clrf	??_main+1
  1291                           
  1292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 1, Range of values is 0 to 0
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            4     3 (average)
  1298                           ; direct_byte           11     8 (fixed)
  1299                           ; jumptable            260     6 (fixed)
  1300                           ;	Chosen strategy is simple_byte
  1301     0294  084B               	movf	??_main+1,w
  1302     0295  3A00               	xorlw	0	; case 0
  1303     0296  1903               	skipnz
  1304     0297  2A99               	goto	l2401
  1305     0298  2AA4               	goto	l2331
  1306     0299                     l2401:
  1307                           
  1308                           ; Switch size 1, requested type "simple"
  1309                           ; Number of cases is 3, Range of values is 43 to 49
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte           10     6 (average)
  1313                           ; direct_byte           32    11 (fixed)
  1314                           ; jumptable            263     9 (fixed)
  1315                           ;	Chosen strategy is simple_byte
  1316     0299  084A               	movf	??_main,w
  1317     029A  3A2B               	xorlw	43	; case 43
  1318     029B  1903               	skipnz
  1319     029C  2A73               	goto	l2311
  1320     029D  3A06               	xorlw	6	; case 45
  1321     029E  1903               	skipnz
  1322     029F  2A82               	goto	l2319
  1323     02A0  3A1C               	xorlw	28	; case 49
  1324     02A1  1903               	skipnz
  1325     02A2  2A27               	goto	l2297
  1326     02A3  2AA4               	goto	l2331
  1327     02A4                     l2331:
  1328                           
  1329                           ;postlab2.c: 137:     if ( UART_Data_Ready() )
  1330     02A4  120A  118A  27AC  120A  118A  	fcall	_UART_Data_Ready
  1331     02A9  1C03               	btfss	3,0
  1332     02AA  2AAC               	goto	u2191
  1333     02AB  2AAD               	goto	u2190
  1334     02AC                     u2191:
  1335     02AC  2A0C               	goto	l2289
  1336     02AD                     u2190:
  1337     02AD                     l2333:
  1338                           
  1339                           ;postlab2.c: 138:     {;postlab2.c: 139:       uint8_t c = UART_GetC();
  1340     02AD  120A  118A  2792  120A  118A  	fcall	_UART_GetC
  1341     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1342     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1343     02B4  00D9               	movwf	main@c
  1344     02B5                     l2335:
  1345                           
  1346                           ;postlab2.c: 140:       UART_PutC(c);
  1347     02B5  0859               	movf	main@c,w
  1348     02B6  120A  118A  27A0  120A  118A  	fcall	_UART_PutC
  1349     02BB  2A0C               	goto	l2289
  1350     02BC  120A  118A  280C   	ljmp	start
  1351     02BF                     __end_of_main:
  1352                           
  1353                           	psect	text1
  1354     076D                     __ptext1:	
  1355 ;; *************** function _uart_read *****************
  1356 ;; Defined at:
  1357 ;;		line 50 in file "postlab2.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      unsigned char 
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385     076D                     _uart_read:	
  1386                           ;psect for function _uart_read
  1387                           
  1388     076D                     l1715:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _uart_read: [wreg]
  1391                           
  1392                           
  1393                           ;postlab2.c: 51:  if(PIR1bits.RCIF== 0){
  1394     076D  1283               	bcf	3,5	;RP0=0, select bank0
  1395     076E  1303               	bcf	3,6	;RP1=0, select bank0
  1396     076F  1A8C               	btfsc	12,5	;volatile
  1397     0770  2F72               	goto	u1431
  1398     0771  2F73               	goto	u1430
  1399     0772                     u1431:
  1400     0772  2F7E               	goto	l1727
  1401     0773                     u1430:
  1402     0773                     l1717:
  1403                           
  1404                           ;postlab2.c: 52:      if (RCSTAbits.OERR){
  1405     0773  1C98               	btfss	24,1	;volatile
  1406     0774  2F76               	goto	u1441
  1407     0775  2F77               	goto	u1440
  1408     0776                     u1441:
  1409     0776  2F7C               	goto	l1721
  1410     0777                     u1440:
  1411     0777                     l1719:
  1412                           
  1413                           ;postlab2.c: 53:          RCSTAbits.CREN =0;
  1414     0777  1218               	bcf	24,4	;volatile
  1415                           
  1416                           ;postlab2.c: 54:          __nop();
  1417     0778  0000               	nop
  1418                           
  1419                           ;postlab2.c: 55:          RCSTAbits.CREN =1;
  1420     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1421     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1422     077B  1618               	bsf	24,4	;volatile
  1423     077C                     l1721:
  1424                           
  1425                           ;postlab2.c: 57:      return RCREG;
  1426     077C  081A               	movf	26,w	;volatile
  1427     077D  2F7F               	goto	l158
  1428     077E                     l1727:
  1429                           
  1430                           ;postlab2.c: 60:      return 0;
  1431     077E  3000               	movlw	0
  1432     077F                     l158:
  1433     077F  0008               	return
  1434     0780                     __end_of_uart_read:
  1435                           
  1436                           	psect	text2
  1437     0018                     __ptext2:	
  1438 ;; *************** function _sprintf *****************
  1439 ;; Defined at:
  1440 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  sp              1    wreg     PTR unsigned char 
  1443 ;;		 -> main@text(9), 
  1444 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1445 ;;		 -> STR_4(7), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  1448 ;;		 -> main@text(9), 
  1449 ;;  tmpval          4    0        struct .
  1450 ;;  width           2   26[BANK0 ] int 
  1451 ;;  val             2   22[BANK0 ] unsigned int 
  1452 ;;  cp              2    0        PTR const unsigned char 
  1453 ;;  len             2    0        unsigned int 
  1454 ;;  c               1   28[BANK0 ] unsigned char 
  1455 ;;  prec            1   24[BANK0 ] char 
  1456 ;;  flag            1   21[BANK0 ] unsigned char 
  1457 ;;  ap              1   20[BANK0 ] PTR void [1]
  1458 ;;		 -> ?_sprintf(2), 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  2   14[BANK0 ] int 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       3       0       0       0
  1469 ;;      Locals:         0       9       0       0       0
  1470 ;;      Temps:          0       3       0       0       0
  1471 ;;      Totals:         0      15       0       0       0
  1472 ;;Total ram usage:       15 bytes
  1473 ;; Hardware stack levels used: 1
  1474 ;; Hardware stack levels required when called: 2
  1475 ;; This function calls:
  1476 ;;		___lwdiv
  1477 ;;		___lwmod
  1478 ;;		___wmul
  1479 ;;		_isdigit
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485     0018                     _sprintf:	
  1486                           ;psect for function _sprintf
  1487                           
  1488                           
  1489                           ;incstack = 0
  1490                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1491                           ;sprintf@sp stored from wreg
  1492     0018  1283               	bcf	3,5	;RP0=0, select bank0
  1493     0019  1303               	bcf	3,6	;RP1=0, select bank0
  1494     001A  00B9               	movwf	sprintf@sp
  1495     001B                     l2167:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1498     001B  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1499     001C  00B4               	movwf	sprintf@ap
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1502     001D  2989               	goto	l2251
  1503     001E                     l2169:
  1504                           
  1505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1506     001E  3025               	movlw	37
  1507     001F  063C               	xorwf	sprintf@c,w
  1508     0020  1903               	btfsc	3,2
  1509     0021  2823               	goto	u2051
  1510     0022  2824               	goto	u2050
  1511     0023                     u2051:
  1512     0023  282E               	goto	l2175
  1513     0024                     u2050:
  1514     0024                     l2171:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1517     0024  0839               	movf	sprintf@sp,w
  1518     0025  0084               	movwf	4
  1519     0026  083C               	movf	sprintf@c,w
  1520     0027  1383               	bcf	3,7	;select IRP bank0
  1521     0028  0080               	movwf	0
  1522     0029                     l2173:
  1523     0029  3001               	movlw	1
  1524     002A  00B1               	movwf	??_sprintf
  1525     002B  0831               	movf	??_sprintf,w
  1526     002C  07B9               	addwf	sprintf@sp,f
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1529     002D  2989               	goto	l2251
  1530     002E                     l2175:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1533     002E  01BA               	clrf	sprintf@width
  1534     002F  01BB               	clrf	sprintf@width+1
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1537     0030  01B5               	clrf	sprintf@flag
  1538     0031  2837               	goto	l2181
  1539     0032                     l336:	
  1540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1541                           
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1544     0032  1535               	bsf	sprintf@flag,2
  1545     0033                     l2177:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 598:     f++;
  1548     0033  3001               	movlw	1
  1549     0034  00B1               	movwf	??_sprintf
  1550     0035  0831               	movf	??_sprintf,w
  1551     0036  07AE               	addwf	sprintf@f,f
  1552     0037                     l2181:	
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1554                           
  1555     0037  082E               	movf	sprintf@f,w
  1556     0038  0084               	movwf	4
  1557     0039  120A  118A  250A  120A  118A  	fcall	stringdir
  1558     003E  00B1               	movwf	??_sprintf
  1559     003F  01B2               	clrf	??_sprintf+1
  1560                           
  1561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1562                           ; Switch size 1, requested type "simple"
  1563                           ; Number of cases is 1, Range of values is 0 to 0
  1564                           ; switch strategies available:
  1565                           ; Name         Instructions Cycles
  1566                           ; simple_byte            4     3 (average)
  1567                           ; direct_byte           11     8 (fixed)
  1568                           ; jumptable            260     6 (fixed)
  1569                           ;	Chosen strategy is simple_byte
  1570     0040  0832               	movf	??_sprintf+1,w
  1571     0041  3A00               	xorlw	0	; case 0
  1572     0042  1903               	skipnz
  1573     0043  2845               	goto	l2403
  1574     0044  284A               	goto	l2183
  1575     0045                     l2403:
  1576                           
  1577                           ; Switch size 1, requested type "simple"
  1578                           ; Number of cases is 1, Range of values is 48 to 48
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte            4     3 (average)
  1582                           ; direct_byte           14    11 (fixed)
  1583                           ; jumptable            263     9 (fixed)
  1584                           ;	Chosen strategy is simple_byte
  1585     0045  0831               	movf	??_sprintf,w
  1586     0046  3A30               	xorlw	48	; case 48
  1587     0047  1903               	skipnz
  1588     0048  2832               	goto	l336
  1589     0049  284A               	goto	l2183
  1590     004A                     l2183:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1593     004A  082E               	movf	sprintf@f,w
  1594     004B  0084               	movwf	4
  1595     004C  120A  118A  250A  120A  118A  	fcall	stringdir
  1596     0051  120A  118A  2780  120A  118A  	fcall	_isdigit
  1597     0056  1C03               	btfss	3,0
  1598     0057  2859               	goto	u2061
  1599     0058  285A               	goto	u2060
  1600     0059                     u2061:
  1601     0059  28A0               	goto	l2199
  1602     005A                     u2060:
  1603     005A                     l2185:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1606     005A  1283               	bcf	3,5	;RP0=0, select bank0
  1607     005B  1303               	bcf	3,6	;RP1=0, select bank0
  1608     005C  01BA               	clrf	sprintf@width
  1609     005D  01BB               	clrf	sprintf@width+1
  1610     005E                     l2187:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1613     005E  300A               	movlw	10
  1614     005F  00F3               	movwf	___wmul@multiplier
  1615     0060  3000               	movlw	0
  1616     0061  00F4               	movwf	___wmul@multiplier+1
  1617     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1618     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0064  083B               	movf	sprintf@width+1,w
  1620     0065  00F6               	movwf	___wmul@multiplicand+1
  1621     0066  083A               	movf	sprintf@width,w
  1622     0067  00F5               	movwf	___wmul@multiplicand
  1623     0068  120A  118A  2713  120A  118A  	fcall	___wmul
  1624     006D  0874               	movf	?___wmul+1,w
  1625     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1626     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0070  00BB               	movwf	sprintf@width+1
  1628     0071  0873               	movf	?___wmul,w
  1629     0072  00BA               	movwf	sprintf@width
  1630     0073                     l2189:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1633     0073  082E               	movf	sprintf@f,w
  1634     0074  0084               	movwf	4
  1635     0075  120A  118A  250A  120A  118A  	fcall	stringdir
  1636     007A  3ED0               	addlw	208
  1637     007B  00B1               	movwf	??_sprintf
  1638     007C  30FF               	movlw	255
  1639     007D  1803               	skipnc
  1640     007E  3000               	movlw	0
  1641     007F  00B2               	movwf	??_sprintf+1
  1642     0080  0831               	movf	??_sprintf,w
  1643     0081  07BA               	addwf	sprintf@width,f
  1644     0082  1803               	skipnc
  1645     0083  0ABB               	incf	sprintf@width+1,f
  1646     0084  0832               	movf	??_sprintf+1,w
  1647     0085  07BB               	addwf	sprintf@width+1,f
  1648     0086                     l2191:
  1649     0086  3001               	movlw	1
  1650     0087  00B1               	movwf	??_sprintf
  1651     0088  0831               	movf	??_sprintf,w
  1652     0089  07AE               	addwf	sprintf@f,f
  1653     008A                     l2193:
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1656     008A  082E               	movf	sprintf@f,w
  1657     008B  0084               	movwf	4
  1658     008C  120A  118A  250A  120A  118A  	fcall	stringdir
  1659     0091  120A  118A  2780  120A  118A  	fcall	_isdigit
  1660     0096  1803               	btfsc	3,0
  1661     0097  2899               	goto	u2071
  1662     0098  289A               	goto	u2070
  1663     0099                     u2071:
  1664     0099  285E               	goto	l2187
  1665     009A                     u2070:
  1666     009A  28A0               	goto	l2199
  1667     009B                     l2195:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1670     009B  30C0               	movlw	192
  1671     009C  00B1               	movwf	??_sprintf
  1672     009D  0831               	movf	??_sprintf,w
  1673     009E  04B5               	iorwf	sprintf@flag,f
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1676     009F  28BC               	goto	l2201
  1677     00A0                     l2199:
  1678     00A0  3001               	movlw	1
  1679     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1680     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1681     00A3  07AE               	addwf	sprintf@f,f
  1682     00A4  30FF               	movlw	-1
  1683     00A5  072E               	addwf	sprintf@f,w
  1684     00A6  0084               	movwf	4
  1685     00A7  120A  118A  250A  120A  118A  	fcall	stringdir
  1686     00AC  00BC               	movwf	sprintf@c
  1687     00AD  00B1               	movwf	??_sprintf
  1688     00AE  01B2               	clrf	??_sprintf+1
  1689                           
  1690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1691                           ; Switch size 1, requested type "simple"
  1692                           ; Number of cases is 1, Range of values is 0 to 0
  1693                           ; switch strategies available:
  1694                           ; Name         Instructions Cycles
  1695                           ; simple_byte            4     3 (average)
  1696                           ; direct_byte           11     8 (fixed)
  1697                           ; jumptable            260     6 (fixed)
  1698                           ;	Chosen strategy is simple_byte
  1699     00AF  0832               	movf	??_sprintf+1,w
  1700     00B0  3A00               	xorlw	0	; case 0
  1701     00B1  1903               	skipnz
  1702     00B2  28B4               	goto	l2405
  1703     00B3  2989               	goto	l2251
  1704     00B4                     l2405:
  1705                           
  1706                           ; Switch size 1, requested type "simple"
  1707                           ; Number of cases is 2, Range of values is 0 to 117
  1708                           ; switch strategies available:
  1709                           ; Name         Instructions Cycles
  1710                           ; simple_byte            7     4 (average)
  1711                           ; jumptable            260     6 (fixed)
  1712                           ;	Chosen strategy is simple_byte
  1713     00B4  0831               	movf	??_sprintf,w
  1714     00B5  3A00               	xorlw	0	; case 0
  1715     00B6  1903               	skipnz
  1716     00B7  2999               	goto	l2253
  1717     00B8  3A75               	xorlw	117	; case 117
  1718     00B9  1903               	skipnz
  1719     00BA  289B               	goto	l2195
  1720     00BB  2989               	goto	l2251
  1721     00BC                     l2201:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1724     00BC  0834               	movf	sprintf@ap,w
  1725     00BD  0084               	movwf	4
  1726     00BE  1383               	bcf	3,7	;select IRP bank0
  1727     00BF  0800               	movf	0,w
  1728     00C0  00B6               	movwf	sprintf@val
  1729     00C1  0A84               	incf	4,f
  1730     00C2  0800               	movf	0,w
  1731     00C3  00B7               	movwf	sprintf@val+1
  1732     00C4                     l2203:
  1733     00C4  3002               	movlw	2
  1734     00C5  00B1               	movwf	??_sprintf
  1735     00C6  0831               	movf	??_sprintf,w
  1736     00C7  07B4               	addwf	sprintf@ap,f
  1737     00C8                     l2205:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1740     00C8  01BC               	clrf	sprintf@c
  1741     00C9  0ABC               	incf	sprintf@c,f
  1742     00CA                     l2211:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1745     00CA  083C               	movf	sprintf@c,w
  1746     00CB  00B1               	movwf	??_sprintf
  1747     00CC  0731               	addwf	??_sprintf,w
  1748     00CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1749     00CE  0084               	movwf	4
  1750     00CF  120A  118A  250A  120A  118A  	fcall	stringdir
  1751     00D4  00B2               	movwf	??_sprintf+1
  1752     00D5  120A  118A  250A  120A  118A  	fcall	stringdir
  1753     00DA  00B3               	movwf	??_sprintf+2
  1754     00DB  0833               	movf	??_sprintf+2,w
  1755     00DC  0237               	subwf	sprintf@val+1,w
  1756     00DD  1D03               	skipz
  1757     00DE  28E1               	goto	u2085
  1758     00DF  0832               	movf	??_sprintf+1,w
  1759     00E0  0236               	subwf	sprintf@val,w
  1760     00E1                     u2085:
  1761     00E1  1803               	skipnc
  1762     00E2  28E4               	goto	u2081
  1763     00E3  28E5               	goto	u2080
  1764     00E4                     u2081:
  1765     00E4  28E6               	goto	l2215
  1766     00E5                     u2080:
  1767     00E5  28F0               	goto	l2217
  1768     00E6                     l2215:
  1769     00E6  3001               	movlw	1
  1770     00E7  00B1               	movwf	??_sprintf
  1771     00E8  0831               	movf	??_sprintf,w
  1772     00E9  07BC               	addwf	sprintf@c,f
  1773     00EA  3005               	movlw	5
  1774     00EB  063C               	xorwf	sprintf@c,w
  1775     00EC  1D03               	btfss	3,2
  1776     00ED  28EF               	goto	u2091
  1777     00EE  28F0               	goto	u2090
  1778     00EF                     u2091:
  1779     00EF  28CA               	goto	l2211
  1780     00F0                     u2090:
  1781     00F0                     l2217:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1784     00F0  083B               	movf	sprintf@width+1,w
  1785     00F1  3A80               	xorlw	128
  1786     00F2  3C80               	sublw	128
  1787     00F3  1D03               	skipz
  1788     00F4  28F7               	goto	u2105
  1789     00F5  083A               	movf	sprintf@width,w
  1790     00F6  023C               	subwf	sprintf@c,w
  1791     00F7                     u2105:
  1792     00F7  1803               	skipnc
  1793     00F8  28FA               	goto	u2101
  1794     00F9  28FB               	goto	u2100
  1795     00FA                     u2101:
  1796     00FA  2907               	goto	l2221
  1797     00FB                     u2100:
  1798     00FB                     l2219:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1801     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1802     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1803     00FD  083C               	movf	sprintf@c,w
  1804     00FE  00B1               	movwf	??_sprintf
  1805     00FF  01B2               	clrf	??_sprintf+1
  1806     0100  0831               	movf	??_sprintf,w
  1807     0101  02BA               	subwf	sprintf@width,f
  1808     0102  0832               	movf	??_sprintf+1,w
  1809     0103  1C03               	skipc
  1810     0104  03BB               	decf	sprintf@width+1,f
  1811     0105  02BB               	subwf	sprintf@width+1,f
  1812     0106  290B               	goto	l2223
  1813     0107                     l2221:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1816     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0109  01BA               	clrf	sprintf@width
  1819     010A  01BB               	clrf	sprintf@width+1
  1820     010B                     l2223:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  1823     010B  1D35               	btfss	sprintf@flag,2
  1824     010C  290E               	goto	u2111
  1825     010D  290F               	goto	u2110
  1826     010E                     u2111:
  1827     010E  292B               	goto	l2233
  1828     010F                     u2110:
  1829     010F                     l2225:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  1832     010F  083A               	movf	sprintf@width,w
  1833     0110  043B               	iorwf	sprintf@width+1,w
  1834     0111  1903               	btfsc	3,2
  1835     0112  2914               	goto	u2121
  1836     0113  2915               	goto	u2120
  1837     0114                     u2121:
  1838     0114  2946               	goto	l2241
  1839     0115                     u2120:
  1840     0115                     l2227:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  1843     0115  0839               	movf	sprintf@sp,w
  1844     0116  0084               	movwf	4
  1845     0117  3030               	movlw	48
  1846     0118  1383               	bcf	3,7	;select IRP bank0
  1847     0119  0080               	movwf	0
  1848     011A                     l2229:
  1849     011A  3001               	movlw	1
  1850     011B  00B1               	movwf	??_sprintf
  1851     011C  0831               	movf	??_sprintf,w
  1852     011D  07B9               	addwf	sprintf@sp,f
  1853     011E                     l2231:
  1854     011E  30FF               	movlw	255
  1855     011F  07BA               	addwf	sprintf@width,f
  1856     0120  1803               	skipnc
  1857     0121  0ABB               	incf	sprintf@width+1,f
  1858     0122  30FF               	movlw	255
  1859     0123  07BB               	addwf	sprintf@width+1,f
  1860     0124  083A               	movf	sprintf@width,w
  1861     0125  043B               	iorwf	sprintf@width+1,w
  1862     0126  1D03               	btfss	3,2
  1863     0127  2929               	goto	u2131
  1864     0128  292A               	goto	u2130
  1865     0129                     u2131:
  1866     0129  2915               	goto	l2227
  1867     012A                     u2130:
  1868     012A  2946               	goto	l2241
  1869     012B                     l2233:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1872     012B  083A               	movf	sprintf@width,w
  1873     012C  043B               	iorwf	sprintf@width+1,w
  1874     012D  1903               	btfsc	3,2
  1875     012E  2930               	goto	u2141
  1876     012F  2931               	goto	u2140
  1877     0130                     u2141:
  1878     0130  2946               	goto	l2241
  1879     0131                     u2140:
  1880     0131                     l2235:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1883     0131  0839               	movf	sprintf@sp,w
  1884     0132  0084               	movwf	4
  1885     0133  3020               	movlw	32
  1886     0134  1383               	bcf	3,7	;select IRP bank0
  1887     0135  0080               	movwf	0
  1888     0136                     l2237:
  1889     0136  3001               	movlw	1
  1890     0137  00B1               	movwf	??_sprintf
  1891     0138  0831               	movf	??_sprintf,w
  1892     0139  07B9               	addwf	sprintf@sp,f
  1893     013A                     l2239:
  1894     013A  30FF               	movlw	255
  1895     013B  07BA               	addwf	sprintf@width,f
  1896     013C  1803               	skipnc
  1897     013D  0ABB               	incf	sprintf@width+1,f
  1898     013E  30FF               	movlw	255
  1899     013F  07BB               	addwf	sprintf@width+1,f
  1900     0140  083A               	movf	sprintf@width,w
  1901     0141  043B               	iorwf	sprintf@width+1,w
  1902     0142  1D03               	btfss	3,2
  1903     0143  2945               	goto	u2151
  1904     0144  2946               	goto	u2150
  1905     0145                     u2151:
  1906     0145  2931               	goto	l2235
  1907     0146                     u2150:
  1908     0146                     l2241:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1911     0146  083C               	movf	sprintf@c,w
  1912     0147  00B8               	movwf	sprintf@prec
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1915     0148  2980               	goto	l2249
  1916     0149                     l2243:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1919     0149  300A               	movlw	10
  1920     014A  00A8               	movwf	___lwmod@divisor
  1921     014B  3000               	movlw	0
  1922     014C  00A9               	movwf	___lwmod@divisor+1
  1923     014D  0838               	movf	sprintf@prec,w
  1924     014E  00B1               	movwf	??_sprintf
  1925     014F  0731               	addwf	??_sprintf,w
  1926     0150  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1927     0151  0084               	movwf	4
  1928     0152  120A  118A  250A  120A  118A  	fcall	stringdir
  1929     0157  00A0               	movwf	___lwdiv@divisor
  1930     0158  120A  118A  250A  120A  118A  	fcall	stringdir
  1931     015D  00A1               	movwf	___lwdiv@divisor+1
  1932     015E  0837               	movf	sprintf@val+1,w
  1933     015F  00A3               	movwf	___lwdiv@dividend+1
  1934     0160  0836               	movf	sprintf@val,w
  1935     0161  00A2               	movwf	___lwdiv@dividend
  1936     0162  120A  118A  263E  120A  118A  	fcall	___lwdiv
  1937     0167  1283               	bcf	3,5	;RP0=0, select bank0
  1938     0168  1303               	bcf	3,6	;RP1=0, select bank0
  1939     0169  0821               	movf	?___lwdiv+1,w
  1940     016A  00AB               	movwf	___lwmod@dividend+1
  1941     016B  0820               	movf	?___lwdiv,w
  1942     016C  00AA               	movwf	___lwmod@dividend
  1943     016D  120A  118A  2684  120A  118A  	fcall	___lwmod
  1944     0172  1283               	bcf	3,5	;RP0=0, select bank0
  1945     0173  1303               	bcf	3,6	;RP1=0, select bank0
  1946     0174  0828               	movf	?___lwmod,w
  1947     0175  3E30               	addlw	48
  1948     0176  00BC               	movwf	sprintf@c
  1949     0177                     l2245:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1952     0177  0839               	movf	sprintf@sp,w
  1953     0178  0084               	movwf	4
  1954     0179  083C               	movf	sprintf@c,w
  1955     017A  1383               	bcf	3,7	;select IRP bank0
  1956     017B  0080               	movwf	0
  1957     017C                     l2247:
  1958     017C  3001               	movlw	1
  1959     017D  00B1               	movwf	??_sprintf
  1960     017E  0831               	movf	??_sprintf,w
  1961     017F  07B9               	addwf	sprintf@sp,f
  1962     0180                     l2249:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1965     0180  30FF               	movlw	255
  1966     0181  00B1               	movwf	??_sprintf
  1967     0182  0831               	movf	??_sprintf,w
  1968     0183  07B8               	addwf	sprintf@prec,f
  1969     0184  0A38               	incf	sprintf@prec,w
  1970     0185  1D03               	btfss	3,2
  1971     0186  2988               	goto	u2161
  1972     0187  2989               	goto	u2160
  1973     0188                     u2161:
  1974     0188  2949               	goto	l2243
  1975     0189                     u2160:
  1976     0189                     l2251:
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1979     0189  3001               	movlw	1
  1980     018A  07AE               	addwf	sprintf@f,f
  1981     018B  30FF               	movlw	-1
  1982     018C  072E               	addwf	sprintf@f,w
  1983     018D  0084               	movwf	4
  1984     018E  120A  118A  250A  120A  118A  	fcall	stringdir
  1985     0193  00BC               	movwf	sprintf@c
  1986     0194  083C               	movf	sprintf@c,w
  1987     0195  1D03               	btfss	3,2
  1988     0196  2998               	goto	u2171
  1989     0197  2999               	goto	u2170
  1990     0198                     u2171:
  1991     0198  281E               	goto	l2169
  1992     0199                     u2170:
  1993     0199                     l2253:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1996     0199  0839               	movf	sprintf@sp,w
  1997     019A  0084               	movwf	4
  1998     019B  1383               	bcf	3,7	;select IRP bank0
  1999     019C  0180               	clrf	0
  2000     019D                     l366:
  2001     019D  0008               	return
  2002     019E                     __end_of_sprintf:
  2003                           
  2004                           	psect	text3
  2005     0780                     __ptext3:	
  2006 ;; *************** function _isdigit *****************
  2007 ;; Defined at:
  2008 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\isdigit.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  c               1    wreg     unsigned char 
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;  c               1    4[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;		None               void
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         2       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         2       0       0       0       0
  2026 ;;Total ram usage:        2 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		_sprintf
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036     0780                     _isdigit:	
  2037                           ;psect for function _isdigit
  2038                           
  2039                           
  2040                           ;incstack = 0
  2041                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2042                           ;isdigit@c stored from wreg
  2043     0780  00F4               	movwf	isdigit@c
  2044     0781                     l1537:
  2045     0781  01F3               	clrf	_isdigit$895
  2046     0782                     l1539:
  2047     0782  303A               	movlw	58
  2048     0783  0274               	subwf	isdigit@c,w
  2049     0784  1803               	skipnc
  2050     0785  2F87               	goto	u931
  2051     0786  2F88               	goto	u930
  2052     0787                     u931:
  2053     0787  2F90               	goto	l1545
  2054     0788                     u930:
  2055     0788                     l1541:
  2056     0788  3030               	movlw	48
  2057     0789  0274               	subwf	isdigit@c,w
  2058     078A  1C03               	skipc
  2059     078B  2F8D               	goto	u941
  2060     078C  2F8E               	goto	u940
  2061     078D                     u941:
  2062     078D  2F90               	goto	l1545
  2063     078E                     u940:
  2064     078E                     l1543:
  2065     078E  01F3               	clrf	_isdigit$895
  2066     078F  0AF3               	incf	_isdigit$895,f
  2067     0790                     l1545:
  2068     0790  0C73               	rrf	_isdigit$895,w
  2069     0791                     l823:
  2070     0791  0008               	return
  2071     0792                     __end_of_isdigit:
  2072                           
  2073                           	psect	text4
  2074     0684                     __ptext4:	
  2075 ;; *************** function ___lwmod *****************
  2076 ;; Defined at:
  2077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  divisor         2    8[BANK0 ] unsigned int 
  2080 ;;  dividend        2   10[BANK0 ] unsigned int 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  counter         1   13[BANK0 ] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2    8[BANK0 ] unsigned int 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       4       0       0       0
  2093 ;;      Locals:         0       1       0       0       0
  2094 ;;      Temps:          0       1       0       0       0
  2095 ;;      Totals:         0       6       0       0       0
  2096 ;;Total ram usage:        6 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_sprintf
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106     0684                     ___lwmod:	
  2107                           ;psect for function ___lwmod
  2108                           
  2109     0684                     l2125:	
  2110                           ;incstack = 0
  2111                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2112                           
  2113     0684  1283               	bcf	3,5	;RP0=0, select bank0
  2114     0685  1303               	bcf	3,6	;RP1=0, select bank0
  2115     0686  0828               	movf	___lwmod@divisor,w
  2116     0687  0429               	iorwf	___lwmod@divisor+1,w
  2117     0688  1903               	btfsc	3,2
  2118     0689  2E8B               	goto	u1941
  2119     068A  2E8C               	goto	u1940
  2120     068B                     u1941:
  2121     068B  2EBB               	goto	l2143
  2122     068C                     u1940:
  2123     068C                     l2127:
  2124     068C  01AD               	clrf	___lwmod@counter
  2125     068D  0AAD               	incf	___lwmod@counter,f
  2126     068E  2E9A               	goto	l2133
  2127     068F                     l2129:
  2128     068F  3001               	movlw	1
  2129     0690                     u1955:
  2130     0690  1003               	clrc
  2131     0691  0DA8               	rlf	___lwmod@divisor,f
  2132     0692  0DA9               	rlf	___lwmod@divisor+1,f
  2133     0693  3EFF               	addlw	-1
  2134     0694  1D03               	skipz
  2135     0695  2E90               	goto	u1955
  2136     0696                     l2131:
  2137     0696  3001               	movlw	1
  2138     0697  00AC               	movwf	??___lwmod
  2139     0698  082C               	movf	??___lwmod,w
  2140     0699  07AD               	addwf	___lwmod@counter,f
  2141     069A                     l2133:
  2142     069A  1FA9               	btfss	___lwmod@divisor+1,7
  2143     069B  2E9D               	goto	u1961
  2144     069C  2E9E               	goto	u1960
  2145     069D                     u1961:
  2146     069D  2E8F               	goto	l2129
  2147     069E                     u1960:
  2148     069E                     l2135:
  2149     069E  0829               	movf	___lwmod@divisor+1,w
  2150     069F  022B               	subwf	___lwmod@dividend+1,w
  2151     06A0  1D03               	skipz
  2152     06A1  2EA4               	goto	u1975
  2153     06A2  0828               	movf	___lwmod@divisor,w
  2154     06A3  022A               	subwf	___lwmod@dividend,w
  2155     06A4                     u1975:
  2156     06A4  1C03               	skipc
  2157     06A5  2EA7               	goto	u1971
  2158     06A6  2EA8               	goto	u1970
  2159     06A7                     u1971:
  2160     06A7  2EAE               	goto	l2139
  2161     06A8                     u1970:
  2162     06A8                     l2137:
  2163     06A8  0828               	movf	___lwmod@divisor,w
  2164     06A9  02AA               	subwf	___lwmod@dividend,f
  2165     06AA  0829               	movf	___lwmod@divisor+1,w
  2166     06AB  1C03               	skipc
  2167     06AC  03AB               	decf	___lwmod@dividend+1,f
  2168     06AD  02AB               	subwf	___lwmod@dividend+1,f
  2169     06AE                     l2139:
  2170     06AE  3001               	movlw	1
  2171     06AF                     u1985:
  2172     06AF  1003               	clrc
  2173     06B0  0CA9               	rrf	___lwmod@divisor+1,f
  2174     06B1  0CA8               	rrf	___lwmod@divisor,f
  2175     06B2  3EFF               	addlw	-1
  2176     06B3  1D03               	skipz
  2177     06B4  2EAF               	goto	u1985
  2178     06B5                     l2141:
  2179     06B5  3001               	movlw	1
  2180     06B6  02AD               	subwf	___lwmod@counter,f
  2181     06B7  1D03               	btfss	3,2
  2182     06B8  2EBA               	goto	u1991
  2183     06B9  2EBB               	goto	u1990
  2184     06BA                     u1991:
  2185     06BA  2E9E               	goto	l2135
  2186     06BB                     u1990:
  2187     06BB                     l2143:
  2188     06BB  082B               	movf	___lwmod@dividend+1,w
  2189     06BC  00A9               	movwf	?___lwmod+1
  2190     06BD  082A               	movf	___lwmod@dividend,w
  2191     06BE  00A8               	movwf	?___lwmod
  2192     06BF                     l652:
  2193     06BF  0008               	return
  2194     06C0                     __end_of___lwmod:
  2195                           
  2196                           	psect	text5
  2197     06EB                     __ptext5:	
  2198 ;; *************** function _setup *****************
  2199 ;; Defined at:
  2200 ;;		line 147 in file "postlab2.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228     06EB                     _setup:	
  2229                           ;psect for function _setup
  2230                           
  2231     06EB                     l1731:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _setup: [wreg+status,2+status,0]
  2234                           
  2235                           
  2236                           ;postlab2.c: 148:     ANSEL = 0b00000011;
  2237     06EB  3003               	movlw	3
  2238     06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2239     06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2240     06EE  0088               	movwf	8	;volatile
  2241     06EF                     l1733:
  2242                           
  2243                           ;postlab2.c: 149:     ANSELH = 0;
  2244     06EF  0189               	clrf	9	;volatile
  2245     06F0                     l1735:
  2246                           
  2247                           ;postlab2.c: 151:     TRISB= 0xFF;
  2248     06F0  30FF               	movlw	255
  2249     06F1  1683               	bsf	3,5	;RP0=1, select bank1
  2250     06F2  1303               	bcf	3,6	;RP1=0, select bank1
  2251     06F3  0086               	movwf	6	;volatile
  2252                           
  2253                           ;postlab2.c: 152:     TRISB = 0;
  2254     06F4  0186               	clrf	6	;volatile
  2255                           
  2256                           ;postlab2.c: 153:     PORTB = 0;
  2257     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2258     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2259     06F7  0186               	clrf	6	;volatile
  2260     06F8                     l1737:
  2261                           
  2262                           ;postlab2.c: 156:     ADCON1bits.ADFM = 0;
  2263     06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2264     06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2265     06FA  139F               	bcf	31,7	;volatile
  2266     06FB                     l1739:
  2267                           
  2268                           ;postlab2.c: 157:     ADCON1bits.VCFG0 = 0;
  2269     06FB  121F               	bcf	31,4	;volatile
  2270     06FC                     l1741:
  2271                           
  2272                           ;postlab2.c: 158:     ADCON1bits.VCFG1 = 0;
  2273     06FC  129F               	bcf	31,5	;volatile
  2274     06FD                     l1743:
  2275                           
  2276                           ;postlab2.c: 160:     ADCON0bits.ADCS = 0b01;
  2277     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  2278     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  2279     06FF  081F               	movf	31,w	;volatile
  2280     0700  393F               	andlw	-193
  2281     0701  3840               	iorlw	64
  2282     0702  009F               	movwf	31	;volatile
  2283     0703                     l1745:
  2284                           
  2285                           ;postlab2.c: 161:     ADCON0bits.CHS = 0;
  2286     0703  30C3               	movlw	-61
  2287     0704  059F               	andwf	31,f	;volatile
  2288     0705                     l1747:
  2289                           
  2290                           ;postlab2.c: 162:     ADCON0bits.ADON= 1;
  2291     0705  141F               	bsf	31,0	;volatile
  2292     0706                     l1749:
  2293                           
  2294                           ;postlab2.c: 163:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  2295     0706  3021               	movlw	33
  2296     0707  00F3               	movwf	??_setup
  2297     0708                     u2267:
  2298     0708  0BF3               	decfsz	??_setup,f
  2299     0709  2F08               	goto	u2267
  2300     070A                     l1751:
  2301                           
  2302                           ;postlab2.c: 165:     PIR1bits.ADIF = 0;
  2303     070A  1283               	bcf	3,5	;RP0=0, select bank0
  2304     070B  1303               	bcf	3,6	;RP1=0, select bank0
  2305     070C  130C               	bcf	12,6	;volatile
  2306     070D                     l1753:
  2307                           
  2308                           ;postlab2.c: 166:     PIE1bits.ADIE = 1;
  2309     070D  1683               	bsf	3,5	;RP0=1, select bank1
  2310     070E  1303               	bcf	3,6	;RP1=0, select bank1
  2311     070F  170C               	bsf	12,6	;volatile
  2312     0710                     l1755:
  2313                           
  2314                           ;postlab2.c: 167:     INTCONbits.PEIE = 1;
  2315     0710  170B               	bsf	11,6	;volatile
  2316     0711                     l1757:
  2317                           
  2318                           ;postlab2.c: 168:     INTCONbits.GIE = 1;
  2319     0711  178B               	bsf	11,7	;volatile
  2320     0712                     l177:
  2321     0712  0008               	return
  2322     0713                     __end_of_setup:
  2323                           
  2324                           	psect	text6
  2325     0738                     __ptext6:	
  2326 ;; *************** function _preguntas *****************
  2327 ;; Defined at:
  2328 ;;		line 171 in file "postlab2.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         0       0       0       0       0
  2344 ;;      Temps:          0       0       0       0       0
  2345 ;;      Totals:         0       0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used: 1
  2348 ;; Hardware stack levels required when called: 3
  2349 ;; This function calls:
  2350 ;;		_UART_Print
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     0738                     _preguntas:	
  2357                           ;psect for function _preguntas
  2358                           
  2359     0738                     l1877:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _preguntas: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2362                           
  2363                           
  2364                           ;postlab2.c: 173:     UART_Print ("1.Leer potenciometro\r\n");
  2365     0738  3043               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2366     0739  00F4               	movwf	UART_Print@data
  2367     073A  3080               	movlw	128
  2368     073B  00F5               	movwf	UART_Print@data+1
  2369     073C  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  2370                           
  2371                           ;postlab2.c: 174:     UART_Print (message);
  2372     0741  3027               	movlw	(low ((_message-__stringbase)| (0+32768)))& (0+255)
  2373     0742  00F4               	movwf	UART_Print@data
  2374     0743  3080               	movlw	128
  2375     0744  00F5               	movwf	UART_Print@data+1
  2376     0745  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  2377                           
  2378                           ;postlab2.c: 175:     UART_Print (message2);
  2379     074A  300B               	movlw	(low ((_message2-__stringbase)| (0+32768)))& (0+255)
  2380     074B  00F4               	movwf	UART_Print@data
  2381     074C  3080               	movlw	128
  2382     074D  00F5               	movwf	UART_Print@data+1
  2383     074E  120A  118A  26C0  120A  118A  	fcall	_UART_Print
  2384     0753                     l180:
  2385     0753  0008               	return
  2386     0754                     __end_of_preguntas:
  2387                           
  2388                           	psect	text7
  2389     06C0                     __ptext7:	
  2390 ;; *************** function _UART_Print *****************
  2391 ;; Defined at:
  2392 ;;		line 65 in file "USARTmodl.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;  data            2    4[COMMON] PTR const unsigned char 
  2395 ;;		 -> STR_5(23), main@text(9), STR_3(3), STR_2(3), 
  2396 ;;		 -> message2(28), message(28), STR_1(23), 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  i               1    7[COMMON] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         2       0       0       0       0
  2409 ;;      Locals:         1       0       0       0       0
  2410 ;;      Temps:          1       0       0       0       0
  2411 ;;      Totals:         4       0       0       0       0
  2412 ;;Total ram usage:        4 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 2
  2415 ;; This function calls:
  2416 ;;		_UART_PutC
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;;		_preguntas
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423     06C0                     _UART_Print:	
  2424                           ;psect for function _UART_Print
  2425                           
  2426     06C0                     l1529:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2429                           
  2430                           
  2431                           ;USARTmodl.c: 65: void UART_Print(const char *data);USARTmodl.c: 66: {;USARTmodl.c: 67: 
      +                            uint8_t i = 0;
  2432     06C0  01F7               	clrf	UART_Print@i
  2433                           
  2434                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2435     06C1  2ED7               	goto	l1535
  2436     06C2                     l1531:
  2437                           
  2438                           ;USARTmodl.c: 69:     UART_PutC (data[i++]);
  2439     06C2  0877               	movf	UART_Print@i,w
  2440     06C3  0774               	addwf	UART_Print@data,w
  2441     06C4  0084               	movwf	4
  2442     06C5  0875               	movf	UART_Print@data+1,w
  2443     06C6  1803               	skipnc
  2444     06C7  0A75               	incf	UART_Print@data+1,w
  2445     06C8  00FF               	movwf	btemp+1
  2446     06C9  120A  118A  2500  120A  118A  	fcall	stringtab
  2447     06CE  120A  118A  27A0  120A  118A  	fcall	_UART_PutC
  2448     06D3                     l1533:
  2449     06D3  3001               	movlw	1
  2450     06D4  00F6               	movwf	??_UART_Print
  2451     06D5  0876               	movf	??_UART_Print,w
  2452     06D6  07F7               	addwf	UART_Print@i,f
  2453     06D7                     l1535:
  2454                           
  2455                           ;USARTmodl.c: 68:   while (data[i] != '\0')
  2456     06D7  0877               	movf	UART_Print@i,w
  2457     06D8  0774               	addwf	UART_Print@data,w
  2458     06D9  0084               	movwf	4
  2459     06DA  0875               	movf	UART_Print@data+1,w
  2460     06DB  1803               	skipnc
  2461     06DC  0A75               	incf	UART_Print@data+1,w
  2462     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2463     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2464     06DF  00FF               	movwf	btemp+1
  2465     06E0  120A  118A  2500  120A  118A  	fcall	stringtab
  2466     06E5  3A00               	xorlw	0
  2467     06E6  1D03               	skipz
  2468     06E7  2EE9               	goto	u921
  2469     06E8  2EEA               	goto	u920
  2470     06E9                     u921:
  2471     06E9  2EC2               	goto	l1531
  2472     06EA                     u920:
  2473     06EA                     l238:
  2474     06EA  0008               	return
  2475     06EB                     __end_of_UART_Print:
  2476                           
  2477                           	psect	text8
  2478     07A0                     __ptext8:	
  2479 ;; *************** function _UART_PutC *****************
  2480 ;; Defined at:
  2481 ;;		line 59 in file "USARTmodl.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  data            1    wreg     const unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  data            1    3[COMMON] const unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;;		_UART_Print
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     07A0                     _UART_PutC:	
  2511                           ;psect for function _UART_PutC
  2512                           
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _UART_PutC: [wreg]
  2516                           ;UART_PutC@data stored from wreg
  2517     07A0  00F3               	movwf	UART_PutC@data
  2518     07A1                     l1525:
  2519     07A1                     l229:	
  2520                           ;USARTmodl.c: 59: void UART_PutC(const char data);USARTmodl.c: 60: {;USARTmodl.c: 61:   
      +                          while (TRMT == 0);
  2521                           
  2522     07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2523     07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2524     07A3  1C98               	btfss	24,1	;volatile
  2525     07A4  2FA6               	goto	u911
  2526     07A5  2FA7               	goto	u910
  2527     07A6                     u911:
  2528     07A6  2FA1               	goto	l229
  2529     07A7                     u910:
  2530     07A7                     l1527:
  2531                           
  2532                           ;USARTmodl.c: 62:   TXREG = data;
  2533     07A7  0873               	movf	UART_PutC@data,w
  2534     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2535     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2536     07AA  0099               	movwf	25	;volatile
  2537     07AB                     l232:
  2538     07AB  0008               	return
  2539     07AC                     __end_of_UART_PutC:
  2540                           
  2541                           	psect	text9
  2542     05D8                     __ptext9:	
  2543 ;; *************** function _map *****************
  2544 ;; Defined at:
  2545 ;;		line 177 in file "postlab2.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  varmap          2   22[BANK0 ] unsigned int 
  2548 ;;  minval          2   24[BANK0 ] unsigned int 
  2549 ;;  maxval          2   26[BANK0 ] unsigned int 
  2550 ;;  minsal          2   28[BANK0 ] unsigned int 
  2551 ;;  maxsal          2   30[BANK0 ] unsigned int 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  valmap          4   38[BANK0 ] float 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2   22[BANK0 ] unsigned int 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0      10       0       0       0
  2564 ;;      Locals:         0       4       0       0       0
  2565 ;;      Temps:          0       6       0       0       0
  2566 ;;      Totals:         0      20       0       0       0
  2567 ;;Total ram usage:       20 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		___fltol
  2572 ;;		___lwdiv
  2573 ;;		___wmul
  2574 ;;		___xxtofl
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580     05D8                     _map:	
  2581                           ;psect for function _map
  2582                           
  2583     05D8                     l2163:	
  2584                           ;incstack = 0
  2585                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  2586                           
  2587                           
  2588                           ;postlab2.c: 178:   float valmap =((varmap - minval) * (maxsal - minsal)) / (maxval - mi
      +                          nval) + minsal;
  2589     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  2590     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  2591     05DA  083C               	movf	map@minsal,w
  2592     05DB  023E               	subwf	map@maxsal,w
  2593     05DC  00F5               	movwf	___wmul@multiplicand
  2594     05DD  083D               	movf	map@minsal+1,w
  2595     05DE  1C03               	skipc
  2596     05DF  0A3D               	incf	map@minsal+1,w
  2597     05E0  023F               	subwf	map@maxsal+1,w
  2598     05E1  00F6               	movwf	___wmul@multiplicand+1
  2599     05E2  0838               	movf	map@minval,w
  2600     05E3  0236               	subwf	map@varmap,w
  2601     05E4  00F3               	movwf	___wmul@multiplier
  2602     05E5  0839               	movf	map@minval+1,w
  2603     05E6  1C03               	skipc
  2604     05E7  0A39               	incf	map@minval+1,w
  2605     05E8  0237               	subwf	map@varmap+1,w
  2606     05E9  00F4               	movwf	___wmul@multiplier+1
  2607     05EA  120A  118A  2713  120A  118A  	fcall	___wmul
  2608     05EF  0874               	movf	?___wmul+1,w
  2609     05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2610     05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2611     05F2  00A3               	movwf	___lwdiv@dividend+1
  2612     05F3  0873               	movf	?___wmul,w
  2613     05F4  00A2               	movwf	___lwdiv@dividend
  2614     05F5  0838               	movf	map@minval,w
  2615     05F6  023A               	subwf	map@maxval,w
  2616     05F7  00A0               	movwf	___lwdiv@divisor
  2617     05F8  0839               	movf	map@minval+1,w
  2618     05F9  1C03               	skipc
  2619     05FA  0A39               	incf	map@minval+1,w
  2620     05FB  023B               	subwf	map@maxval+1,w
  2621     05FC  00A1               	movwf	___lwdiv@divisor+1
  2622     05FD  120A  118A  263E  120A  118A  	fcall	___lwdiv
  2623     0602  1283               	bcf	3,5	;RP0=0, select bank0
  2624     0603  1303               	bcf	3,6	;RP1=0, select bank0
  2625     0604  083C               	movf	map@minsal,w
  2626     0605  0720               	addwf	?___lwdiv,w
  2627     0606  00C0               	movwf	??_map
  2628     0607  083D               	movf	map@minsal+1,w
  2629     0608  1803               	skipnc
  2630     0609  0A3D               	incf	map@minsal+1,w
  2631     060A  0721               	addwf	?___lwdiv+1,w
  2632     060B  00C1               	movwf	??_map+1
  2633     060C  0840               	movf	??_map,w
  2634     060D  00C2               	movwf	??_map+2
  2635     060E  0841               	movf	??_map+1,w
  2636     060F  00C3               	movwf	??_map+3
  2637     0610  01C4               	clrf	??_map+4
  2638     0611  01C5               	clrf	??_map+5
  2639     0612  0845               	movf	??_map+5,w
  2640     0613  00AB               	movwf	___xxtofl@val+3
  2641     0614  0844               	movf	??_map+4,w
  2642     0615  00AA               	movwf	___xxtofl@val+2
  2643     0616  0843               	movf	??_map+3,w
  2644     0617  00A9               	movwf	___xxtofl@val+1
  2645     0618  0842               	movf	??_map+2,w
  2646     0619  00A8               	movwf	___xxtofl@val
  2647     061A  3000               	movlw	0
  2648     061B  120A  118A  22BF  120A  118A  	fcall	___xxtofl
  2649     0620  1283               	bcf	3,5	;RP0=0, select bank0
  2650     0621  1303               	bcf	3,6	;RP1=0, select bank0
  2651     0622  082B               	movf	?___xxtofl+3,w
  2652     0623  00C9               	movwf	map@valmap+3
  2653     0624  082A               	movf	?___xxtofl+2,w
  2654     0625  00C8               	movwf	map@valmap+2
  2655     0626  0829               	movf	?___xxtofl+1,w
  2656     0627  00C7               	movwf	map@valmap+1
  2657     0628  0828               	movf	?___xxtofl,w
  2658     0629  00C6               	movwf	map@valmap
  2659                           
  2660                           ;postlab2.c: 179:   return valmap;
  2661     062A  0849               	movf	map@valmap+3,w
  2662     062B  00F6               	movwf	___fltol@f1+3
  2663     062C  0848               	movf	map@valmap+2,w
  2664     062D  00F5               	movwf	___fltol@f1+2
  2665     062E  0847               	movf	map@valmap+1,w
  2666     062F  00F4               	movwf	___fltol@f1+1
  2667     0630  0846               	movf	map@valmap,w
  2668     0631  00F3               	movwf	___fltol@f1
  2669     0632  120A  118A  2419  120A  118A  	fcall	___fltol
  2670     0637  0874               	movf	?___fltol+1,w
  2671     0638  1283               	bcf	3,5	;RP0=0, select bank0
  2672     0639  1303               	bcf	3,6	;RP1=0, select bank0
  2673     063A  00B7               	movwf	?_map+1
  2674     063B  0873               	movf	?___fltol,w
  2675     063C  00B6               	movwf	?_map
  2676     063D                     l183:
  2677     063D  0008               	return
  2678     063E                     __end_of_map:
  2679                           
  2680                           	psect	text10
  2681     02BF                     __ptext10:	
  2682 ;; *************** function ___xxtofl *****************
  2683 ;; Defined at:
  2684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\xxtofl.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  sign            1    wreg     unsigned char 
  2687 ;;  val             4    8[BANK0 ] long 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  sign            1   16[BANK0 ] unsigned char 
  2690 ;;  arg             4   18[BANK0 ] unsigned long 
  2691 ;;  exp             1   17[BANK0 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  4    8[BANK0 ] unsigned char 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2701 ;;      Params:         0       4       0       0       0
  2702 ;;      Locals:         0       6       0       0       0
  2703 ;;      Temps:          0       4       0       0       0
  2704 ;;      Totals:         0      14       0       0       0
  2705 ;;Total ram usage:       14 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_map
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715     02BF                     ___xxtofl:	
  2716                           ;psect for function ___xxtofl
  2717                           
  2718                           
  2719                           ;incstack = 0
  2720                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2721                           ;___xxtofl@sign stored from wreg
  2722     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2723     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2724     02C1  00B0               	movwf	___xxtofl@sign
  2725     02C2                     l1671:
  2726     02C2  0830               	movf	___xxtofl@sign,w
  2727     02C3  1903               	btfsc	3,2
  2728     02C4  2AC6               	goto	u1291
  2729     02C5  2AC7               	goto	u1290
  2730     02C6                     u1291:
  2731     02C6  2ADB               	goto	l1677
  2732     02C7                     u1290:
  2733     02C7                     l1673:
  2734     02C7  1FAB               	btfss	___xxtofl@val+3,7
  2735     02C8  2ACA               	goto	u1301
  2736     02C9  2ACB               	goto	u1300
  2737     02CA                     u1301:
  2738     02CA  2ADB               	goto	l1677
  2739     02CB                     u1300:
  2740     02CB                     l1675:
  2741     02CB  0928               	comf	___xxtofl@val,w
  2742     02CC  00B2               	movwf	___xxtofl@arg
  2743     02CD  0929               	comf	___xxtofl@val+1,w
  2744     02CE  00B3               	movwf	___xxtofl@arg+1
  2745     02CF  092A               	comf	___xxtofl@val+2,w
  2746     02D0  00B4               	movwf	___xxtofl@arg+2
  2747     02D1  092B               	comf	___xxtofl@val+3,w
  2748     02D2  00B5               	movwf	___xxtofl@arg+3
  2749     02D3  0AB2               	incf	___xxtofl@arg,f
  2750     02D4  1903               	skipnz
  2751     02D5  0AB3               	incf	___xxtofl@arg+1,f
  2752     02D6  1903               	skipnz
  2753     02D7  0AB4               	incf	___xxtofl@arg+2,f
  2754     02D8  1903               	skipnz
  2755     02D9  0AB5               	incf	___xxtofl@arg+3,f
  2756     02DA  2AE3               	goto	l803
  2757     02DB                     l1677:
  2758     02DB  082B               	movf	___xxtofl@val+3,w
  2759     02DC  00B5               	movwf	___xxtofl@arg+3
  2760     02DD  082A               	movf	___xxtofl@val+2,w
  2761     02DE  00B4               	movwf	___xxtofl@arg+2
  2762     02DF  0829               	movf	___xxtofl@val+1,w
  2763     02E0  00B3               	movwf	___xxtofl@arg+1
  2764     02E1  0828               	movf	___xxtofl@val,w
  2765     02E2  00B2               	movwf	___xxtofl@arg
  2766     02E3                     l803:
  2767     02E3  082B               	movf	___xxtofl@val+3,w
  2768     02E4  042A               	iorwf	___xxtofl@val+2,w
  2769     02E5  0429               	iorwf	___xxtofl@val+1,w
  2770     02E6  0428               	iorwf	___xxtofl@val,w
  2771     02E7  1D03               	skipz
  2772     02E8  2AEA               	goto	u1311
  2773     02E9  2AEB               	goto	u1310
  2774     02EA                     u1311:
  2775     02EA  2AF4               	goto	l1683
  2776     02EB                     u1310:
  2777     02EB                     l1679:
  2778     02EB  3000               	movlw	0
  2779     02EC  00AB               	movwf	?___xxtofl+3
  2780     02ED  3000               	movlw	0
  2781     02EE  00AA               	movwf	?___xxtofl+2
  2782     02EF  3000               	movlw	0
  2783     02F0  00A9               	movwf	?___xxtofl+1
  2784     02F1  3000               	movlw	0
  2785     02F2  00A8               	movwf	?___xxtofl
  2786     02F3  2B78               	goto	l805
  2787     02F4                     l1683:
  2788     02F4  3096               	movlw	150
  2789     02F5  00B1               	movwf	___xxtofl@exp
  2790     02F6  2B04               	goto	l1687
  2791     02F7                     l1685:
  2792     02F7  3001               	movlw	1
  2793     02F8  00AC               	movwf	??___xxtofl
  2794     02F9  082C               	movf	??___xxtofl,w
  2795     02FA  07B1               	addwf	___xxtofl@exp,f
  2796     02FB  3001               	movlw	1
  2797     02FC                     u1325:
  2798     02FC  1003               	clrc
  2799     02FD  0CB5               	rrf	___xxtofl@arg+3,f
  2800     02FE  0CB4               	rrf	___xxtofl@arg+2,f
  2801     02FF  0CB3               	rrf	___xxtofl@arg+1,f
  2802     0300  0CB2               	rrf	___xxtofl@arg,f
  2803     0301  3EFF               	addlw	-1
  2804     0302  1D03               	skipz
  2805     0303  2AFC               	goto	u1325
  2806     0304                     l1687:
  2807     0304  30FE               	movlw	254
  2808     0305  0535               	andwf	___xxtofl@arg+3,w
  2809     0306  1D03               	btfss	3,2
  2810     0307  2B09               	goto	u1331
  2811     0308  2B0A               	goto	u1330
  2812     0309                     u1331:
  2813     0309  2AF7               	goto	l1685
  2814     030A                     u1330:
  2815     030A  2B26               	goto	l809
  2816     030B                     l1689:
  2817     030B  3001               	movlw	1
  2818     030C  00AC               	movwf	??___xxtofl
  2819     030D  082C               	movf	??___xxtofl,w
  2820     030E  07B1               	addwf	___xxtofl@exp,f
  2821     030F                     l1691:
  2822     030F  3001               	movlw	1
  2823     0310  07B2               	addwf	___xxtofl@arg,f
  2824     0311  3000               	movlw	0
  2825     0312  1803               	skipnc
  2826     0313  3001               	movlw	1
  2827     0314  07B3               	addwf	___xxtofl@arg+1,f
  2828     0315  3000               	movlw	0
  2829     0316  1803               	skipnc
  2830     0317  3001               	movlw	1
  2831     0318  07B4               	addwf	___xxtofl@arg+2,f
  2832     0319  3000               	movlw	0
  2833     031A  1803               	skipnc
  2834     031B  3001               	movlw	1
  2835     031C  07B5               	addwf	___xxtofl@arg+3,f
  2836     031D                     l1693:
  2837     031D  3001               	movlw	1
  2838     031E                     u1345:
  2839     031E  1003               	clrc
  2840     031F  0CB5               	rrf	___xxtofl@arg+3,f
  2841     0320  0CB4               	rrf	___xxtofl@arg+2,f
  2842     0321  0CB3               	rrf	___xxtofl@arg+1,f
  2843     0322  0CB2               	rrf	___xxtofl@arg,f
  2844     0323  3EFF               	addlw	-1
  2845     0324  1D03               	skipz
  2846     0325  2B1E               	goto	u1345
  2847     0326                     l809:
  2848     0326  30FF               	movlw	255
  2849     0327  0535               	andwf	___xxtofl@arg+3,w
  2850     0328  1D03               	btfss	3,2
  2851     0329  2B2B               	goto	u1351
  2852     032A  2B2C               	goto	u1350
  2853     032B                     u1351:
  2854     032B  2B0B               	goto	l1689
  2855     032C                     u1350:
  2856     032C  2B38               	goto	l1697
  2857     032D                     l1695:
  2858     032D  3001               	movlw	1
  2859     032E  02B1               	subwf	___xxtofl@exp,f
  2860     032F  3001               	movlw	1
  2861     0330  00AC               	movwf	??___xxtofl
  2862     0331                     u1365:
  2863     0331  1003               	clrc
  2864     0332  0DB2               	rlf	___xxtofl@arg,f
  2865     0333  0DB3               	rlf	___xxtofl@arg+1,f
  2866     0334  0DB4               	rlf	___xxtofl@arg+2,f
  2867     0335  0DB5               	rlf	___xxtofl@arg+3,f
  2868     0336  0BAC               	decfsz	??___xxtofl,f
  2869     0337  2B31               	goto	u1365
  2870     0338                     l1697:
  2871     0338  1BB4               	btfsc	___xxtofl@arg+2,7
  2872     0339  2B3B               	goto	u1371
  2873     033A  2B3C               	goto	u1370
  2874     033B                     u1371:
  2875     033B  2B42               	goto	l816
  2876     033C                     u1370:
  2877     033C                     l1699:
  2878     033C  3002               	movlw	2
  2879     033D  0231               	subwf	___xxtofl@exp,w
  2880     033E  1803               	skipnc
  2881     033F  2B41               	goto	u1381
  2882     0340  2B42               	goto	u1380
  2883     0341                     u1381:
  2884     0341  2B2D               	goto	l1695
  2885     0342                     u1380:
  2886     0342                     l816:
  2887     0342  1831               	btfsc	___xxtofl@exp,0
  2888     0343  2B45               	goto	u1391
  2889     0344  2B46               	goto	u1390
  2890     0345                     u1391:
  2891     0345  2B4E               	goto	l817
  2892     0346                     u1390:
  2893     0346                     l1701:
  2894     0346  30FF               	movlw	255
  2895     0347  05B2               	andwf	___xxtofl@arg,f
  2896     0348  30FF               	movlw	255
  2897     0349  05B3               	andwf	___xxtofl@arg+1,f
  2898     034A  307F               	movlw	127
  2899     034B  05B4               	andwf	___xxtofl@arg+2,f
  2900     034C  30FF               	movlw	255
  2901     034D  05B5               	andwf	___xxtofl@arg+3,f
  2902     034E                     l817:
  2903     034E  1003               	clrc
  2904     034F  0CB1               	rrf	___xxtofl@exp,f
  2905     0350                     l1703:
  2906     0350  0831               	movf	___xxtofl@exp,w
  2907     0351  00AC               	movwf	??___xxtofl
  2908     0352  01AD               	clrf	??___xxtofl+1
  2909     0353  01AE               	clrf	??___xxtofl+2
  2910     0354  01AF               	clrf	??___xxtofl+3
  2911     0355  3018               	movlw	24
  2912     0356                     u1405:
  2913     0356  1003               	clrc
  2914     0357  0DAC               	rlf	??___xxtofl,f
  2915     0358  0DAD               	rlf	??___xxtofl+1,f
  2916     0359  0DAE               	rlf	??___xxtofl+2,f
  2917     035A  0DAF               	rlf	??___xxtofl+3,f
  2918     035B                     u1400:
  2919     035B  3EFF               	addlw	-1
  2920     035C  1D03               	skipz
  2921     035D  2B56               	goto	u1405
  2922     035E  082C               	movf	??___xxtofl,w
  2923     035F  04B2               	iorwf	___xxtofl@arg,f
  2924     0360  082D               	movf	??___xxtofl+1,w
  2925     0361  04B3               	iorwf	___xxtofl@arg+1,f
  2926     0362  082E               	movf	??___xxtofl+2,w
  2927     0363  04B4               	iorwf	___xxtofl@arg+2,f
  2928     0364  082F               	movf	??___xxtofl+3,w
  2929     0365  04B5               	iorwf	___xxtofl@arg+3,f
  2930     0366                     l1705:
  2931     0366  0830               	movf	___xxtofl@sign,w
  2932     0367  1903               	btfsc	3,2
  2933     0368  2B6A               	goto	u1411
  2934     0369  2B6B               	goto	u1410
  2935     036A                     u1411:
  2936     036A  2B70               	goto	l1711
  2937     036B                     u1410:
  2938     036B                     l1707:
  2939     036B  1FAB               	btfss	___xxtofl@val+3,7
  2940     036C  2B6E               	goto	u1421
  2941     036D  2B6F               	goto	u1420
  2942     036E                     u1421:
  2943     036E  2B70               	goto	l1711
  2944     036F                     u1420:
  2945     036F                     l1709:
  2946     036F  17B5               	bsf	___xxtofl@arg+3,7
  2947     0370                     l1711:
  2948     0370  0835               	movf	___xxtofl@arg+3,w
  2949     0371  00AB               	movwf	?___xxtofl+3
  2950     0372  0834               	movf	___xxtofl@arg+2,w
  2951     0373  00AA               	movwf	?___xxtofl+2
  2952     0374  0833               	movf	___xxtofl@arg+1,w
  2953     0375  00A9               	movwf	?___xxtofl+1
  2954     0376  0832               	movf	___xxtofl@arg,w
  2955     0377  00A8               	movwf	?___xxtofl
  2956     0378                     l805:
  2957     0378  0008               	return
  2958     0379                     __end_of___xxtofl:
  2959                           
  2960                           	psect	text11
  2961     0713                     __ptext11:	
  2962 ;; *************** function ___wmul *****************
  2963 ;; Defined at:
  2964 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  multiplier      2    3[COMMON] unsigned int 
  2967 ;;  multiplicand    2    5[COMMON] unsigned int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  product         2    7[COMMON] unsigned int 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2    3[COMMON] unsigned int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         4       0       0       0       0
  2980 ;;      Locals:         2       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0
  2982 ;;      Totals:         6       0       0       0       0
  2983 ;;Total ram usage:        6 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_map
  2990 ;;		_sprintf
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994     0713                     ___wmul:	
  2995                           ;psect for function ___wmul
  2996                           
  2997     0713                     l1549:	
  2998                           ;incstack = 0
  2999                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3000                           
  3001     0713  01F7               	clrf	___wmul@product
  3002     0714  01F8               	clrf	___wmul@product+1
  3003     0715                     l1551:
  3004     0715  1C73               	btfss	___wmul@multiplier,0
  3005     0716  2F18               	goto	u951
  3006     0717  2F19               	goto	u950
  3007     0718                     u951:
  3008     0718  2F1F               	goto	l370
  3009     0719                     u950:
  3010     0719                     l1553:
  3011     0719  0875               	movf	___wmul@multiplicand,w
  3012     071A  07F7               	addwf	___wmul@product,f
  3013     071B  1803               	skipnc
  3014     071C  0AF8               	incf	___wmul@product+1,f
  3015     071D  0876               	movf	___wmul@multiplicand+1,w
  3016     071E  07F8               	addwf	___wmul@product+1,f
  3017     071F                     l370:
  3018     071F  3001               	movlw	1
  3019     0720                     u965:
  3020     0720  1003               	clrc
  3021     0721  0DF5               	rlf	___wmul@multiplicand,f
  3022     0722  0DF6               	rlf	___wmul@multiplicand+1,f
  3023     0723  3EFF               	addlw	-1
  3024     0724  1D03               	skipz
  3025     0725  2F20               	goto	u965
  3026     0726                     l1555:
  3027     0726  3001               	movlw	1
  3028     0727                     u975:
  3029     0727  1003               	clrc
  3030     0728  0CF4               	rrf	___wmul@multiplier+1,f
  3031     0729  0CF3               	rrf	___wmul@multiplier,f
  3032     072A  3EFF               	addlw	-1
  3033     072B  1D03               	skipz
  3034     072C  2F27               	goto	u975
  3035     072D                     l1557:
  3036     072D  0873               	movf	___wmul@multiplier,w
  3037     072E  0474               	iorwf	___wmul@multiplier+1,w
  3038     072F  1D03               	btfss	3,2
  3039     0730  2F32               	goto	u981
  3040     0731  2F33               	goto	u980
  3041     0732                     u981:
  3042     0732  2F15               	goto	l1551
  3043     0733                     u980:
  3044     0733                     l1559:
  3045     0733  0878               	movf	___wmul@product+1,w
  3046     0734  00F4               	movwf	?___wmul+1
  3047     0735  0877               	movf	___wmul@product,w
  3048     0736  00F3               	movwf	?___wmul
  3049     0737                     l372:
  3050     0737  0008               	return
  3051     0738                     __end_of___wmul:
  3052                           
  3053                           	psect	text12
  3054     063E                     __ptext12:	
  3055 ;; *************** function ___lwdiv *****************
  3056 ;; Defined at:
  3057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  divisor         2    0[BANK0 ] unsigned int 
  3060 ;;  dividend        2    2[BANK0 ] unsigned int 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  quotient        2    6[BANK0 ] unsigned int 
  3063 ;;  counter         1    5[BANK0 ] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    0[BANK0 ] unsigned int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         0       4       0       0       0
  3074 ;;      Locals:         0       3       0       0       0
  3075 ;;      Temps:          0       1       0       0       0
  3076 ;;      Totals:         0       8       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 1
  3080 ;; This function calls:
  3081 ;;		Nothing
  3082 ;; This function is called by:
  3083 ;;		_map
  3084 ;;		_sprintf
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088     063E                     ___lwdiv:	
  3089                           ;psect for function ___lwdiv
  3090                           
  3091     063E                     l2099:	
  3092                           ;incstack = 0
  3093                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3094                           
  3095     063E  1283               	bcf	3,5	;RP0=0, select bank0
  3096     063F  1303               	bcf	3,6	;RP1=0, select bank0
  3097     0640  01A6               	clrf	___lwdiv@quotient
  3098     0641  01A7               	clrf	___lwdiv@quotient+1
  3099     0642                     l2101:
  3100     0642  0820               	movf	___lwdiv@divisor,w
  3101     0643  0421               	iorwf	___lwdiv@divisor+1,w
  3102     0644  1903               	btfsc	3,2
  3103     0645  2E47               	goto	u1871
  3104     0646  2E48               	goto	u1870
  3105     0647                     u1871:
  3106     0647  2E7F               	goto	l2121
  3107     0648                     u1870:
  3108     0648                     l2103:
  3109     0648  01A5               	clrf	___lwdiv@counter
  3110     0649  0AA5               	incf	___lwdiv@counter,f
  3111     064A  2E56               	goto	l2109
  3112     064B                     l2105:
  3113     064B  3001               	movlw	1
  3114     064C                     u1885:
  3115     064C  1003               	clrc
  3116     064D  0DA0               	rlf	___lwdiv@divisor,f
  3117     064E  0DA1               	rlf	___lwdiv@divisor+1,f
  3118     064F  3EFF               	addlw	-1
  3119     0650  1D03               	skipz
  3120     0651  2E4C               	goto	u1885
  3121     0652                     l2107:
  3122     0652  3001               	movlw	1
  3123     0653  00A4               	movwf	??___lwdiv
  3124     0654  0824               	movf	??___lwdiv,w
  3125     0655  07A5               	addwf	___lwdiv@counter,f
  3126     0656                     l2109:
  3127     0656  1FA1               	btfss	___lwdiv@divisor+1,7
  3128     0657  2E59               	goto	u1891
  3129     0658  2E5A               	goto	u1890
  3130     0659                     u1891:
  3131     0659  2E4B               	goto	l2105
  3132     065A                     u1890:
  3133     065A                     l2111:
  3134     065A  3001               	movlw	1
  3135     065B                     u1905:
  3136     065B  1003               	clrc
  3137     065C  0DA6               	rlf	___lwdiv@quotient,f
  3138     065D  0DA7               	rlf	___lwdiv@quotient+1,f
  3139     065E  3EFF               	addlw	-1
  3140     065F  1D03               	skipz
  3141     0660  2E5B               	goto	u1905
  3142     0661  0821               	movf	___lwdiv@divisor+1,w
  3143     0662  0223               	subwf	___lwdiv@dividend+1,w
  3144     0663  1D03               	skipz
  3145     0664  2E67               	goto	u1915
  3146     0665  0820               	movf	___lwdiv@divisor,w
  3147     0666  0222               	subwf	___lwdiv@dividend,w
  3148     0667                     u1915:
  3149     0667  1C03               	skipc
  3150     0668  2E6A               	goto	u1911
  3151     0669  2E6B               	goto	u1910
  3152     066A                     u1911:
  3153     066A  2E72               	goto	l2117
  3154     066B                     u1910:
  3155     066B                     l2113:
  3156     066B  0820               	movf	___lwdiv@divisor,w
  3157     066C  02A2               	subwf	___lwdiv@dividend,f
  3158     066D  0821               	movf	___lwdiv@divisor+1,w
  3159     066E  1C03               	skipc
  3160     066F  03A3               	decf	___lwdiv@dividend+1,f
  3161     0670  02A3               	subwf	___lwdiv@dividend+1,f
  3162     0671                     l2115:
  3163     0671  1426               	bsf	___lwdiv@quotient,0
  3164     0672                     l2117:
  3165     0672  3001               	movlw	1
  3166     0673                     u1925:
  3167     0673  1003               	clrc
  3168     0674  0CA1               	rrf	___lwdiv@divisor+1,f
  3169     0675  0CA0               	rrf	___lwdiv@divisor,f
  3170     0676  3EFF               	addlw	-1
  3171     0677  1D03               	skipz
  3172     0678  2E73               	goto	u1925
  3173     0679                     l2119:
  3174     0679  3001               	movlw	1
  3175     067A  02A5               	subwf	___lwdiv@counter,f
  3176     067B  1D03               	btfss	3,2
  3177     067C  2E7E               	goto	u1931
  3178     067D  2E7F               	goto	u1930
  3179     067E                     u1931:
  3180     067E  2E5A               	goto	l2111
  3181     067F                     u1930:
  3182     067F                     l2121:
  3183     067F  0827               	movf	___lwdiv@quotient+1,w
  3184     0680  00A1               	movwf	?___lwdiv+1
  3185     0681  0826               	movf	___lwdiv@quotient,w
  3186     0682  00A0               	movwf	?___lwdiv
  3187     0683                     l642:
  3188     0683  0008               	return
  3189     0684                     __end_of___lwdiv:
  3190                           
  3191                           	psect	text13
  3192     0419                     __ptext13:	
  3193 ;; *************** function ___fltol *****************
  3194 ;; Defined at:
  3195 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\fltol.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  f1              4    3[COMMON] unsigned int 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  exp1            1    8[COMMON] unsigned char 
  3200 ;;  sign1           1    7[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  4    3[COMMON] long 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         4       0       0       0       0
  3211 ;;      Locals:         2       0       0       0       0
  3212 ;;      Temps:          0       4       0       0       0
  3213 ;;      Totals:         6       4       0       0       0
  3214 ;;Total ram usage:       10 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_map
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224     0419                     ___fltol:	
  3225                           ;psect for function ___fltol
  3226                           
  3227     0419                     l2063:	
  3228                           ;incstack = 0
  3229                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3230                           
  3231     0419  1003               	clrc
  3232     041A  0D75               	rlf	___fltol@f1+2,w
  3233     041B  0D76               	rlf	___fltol@f1+3,w
  3234     041C  00F8               	movwf	___fltol@exp1
  3235     041D  0878               	movf	___fltol@exp1,w
  3236     041E  1D03               	btfss	3,2
  3237     041F  2C21               	goto	u1771
  3238     0420  2C22               	goto	u1770
  3239     0421                     u1771:
  3240     0421  2C2B               	goto	l2069
  3241     0422                     u1770:
  3242     0422                     l2065:
  3243     0422  3000               	movlw	0
  3244     0423  00F6               	movwf	?___fltol+3
  3245     0424  3000               	movlw	0
  3246     0425  00F5               	movwf	?___fltol+2
  3247     0426  3000               	movlw	0
  3248     0427  00F4               	movwf	?___fltol+1
  3249     0428  3000               	movlw	0
  3250     0429  00F3               	movwf	?___fltol
  3251     042A  2C90               	goto	l556
  3252     042B                     l2069:
  3253     042B  0873               	movf	___fltol@f1,w
  3254     042C  1283               	bcf	3,5	;RP0=0, select bank0
  3255     042D  1303               	bcf	3,6	;RP1=0, select bank0
  3256     042E  00A0               	movwf	??___fltol
  3257     042F  0874               	movf	___fltol@f1+1,w
  3258     0430  00A1               	movwf	??___fltol+1
  3259     0431  0875               	movf	___fltol@f1+2,w
  3260     0432  00A2               	movwf	??___fltol+2
  3261     0433  0876               	movf	___fltol@f1+3,w
  3262     0434  00A3               	movwf	??___fltol+3
  3263     0435  301F               	movlw	31
  3264     0436                     u1785:
  3265     0436  1003               	clrc
  3266     0437  0CA3               	rrf	??___fltol+3,f
  3267     0438  0CA2               	rrf	??___fltol+2,f
  3268     0439  0CA1               	rrf	??___fltol+1,f
  3269     043A  0CA0               	rrf	??___fltol,f
  3270     043B                     u1780:
  3271     043B  3EFF               	addlw	-1
  3272     043C  1D03               	skipz
  3273     043D  2C36               	goto	u1785
  3274     043E  0820               	movf	??___fltol,w
  3275     043F  00F7               	movwf	___fltol@sign1
  3276     0440                     l2071:
  3277     0440  17F5               	bsf	___fltol@f1+2,7
  3278     0441                     l2073:
  3279     0441  30FF               	movlw	255
  3280     0442  05F3               	andwf	___fltol@f1,f
  3281     0443  30FF               	movlw	255
  3282     0444  05F4               	andwf	___fltol@f1+1,f
  3283     0445  30FF               	movlw	255
  3284     0446  05F5               	andwf	___fltol@f1+2,f
  3285     0447  3000               	movlw	0
  3286     0448  05F6               	andwf	___fltol@f1+3,f
  3287     0449                     l2075:
  3288     0449  3096               	movlw	150
  3289     044A  02F8               	subwf	___fltol@exp1,f
  3290     044B                     l2077:
  3291     044B  1FF8               	btfss	___fltol@exp1,7
  3292     044C  2C4E               	goto	u1791
  3293     044D  2C4F               	goto	u1790
  3294     044E                     u1791:
  3295     044E  2C69               	goto	l2087
  3296     044F                     u1790:
  3297     044F                     l2079:
  3298     044F  0878               	movf	___fltol@exp1,w
  3299     0450  3A80               	xorlw	128
  3300     0451  3E97               	addlw	151
  3301     0452  1803               	skipnc
  3302     0453  2C55               	goto	u1801
  3303     0454  2C56               	goto	u1800
  3304     0455                     u1801:
  3305     0455  2C57               	goto	l2085
  3306     0456                     u1800:
  3307     0456  2C22               	goto	l2065
  3308     0457                     l2085:
  3309     0457  3001               	movlw	1
  3310     0458                     u1815:
  3311     0458  1003               	clrc
  3312     0459  0CF6               	rrf	___fltol@f1+3,f
  3313     045A  0CF5               	rrf	___fltol@f1+2,f
  3314     045B  0CF4               	rrf	___fltol@f1+1,f
  3315     045C  0CF3               	rrf	___fltol@f1,f
  3316     045D  3EFF               	addlw	-1
  3317     045E  1D03               	skipz
  3318     045F  2C58               	goto	u1815
  3319     0460  3001               	movlw	1
  3320     0461  00A0               	movwf	??___fltol
  3321     0462  0820               	movf	??___fltol,w
  3322     0463  07F8               	addwf	___fltol@exp1,f
  3323     0464  1D03               	btfss	3,2
  3324     0465  2C67               	goto	u1821
  3325     0466  2C68               	goto	u1820
  3326     0467                     u1821:
  3327     0467  2C57               	goto	l2085
  3328     0468                     u1820:
  3329     0468  2C80               	goto	l2095
  3330     0469                     l2087:
  3331     0469  3020               	movlw	32
  3332     046A  0278               	subwf	___fltol@exp1,w
  3333     046B  1C03               	skipc
  3334     046C  2C6E               	goto	u1831
  3335     046D  2C6F               	goto	u1830
  3336     046E                     u1831:
  3337     046E  2C7B               	goto	l563
  3338     046F                     u1830:
  3339     046F  2C22               	goto	l2065
  3340     0470                     l2093:
  3341     0470  3001               	movlw	1
  3342     0471  00A0               	movwf	??___fltol
  3343     0472                     u1845:
  3344     0472  1003               	clrc
  3345     0473  0DF3               	rlf	___fltol@f1,f
  3346     0474  0DF4               	rlf	___fltol@f1+1,f
  3347     0475  0DF5               	rlf	___fltol@f1+2,f
  3348     0476  0DF6               	rlf	___fltol@f1+3,f
  3349     0477  0BA0               	decfsz	??___fltol,f
  3350     0478  2C72               	goto	u1845
  3351     0479  3001               	movlw	1
  3352     047A  02F8               	subwf	___fltol@exp1,f
  3353     047B                     l563:
  3354     047B  0878               	movf	___fltol@exp1,w
  3355     047C  1D03               	btfss	3,2
  3356     047D  2C7F               	goto	u1851
  3357     047E  2C80               	goto	u1850
  3358     047F                     u1851:
  3359     047F  2C70               	goto	l2093
  3360     0480                     u1850:
  3361     0480                     l2095:
  3362     0480  0877               	movf	___fltol@sign1,w
  3363     0481  1903               	btfsc	3,2
  3364     0482  2C84               	goto	u1861
  3365     0483  2C85               	goto	u1860
  3366     0484                     u1861:
  3367     0484  2C90               	goto	l566
  3368     0485                     u1860:
  3369     0485                     l2097:
  3370     0485  09F3               	comf	___fltol@f1,f
  3371     0486  09F4               	comf	___fltol@f1+1,f
  3372     0487  09F5               	comf	___fltol@f1+2,f
  3373     0488  09F6               	comf	___fltol@f1+3,f
  3374     0489  0AF3               	incf	___fltol@f1,f
  3375     048A  1903               	skipnz
  3376     048B  0AF4               	incf	___fltol@f1+1,f
  3377     048C  1903               	skipnz
  3378     048D  0AF5               	incf	___fltol@f1+2,f
  3379     048E  1903               	skipnz
  3380     048F  0AF6               	incf	___fltol@f1+3,f
  3381     0490                     l566:
  3382     0490                     l556:
  3383     0490  0008               	return
  3384     0491                     __end_of___fltol:
  3385                           
  3386                           	psect	text14
  3387     0379                     __ptext14:	
  3388 ;; *************** function _UART_Init *****************
  3389 ;; Defined at:
  3390 ;;		line 14 in file "USARTmodl.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  n               2   16[BANK0 ] int 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3404 ;;      Params:         0       4       0       0       0
  3405 ;;      Locals:         0       2       0       0       0
  3406 ;;      Temps:          0       4       0       0       0
  3407 ;;      Totals:         0      10       0       0       0
  3408 ;;Total ram usage:       10 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 2
  3411 ;; This function calls:
  3412 ;;		___lldiv
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418     0379                     _UART_Init:	
  3419                           ;psect for function _UART_Init
  3420                           
  3421     0379                     l2147:	
  3422                           ;incstack = 0
  3423                           ; Regs used in _UART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3424                           
  3425                           
  3426                           ;USARTmodl.c: 14: void UART_Init(const uint32_t baud_rate);USARTmodl.c: 15: {;USARTmodl.
      +                          c: 16:   int16_t n = ( 8000000 / (16 * baud_rate) ) - 1;
  3427     0379  1283               	bcf	3,5	;RP0=0, select bank0
  3428     037A  1303               	bcf	3,6	;RP1=0, select bank0
  3429     037B  0828               	movf	UART_Init@baud_rate,w
  3430     037C  00AC               	movwf	??_UART_Init
  3431     037D  0829               	movf	UART_Init@baud_rate+1,w
  3432     037E  00AD               	movwf	??_UART_Init+1
  3433     037F  082A               	movf	UART_Init@baud_rate+2,w
  3434     0380  00AE               	movwf	??_UART_Init+2
  3435     0381  082B               	movf	UART_Init@baud_rate+3,w
  3436     0382  00AF               	movwf	??_UART_Init+3
  3437     0383  3004               	movlw	4
  3438     0384                     u2005:
  3439     0384  1003               	clrc
  3440     0385  0DAC               	rlf	??_UART_Init,f
  3441     0386  0DAD               	rlf	??_UART_Init+1,f
  3442     0387  0DAE               	rlf	??_UART_Init+2,f
  3443     0388  0DAF               	rlf	??_UART_Init+3,f
  3444     0389                     u2000:
  3445     0389  3EFF               	addlw	-1
  3446     038A  1D03               	skipz
  3447     038B  2B84               	goto	u2005
  3448     038C  082F               	movf	??_UART_Init+3,w
  3449     038D  00A3               	movwf	___lldiv@divisor+3
  3450     038E  082E               	movf	??_UART_Init+2,w
  3451     038F  00A2               	movwf	___lldiv@divisor+2
  3452     0390  082D               	movf	??_UART_Init+1,w
  3453     0391  00A1               	movwf	___lldiv@divisor+1
  3454     0392  082C               	movf	??_UART_Init,w
  3455     0393  00A0               	movwf	___lldiv@divisor
  3456     0394  3000               	movlw	0
  3457     0395  00A7               	movwf	___lldiv@dividend+3
  3458     0396  307A               	movlw	122
  3459     0397  00A6               	movwf	___lldiv@dividend+2
  3460     0398  3012               	movlw	18
  3461     0399  00A5               	movwf	___lldiv@dividend+1
  3462     039A  3000               	movlw	0
  3463     039B  00A4               	movwf	___lldiv@dividend
  3464     039C  120A  118A  2570  120A  118A  	fcall	___lldiv
  3465     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  3466     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  3467     03A3  0820               	movf	?___lldiv,w
  3468     03A4  3EFF               	addlw	255
  3469     03A5  00B0               	movwf	UART_Init@n
  3470     03A6  0821               	movf	?___lldiv+1,w
  3471     03A7  1803               	skipnc
  3472     03A8  3E01               	addlw	1
  3473     03A9  3EFF               	addlw	255
  3474     03AA  00B1               	movwf	UART_Init@n+1
  3475     03AB                     l2149:
  3476                           
  3477                           ;USARTmodl.c: 18:   if (n < 0)
  3478     03AB  1FB1               	btfss	UART_Init@n+1,7
  3479     03AC  2BAE               	goto	u2011
  3480     03AD  2BAF               	goto	u2010
  3481     03AE                     u2011:
  3482     03AE  2BB1               	goto	l2153
  3483     03AF                     u2010:
  3484     03AF                     l2151:
  3485                           
  3486                           ;USARTmodl.c: 19:     n = 0;
  3487     03AF  01B0               	clrf	UART_Init@n
  3488     03B0  01B1               	clrf	UART_Init@n+1
  3489     03B1                     l2153:
  3490                           
  3491                           ;USARTmodl.c: 21:   if (n > 255)
  3492     03B1  0831               	movf	UART_Init@n+1,w
  3493     03B2  3A80               	xorlw	128
  3494     03B3  00FF               	movwf	btemp+1
  3495     03B4  3081               	movlw	129
  3496     03B5  027F               	subwf	btemp+1,w
  3497     03B6  1D03               	skipz
  3498     03B7  2BBA               	goto	u2025
  3499     03B8  3000               	movlw	0
  3500     03B9  0230               	subwf	UART_Init@n,w
  3501     03BA                     u2025:
  3502     03BA  1C03               	skipc
  3503     03BB  2BBD               	goto	u2021
  3504     03BC  2BBE               	goto	u2020
  3505     03BD                     u2021:
  3506     03BD  2C0C               	goto	l2161
  3507     03BE                     u2020:
  3508     03BE                     l2155:
  3509                           
  3510                           ;USARTmodl.c: 22:   {;USARTmodl.c: 23:     n = ( 8000000 / (64 * baud_rate) ) - 1;
  3511     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3512     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3513     03C0  0828               	movf	UART_Init@baud_rate,w
  3514     03C1  00AC               	movwf	??_UART_Init
  3515     03C2  0829               	movf	UART_Init@baud_rate+1,w
  3516     03C3  00AD               	movwf	??_UART_Init+1
  3517     03C4  082A               	movf	UART_Init@baud_rate+2,w
  3518     03C5  00AE               	movwf	??_UART_Init+2
  3519     03C6  082B               	movf	UART_Init@baud_rate+3,w
  3520     03C7  00AF               	movwf	??_UART_Init+3
  3521     03C8  3006               	movlw	6
  3522     03C9                     u2035:
  3523     03C9  1003               	clrc
  3524     03CA  0DAC               	rlf	??_UART_Init,f
  3525     03CB  0DAD               	rlf	??_UART_Init+1,f
  3526     03CC  0DAE               	rlf	??_UART_Init+2,f
  3527     03CD  0DAF               	rlf	??_UART_Init+3,f
  3528     03CE                     u2030:
  3529     03CE  3EFF               	addlw	-1
  3530     03CF  1D03               	skipz
  3531     03D0  2BC9               	goto	u2035
  3532     03D1  082F               	movf	??_UART_Init+3,w
  3533     03D2  00A3               	movwf	___lldiv@divisor+3
  3534     03D3  082E               	movf	??_UART_Init+2,w
  3535     03D4  00A2               	movwf	___lldiv@divisor+2
  3536     03D5  082D               	movf	??_UART_Init+1,w
  3537     03D6  00A1               	movwf	___lldiv@divisor+1
  3538     03D7  082C               	movf	??_UART_Init,w
  3539     03D8  00A0               	movwf	___lldiv@divisor
  3540     03D9  3000               	movlw	0
  3541     03DA  00A7               	movwf	___lldiv@dividend+3
  3542     03DB  307A               	movlw	122
  3543     03DC  00A6               	movwf	___lldiv@dividend+2
  3544     03DD  3012               	movlw	18
  3545     03DE  00A5               	movwf	___lldiv@dividend+1
  3546     03DF  3000               	movlw	0
  3547     03E0  00A4               	movwf	___lldiv@dividend
  3548     03E1  120A  118A  2570  120A  118A  	fcall	___lldiv
  3549     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3550     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3551     03E8  0820               	movf	?___lldiv,w
  3552     03E9  3EFF               	addlw	255
  3553     03EA  00B0               	movwf	UART_Init@n
  3554     03EB  0821               	movf	?___lldiv+1,w
  3555     03EC  1803               	skipnc
  3556     03ED  3E01               	addlw	1
  3557     03EE  3EFF               	addlw	255
  3558     03EF  00B1               	movwf	UART_Init@n+1
  3559     03F0                     l2157:
  3560                           
  3561                           ;USARTmodl.c: 24:     if (n > 255)
  3562     03F0  0831               	movf	UART_Init@n+1,w
  3563     03F1  3A80               	xorlw	128
  3564     03F2  00FF               	movwf	btemp+1
  3565     03F3  3081               	movlw	129
  3566     03F4  027F               	subwf	btemp+1,w
  3567     03F5  1D03               	skipz
  3568     03F6  2BF9               	goto	u2045
  3569     03F7  3000               	movlw	0
  3570     03F8  0230               	subwf	UART_Init@n,w
  3571     03F9                     u2045:
  3572     03F9  1C03               	skipc
  3573     03FA  2BFC               	goto	u2041
  3574     03FB  2BFD               	goto	u2040
  3575     03FC                     u2041:
  3576     03FC  2C03               	goto	l210
  3577     03FD                     u2040:
  3578     03FD                     l2159:
  3579                           
  3580                           ;USARTmodl.c: 25:       n = 255;
  3581     03FD  30FF               	movlw	255
  3582     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3583     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3584     0400  00B0               	movwf	UART_Init@n
  3585     0401  3000               	movlw	0
  3586     0402  00B1               	movwf	UART_Init@n+1
  3587     0403                     l210:
  3588                           
  3589                           ;USARTmodl.c: 26:     SPBRG = n;
  3590     0403  1283               	bcf	3,5	;RP0=0, select bank0
  3591     0404  1303               	bcf	3,6	;RP1=0, select bank0
  3592     0405  0830               	movf	UART_Init@n,w
  3593     0406  1683               	bsf	3,5	;RP0=1, select bank1
  3594     0407  1303               	bcf	3,6	;RP1=0, select bank1
  3595     0408  0099               	movwf	25	;volatile
  3596                           
  3597                           ;USARTmodl.c: 27:     TXSTA = 0x20;
  3598     0409  3020               	movlw	32
  3599     040A  0098               	movwf	24	;volatile
  3600                           
  3601                           ;USARTmodl.c: 28:   }
  3602     040B  2C14               	goto	l211
  3603     040C                     l2161:
  3604                           
  3605                           ;USARTmodl.c: 31:   {;USARTmodl.c: 32:     SPBRG = n;
  3606     040C  1283               	bcf	3,5	;RP0=0, select bank0
  3607     040D  1303               	bcf	3,6	;RP1=0, select bank0
  3608     040E  0830               	movf	UART_Init@n,w
  3609     040F  1683               	bsf	3,5	;RP0=1, select bank1
  3610     0410  1303               	bcf	3,6	;RP1=0, select bank1
  3611     0411  0099               	movwf	25	;volatile
  3612                           
  3613                           ;USARTmodl.c: 33:     TXSTA = 0x24;
  3614     0412  3024               	movlw	36
  3615     0413  0098               	movwf	24	;volatile
  3616     0414                     l211:	
  3617                           ;USARTmodl.c: 34:   }
  3618                           
  3619                           
  3620                           ;USARTmodl.c: 36:   RCSTA = 0x90;
  3621     0414  3090               	movlw	144
  3622     0415  1283               	bcf	3,5	;RP0=0, select bank0
  3623     0416  1303               	bcf	3,6	;RP1=0, select bank0
  3624     0417  0098               	movwf	24	;volatile
  3625     0418                     l212:
  3626     0418  0008               	return
  3627     0419                     __end_of_UART_Init:
  3628                           
  3629                           	psect	text15
  3630     0570                     __ptext15:	
  3631 ;; *************** function ___lldiv *****************
  3632 ;; Defined at:
  3633 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  divisor         4    0[BANK0 ] unsigned long 
  3636 ;;  dividend        4    4[BANK0 ] unsigned long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  quotient        4    4[COMMON] unsigned long 
  3639 ;;  counter         1    8[COMMON] unsigned char 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  4    0[BANK0 ] unsigned long 
  3642 ;; Registers used:
  3643 ;;		wreg, status,2, status,0
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3649 ;;      Params:         0       8       0       0       0
  3650 ;;      Locals:         5       0       0       0       0
  3651 ;;      Temps:          1       0       0       0       0
  3652 ;;      Totals:         6       8       0       0       0
  3653 ;;Total ram usage:       14 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_UART_Init
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663     0570                     ___lldiv:	
  3664                           ;psect for function ___lldiv
  3665                           
  3666     0570                     l2039:	
  3667                           ;incstack = 0
  3668                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3669                           
  3670     0570  3000               	movlw	0
  3671     0571  00F7               	movwf	___lldiv@quotient+3
  3672     0572  3000               	movlw	0
  3673     0573  00F6               	movwf	___lldiv@quotient+2
  3674     0574  3000               	movlw	0
  3675     0575  00F5               	movwf	___lldiv@quotient+1
  3676     0576  3000               	movlw	0
  3677     0577  00F4               	movwf	___lldiv@quotient
  3678     0578  1283               	bcf	3,5	;RP0=0, select bank0
  3679     0579  1303               	bcf	3,6	;RP1=0, select bank0
  3680     057A  0823               	movf	___lldiv@divisor+3,w
  3681     057B  0422               	iorwf	___lldiv@divisor+2,w
  3682     057C  0421               	iorwf	___lldiv@divisor+1,w
  3683     057D  0420               	iorwf	___lldiv@divisor,w
  3684     057E  1903               	skipnz
  3685     057F  2D81               	goto	u1701
  3686     0580  2D82               	goto	u1700
  3687     0581                     u1701:
  3688     0581  2DCF               	goto	l2059
  3689     0582                     u1700:
  3690     0582                     l2041:
  3691     0582  01F8               	clrf	___lldiv@counter
  3692     0583  0AF8               	incf	___lldiv@counter,f
  3693     0584  2D92               	goto	l2045
  3694     0585                     l2043:
  3695     0585  3001               	movlw	1
  3696     0586  00F3               	movwf	??___lldiv
  3697     0587                     u1715:
  3698     0587  1003               	clrc
  3699     0588  0DA0               	rlf	___lldiv@divisor,f
  3700     0589  0DA1               	rlf	___lldiv@divisor+1,f
  3701     058A  0DA2               	rlf	___lldiv@divisor+2,f
  3702     058B  0DA3               	rlf	___lldiv@divisor+3,f
  3703     058C  0BF3               	decfsz	??___lldiv,f
  3704     058D  2D87               	goto	u1715
  3705     058E  3001               	movlw	1
  3706     058F  00F3               	movwf	??___lldiv
  3707     0590  0873               	movf	??___lldiv,w
  3708     0591  07F8               	addwf	___lldiv@counter,f
  3709     0592                     l2045:
  3710     0592  1FA3               	btfss	___lldiv@divisor+3,7
  3711     0593  2D95               	goto	u1721
  3712     0594  2D96               	goto	u1720
  3713     0595                     u1721:
  3714     0595  2D85               	goto	l2043
  3715     0596                     u1720:
  3716     0596                     l2047:
  3717     0596  3001               	movlw	1
  3718     0597  00F3               	movwf	??___lldiv
  3719     0598                     u1735:
  3720     0598  1003               	clrc
  3721     0599  0DF4               	rlf	___lldiv@quotient,f
  3722     059A  0DF5               	rlf	___lldiv@quotient+1,f
  3723     059B  0DF6               	rlf	___lldiv@quotient+2,f
  3724     059C  0DF7               	rlf	___lldiv@quotient+3,f
  3725     059D  0BF3               	decfsz	??___lldiv,f
  3726     059E  2D98               	goto	u1735
  3727     059F                     l2049:
  3728     059F  0823               	movf	___lldiv@divisor+3,w
  3729     05A0  0227               	subwf	___lldiv@dividend+3,w
  3730     05A1  1D03               	skipz
  3731     05A2  2DAD               	goto	u1745
  3732     05A3  0822               	movf	___lldiv@divisor+2,w
  3733     05A4  0226               	subwf	___lldiv@dividend+2,w
  3734     05A5  1D03               	skipz
  3735     05A6  2DAD               	goto	u1745
  3736     05A7  0821               	movf	___lldiv@divisor+1,w
  3737     05A8  0225               	subwf	___lldiv@dividend+1,w
  3738     05A9  1D03               	skipz
  3739     05AA  2DAD               	goto	u1745
  3740     05AB  0820               	movf	___lldiv@divisor,w
  3741     05AC  0224               	subwf	___lldiv@dividend,w
  3742     05AD                     u1745:
  3743     05AD  1C03               	skipc
  3744     05AE  2DB0               	goto	u1741
  3745     05AF  2DB1               	goto	u1740
  3746     05B0                     u1741:
  3747     05B0  2DC0               	goto	l2055
  3748     05B1                     u1740:
  3749     05B1                     l2051:
  3750     05B1  0820               	movf	___lldiv@divisor,w
  3751     05B2  02A4               	subwf	___lldiv@dividend,f
  3752     05B3  0821               	movf	___lldiv@divisor+1,w
  3753     05B4  1C03               	skipc
  3754     05B5  0F21               	incfsz	___lldiv@divisor+1,w
  3755     05B6  02A5               	subwf	___lldiv@dividend+1,f
  3756     05B7  0822               	movf	___lldiv@divisor+2,w
  3757     05B8  1C03               	skipc
  3758     05B9  0F22               	incfsz	___lldiv@divisor+2,w
  3759     05BA  02A6               	subwf	___lldiv@dividend+2,f
  3760     05BB  0823               	movf	___lldiv@divisor+3,w
  3761     05BC  1C03               	skipc
  3762     05BD  0F23               	incfsz	___lldiv@divisor+3,w
  3763     05BE  02A7               	subwf	___lldiv@dividend+3,f
  3764     05BF                     l2053:
  3765     05BF  1474               	bsf	___lldiv@quotient,0
  3766     05C0                     l2055:
  3767     05C0  3001               	movlw	1
  3768     05C1                     u1755:
  3769     05C1  1003               	clrc
  3770     05C2  0CA3               	rrf	___lldiv@divisor+3,f
  3771     05C3  0CA2               	rrf	___lldiv@divisor+2,f
  3772     05C4  0CA1               	rrf	___lldiv@divisor+1,f
  3773     05C5  0CA0               	rrf	___lldiv@divisor,f
  3774     05C6  3EFF               	addlw	-1
  3775     05C7  1D03               	skipz
  3776     05C8  2DC1               	goto	u1755
  3777     05C9                     l2057:
  3778     05C9  3001               	movlw	1
  3779     05CA  02F8               	subwf	___lldiv@counter,f
  3780     05CB  1D03               	btfss	3,2
  3781     05CC  2DCE               	goto	u1761
  3782     05CD  2DCF               	goto	u1760
  3783     05CE                     u1761:
  3784     05CE  2D96               	goto	l2047
  3785     05CF                     u1760:
  3786     05CF                     l2059:
  3787     05CF  0877               	movf	___lldiv@quotient+3,w
  3788     05D0  00A3               	movwf	?___lldiv+3
  3789     05D1  0876               	movf	___lldiv@quotient+2,w
  3790     05D2  00A2               	movwf	?___lldiv+2
  3791     05D3  0875               	movf	___lldiv@quotient+1,w
  3792     05D4  00A1               	movwf	?___lldiv+1
  3793     05D5  0874               	movf	___lldiv@quotient,w
  3794     05D6  00A0               	movwf	?___lldiv
  3795     05D7                     l406:
  3796     05D7  0008               	return
  3797     05D8                     __end_of___lldiv:
  3798                           
  3799                           	psect	text16
  3800     0792                     __ptext16:	
  3801 ;; *************** function _UART_GetC *****************
  3802 ;; Defined at:
  3803 ;;		line 46 in file "USARTmodl.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      unsigned char 
  3810 ;; Registers used:
  3811 ;;		wreg
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_main
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831     0792                     _UART_GetC:	
  3832                           ;psect for function _UART_GetC
  3833                           
  3834     0792                     l1887:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _UART_GetC: [wreg]
  3837                           
  3838     0792                     l222:	
  3839                           ;USARTmodl.c: 48:   while (RCIF == 0) ;
  3840                           
  3841     0792  1283               	bcf	3,5	;RP0=0, select bank0
  3842     0793  1303               	bcf	3,6	;RP1=0, select bank0
  3843     0794  1E8C               	btfss	12,5	;volatile
  3844     0795  2F97               	goto	u1641
  3845     0796  2F98               	goto	u1640
  3846     0797                     u1641:
  3847     0797  2F92               	goto	l222
  3848     0798                     u1640:
  3849     0798                     l224:
  3850                           
  3851                           ;USARTmodl.c: 49:   if (OERR)
  3852     0798  1C98               	btfss	24,1	;volatile
  3853     0799  2F9B               	goto	u1651
  3854     079A  2F9C               	goto	u1650
  3855     079B                     u1651:
  3856     079B  2F9E               	goto	l1891
  3857     079C                     u1650:
  3858     079C                     l1889:
  3859                           
  3860                           ;USARTmodl.c: 50:   {;USARTmodl.c: 51:     CREN = 0;
  3861     079C  1218               	bcf	24,4	;volatile
  3862                           
  3863                           ;USARTmodl.c: 52:     CREN = 1;
  3864     079D  1618               	bsf	24,4	;volatile
  3865     079E                     l1891:
  3866                           
  3867                           ;USARTmodl.c: 54:   return RCREG;
  3868     079E  081A               	movf	26,w	;volatile
  3869     079F                     l226:
  3870     079F  0008               	return
  3871     07A0                     __end_of_UART_GetC:
  3872                           
  3873                           	psect	text17
  3874     07AC                     __ptext17:	
  3875 ;; *************** function _UART_Data_Ready *****************
  3876 ;; Defined at:
  3877 ;;		line 41 in file "USARTmodl.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905     07AC                     _UART_Data_Ready:	
  3906                           ;psect for function _UART_Data_Ready
  3907                           
  3908     07AC                     l1879:	
  3909                           ;incstack = 0
  3910                           ; Regs used in _UART_Data_Ready: [status]
  3911                           
  3912                           
  3913                           ;USARTmodl.c: 43:   return RCIF;
  3914     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3915     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3916     07AE  1A8C               	btfsc	12,5	;volatile
  3917     07AF  2FB1               	goto	u1631
  3918     07B0  2FB2               	goto	u1630
  3919     07B1                     u1631:
  3920     07B1  2FB4               	goto	l1883
  3921     07B2                     u1630:
  3922     07B2                     l1881:
  3923     07B2  1003               	clrc
  3924     07B3  2FB5               	goto	l219
  3925     07B4                     l1883:
  3926     07B4  1403               	setc
  3927     07B5                     l219:
  3928     07B5  0008               	return
  3929     07B6                     __end_of_UART_Data_Ready:
  3930                           
  3931                           	psect	text18
  3932     0754                     __ptext18:	
  3933 ;; *************** function _isr *****************
  3934 ;; Defined at:
  3935 ;;		line 34 in file "postlab2.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0
  3951 ;;      Temps:          3       0       0       0       0
  3952 ;;      Totals:         3       0       0       0       0
  3953 ;;Total ram usage:        3 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		Interrupt level 1
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962     0754                     _isr:	
  3963                           ;psect for function _isr
  3964                           
  3965     0754                     i1l1895:
  3966                           
  3967                           ;postlab2.c: 36:     if(PIR1bits.ADIF){
  3968     0754  1283               	bcf	3,5	;RP0=0, select bank0
  3969     0755  1303               	bcf	3,6	;RP1=0, select bank0
  3970     0756  1F0C               	btfss	12,6	;volatile
  3971     0757  2F59               	goto	u166_21
  3972     0758  2F5A               	goto	u166_20
  3973     0759                     u166_21:
  3974     0759  2F66               	goto	i1l153
  3975     075A                     u166_20:
  3976     075A                     i1l1897:
  3977                           
  3978                           ;postlab2.c: 38:          if (ADCON0bits.CHS ==0)
  3979     075A  0C1F               	rrf	31,w	;volatile
  3980     075B  00F0               	movwf	??_isr
  3981     075C  0C70               	rrf	??_isr,w
  3982     075D  390F               	andlw	15
  3983     075E  3A00               	xorlw	0
  3984     075F  1D03               	skipz
  3985     0760  2F62               	goto	u167_21
  3986     0761  2F63               	goto	u167_20
  3987     0762                     u167_21:
  3988     0762  2F65               	goto	i1l1901
  3989     0763                     u167_20:
  3990     0763                     i1l1899:
  3991                           
  3992                           ;postlab2.c: 39:           valpot = ADRESH;
  3993     0763  081E               	movf	30,w	;volatile
  3994     0764  00DA               	movwf	_valpot
  3995     0765                     i1l1901:
  3996                           
  3997                           ;postlab2.c: 40:          PIR1bits.ADIF =0;
  3998     0765  130C               	bcf	12,6	;volatile
  3999     0766                     i1l153:
  4000     0766  0872               	movf	??_isr+2,w
  4001     0767  008A               	movwf	10
  4002     0768  0E71               	swapf	??_isr+1,w
  4003     0769  0083               	movwf	3
  4004     076A  0EFE               	swapf	btemp,f
  4005     076B  0E7E               	swapf	btemp,w
  4006     076C  0009               	retfie
  4007     076D                     __end_of_isr:
  4008     007E                     btemp	set	126	;btemp
  4009     007E                     wtemp0	set	126
  4010                           
  4011                           	psect	intentry
  4012     0004                     __pintentry:	
  4013                           ;incstack = 0
  4014                           ; Regs used in _isr: [wreg+status,2+status,0]
  4015                           
  4016     0004                     interrupt_function:
  4017     007E                     saved_w	set	btemp
  4018     0004  00FE               	movwf	btemp
  4019     0005  0E03               	swapf	3,w
  4020     0006  00F1               	movwf	??_isr+1
  4021     0007  080A               	movf	10,w
  4022     0008  00F2               	movwf	??_isr+2
  4023     0009  120A  118A  2F54   	ljmp	_isr
  4024                           
  4025                           	psect	idloc
  4026                           
  4027                           ;Config register IDLOC0 @ 0x2000
  4028                           ;	unspecified, using default values
  4029     2000                     	org	8192
  4030     2000  3FFF               	dw	16383
  4031                           
  4032                           ;Config register IDLOC1 @ 0x2001
  4033                           ;	unspecified, using default values
  4034     2001                     	org	8193
  4035     2001  3FFF               	dw	16383
  4036                           
  4037                           ;Config register IDLOC2 @ 0x2002
  4038                           ;	unspecified, using default values
  4039     2002                     	org	8194
  4040     2002  3FFF               	dw	16383
  4041                           
  4042                           ;Config register IDLOC3 @ 0x2003
  4043                           ;	unspecified, using default values
  4044     2003                     	org	8195
  4045     2003  3FFF               	dw	16383
  4046                           
  4047                           	psect	config
  4048                           
  4049                           ;Config register CONFIG1 @ 0x2007
  4050                           ;	Oscillator Selection bits
  4051                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  4052                           ;	Watchdog Timer Enable bit
  4053                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4054                           ;	Power-up Timer Enable bit
  4055                           ;	PWRTE = OFF, PWRT disabled
  4056                           ;	RE3/MCLR pin function select bit
  4057                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4058                           ;	Code Protection bit
  4059                           ;	CP = OFF, Program memory code protection is disabled
  4060                           ;	Data Code Protection bit
  4061                           ;	CPD = OFF, Data memory code protection is disabled
  4062                           ;	Brown Out Reset Selection bits
  4063                           ;	BOREN = OFF, BOR disabled
  4064                           ;	Internal External Switchover bit
  4065                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4066                           ;	Fail-Safe Clock Monitor Enabled bit
  4067                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4068                           ;	Low Voltage Programming Enable bit
  4069                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4070                           ;	In-Circuit Debugger Mode bit
  4071                           ;	DEBUG = 0x1, unprogrammed default
  4072     2007                     	org	8199
  4073     2007  20D5               	dw	8405
  4074                           
  4075                           ;Config register CONFIG2 @ 0x2008
  4076                           ;	Brown-out Reset Selection bit
  4077                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4078                           ;	Flash Program Memory Self Write Enable bits
  4079                           ;	WRT = OFF, Write protection off
  4080     2008                     	org	8200
  4081     2008  3FFF               	dw	16383

Data Sizes:
    Strings     30
    Constant    66
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     58      59
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@text(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    UART_Print@data	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[23]), main@text(BANK0[9]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> message2(CODE[28]), message(CODE[28]), STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    _sprintf->___wmul
    _preguntas->_UART_Print
    _UART_Print->_UART_PutC
    _map->___fltol
    _map->___wmul
    ___xxtofl->___wmul
    ___lwdiv->___wmul
    _UART_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _map->___xxtofl
    ___xxtofl->___lwdiv
    _UART_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    7924
                                             42 BANK0     16    16      0
                    _UART_Data_Ready
                          _UART_GetC
                          _UART_Init
                         _UART_Print
                          _UART_PutC
                                _map
                          _preguntas
                              _setup
                            _sprintf
                          _uart_read
 ---------------------------------------------------------------------------------
 (1) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    20      3    2667
                                             14 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _preguntas                                            0     0      0     796
                         _UART_Print
 ---------------------------------------------------------------------------------
 (2) _UART_Print                                           4     2      2     796
                                              4 COMMON     4     2      2
                          _UART_PutC
 ---------------------------------------------------------------------------------
 (3) _UART_PutC                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map                                                 20    10     10    2523
                                             22 BANK0     20    10     10
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              8 BANK0     14    10      4
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              3 COMMON     6     2      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           10     6      4     920
                                              8 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _UART_GetC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_GetC
   _UART_Init
     ___lldiv
   _UART_Print
     _UART_PutC
   _UART_PutC
   _map
     ___fltol
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___lwdiv (ARG)
       ___wmul (ARG)
   _preguntas
     _UART_Print
   _setup
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _uart_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      46       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      3B       5       73.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      46      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Jul 29 23:42:28 2023

                      pc 0002                       fsr 0004      ___wmul@multiplicand 0075  
                    l210 0403                      l211 0414                      l212 0418  
                    l222 0792                      l224 0798                      l232 07AB  
                    l226 079F                      l219 07B5                      l180 0753  
                    l229 07A1                      l406 05D7                      l238 06EA  
                    l158 077F                      l183 063D                      l336 0032  
                    l177 0712                      l370 071F                      l372 0737  
                    l366 019D                      l642 0683                      l563 047B  
                    l803 02E3                      l556 0490                      l652 06BF  
                    l805 0378                      l566 0490                      l823 0791  
                    l816 0342                      l817 034E                      l809 0326  
                    _RD4 0044                      _RC6 003E                      _RD5 0045  
                    _RC7 003F                      _RD6 0046                      _RD7 0047  
                    u910 07A7                      u911 07A6                      u920 06EA  
                    u921 06E9                      u930 0788                      u931 0787  
                    u940 078E                      u941 078D                      u950 0719  
                    u951 0718                      u980 0733                      u981 0732  
                    u965 0720                      u975 0727                      _map 05D8  
                    _isr 0754                      fsr0 0004                      indf 0000  
           ___fltol@exp1 0078                     l2101 0642                     l2111 065A  
                   l2103 0648                     l2041 0582                     l2113 066B  
                   l2105 064B                     l2121 067F                     l2201 00BC  
                   l2051 05B1                     l2043 0585                     l2115 0671  
                   l2107 0652                     l2131 0696                     l2211 00CA  
                   l2203 00C4                     l2053 05BF                     l2045 0592  
                   l2117 0672                     l2109 0656                     l2141 06B5  
                   l2133 069A                     l2125 0684                     l2221 0107  
                   l2205 00C8                     l2301 0249                     l2055 05C0  
                   l2047 0596                     l2039 0570                     l2151 03AF  
                   l2071 0440                     l2063 0419                     l2119 0679  
                   l2135 069E                     l2127 068C                     l2143 06BB  
                   l2231 011E                     l2223 010B                     l2215 00E6  
                   l2311 0273                     l2303 0252                     l2057 05C9  
                   l2049 059F                     l2161 040C                     l2153 03B1  
                   l2073 0441                     l2065 0422                     l2137 06A8  
                   l2129 068F                     l2241 0146                     l2225 010F  
                   l2233 012B                     l2217 00F0                     l2401 0299  
                   l2321 028A                     l2313 027B                     l2305 0260  
                   l2059 05CF                     l2155 03BE                     l2147 0379  
                   l2075 0449                     l2163 05D8                     l1531 06C2  
                   l2139 06AE                     l2243 0149                     l2235 0131  
                   l2227 0115                     l2219 00FB                     l2403 0045  
                   l2171 0024                     l2251 0189                     l2331 02A4  
                   l2307 0269                     l2157 03F0                     l2149 03AB  
                   l2093 0470                     l2085 0457                     l2077 044B  
                   l2069 042B                     l1701 0346                     l1525 07A1  
                   l1533 06D3                     l1541 0788                     l2245 0177  
                   l2237 0136                     l2229 011A                     l2253 0199  
                   l2405 00B4                     l2181 0037                     l2173 0029  
                   l2333 02AD                     l2309 026E                     l2159 03FD  
                   l2095 0480                     l2079 044F                     l2087 0469  
                   l1551 0715                     l1711 0370                     l1703 0350  
                   l1527 07A7                     l1535 06D7                     l1543 078E  
                   l2247 017C                     l2239 013A                     l2191 0086  
                   l2183 004A                     l2175 002E                     l2167 001B  
                   l2335 02B5                     l2319 0282                     l2271 01B6  
                   l2097 0485                     l1553 0719                     l1705 0366  
                   l1529 06C0                     l1545 0790                     l1537 0781  
                   l2249 0180                     l2193 008A                     l2185 005A  
                   l2177 0033                     l2169 001E                     l1721 077C  
                   l2329 028F                     l2281 01EE                     l2273 01C5  
                   l2265 019E                     l2099 063E                     l1555 0726  
                   l1707 036B                     l1731 06EB                     l1539 0782  
                   l2195 009B                     l2187 005E                     l1715 076D  
                   l2291 0212                     l2283 01FC                     l2275 01CE  
                   l2267 01A3                     l1557 072D                     l1549 0713  
                   l1709 036F                     l1741 06FC                     l1733 06EF  
                   l2189 0073                     l1717 0773                     l2293 0213  
                   l2285 0200                     l2277 01DC                     l2269 01A7  
                   l1559 0733                     l1671 02C2                     l1751 070A  
                   l1743 06FD                     l1735 06F0                     l2199 00A0  
                   l1719 0777                     l1727 077E                     l2295 021B  
                   l2287 0209                     l2279 01E5                     l1673 02C7  
                   l1753 070D                     l1745 0703                     l1737 06F8  
                   l2297 0227                     l2289 020C                     l1691 030F  
                   l1683 02F4                     l1675 02CB                     l1755 0710  
                   l1747 0705                     l1739 06FB                     l2299 0229  
                   l1693 031D                     l1685 02F7                     l1677 02DB  
                   l1757 0711                     l1749 0706                     l1695 032D  
                   l1687 0304                     l1679 02EB                     l1881 07B2  
                   l1697 0338                     l1689 030B                     l1883 07B4  
                   l1891 079E                     l1699 033C                     l1877 0738  
                   ?_map 0036                     l1879 07AC                     l1887 0792  
                   l1889 079C                     ?_isr 0070                     STR_1 0552  
                   STR_2 0566                     STR_3 0566                     STR_4 0569  
                   STR_5 0552                     _CREN 00C4                     u2000 0389  
                   u2010 03AF                     u2011 03AE                     u2020 03BE  
                   u1300 02CB                     u2100 00FB                     u2021 03BD  
                   u2005 0384                     u1301 02CA                     u2101 00FA  
                   u2030 03CE                     u1310 02EB                     u2110 010F  
                   u1311 02EA                     u2111 010E                     u2040 03FD  
                   u1400 035B                     u2120 0115                     u2041 03FC  
                   u2025 03BA                     u2121 0114                     u2105 00F7  
                   u1410 036B                     u1330 030A                     u2130 012A  
                   u2050 0024                     u2035 03C9                     u1411 036A  
                   u1331 0309                     u2131 0129                     u2051 0023  
                   u1420 036F                     u2140 0131                     u2060 005A  
                   u2045 03F9                     u1421 036E                     u1405 0356  
                   u1325 02FC                     u2141 0130                     u2061 0059  
                   u1350 032C                     u2150 0146                     u2070 009A  
                   u1430 0773                     u1351 032B                     u2151 0145  
                   u2071 0099                     u1431 0772                     u2207 01BE  
                   u2160 0189                     u2080 00E5                     u1440 0777  
                   u1345 031E                     u2161 0188                     u2081 00E4  
                   u1441 0776                     u2217 01D6                     u1370 033C  
                   u1290 02C7                     u2170 0199                     u2090 00F0  
                   u1371 033B                     u1291 02C6                     u2171 0198  
                   u2091 00EF                     u2227 01F6                     u1700 0582  
                   u1380 0342                     u2180 0212                     u1701 0581  
                   u1381 0341                     u1365 0331                     u2085 00E1  
                   u2237 0221                     u2181 0211                     u1630 07B2  
                   u1390 0346                     u2190 02AD                     u1631 07B1  
                   u1391 0345                     u2191 02AC                     u2247 0277  
                   u1640 0798                     u1720 0596                     u1800 0456  
                   u1641 0797                     u1721 0595                     u1801 0455  
                   u2257 0286                     u1650 079C                     u1651 079B  
                   u1715 0587                     u2267 0708                     u1740 05B1  
                   u1820 0468                     u1741 05B0                     u1821 0467  
                   u1830 046F                     u1910 066B                     u1735 0598  
                   u1831 046E                     u1815 0458                     u1911 066A  
                   u1760 05CF                     u1761 05CE                     u1745 05AD  
                   u1905 065B                     u1850 0480                     u1770 0422  
                   u1930 067F                     u1755 05C1                     u1851 047F  
                   u1771 0421                     u1931 067E                     u1915 0667  
                   u1860 0485                     u1780 043B                     u1940 068C  
                   u1861 0484                     u1845 0472                     u1925 0673  
                   u1941 068B                     u1790 044F                     u1870 0648  
                   u1791 044E                     u1871 0647                     u1960 069E  
                   u1785 0436                     u1961 069D                     u1890 065A  
                   u1970 06A8                     u1891 0659                     u1971 06A7  
                   u1955 0690                     u1885 064C                     u1990 06BB  
                   u1991 06BA                     u1975 06A4                     u1985 06AF  
                   _RCIF 0065                     _OERR 00C1                     _TRMT 04C1  
                   _main 019E                     btemp 007E              main@valuart 0058  
                   start 000C                    ??_map 0040                    ??_isr 0070  
          ___fltol@sign1 0077                    ?_main 0070          __end_of___fltol 0491  
                  _CMCON 0079                    _ANSEL 0188          __end_of___lldiv 05D8  
        __end_of___lwdiv 0684                    i1l153 0766          __end_of___lwmod 06C0  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _TXSTA 0098  
            ?_UART_Print 0074          __end_of_dpowers 051A          __end_of_isdigit 0792  
        __end_of_message 0552                    _setup 06EB                    main@c 0059  
                  pclath 000A             main@varvolt2 0056                    status 0003  
                  wtemp0 007E          __end_of_sprintf 019E          __initialization 000F  
           __end_of_main 02BF                   ??_main 004A                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   i1l1901 0765  
                 i1l1895 0754                   i1l1897 075A                   i1l1899 0763  
                 u166_20 075A                   u166_21 0759                   u167_20 0763  
                 u167_21 0762                   _OSCCON 008F                   _TRISC6 043E  
                 _TRISC7 043F         __end_of___xxtofl 0379        __end_of_UART_GetC 07A0  
      __end_of_UART_Init 0419        __end_of_UART_PutC 07AC                   ___wmul 0713  
              ??___fltol 0020                ??___lldiv 0073                ??___lwdiv 0024  
              ??___lwmod 002C         __end_of_message2 0536                   _valpot 005A  
              ??_isdigit 0073                   saved_w 007E                ??_sprintf 0031  
           ___xxtofl@arg 0032             ___xxtofl@exp 0031             ___xxtofl@val 0028  
__end_of__initialization 0014               ___fltol@f1 0073           __pcstackCOMMON 0070  
          __end_of_setup 0713             sprintf@width 003A                  ??_setup 0073  
             __pbssBANK0 005A               __pmaintext 019E                  ?___wmul 0073  
             __pintentry 0004                ?___xxtofl 0028             ??_UART_Print 0076  
             __stringtab 0500       __end_of_UART_Print 06EB                  ___fltol 0419  
                ___lldiv 0570                  ___lwdiv 063E                  ___lwmod 0684  
                __ptext1 076D                  __ptext2 0018                  __ptext3 0780  
                __ptext4 0684                  __ptext5 06EB                  __ptext6 0738  
                __ptext7 06C0                  __ptext8 07A0                  __ptext9 05D8  
                _dpowers 0510                  _isdigit 0780               ??___xxtofl 002C  
                _message 0536              UART_Print@i 0077           UART_Print@data 0074  
                _sprintf 0018     end_of_initialization 0014        __end_of_uart_read 0780  
      __end_of_preguntas 0754          ___lldiv@divisor 0020          ___lldiv@counter 0078  
              _RCSTAbits 0018        ??_UART_Data_Ready 0073                _UART_GetC 0792  
              _UART_Init 0379                _UART_PutC 07A0                _PORTCbits 0007  
     UART_Init@baud_rate 0028            ___xxtofl@sign 0030           __end_of___wmul 0738  
             ?_UART_GetC 0070               ?_UART_Init 0028               ?_UART_PutC 0070  
    start_initialization 000F              __end_of_map 063E              __end_of_isr 076D  
               ??___wmul 0077              __pbssCOMMON 0079                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 0035              sprintf@prec 0038  
       ___lwdiv@dividend 0022                 ?___fltol 0073                 ?___lldiv 0020  
               ?___lwdiv 0020                 ?___lwmod 0028              ??_UART_GetC 0073  
            ??_UART_Init 002C              ??_UART_PutC 0073                __pstrings 0500  
               ?_isdigit 0070            UART_PutC@data 0073         ___lwdiv@quotient 0026  
               ?_sprintf 002E               UART_Init@n 0030        interrupt_function 0004  
         ___wmul@product 0077          _UART_Data_Ready 07AC                 _PIE1bits 008C  
               _PIR1bits 000C                _uart_read 076D                _preguntas 0738  
              map@maxsal 003E                map@maxval 003A                map@minsal 003C  
              map@minval 0038               _ADCON0bits 001F              __stringbase 050F  
             _ADCON1bits 009F        ___wmul@multiplier 0073                map@valmap 0046  
              map@varmap 0036               ?_uart_read 0070               ?_preguntas 0070  
     __end_of__stringtab 0510              _isdigit$895 0073               sprintf@val 0036  
               ___xxtofl 02BF          ___lwdiv@divisor 0020          ___lwdiv@counter 0025  
               __ptext10 02BF                 __ptext11 0713                 __ptext12 063E  
               __ptext13 0419                 __ptext14 0379                 __ptext15 0570  
               __ptext16 0792                 __ptext17 07AC                 __ptext18 0754  
__end_of_UART_Data_Ready 07B6                 _message2 051A                 main@text 004D  
             _INTCONbits 000B                 isdigit@c 0074                 intlevel1 0000  
              sprintf@ap 0034                sprintf@sp 0039         ___lwmod@dividend 002A  
       ___lldiv@dividend 0024                stringcode 050A              ??_uart_read 0073  
            ??_preguntas 0078                 sprintf@c 003C                 sprintf@f 002E  
       ___lldiv@quotient 0074          ___lwmod@divisor 0028          ___lwmod@counter 002D  
               stringdir 050A                 stringtab 0500               _UART_Print 06C0  
       ?_UART_Data_Ready 0070  
